// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Blog Components Compound Typography 1`] = `
.c0 {
  max-width: calc(100% - 48px);
  position: relative;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0;
  padding-right: 0;
}

.c3 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  overflow: hidden;
  padding-left: 0;
  padding-right: 0;
  width: 100%;
  position: initial;
  top: 0;
  left: 0;
  display: block;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  display: block;
}

.c1 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  overflow: hidden;
  margin-left: 0;
  margin-right: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  font-weight: 500;
  color: #333333;
  padding: 0.6875rem 0 0.4375rem;
  font-size: 1.3125rem;
  line-height: 1.625rem;
}

.c5 {
  font-size: 1.125rem;
  line-height: 1.875rem;
  font-weight: 400;
  color: #333333;
  padding: 2.3125rem 0;
}

.c5 *::selection,
.c5::selection {
  background-color: #65FFCD;
}

.c5 a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
  cursor: pointer;
  font-style: italic;
}

.c5 em {
  font-style: italic;
}

.c5 code {
  font-size: 0.9375rem;
  line-height: 1.5rem;
  font-weight: 400;
  color: #333333;
  font-family: 'Roboto Mono',sans-serif;
  padding: 0.25rem;
  background-color: #e9e9e9;
}

.c5 code::selection {
  background-color: #65FFCD;
}

.c5 strong {
  font-weight: 500;
}

.c7 {
  font-size: 1.125rem;
  line-height: 1.875rem;
  font-style: italic;
  font-weight: 500;
  color: #333333;
  padding-left: 2.1875rem;
  margin: 2.3125rem 0;
  display: block;
  border-left: 2px solid #333333;
}

.c7 p {
  padding: 0;
  font-weight: 500;
}

.c7 strong {
  font-weight: 700;
}

.c2 h1 + h3 {
  margin-top: 0.75rem;
}

.c2 h2 + p {
  padding-top: 0.8125rem;
}

.c2 h2 + blockquote {
  margin-top: 0;
}

.c2 h2 + ul {
  padding-top: 2.3125rem;
}

.c2 p + p {
  padding-top: 0;
}

.c2 p + blockquote {
  margin-top: 0;
}

.c2 p + h2 {
  padding-top: 1.125rem;
}

.c2 p + .gist,
.c2 p + .figure-image {
  padding-top: 0;
}

.c2 ul + p,
.c2 ol + p {
  padding-top: 0;
}

.c2 blockquote + h2 {
  padding-top: 1.375rem;
}

.c2 blockquote + p {
  padding-top: 0;
}

.c2 pre + h2 {
  padding-top: 2.3125rem;
}

.c2 .figure-image + p {
  padding-top: 2.3125rem;
}

.c2 .figure-image + h2 {
  padding-top: 2.6875rem;
}

.c2 .figure-image + blockquote {
  margin-top: 2.6875rem;
}

.c2 iframe {
  width: 100%;
  min-height: 50vh;
}

.c2 .gist {
  margin-top: -8px;
  margin-bottom: -8px;
}

.c4 {
  font-size: 24px;
  font-weight: light;
  margin: 30px 0 20px;
  color: lightgrey;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

@media (min-width:29.4375em) {
  .c0 {
    max-width: calc(100% - 72px);
  }
}

@media (min-width:34.5625em) {
  .c0 {
    max-width: 480px;
  }
}

@media (min-width:43.8125em) {
  .c0 {
    max-width: none;
  }
}

@media (min-width:74.8125em) {
  .c0 {
    max-width: 1100px;
  }
}

@media screen and (min-width:29.4375rem) {
  .c0 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c0 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c0 {
    padding-left: 2.625rem;
    padding-right: 2.625rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c0 {
    padding-left: 3rem;
    padding-right: 3rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c0 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:29.4375rem) {
  .c3 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c3 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c3 {
    padding-left: 1.3125rem;
    padding-right: 1.3125rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c3 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c3 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:29.4375rem) {
  .c3 {
    width: 100%;
    position: initial;
    top: 0;
    left: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c3 {
    width: 58.333333333333336%;
    position: initial;
    top: 0;
    left: 0;
  }
}

@media screen and (min-width:29.4375rem) {
  .c1 {
    margin-left: 0;
    margin-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c1 {
    margin-left: 0;
    margin-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c1 {
    margin-left: -1.3125rem;
    margin-right: -1.3125rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c1 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c1 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }
}

@media (min-width:43.8125em) {
  .c6 {
    font-size: 1.75rem;
    line-height: 2.625rem;
  }
}

@media (min-width:43.8125em) {
  .c5 {
    font-size: 1.25rem;
    line-height: 2.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c5 code {
    font-size: 1.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c7 {
    font-size: 1.25rem;
    line-height: 2.0625rem;
  }
}

<div
  className="c0"
  style={
    Object {
      "margin": "2rem 0",
    }
  }
>
  <div
    className="c1"
    style={
      Object {
        "justifyContent": "center",
      }
    }
  >
    <div
      className="c2 c3"
      width={
        Array [
          1,
          1,
          1,
          0.5833333333333334,
        ]
      }
    >
      <h2
        className="c4"
      >
        Body Copy
      </h2>
      <p
        className="c5"
      >
        Very briefly, logs represent information that can’t be grouped but they provide unique details about an event that happened, while metrics represent information that can be grouped by events but don’t provide unique details.
      </p>
      <p
        className="c5"
      >
        Consider that an HTTP request returned a 404 status code. We can use a counter metric called clientError, as an example, which will continue to increment whenever another 4xx error occurs. Detailed information about individual errors can be logged to provide additional information for troubleshooting purposes. You can correlate them by their timestamp.
      </p>
      <p
        className="c5"
      >
        Consider that the above error was caused by the following HTTP/1.1 request to my-service application:
      </p>
      <h2
        className="c4"
      >
        Body Copy w/ 
        <strong>
          H2
        </strong>
      </h2>
      <p
        className="c5"
      >
        Consider that an HTTP request returned a 404 status code. We can use a counter metric called clientError, as an example, which will continue to increment whenever another 4xx error occurs. Detailed information about individual errors can be logged to provide additional information for troubleshooting purposes. You can correlate them by their timestamp.
      </p>
      <h2
        className="c6"
      >
        What is Suspense?
      </h2>
      <p
        className="c5"
      >
        Given the context of this article, it may be tempting to view Suspense as a lazy loading mechanism, but this is inaccurate. Rather, it provides a means of… well… suspending the rendering of an element subtree until a particular operation completes, allowing React to render other parts of your app in the meantime; a fallback will be shown until said operation is fulfilled.
      </p>
      <h2
        className="c4"
      >
        Body Copy w/ 
        <strong>
          Blockquote
        </strong>
      </h2>
      <p
        className="c5"
      >
        Consider that an HTTP request returned a 404 status code. We can use a counter metric called clientError, as an example, which will continue to increment whenever another 4xx error occurs. Detailed information about individual errors can be logged to provide additional information for troubleshooting purposes. You can correlate them by their timestamp.
      </p>
      <blockquote
        className="c7"
      >
        We 
        <strong>
          SHOULD
        </strong>
         only log information that will help identify why a certain event occurs without exposing sensible data.
      </blockquote>
      <p
        className="c5"
      >
        Given the context of this article, it may be tempting to view Suspense as a lazy loading mechanism, but this is inaccurate. Rather, it provides a means of… well… suspending the rendering of an element subtree until a particular operation completes, allowing React to render other parts of your app in the meantime; a fallback will be shown until said operation is fulfilled.
      </p>
      <h2
        className="c4"
      >
        Blockquote with H2
      </h2>
      <p
        className="c5"
      >
        Consider that the above error was caused by the following HTTP/1.1 request to my-service application:
      </p>
      <blockquote
        className="c7"
      >
        We 
        <strong>
          SHOULD
        </strong>
         only log information that will help identify why a certain event occurs without exposing sensible data.
      </blockquote>
      <h2
        className="c6"
      >
        Wrap our REST api
      </h2>
      <p
        className="c5"
      >
        Given the context of this article, it may be tempting to view Suspense as a lazy loading mechanism, but this is inaccurate. Rather, it provides a means of… well…
         
        <em>
          suspending the rendering
        </em>
         of an element subtree until a particular operation completes, allowing React to render other parts of your app in the meantime; a fallback will be shown until said operation is fulfilled.
      </p>
      <h2
        className="c4"
      >
        H2 with Blockquote
      </h2>
      <p
        className="c5"
      >
        Consider that the above error was caused by the following HTTP/1.1 request to my-service application:
      </p>
      <h2
        className="c6"
      >
        Wrap our REST API
      </h2>
      <blockquote
        className="c7"
      >
        We 
        <strong>
          SHOULD
        </strong>
         only log information that will help identify why a certain event occurs without exposing sensible data.
      </blockquote>
      <p
        className="c5"
      >
        Given the context of this article, it may be tempting to view Suspense as a lazy loading mechanism, but this is inaccurate. Rather, it provides a means of… well… suspending the rendering of an element subtree until a particular operation complete
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Blog Components Image container 1`] = `
.c0 {
  max-width: calc(100% - 48px);
  position: relative;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0;
  padding-right: 0;
}

.c3 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  overflow: hidden;
  padding-left: 0;
  padding-right: 0;
  width: 100%;
  position: initial;
  top: 0;
  left: 0;
  display: block;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  display: block;
}

.c1 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  overflow: hidden;
  margin-left: 0;
  margin-right: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  font-weight: 500;
  color: #333333;
  padding: 0.6875rem 0 0.4375rem;
  font-size: 1.3125rem;
  line-height: 1.625rem;
}

.c6 {
  font-size: 1.125rem;
  line-height: 1.875rem;
  font-weight: 400;
  color: #333333;
  padding: 2.3125rem 0;
}

.c6 *::selection,
.c6::selection {
  background-color: #65FFCD;
}

.c6 a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
  cursor: pointer;
  font-style: italic;
}

.c6 em {
  font-style: italic;
}

.c6 code {
  font-size: 0.9375rem;
  line-height: 1.5rem;
  font-weight: 400;
  color: #333333;
  font-family: 'Roboto Mono',sans-serif;
  padding: 0.25rem;
  background-color: #e9e9e9;
}

.c6 code::selection {
  background-color: #65FFCD;
}

.c6 strong {
  font-weight: 500;
}

.c7 {
  font-size: 1rem;
  line-height: 1.5rem;
  padding-bottom: 0.75rem;
  color: #828282;
  text-align: center;
  margin: 0 auto;
}

.c9 {
  font-size: 1.125rem;
  line-height: 1.875rem;
  font-style: italic;
  font-weight: 500;
  color: #333333;
  padding-left: 2.1875rem;
  margin: 2.3125rem 0;
  display: block;
  border-left: 2px solid #333333;
}

.c9 p {
  padding: 0;
  font-weight: 500;
}

.c9 strong {
  font-weight: 700;
}

.c2 h1 + h3 {
  margin-top: 0.75rem;
}

.c2 h2 + p {
  padding-top: 0.8125rem;
}

.c2 h2 + blockquote {
  margin-top: 0;
}

.c2 h2 + ul {
  padding-top: 2.3125rem;
}

.c2 p + p {
  padding-top: 0;
}

.c2 p + blockquote {
  margin-top: 0;
}

.c2 p + h2 {
  padding-top: 1.125rem;
}

.c2 p + .gist,
.c2 p + .figure-image {
  padding-top: 0;
}

.c2 ul + p,
.c2 ol + p {
  padding-top: 0;
}

.c2 blockquote + h2 {
  padding-top: 1.375rem;
}

.c2 blockquote + p {
  padding-top: 0;
}

.c2 pre + h2 {
  padding-top: 2.3125rem;
}

.c2 .figure-image + p {
  padding-top: 2.3125rem;
}

.c2 .figure-image + h2 {
  padding-top: 2.6875rem;
}

.c2 .figure-image + blockquote {
  margin-top: 2.6875rem;
}

.c2 iframe {
  width: 100%;
  min-height: 50vh;
}

.c2 .gist {
  margin-top: -8px;
  margin-bottom: -8px;
}

.c5 {
  text-align: center;
  padding-top: 2.3125rem;
}

.c5 > img {
  width: 100%;
  display: block;
  max-width: 100%;
  margin-bottom: 1.5625rem;
}

.c4 {
  font-size: 24px;
  font-weight: light;
  margin: 30px 0 20px;
  color: lightgrey;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

@media (min-width:29.4375em) {
  .c0 {
    max-width: calc(100% - 72px);
  }
}

@media (min-width:34.5625em) {
  .c0 {
    max-width: 480px;
  }
}

@media (min-width:43.8125em) {
  .c0 {
    max-width: none;
  }
}

@media (min-width:74.8125em) {
  .c0 {
    max-width: 1100px;
  }
}

@media screen and (min-width:29.4375rem) {
  .c0 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c0 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c0 {
    padding-left: 2.625rem;
    padding-right: 2.625rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c0 {
    padding-left: 3rem;
    padding-right: 3rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c0 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:29.4375rem) {
  .c3 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c3 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c3 {
    padding-left: 1.3125rem;
    padding-right: 1.3125rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c3 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c3 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:29.4375rem) {
  .c3 {
    width: 100%;
    position: initial;
    top: 0;
    left: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c3 {
    width: 58.333333333333336%;
    position: initial;
    top: 0;
    left: 0;
  }
}

@media screen and (min-width:29.4375rem) {
  .c1 {
    margin-left: 0;
    margin-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c1 {
    margin-left: 0;
    margin-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c1 {
    margin-left: -1.3125rem;
    margin-right: -1.3125rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c1 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c1 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }
}

@media (min-width:43.8125em) {
  .c8 {
    font-size: 1.75rem;
    line-height: 2.625rem;
  }
}

@media (min-width:43.8125em) {
  .c6 {
    font-size: 1.25rem;
    line-height: 2.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c6 code {
    font-size: 1.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c7 {
    max-width: 70%;
  }
}

@media (min-width:43.8125em) {
  .c9 {
    font-size: 1.25rem;
    line-height: 2.0625rem;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
    style={
      Object {
        "justifyContent": "center",
      }
    }
  >
    <div
      className="c2 c3"
      width={
        Array [
          1,
          1,
          1,
          0.5833333333333334,
        ]
      }
    >
      <h2
        className="c4"
      >
        Image without caption
      </h2>
      <figure
        className="figure-image c5"
      >
        <img
          className="figure-image__img"
          loading="lazy"
          src="https://miro.medium.com/max/8640/0*v-PhgvOW418Xjpj_"
        />
      </figure>
      <p
        className="c6"
      >
        Given the context of this article, it may be tempting to view Suspense as a lazy loading mechanism, but this is inaccurate. Rather, it provides a means of… well… suspending the rendering of an element subtree until a particular operation complete
      </p>
      <h2
        className="c4"
      >
        Image with caption
      </h2>
      <figure
        className="figure-image c5"
      >
        <img
          className="figure-image__img"
          loading="lazy"
          src="https://miro.medium.com/max/8640/0*v-PhgvOW418Xjpj_"
        />
        <figcaption
          className="figure-image__figcaption c7"
        >
          <p>
            We SHOULD only log information that will help identify why a certain event occurs without exposing sensible data.
          </p>
        </figcaption>
      </figure>
      <p
        className="c6"
      >
        Given the context of this article, it may be tempting to view Suspense as a lazy loading mechanism, but this is inaccurate. Rather, it provides a means of… well… suspending the rendering of an element subtree until a particular operation complete
      </p>
      <h2
        className="c4"
      >
        Image with caption and H2
      </h2>
      <figure
        className="figure-image c5"
      >
        <img
          className="figure-image__img"
          loading="lazy"
          src="https://miro.medium.com/max/8640/0*v-PhgvOW418Xjpj_"
        />
        <figcaption
          className="figure-image__figcaption c7"
        >
          <p>
            We SHOULD only log information that will help identify why a certain event occurs without exposing sensible data.
          </p>
        </figcaption>
      </figure>
      <h2
        className="c8"
      >
        Learning about React and CSS
      </h2>
      <p
        className="c6"
      >
        Given the context of this article, it may be tempting to view Suspense as a lazy loading mechanism, but this is inaccurate. Rather, it provides a means of… well… suspending the rendering of an element subtree until a particular operation complete
      </p>
      <h2
        className="c4"
      >
        Image with caption and H2
      </h2>
      <figure
        className="figure-image c5"
      >
        <img
          className="figure-image__img"
          loading="lazy"
          src="https://miro.medium.com/max/8640/0*v-PhgvOW418Xjpj_"
        />
        <figcaption
          className="figure-image__figcaption c7"
        >
          <p>
            We SHOULD only log information that will help identify why a certain event occurs without exposing sensible data.
          </p>
        </figcaption>
      </figure>
      <blockquote
        className="c9"
      >
        We 
        <strong>
          SHOULD
        </strong>
         only log information that will help identify why a certain event occurs without exposing sensible data.
      </blockquote>
    </div>
  </div>
</div>
`;

exports[`Storyshots Blog Components Meta Data 1`] = `
.c0 {
  max-width: calc(100% - 48px);
  position: relative;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0;
  padding-right: 0;
}

.c2 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  overflow: hidden;
  padding-left: 0;
  padding-right: 0;
  width: 100%;
  position: initial;
  top: 0;
  left: 0;
  display: block;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  display: block;
}

.c1 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  overflow: hidden;
  margin-left: 0;
  margin-right: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c10 {
  color: #333333;
  font-weight: 400;
  font-size: 1.0625rem;
  line-height: 1.5rem;
  padding: 0.75rem 0;
  font-weight: 700;
}

.c12 {
  color: #333333;
  font-weight: 400;
  font-size: 1.0625rem;
  line-height: 1.5rem;
  padding: 0.75rem 0;
  padding: 0;
}

.c6 {
  height: 0.0625rem;
  padding: 0 0 1.125rem 0;
  border: none;
  margin: 1.0625rem 0 0 0;
  border-top: 1px solid #e6e6e6;
}

.c7 {
  font-size: 1.125rem;
  line-height: 1.875rem;
  font-weight: 400;
  color: #333333;
  padding: 2.3125rem 0;
}

.c7 *::selection,
.c7::selection {
  background-color: #65FFCD;
}

.c7 a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
  cursor: pointer;
  font-style: italic;
}

.c7 em {
  font-style: italic;
}

.c7 code {
  font-size: 0.9375rem;
  line-height: 1.5rem;
  font-weight: 400;
  color: #333333;
  font-family: 'Roboto Mono',sans-serif;
  padding: 0.25rem;
  background-color: #e9e9e9;
}

.c7 code::selection {
  background-color: #65FFCD;
}

.c7 strong {
  font-weight: 500;
}

.c5 {
  font-size: 1.125rem;
  line-height: 1.875rem;
  font-weight: 400;
  color: #333333;
  padding: 2.3125rem 0;
  font-size: 1rem;
  line-height: 1.75rem;
  padding-bottom: 1.5rem;
  padding-top: 0;
  color: #757575;
}

.c5 *::selection,
.c5::selection {
  background-color: #65FFCD;
}

.c5 a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
  cursor: pointer;
  font-style: italic;
}

.c5 em {
  font-style: italic;
}

.c5 code {
  font-size: 0.9375rem;
  line-height: 1.5rem;
  font-weight: 400;
  color: #333333;
  font-family: 'Roboto Mono',sans-serif;
  padding: 0.25rem;
  background-color: #e9e9e9;
}

.c5 code::selection {
  background-color: #65FFCD;
}

.c5 strong {
  font-weight: 500;
}

.c4 {
  font-weight: 500;
  color: #333333;
  padding: 0.875rem 0;
  font-size: 1.75rem;
  line-height: 2.25rem;
  padding-bottom: 1.5rem;
}

.c9 {
  margin-right: 0.625rem;
  margin-bottom: 0.75rem;
  display: inline-block;
  background-color: #f1f1f3;
  color: #1d1d1d;
  padding: 0.375rem 0.75rem;
  font-family: 'PT Mono';
}

.c8 {
  padding-top: 2.25rem;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-top: 0.75rem;
  padding-bottom: 3.375rem;
}

.c3 {
  font-size: 24px;
  font-weight: light;
  margin: 30px 0 20px;
  color: lightgrey;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

@media (min-width:29.4375em) {
  .c0 {
    max-width: calc(100% - 72px);
  }
}

@media (min-width:34.5625em) {
  .c0 {
    max-width: 480px;
  }
}

@media (min-width:43.8125em) {
  .c0 {
    max-width: none;
  }
}

@media (min-width:74.8125em) {
  .c0 {
    max-width: 1100px;
  }
}

@media screen and (min-width:29.4375rem) {
  .c0 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c0 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c0 {
    padding-left: 2.625rem;
    padding-right: 2.625rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c0 {
    padding-left: 3rem;
    padding-right: 3rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c0 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:29.4375rem) {
  .c2 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c2 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c2 {
    padding-left: 1.3125rem;
    padding-right: 1.3125rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c2 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c2 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:29.4375rem) {
  .c2 {
    width: 100%;
    position: initial;
    top: 0;
    left: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c2 {
    width: 58.333333333333336%;
    position: initial;
    top: 0;
    left: 0;
  }
}

@media screen and (min-width:29.4375rem) {
  .c1 {
    margin-left: 0;
    margin-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c1 {
    margin-left: 0;
    margin-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c1 {
    margin-left: -1.3125rem;
    margin-right: -1.3125rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c1 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c1 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }
}

@media (min-width:43.8125em) {
  .c7 {
    font-size: 1.25rem;
    line-height: 2.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c7 code {
    font-size: 1.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c5 {
    font-size: 1.25rem;
    line-height: 2.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c5 code {
    font-size: 1.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c5 {
    font-size: 1.125rem;
    line-height: 1.9375rem;
    padding-bottom: 2.25rem;
  }
}

@media (min-width:43.8125em) {
  .c4 {
    font-size: 2.625rem;
    line-height: 3.1875rem;
  }
}

@media (min-width:43.8125em) {
  .c4 {
    padding-bottom: 2.25rem;
  }
}

@media (min-width:43.8125em) {
  .c9 {
    margin-right: 0.625rem;
    margin-bottom: 1.5rem;
  }
}

<div
  className="c0"
  style={
    Object {
      "width": "100%",
    }
  }
>
  <div
    className="c1"
    style={
      Object {
        "justifyContent": "center",
      }
    }
  >
    <div
      className="c2"
      width={
        Array [
          1,
          1,
          1,
          0.5833333333333334,
        ]
      }
    >
      <h2
        className="c3"
      >
        Post Intro Meta Data
      </h2>
      <h1
        className="c4"
      >
        Serverless and Step-Functions at DAZN
      </h1>
      <p
        className="c5"
      >
        by 
        Bob Dole
         • 
        August 12th, 2019
         
        • 11min
      </p>
      <hr
        className="c6"
      />
      <p
        className="c7"
      >
        Given the context of this article, it may be tempting to view Suspense as a lazy loading mechanism, but this is inaccurate. Rather, it provides a means of… well… suspending the rendering of an element subtree until a particular operation complete
      </p>
    </div>
    <div
      className="c2"
      width={
        Array [
          1,
          1,
          1,
          0.5833333333333334,
        ]
      }
    >
      <h2
        className="c3"
      >
        Post Intro Meta Data w/ Subtitle
      </h2>
      <h1
        className="c4"
      >
        Serverless and Step-Functions at DAZN
      </h1>
      <p
        className="c5"
      >
        by 
        Bob Dole
         • 
        August 12th, 2019
         
        • 11min
      </p>
      <hr
        className="c6"
      />
      <p
        className="c7"
      >
        Given the context of this article, it may be tempting to view Suspense as a lazy loading mechanism, but this is inaccurate. Rather, it provides a means of… well… suspending the rendering of an element subtree until a particular operation complete
      </p>
    </div>
    <div
      className="c2"
      width={
        Array [
          1,
          1,
          1,
          0.5833333333333334,
        ]
      }
    >
      <h2
        className="c3"
      >
        Post Outro Meta Data
      </h2>
      <div>
        <hr
          className="c6"
        />
        <section>
          <p
            className="c7"
          >
            Written by 
            Bob Dole
             • 
            August 1st, 2019
          </p>
        </section>
        <hr
          className="c6"
        />
        <section
          className="c8"
        >
          <ul>
            <li
              className="c9"
            >
              Frontend
            </li>
            <li
              className="c9"
            >
              Nodejs
            </li>
            <li
              className="c9"
            >
              Machine Learning
            </li>
            <li
              className="c9"
            >
              Database Management
            </li>
          </ul>
        </section>
        <p
          className="c10"
        >
          Share this article
        </p>
        <div
          className="c11"
        >
          <div
            aria-label="twitter"
            className="SocialMediaShareButton SocialMediaShareButton--twitter"
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            style={Object {}}
            tabIndex="0"
          >
            <div
              css={
                Array [
                  "
      display: flex;
      margin-right: ",
                  [Function],
                  ";
      cursor: pointer;
    ",
                ]
              }
            >
              <img
                alt="Twitter icon"
                css={
                  Array [
                    "
        padding-right: ",
                    [Function],
                    ";
      ",
                  ]
                }
                src="twiter-icon.svg"
              />
              <p
                className="c12"
              >
                Twitter
              </p>
            </div>
          </div>
          <div
            aria-label="linkedin"
            className="SocialMediaShareButton SocialMediaShareButton--linkedin"
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            style={Object {}}
            tabIndex="0"
          >
            <div
              css={
                Array [
                  "
      display: flex;
      margin-right: ",
                  [Function],
                  ";
      cursor: pointer;
    ",
                ]
              }
            >
              <img
                alt="LinkedIn icon"
                css={
                  Array [
                    "
        padding-right: ",
                    [Function],
                    ";
      ",
                  ]
                }
                src="linkedin-icon.svg"
              />
              <p
                className="c12"
              >
                LinkedIn
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Blog Components Tags 1`] = `
.c1 {
  margin-right: 0.625rem;
  margin-bottom: 0.75rem;
  display: inline-block;
  background-color: #f1f1f3;
  color: #1d1d1d;
  padding: 0.375rem 0.75rem;
  font-family: 'PT Mono';
}

.c0 {
  font-size: 24px;
  font-weight: light;
  margin: 30px 0 20px;
  color: lightgrey;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

@media (min-width:43.8125em) {
  .c1 {
    margin-right: 0.625rem;
    margin-bottom: 1.5rem;
  }
}

<div>
  <div>
    <h2
      className="c0"
    >
      Tag
    </h2>
    <li
      className="c1"
    >
      Frontend
    </li>
  </div>
  <div>
    <h2
      className="c0"
    >
      Tag Group
    </h2>
    <ul>
      <li
        className="c1"
      >
        Frontend
      </li>
      <li
        className="c1"
      >
        Nodejs
      </li>
      <li
        className="c1"
      >
        Machine Learning
      </li>
      <li
        className="c1"
      >
        Database Management
      </li>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Blog Components Typography 1`] = `
.c1 {
  max-width: calc(100% - 48px);
  position: relative;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0;
  padding-right: 0;
}

.c3 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  overflow: hidden;
  padding-left: 0;
  padding-right: 0;
  width: 100%;
  position: initial;
  top: 0;
  left: 0;
  display: block;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  display: block;
}

.c4 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  overflow: hidden;
  padding-left: 0;
  padding-right: 0;
  width: 100%;
  position: initial;
  top: 0;
  left: 0;
  display: block;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  display: block;
}

.c2 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  overflow: hidden;
  margin-left: 0;
  margin-right: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c5 {
  font-weight: 500;
  color: #333333;
  padding: 0.875rem 0;
  font-size: 1.75rem;
  line-height: 2.25rem;
}

.c6 {
  font-weight: 500;
  color: #333333;
  padding: 0.6875rem 0 0.4375rem;
  font-size: 1.3125rem;
  line-height: 1.625rem;
}

.c7 {
  font-weight: 400;
  color: #828282;
  padding: 0.75rem 0 1.5rem;
  font-size: 1.3125rem;
  line-height: 1.875rem;
}

.c8 {
  font-size: 1.125rem;
  line-height: 1.875rem;
  font-weight: 400;
  color: #333333;
  padding: 2.3125rem 0;
}

.c8 *::selection,
.c8::selection {
  background-color: #65FFCD;
}

.c8 a {
  -webkit-text-decoration: underline;
  text-decoration: underline;
  cursor: pointer;
  font-style: italic;
}

.c8 em {
  font-style: italic;
}

.c8 code {
  font-size: 0.9375rem;
  line-height: 1.5rem;
  font-weight: 400;
  color: #333333;
  font-family: 'Roboto Mono',sans-serif;
  padding: 0.25rem;
  background-color: #e9e9e9;
}

.c8 code::selection {
  background-color: #65FFCD;
}

.c8 strong {
  font-weight: 500;
}

.c9 {
  font-size: 0.9375rem;
  line-height: 1.5rem;
  overflow: scroll;
  font-weight: 400;
  color: #333333;
  background-color: #e9e9e9;
  padding: 1.25rem;
  font-family: 'Roboto Mono',sans-serif;
  display: block;
}

.c10 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
  cursor: pointer;
  font-style: italic;
}

.c12 {
  font-size: 1rem;
  line-height: 1.5rem;
  padding-bottom: 0.75rem;
  color: #828282;
  text-align: center;
  margin: 0 auto;
}

.c11 {
  font-size: 1.125rem;
  line-height: 1.875rem;
  font-style: italic;
  font-weight: 500;
  color: #333333;
  padding-left: 2.1875rem;
  margin: 2.3125rem 0;
  display: block;
  border-left: 2px solid #333333;
}

.c11 p {
  padding: 0;
  font-weight: 500;
}

.c11 strong {
  font-weight: 700;
}

.c0 h1 + h3 {
  margin-top: 0.75rem;
}

.c0 h2 + p {
  padding-top: 0.8125rem;
}

.c0 h2 + blockquote {
  margin-top: 0;
}

.c0 h2 + ul {
  padding-top: 2.3125rem;
}

.c0 p + p {
  padding-top: 0;
}

.c0 p + blockquote {
  margin-top: 0;
}

.c0 p + h2 {
  padding-top: 1.125rem;
}

.c0 p + .gist,
.c0 p + .figure-image {
  padding-top: 0;
}

.c0 ul + p,
.c0 ol + p {
  padding-top: 0;
}

.c0 blockquote + h2 {
  padding-top: 1.375rem;
}

.c0 blockquote + p {
  padding-top: 0;
}

.c0 pre + h2 {
  padding-top: 2.3125rem;
}

.c0 .figure-image + p {
  padding-top: 2.3125rem;
}

.c0 .figure-image + h2 {
  padding-top: 2.6875rem;
}

.c0 .figure-image + blockquote {
  margin-top: 2.6875rem;
}

.c0 iframe {
  width: 100%;
  min-height: 50vh;
}

.c0 .gist {
  margin-top: -8px;
  margin-bottom: -8px;
}

@media (min-width:29.4375em) {
  .c1 {
    max-width: calc(100% - 72px);
  }
}

@media (min-width:34.5625em) {
  .c1 {
    max-width: 480px;
  }
}

@media (min-width:43.8125em) {
  .c1 {
    max-width: none;
  }
}

@media (min-width:74.8125em) {
  .c1 {
    max-width: 1100px;
  }
}

@media screen and (min-width:29.4375rem) {
  .c1 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c1 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c1 {
    padding-left: 2.625rem;
    padding-right: 2.625rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c1 {
    padding-left: 3rem;
    padding-right: 3rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c1 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:29.4375rem) {
  .c3 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c3 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c3 {
    padding-left: 1.3125rem;
    padding-right: 1.3125rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c3 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c3 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:29.4375rem) {
  .c4 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c4 {
    padding-left: 0;
    padding-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c4 {
    padding-left: 1.3125rem;
    padding-right: 1.3125rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c4 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c4 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media screen and (min-width:29.4375rem) {
  .c4 {
    width: 100%;
    position: initial;
    top: 0;
    left: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c4 {
    width: 58.333333333333336%;
    position: initial;
    top: 0;
    left: 0;
  }
}

@media screen and (min-width:29.4375rem) {
  .c2 {
    margin-left: 0;
    margin-right: 0;
  }
}

@media screen and (min-width:34.5625rem) {
  .c2 {
    margin-left: 0;
    margin-right: 0;
  }
}

@media screen and (min-width:43.8125rem) {
  .c2 {
    margin-left: -1.3125rem;
    margin-right: -1.3125rem;
  }
}

@media screen and (min-width:56.3125rem) {
  .c2 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }
}

@media screen and (min-width:74.8125rem) {
  .c2 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }
}

@media (min-width:43.8125em) {
  .c5 {
    font-size: 2.625rem;
    line-height: 3.1875rem;
  }
}

@media (min-width:43.8125em) {
  .c6 {
    font-size: 1.75rem;
    line-height: 2.625rem;
  }
}

@media (min-width:43.8125em) {
  .c7 {
    font-size: 1.5rem;
    line-height: 2.25rem;
  }
}

@media (min-width:43.8125em) {
  .c8 {
    font-size: 1.25rem;
    line-height: 2.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c8 code {
    font-size: 1.0625rem;
  }
}

@media (min-width:43.8125em) {
  .c9 {
    font-size: 1.0625rem;
    line-height: 1.5rem;
  }
}

@media (min-width:43.8125em) {
  .c12 {
    max-width: 70%;
  }
}

@media (min-width:43.8125em) {
  .c11 {
    font-size: 1.25rem;
    line-height: 2.0625rem;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
    style={
      Object {
        "margin": "2rem 0",
      }
    }
  >
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Heading 1
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <h1
          className="c5"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem ipsum, dolor sit amet consectetur adipisicing elit.",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Heading 2
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <h2
          className="c6"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestias ex impedit dicta temporibus animi saepe itaque totam, deserunt consectetur! Facere voluptatem ipsa",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Subtitle
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <h3
          className="c7"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestias ex impedit dicta temporibus animi saepe itaque totam, deserunt consectetur! Facere voluptatem ipsa",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Body
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <p
          className="c8"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestias ex impedit dicta temporibus animi saepe itaque totam, deserunt consectetur! Facere voluptatem ipsa",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Body w/ Code
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <p
          className="c8"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem, ipsum dolor <code>sit amet consectetur adipisicing elit</code>. Molestias ex impedit dicta temporibus animi saepe itaque totam, deserunt consectetur! Facere voluptatem ipsa",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Code Block
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <code
          className="c9"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<code>server.route({    
  method: 'GET',  
  path:'/',  
  handler: function (request, reply) {  
    var books = [{  
      title: 'Professional Node.js',  
      read: false  
    }, {  
      title: 'Node.js Patterns',  
      read: false  
    }];
  }
})</code>",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Anchor
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <a
          className="c10"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestias ex impedit dicta temporibus animi saepe itaque totam, deserunt consectetur! Facere voluptatem ipsa",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Body with inline Anchor
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <p
          className="c8"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem, ipsum dolor sit <a href=\\"https://example/com\\" target=\\"_blank\\"/>amet consectetur adipisicing</a> elit. Molestias ex impedit dicta temporibus animi saepe itaque totam, deserunt consectetur! Facere voluptatem ipsa",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Body with strong
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <p
          className="c8"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem, ipsum dolor sit <strong>ex impedit dicta temporibus animi saepe itaque</strong> totam, deserunt consectetur! Facere voluptatem ipsa",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Blockquote
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <blockquote
          className="c11"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestias ex impedit dicta temporibus animi saepe itaque totam, deserunt consectetur! Facere voluptatem ipsa",
            }
          }
        />
      </div>
    </div>
    <div
      className="c2"
      style={
        Object {
          "justifyContent": "center",
        }
      }
    >
      <div
        className="c3"
        width={
          Array [
            1,
          ]
        }
      >
        <p
          style={
            Object {
              "color": "#757575",
              "margin": "2rem 0 0",
            }
          }
        >
          Image Caption
        </p>
      </div>
      <div
        className="c4"
        width={
          Array [
            1,
            1,
            1,
            0.5833333333333334,
          ]
        }
      >
        <figcaption
          className="c12"
          dangerouslySetInnerHTML={
            Object {
              "__html": "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestias ex impedit dicta temporibus animi saepe itaque totam, deserunt consectetur! Facere voluptatem ipsa",
            }
          }
        />
      </div>
    </div>
  </div>
</div>
`;
