;(function(e, a) {
  for (var i in a) e[i] = a[i]
})(
  exports,
  /******/ (function(modules) {
    // webpackBootstrap
    /******/ // The module cache
    /******/ var installedModules = {} // The require function
    /******/
    /******/ /******/ function __webpack_require__(moduleId) {
      /******/
      /******/ // Check if module is in cache
      /******/ if (installedModules[moduleId]) {
        /******/ return installedModules[moduleId].exports
        /******/
      } // Create a new module (and put it into the cache)
      /******/ /******/ var module = (installedModules[moduleId] = {
        /******/ i: moduleId,
        /******/ l: false,
        /******/ exports: {}
        /******/
      }) // Execute the module function
      /******/
      /******/ /******/ modules[moduleId].call(
        module.exports,
        module,
        module.exports,
        __webpack_require__
      ) // Flag the module as loaded
      /******/
      /******/ /******/ module.l = true // Return the exports of the module
      /******/
      /******/ /******/ return module.exports
      /******/
    } // expose the modules object (__webpack_modules__)
    /******/
    /******/
    /******/ /******/ __webpack_require__.m = modules // expose the module cache
    /******/
    /******/ /******/ __webpack_require__.c = installedModules // define getter function for harmony exports
    /******/
    /******/ /******/ __webpack_require__.d = function(exports, name, getter) {
      /******/ if (!__webpack_require__.o(exports, name)) {
        /******/ Object.defineProperty(exports, name, {
          enumerable: true,
          get: getter
        })
        /******/
      }
      /******/
    } // define __esModule on exports
    /******/
    /******/ /******/ __webpack_require__.r = function(exports) {
      /******/ if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
        /******/ Object.defineProperty(exports, Symbol.toStringTag, {
          value: 'Module'
        })
        /******/
      }
      /******/ Object.defineProperty(exports, '__esModule', { value: true })
      /******/
    } // create a fake namespace object // mode & 1: value is a module id, require it // mode & 2: merge all properties of value into the ns // mode & 4: return value when already ns object // mode & 8|1: behave like require
    /******/
    /******/ /******/ /******/ /******/ /******/ /******/ __webpack_require__.t = function(
      value,
      mode
    ) {
      /******/ if (mode & 1) value = __webpack_require__(value)
      /******/ if (mode & 8) return value
      /******/ if (
        mode & 4 &&
        typeof value === 'object' &&
        value &&
        value.__esModule
      )
        return value
      /******/ var ns = Object.create(null)
      /******/ __webpack_require__.r(ns)
      /******/ Object.defineProperty(ns, 'default', {
        enumerable: true,
        value: value
      })
      /******/ if (mode & 2 && typeof value != 'string')
        for (var key in value)
          __webpack_require__.d(
            ns,
            key,
            function(key) {
              return value[key]
            }.bind(null, key)
          )
      /******/ return ns
      /******/
    } // getDefaultExport function for compatibility with non-harmony modules
    /******/
    /******/ /******/ __webpack_require__.n = function(module) {
      /******/ var getter =
        module && module.__esModule
          ? /******/ function getDefault() {
              return module['default']
            }
          : /******/ function getModuleExports() {
              return module
            }
      /******/ __webpack_require__.d(getter, 'a', getter)
      /******/ return getter
      /******/
    } // Object.prototype.hasOwnProperty.call
    /******/
    /******/ /******/ __webpack_require__.o = function(object, property) {
      return Object.prototype.hasOwnProperty.call(object, property)
    } // __webpack_public_path__
    /******/
    /******/ /******/ __webpack_require__.p = '' // Load entry module and return exports
    /******/
    /******/
    /******/ /******/ return __webpack_require__(
      (__webpack_require__.s = './meetup.js')
    )
    /******/
  })(
    /************************************************************************/
    /******/ {
      /***/ '../../node_modules/@contentful/axios/index.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/index.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          module.exports = __webpack_require__(
            /*! ./lib/axios */ '../../node_modules/@contentful/axios/lib/axios.js'
          )

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/adapters/http.js':
        /*!*********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/adapters/http.js ***!
  \*********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )
          var settle = __webpack_require__(
            /*! ./../core/settle */ '../../node_modules/@contentful/axios/lib/core/settle.js'
          )
          var buildURL = __webpack_require__(
            /*! ./../helpers/buildURL */ '../../node_modules/@contentful/axios/lib/helpers/buildURL.js'
          )
          var http = __webpack_require__(/*! http */ 'http')
          var https = __webpack_require__(/*! https */ 'https')
          var httpFollow = __webpack_require__(
            /*! follow-redirects */ '../../node_modules/follow-redirects/index.js'
          ).http
          var httpsFollow = __webpack_require__(
            /*! follow-redirects */ '../../node_modules/follow-redirects/index.js'
          ).https
          var url = __webpack_require__(/*! url */ 'url')
          var zlib = __webpack_require__(/*! zlib */ 'zlib')
          var pkg = __webpack_require__(
            /*! ./../../package.json */ '../../node_modules/@contentful/axios/package.json'
          )
          var createError = __webpack_require__(
            /*! ../core/createError */ '../../node_modules/@contentful/axios/lib/core/createError.js'
          )
          var enhanceError = __webpack_require__(
            /*! ../core/enhanceError */ '../../node_modules/@contentful/axios/lib/core/enhanceError.js'
          )

          var isHttps = /https:?/

          /*eslint consistent-return:0*/
          module.exports = function httpAdapter(config) {
            return new Promise(function dispatchHttpRequest(resolve, reject) {
              var data = config.data
              var headers = config.headers
              var timer

              // Set User-Agent (required by some servers)
              // Only set header if it hasn't been set in config
              // See https://github.com/axios/axios/issues/69
              if (!headers['User-Agent'] && !headers['user-agent']) {
                headers['User-Agent'] = 'axios/' + pkg.version
              }

              if (data && !utils.isStream(data)) {
                if (Buffer.isBuffer(data)) {
                  // Nothing to do...
                } else if (utils.isArrayBuffer(data)) {
                  data = new Buffer(new Uint8Array(data))
                } else if (utils.isString(data)) {
                  data = new Buffer(data, 'utf-8')
                } else {
                  return reject(
                    createError(
                      'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',
                      config
                    )
                  )
                }

                // Add Content-Length header if data exists
                headers['Content-Length'] = data.length
              }

              // HTTP basic authentication
              var auth = undefined
              if (config.auth) {
                var username = config.auth.username || ''
                var password = config.auth.password || ''
                auth = username + ':' + password
              }

              // Parse url
              var parsed = url.parse(config.url)
              var protocol = parsed.protocol || 'http:'

              if (!auth && parsed.auth) {
                var urlAuth = parsed.auth.split(':')
                var urlUsername = urlAuth[0] || ''
                var urlPassword = urlAuth[1] || ''
                auth = urlUsername + ':' + urlPassword
              }

              if (auth) {
                delete headers.Authorization
              }

              var isHttpsRequest = isHttps.test(protocol)
              var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent

              var options = {
                hostname: parsed.hostname,
                port: parsed.port,
                path: buildURL(
                  parsed.path,
                  config.params,
                  config.paramsSerializer
                ).replace(/^\?/, ''),
                method: config.method,
                headers: headers,
                agent: agent,
                auth: auth
              }

              var proxy = config.proxy
              if (!proxy && proxy !== false) {
                var proxyEnv = protocol.slice(0, -1) + '_proxy'
                var proxyUrl =
                  process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()]
                if (proxyUrl) {
                  var parsedProxyUrl = url.parse(proxyUrl)
                  proxy = {
                    host: parsedProxyUrl.hostname,
                    port: parsedProxyUrl.port
                  }

                  if (parsedProxyUrl.auth) {
                    var proxyUrlAuth = parsedProxyUrl.auth.split(':')
                    proxy.auth = {
                      username: proxyUrlAuth[0],
                      password: proxyUrlAuth[1]
                    }
                  }
                }
              }

              if (proxy) {
                options.hostname = proxy.host
                options.host = proxy.host
                options.headers.host =
                  parsed.hostname + (parsed.port ? ':' + parsed.port : '')
                options.port = proxy.port
                options.path =
                  protocol +
                  '//' +
                  parsed.hostname +
                  (parsed.port ? ':' + parsed.port : '') +
                  options.path

                // Basic proxy authorization
                if (proxy.auth) {
                  var base64 = new Buffer(
                    proxy.auth.username + ':' + proxy.auth.password,
                    'utf8'
                  ).toString('base64')
                  options.headers['Proxy-Authorization'] = 'Basic ' + base64
                }
              }

              var transport
              var isHttpsProxy =
                isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true)
              if (config.transport) {
                transport = config.transport
              } else if (config.maxRedirects === 0) {
                transport = isHttpsProxy ? https : http
              } else {
                if (config.maxRedirects) {
                  options.maxRedirects = config.maxRedirects
                }
                transport = isHttpsProxy ? httpsFollow : httpFollow
              }

              // Create the request
              var req = transport.request(options, function handleResponse(
                res
              ) {
                if (req.aborted) return

                // Response has been received so kill timer that handles request timeout
                clearTimeout(timer)
                timer = null

                // uncompress the response body transparently if required
                var stream = res
                switch (res.headers['content-encoding']) {
                  /*eslint default-case:0*/
                  case 'gzip':
                  case 'compress':
                  case 'deflate':
                    // add the unzipper to the body stream processing pipeline
                    stream = stream.pipe(zlib.createUnzip())

                    // remove the content-encoding in order to not confuse downstream operations
                    delete res.headers['content-encoding']
                    break
                }

                // return the last request in case of redirects
                var lastRequest = res.req || req

                var response = {
                  status: res.statusCode,
                  statusText: res.statusMessage,
                  headers: res.headers,
                  config: config,
                  request: lastRequest
                }

                if (config.responseType === 'stream') {
                  response.data = stream
                  settle(resolve, reject, response)
                } else {
                  var responseBuffer = []
                  stream.on('data', function handleStreamData(chunk) {
                    responseBuffer.push(chunk)

                    // make sure the content length is not over the maxContentLength if specified
                    if (
                      config.maxContentLength > -1 &&
                      Buffer.concat(responseBuffer).length >
                        config.maxContentLength
                    ) {
                      reject(
                        createError(
                          'maxContentLength size of ' +
                            config.maxContentLength +
                            ' exceeded',
                          config,
                          null,
                          lastRequest
                        )
                      )
                    }
                  })

                  stream.on('error', function handleStreamError(err) {
                    if (req.aborted) return
                    reject(enhanceError(err, config, null, lastRequest))
                  })

                  stream.on('end', function handleStreamEnd() {
                    var responseData = Buffer.concat(responseBuffer)
                    if (config.responseType !== 'arraybuffer') {
                      responseData = responseData.toString('utf8')
                    }

                    response.data = responseData
                    settle(resolve, reject, response)
                  })
                }
              })

              // Handle errors
              req.on('error', function handleRequestError(err) {
                if (req.aborted) return
                reject(enhanceError(err, config, null, req))
              })

              // Handle request timeout
              if (config.timeout && !timer) {
                timer = setTimeout(function handleRequestTimeout() {
                  req.abort()
                  reject(
                    createError(
                      'timeout of ' + config.timeout + 'ms exceeded',
                      config,
                      'ECONNABORTED',
                      req
                    )
                  )
                }, config.timeout)
              }

              if (config.cancelToken) {
                // Handle cancellation
                config.cancelToken.promise.then(function onCanceled(cancel) {
                  if (req.aborted) return

                  req.abort()
                  reject(cancel)
                })
              }

              // Send the request
              if (utils.isStream(data)) {
                data.pipe(req)
              } else {
                req.end(data)
              }
            })
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/adapters/xhr.js':
        /*!********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/adapters/xhr.js ***!
  \********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )
          var settle = __webpack_require__(
            /*! ./../core/settle */ '../../node_modules/@contentful/axios/lib/core/settle.js'
          )
          var buildURL = __webpack_require__(
            /*! ./../helpers/buildURL */ '../../node_modules/@contentful/axios/lib/helpers/buildURL.js'
          )
          var parseHeaders = __webpack_require__(
            /*! ./../helpers/parseHeaders */ '../../node_modules/@contentful/axios/lib/helpers/parseHeaders.js'
          )
          var isURLSameOrigin = __webpack_require__(
            /*! ./../helpers/isURLSameOrigin */ '../../node_modules/@contentful/axios/lib/helpers/isURLSameOrigin.js'
          )
          var createError = __webpack_require__(
            /*! ../core/createError */ '../../node_modules/@contentful/axios/lib/core/createError.js'
          )
          var btoa =
            (typeof window !== 'undefined' &&
              window.btoa &&
              window.btoa.bind(window)) ||
            __webpack_require__(
              /*! ./../helpers/btoa */ '../../node_modules/@contentful/axios/lib/helpers/btoa.js'
            )

          module.exports = function xhrAdapter(config) {
            return new Promise(function dispatchXhrRequest(resolve, reject) {
              var requestData = config.data
              var requestHeaders = config.headers

              if (utils.isFormData(requestData)) {
                delete requestHeaders['Content-Type'] // Let the browser set it
              }

              var request = new XMLHttpRequest()
              var loadEvent = 'onreadystatechange'
              var xDomain = false

              // For IE 8/9 CORS support
              // Only supports POST and GET calls and doesn't returns the response headers.
              // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
              if (
                true &&
                typeof window !== 'undefined' &&
                window.XDomainRequest &&
                !('withCredentials' in request) &&
                !isURLSameOrigin(config.url)
              ) {
                request = new window.XDomainRequest()
                loadEvent = 'onload'
                xDomain = true
                request.onprogress = function handleProgress() {}
                request.ontimeout = function handleTimeout() {}
              }

              // HTTP basic authentication
              if (config.auth) {
                var username = config.auth.username || ''
                var password = config.auth.password || ''
                requestHeaders.Authorization =
                  'Basic ' + btoa(username + ':' + password)
              }

              request.open(
                config.method.toUpperCase(),
                buildURL(config.url, config.params, config.paramsSerializer),
                true
              )

              // Set the request timeout in MS
              request.timeout = config.timeout

              // Listen for ready state
              request[loadEvent] = function handleLoad() {
                if (!request || (request.readyState !== 4 && !xDomain)) {
                  return
                }

                // The request errored out and we didn't get a response, this will be
                // handled by onerror instead
                // With one exception: request that using file: protocol, most browsers
                // will return status as 0 even though it's a successful request
                if (
                  request.status === 0 &&
                  !(
                    request.responseURL &&
                    request.responseURL.indexOf('file:') === 0
                  )
                ) {
                  return
                }

                // Prepare the response
                var responseHeaders =
                  'getAllResponseHeaders' in request
                    ? parseHeaders(request.getAllResponseHeaders())
                    : null
                var responseData =
                  !config.responseType || config.responseType === 'text'
                    ? request.responseText
                    : request.response
                var response = {
                  data: responseData,
                  // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
                  status: request.status === 1223 ? 204 : request.status,
                  statusText:
                    request.status === 1223 ? 'No Content' : request.statusText,
                  headers: responseHeaders,
                  config: config,
                  request: request
                }

                settle(resolve, reject, response)

                // Clean up request
                request = null
              }

              // Handle low level network errors
              request.onerror = function handleError() {
                // Real errors are hidden from us by the browser
                // onerror should only fire if it's a network error
                reject(createError('Network Error', config, null, request))

                // Clean up request
                request = null
              }

              // Handle timeout
              request.ontimeout = function handleTimeout() {
                reject(
                  createError(
                    'timeout of ' + config.timeout + 'ms exceeded',
                    config,
                    'ECONNABORTED',
                    request
                  )
                )

                // Clean up request
                request = null
              }

              // Add xsrf header
              // This is only done if running in a standard browser environment.
              // Specifically not if we're in a web worker, or react-native.
              if (utils.isStandardBrowserEnv()) {
                var cookies = __webpack_require__(
                  /*! ./../helpers/cookies */ '../../node_modules/@contentful/axios/lib/helpers/cookies.js'
                )

                // Add xsrf header
                var xsrfValue =
                  (config.withCredentials || isURLSameOrigin(config.url)) &&
                  config.xsrfCookieName
                    ? cookies.read(config.xsrfCookieName)
                    : undefined

                if (xsrfValue) {
                  requestHeaders[config.xsrfHeaderName] = xsrfValue
                }
              }

              // Add headers to the request
              if ('setRequestHeader' in request) {
                utils.forEach(requestHeaders, function setRequestHeader(
                  val,
                  key
                ) {
                  if (
                    typeof requestData === 'undefined' &&
                    key.toLowerCase() === 'content-type'
                  ) {
                    // Remove Content-Type if data is undefined
                    delete requestHeaders[key]
                  } else {
                    // Otherwise add header to the request
                    request.setRequestHeader(key, val)
                  }
                })
              }

              // Add withCredentials to request if needed
              if (config.withCredentials) {
                request.withCredentials = true
              }

              // Add responseType to request if needed
              if (config.responseType) {
                try {
                  request.responseType = config.responseType
                } catch (e) {
                  // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
                  // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
                  if (config.responseType !== 'json') {
                    throw e
                  }
                }
              }

              // Handle progress if needed
              if (typeof config.onDownloadProgress === 'function') {
                request.addEventListener('progress', config.onDownloadProgress)
              }

              // Not all browsers support upload events
              if (
                typeof config.onUploadProgress === 'function' &&
                request.upload
              ) {
                request.upload.addEventListener(
                  'progress',
                  config.onUploadProgress
                )
              }

              if (config.cancelToken) {
                // Handle cancellation
                config.cancelToken.promise.then(function onCanceled(cancel) {
                  if (!request) {
                    return
                  }

                  request.abort()
                  reject(cancel)
                  // Clean up request
                  request = null
                })
              }

              if (requestData === undefined) {
                requestData = null
              }

              // Send the request
              request.send(requestData)
            })
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/axios.js':
        /*!*************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/axios.js ***!
  \*************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )
          var bind = __webpack_require__(
            /*! ./helpers/bind */ '../../node_modules/@contentful/axios/lib/helpers/bind.js'
          )
          var Axios = __webpack_require__(
            /*! ./core/Axios */ '../../node_modules/@contentful/axios/lib/core/Axios.js'
          )
          var defaults = __webpack_require__(
            /*! ./defaults */ '../../node_modules/@contentful/axios/lib/defaults.js'
          )

          /**
           * Create an instance of Axios
           *
           * @param {Object} defaultConfig The default config for the instance
           * @return {Axios} A new instance of Axios
           */
          function createInstance(defaultConfig) {
            var context = new Axios(defaultConfig)
            var instance = bind(Axios.prototype.request, context)

            // Copy axios.prototype to instance
            utils.extend(instance, Axios.prototype, context)

            // Copy context to instance
            utils.extend(instance, context)

            return instance
          }

          // Create the default instance to be exported
          var axios = createInstance(defaults)

          // Expose Axios class to allow class inheritance
          axios.Axios = Axios

          // Factory for creating new instances
          axios.create = function create(instanceConfig) {
            return createInstance(utils.merge(defaults, instanceConfig))
          }

          // Expose Cancel & CancelToken
          axios.Cancel = __webpack_require__(
            /*! ./cancel/Cancel */ '../../node_modules/@contentful/axios/lib/cancel/Cancel.js'
          )
          axios.CancelToken = __webpack_require__(
            /*! ./cancel/CancelToken */ '../../node_modules/@contentful/axios/lib/cancel/CancelToken.js'
          )
          axios.isCancel = __webpack_require__(
            /*! ./cancel/isCancel */ '../../node_modules/@contentful/axios/lib/cancel/isCancel.js'
          )

          // Expose all/spread
          axios.all = function all(promises) {
            return Promise.all(promises)
          }
          axios.spread = __webpack_require__(
            /*! ./helpers/spread */ '../../node_modules/@contentful/axios/lib/helpers/spread.js'
          )

          module.exports = axios

          // Allow use of default import syntax in TypeScript
          module.exports.default = axios

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/cancel/Cancel.js':
        /*!*********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/cancel/Cancel.js ***!
  \*********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * A `Cancel` is an object that is thrown when an operation is canceled.
           *
           * @class
           * @param {string=} message The message.
           */
          function Cancel(message) {
            this.message = message
          }

          Cancel.prototype.toString = function toString() {
            return 'Cancel' + (this.message ? ': ' + this.message : '')
          }

          Cancel.prototype.__CANCEL__ = true

          module.exports = Cancel

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/cancel/CancelToken.js':
        /*!**************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/cancel/CancelToken.js ***!
  \**************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var Cancel = __webpack_require__(
            /*! ./Cancel */ '../../node_modules/@contentful/axios/lib/cancel/Cancel.js'
          )

          /**
           * A `CancelToken` is an object that can be used to request cancellation of an operation.
           *
           * @class
           * @param {Function} executor The executor function.
           */
          function CancelToken(executor) {
            if (typeof executor !== 'function') {
              throw new TypeError('executor must be a function.')
            }

            var resolvePromise
            this.promise = new Promise(function promiseExecutor(resolve) {
              resolvePromise = resolve
            })

            var token = this
            executor(function cancel(message) {
              if (token.reason) {
                // Cancellation has already been requested
                return
              }

              token.reason = new Cancel(message)
              resolvePromise(token.reason)
            })
          }

          /**
           * Throws a `Cancel` if cancellation has been requested.
           */
          CancelToken.prototype.throwIfRequested = function throwIfRequested() {
            if (this.reason) {
              throw this.reason
            }
          }

          /**
           * Returns an object that contains a new `CancelToken` and a function that, when called,
           * cancels the `CancelToken`.
           */
          CancelToken.source = function source() {
            var cancel
            var token = new CancelToken(function executor(c) {
              cancel = c
            })
            return {
              token: token,
              cancel: cancel
            }
          }

          module.exports = CancelToken

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/cancel/isCancel.js':
        /*!***********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/cancel/isCancel.js ***!
  \***********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          module.exports = function isCancel(value) {
            return !!(value && value.__CANCEL__)
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/core/Axios.js':
        /*!******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/core/Axios.js ***!
  \******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var defaults = __webpack_require__(
            /*! ./../defaults */ '../../node_modules/@contentful/axios/lib/defaults.js'
          )
          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )
          var InterceptorManager = __webpack_require__(
            /*! ./InterceptorManager */ '../../node_modules/@contentful/axios/lib/core/InterceptorManager.js'
          )
          var dispatchRequest = __webpack_require__(
            /*! ./dispatchRequest */ '../../node_modules/@contentful/axios/lib/core/dispatchRequest.js'
          )

          /**
           * Create a new instance of Axios
           *
           * @param {Object} instanceConfig The default config for the instance
           */
          function Axios(instanceConfig) {
            this.defaults = instanceConfig
            this.interceptors = {
              request: new InterceptorManager(),
              response: new InterceptorManager()
            }
          }

          /**
           * Dispatch a request
           *
           * @param {Object} config The config specific for this request (merged with this.defaults)
           */
          Axios.prototype.request = function request(config) {
            /*eslint no-param-reassign:0*/
            // Allow for axios('example/url'[, config]) a la fetch API
            if (typeof config === 'string') {
              config = utils.merge(
                {
                  url: arguments[0]
                },
                arguments[1]
              )
            }

            config = utils.merge(
              defaults,
              this.defaults,
              { method: 'get' },
              config
            )
            config.method = config.method.toLowerCase()

            // Hook up interceptors middleware
            var chain = [dispatchRequest, undefined]
            var promise = Promise.resolve(config)

            this.interceptors.request.forEach(
              function unshiftRequestInterceptors(interceptor) {
                chain.unshift(interceptor.fulfilled, interceptor.rejected)
              }
            )

            this.interceptors.response.forEach(
              function pushResponseInterceptors(interceptor) {
                chain.push(interceptor.fulfilled, interceptor.rejected)
              }
            )

            while (chain.length) {
              promise = promise.then(chain.shift(), chain.shift())
            }

            return promise
          }

          // Provide aliases for supported request methods
          utils.forEach(
            ['delete', 'get', 'head', 'options'],
            function forEachMethodNoData(method) {
              /*eslint func-names:0*/
              Axios.prototype[method] = function(url, config) {
                return this.request(
                  utils.merge(config || {}, {
                    method: method,
                    url: url
                  })
                )
              }
            }
          )

          utils.forEach(
            ['post', 'put', 'patch'],
            function forEachMethodWithData(method) {
              /*eslint func-names:0*/
              Axios.prototype[method] = function(url, data, config) {
                return this.request(
                  utils.merge(config || {}, {
                    method: method,
                    url: url,
                    data: data
                  })
                )
              }
            }
          )

          module.exports = Axios

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/core/InterceptorManager.js':
        /*!*******************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/core/InterceptorManager.js ***!
  \*******************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )

          function InterceptorManager() {
            this.handlers = []
          }

          /**
           * Add a new interceptor to the stack
           *
           * @param {Function} fulfilled The function to handle `then` for a `Promise`
           * @param {Function} rejected The function to handle `reject` for a `Promise`
           *
           * @return {Number} An ID used to remove interceptor later
           */
          InterceptorManager.prototype.use = function use(fulfilled, rejected) {
            this.handlers.push({
              fulfilled: fulfilled,
              rejected: rejected
            })
            return this.handlers.length - 1
          }

          /**
           * Remove an interceptor from the stack
           *
           * @param {Number} id The ID that was returned by `use`
           */
          InterceptorManager.prototype.eject = function eject(id) {
            if (this.handlers[id]) {
              this.handlers[id] = null
            }
          }

          /**
           * Iterate over all the registered interceptors
           *
           * This method is particularly useful for skipping over any
           * interceptors that may have become `null` calling `eject`.
           *
           * @param {Function} fn The function to call for each interceptor
           */
          InterceptorManager.prototype.forEach = function forEach(fn) {
            utils.forEach(this.handlers, function forEachHandler(h) {
              if (h !== null) {
                fn(h)
              }
            })
          }

          module.exports = InterceptorManager

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/core/createError.js':
        /*!************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/core/createError.js ***!
  \************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var enhanceError = __webpack_require__(
            /*! ./enhanceError */ '../../node_modules/@contentful/axios/lib/core/enhanceError.js'
          )

          /**
           * Create an Error with the specified message, config, error code, request and response.
           *
           * @param {string} message The error message.
           * @param {Object} config The config.
           * @param {string} [code] The error code (for example, 'ECONNABORTED').
           * @param {Object} [request] The request.
           * @param {Object} [response] The response.
           * @returns {Error} The created error.
           */
          module.exports = function createError(
            message,
            config,
            code,
            request,
            response
          ) {
            var error = new Error(message)
            return enhanceError(error, config, code, request, response)
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/core/dispatchRequest.js':
        /*!****************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/core/dispatchRequest.js ***!
  \****************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )
          var transformData = __webpack_require__(
            /*! ./transformData */ '../../node_modules/@contentful/axios/lib/core/transformData.js'
          )
          var isCancel = __webpack_require__(
            /*! ../cancel/isCancel */ '../../node_modules/@contentful/axios/lib/cancel/isCancel.js'
          )
          var defaults = __webpack_require__(
            /*! ../defaults */ '../../node_modules/@contentful/axios/lib/defaults.js'
          )
          var isAbsoluteURL = __webpack_require__(
            /*! ./../helpers/isAbsoluteURL */ '../../node_modules/@contentful/axios/lib/helpers/isAbsoluteURL.js'
          )
          var combineURLs = __webpack_require__(
            /*! ./../helpers/combineURLs */ '../../node_modules/@contentful/axios/lib/helpers/combineURLs.js'
          )

          /**
           * Throws a `Cancel` if cancellation has been requested.
           */
          function throwIfCancellationRequested(config) {
            if (config.cancelToken) {
              config.cancelToken.throwIfRequested()
            }
          }

          /**
           * Dispatch a request to the server using the configured adapter.
           *
           * @param {object} config The config that is to be used for the request
           * @returns {Promise} The Promise to be fulfilled
           */
          module.exports = function dispatchRequest(config) {
            throwIfCancellationRequested(config)

            // Support baseURL config
            if (config.baseURL && !isAbsoluteURL(config.url)) {
              config.url = combineURLs(config.baseURL, config.url)
            }

            // Ensure headers exist
            config.headers = config.headers || {}

            // Transform request data
            config.data = transformData(
              config.data,
              config.headers,
              config.transformRequest
            )

            // Flatten headers
            config.headers = utils.merge(
              config.headers.common || {},
              config.headers[config.method] || {},
              config.headers || {}
            )

            utils.forEach(
              ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
              function cleanHeaderConfig(method) {
                delete config.headers[method]
              }
            )

            var adapter = config.adapter || defaults.adapter

            return adapter(config).then(
              function onAdapterResolution(response) {
                throwIfCancellationRequested(config)

                // Transform response data
                response.data = transformData(
                  response.data,
                  response.headers,
                  config.transformResponse
                )

                return response
              },
              function onAdapterRejection(reason) {
                if (!isCancel(reason)) {
                  throwIfCancellationRequested(config)

                  // Transform response data
                  if (reason && reason.response) {
                    reason.response.data = transformData(
                      reason.response.data,
                      reason.response.headers,
                      config.transformResponse
                    )
                  }
                }

                return Promise.reject(reason)
              }
            )
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/core/enhanceError.js':
        /*!*************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/core/enhanceError.js ***!
  \*************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Update an Error with the specified config, error code, and response.
           *
           * @param {Error} error The error to update.
           * @param {Object} config The config.
           * @param {string} [code] The error code (for example, 'ECONNABORTED').
           * @param {Object} [request] The request.
           * @param {Object} [response] The response.
           * @returns {Error} The error.
           */
          module.exports = function enhanceError(
            error,
            config,
            code,
            request,
            response
          ) {
            error.config = config
            if (code) {
              error.code = code
            }
            error.request = request
            error.response = response
            return error
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/core/settle.js':
        /*!*******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/core/settle.js ***!
  \*******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var createError = __webpack_require__(
            /*! ./createError */ '../../node_modules/@contentful/axios/lib/core/createError.js'
          )

          /**
           * Resolve or reject a Promise based on response status.
           *
           * @param {Function} resolve A function that resolves the promise.
           * @param {Function} reject A function that rejects the promise.
           * @param {object} response The response.
           */
          module.exports = function settle(resolve, reject, response) {
            var validateStatus = response.config.validateStatus
            // Note: status is not exposed by XDomainRequest
            if (
              !response.status ||
              !validateStatus ||
              validateStatus(response.status)
            ) {
              resolve(response)
            } else {
              reject(
                createError(
                  'Request failed with status code ' + response.status,
                  response.config,
                  null,
                  response.request,
                  response
                )
              )
            }
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/core/transformData.js':
        /*!**************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/core/transformData.js ***!
  \**************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )

          /**
           * Transform the data for a request or a response
           *
           * @param {Object|String} data The data to be transformed
           * @param {Array} headers The headers for the request or response
           * @param {Array|Function} fns A single function or Array of functions
           * @returns {*} The resulting transformed data
           */
          module.exports = function transformData(data, headers, fns) {
            /*eslint no-param-reassign:0*/
            utils.forEach(fns, function transform(fn) {
              data = fn(data, headers)
            })

            return data
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/defaults.js':
        /*!****************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/defaults.js ***!
  \****************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )
          var normalizeHeaderName = __webpack_require__(
            /*! ./helpers/normalizeHeaderName */ '../../node_modules/@contentful/axios/lib/helpers/normalizeHeaderName.js'
          )

          var DEFAULT_CONTENT_TYPE = {
            'Content-Type': 'application/x-www-form-urlencoded'
          }

          function setContentTypeIfUnset(headers, value) {
            if (
              !utils.isUndefined(headers) &&
              utils.isUndefined(headers['Content-Type'])
            ) {
              headers['Content-Type'] = value
            }
          }

          function getDefaultAdapter() {
            var adapter
            if (typeof XMLHttpRequest !== 'undefined') {
              // For browsers use XHR adapter
              adapter = __webpack_require__(
                /*! ./adapters/xhr */ '../../node_modules/@contentful/axios/lib/adapters/xhr.js'
              )
            } else if (typeof process !== 'undefined') {
              // For node use HTTP adapter
              adapter = __webpack_require__(
                /*! ./adapters/http */ '../../node_modules/@contentful/axios/lib/adapters/http.js'
              )
            }
            return adapter
          }

          var defaults = {
            adapter: getDefaultAdapter(),

            transformRequest: [
              function transformRequest(data, headers) {
                normalizeHeaderName(headers, 'Content-Type')
                if (
                  utils.isFormData(data) ||
                  utils.isArrayBuffer(data) ||
                  utils.isBuffer(data) ||
                  utils.isStream(data) ||
                  utils.isFile(data) ||
                  utils.isBlob(data)
                ) {
                  return data
                }
                if (utils.isArrayBufferView(data)) {
                  return data.buffer
                }
                if (utils.isURLSearchParams(data)) {
                  setContentTypeIfUnset(
                    headers,
                    'application/x-www-form-urlencoded;charset=utf-8'
                  )
                  return data.toString()
                }
                if (utils.isObject(data)) {
                  setContentTypeIfUnset(
                    headers,
                    'application/json;charset=utf-8'
                  )
                  return JSON.stringify(data)
                }
                return data
              }
            ],

            transformResponse: [
              function transformResponse(data) {
                /*eslint no-param-reassign:0*/
                if (typeof data === 'string') {
                  try {
                    data = JSON.parse(data)
                  } catch (e) {
                    /* Ignore */
                  }
                }
                return data
              }
            ],

            timeout: 0,

            xsrfCookieName: 'XSRF-TOKEN',
            xsrfHeaderName: 'X-XSRF-TOKEN',

            maxContentLength: -1,

            validateStatus: function validateStatus(status) {
              return status >= 200 && status < 300
            }
          }

          defaults.headers = {
            common: {
              Accept: 'application/json, text/plain, */*'
            }
          }

          utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(
            method
          ) {
            defaults.headers[method] = {}
          })

          utils.forEach(
            ['post', 'put', 'patch'],
            function forEachMethodWithData(method) {
              defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE)
            }
          )

          module.exports = defaults

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/bind.js':
        /*!********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/bind.js ***!
  \********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          module.exports = function bind(fn, thisArg) {
            return function wrap() {
              var args = new Array(arguments.length)
              for (var i = 0; i < args.length; i++) {
                args[i] = arguments[i]
              }
              return fn.apply(thisArg, args)
            }
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/btoa.js':
        /*!********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/btoa.js ***!
  \********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          // btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

          var chars =
            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='

          function E() {
            this.message = 'String contains an invalid character'
          }
          E.prototype = new Error()
          E.prototype.code = 5
          E.prototype.name = 'InvalidCharacterError'

          function btoa(input) {
            var str = String(input)
            var output = ''
            for (
              // initialize result and counter
              var block, charCode, idx = 0, map = chars;
              // if the next str index does not exist:
              //   change the mapping table to "="
              //   check if d has no fractional digits
              str.charAt(idx | 0) || ((map = '='), idx % 1);
              // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
              output += map.charAt(63 & (block >> (8 - (idx % 1) * 8)))
            ) {
              charCode = str.charCodeAt((idx += 3 / 4))
              if (charCode > 0xff) {
                throw new E()
              }
              block = (block << 8) | charCode
            }
            return output
          }

          module.exports = btoa

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/buildURL.js':
        /*!************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/buildURL.js ***!
  \************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )

          function encode(val) {
            return encodeURIComponent(val)
              .replace(/%40/gi, '@')
              .replace(/%3A/gi, ':')
              .replace(/%24/g, '$')
              .replace(/%2C/gi, ',')
              .replace(/%20/g, '+')
              .replace(/%5B/gi, '[')
              .replace(/%5D/gi, ']')
          }

          /**
           * Build a URL by appending params to the end
           *
           * @param {string} url The base of the url (e.g., http://www.google.com)
           * @param {object} [params] The params to be appended
           * @returns {string} The formatted url
           */
          module.exports = function buildURL(url, params, paramsSerializer) {
            /*eslint no-param-reassign:0*/
            if (!params) {
              return url
            }

            var serializedParams
            if (paramsSerializer) {
              serializedParams = paramsSerializer(params)
            } else if (utils.isURLSearchParams(params)) {
              serializedParams = params.toString()
            } else {
              var parts = []

              utils.forEach(params, function serialize(val, key) {
                if (val === null || typeof val === 'undefined') {
                  return
                }

                if (utils.isArray(val)) {
                  key = key + '[]'
                }

                if (!utils.isArray(val)) {
                  val = [val]
                }

                utils.forEach(val, function parseValue(v) {
                  if (utils.isDate(v)) {
                    v = v.toISOString()
                  } else if (utils.isObject(v)) {
                    v = JSON.stringify(v)
                  }
                  parts.push(encode(key) + '=' + encode(v))
                })
              })

              serializedParams = parts.join('&')
            }

            if (serializedParams) {
              url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams
            }

            return url
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/combineURLs.js':
        /*!***************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/combineURLs.js ***!
  \***************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Creates a new URL by combining the specified URLs
           *
           * @param {string} baseURL The base URL
           * @param {string} relativeURL The relative URL
           * @returns {string} The combined URL
           */
          module.exports = function combineURLs(baseURL, relativeURL) {
            return relativeURL
              ? baseURL.replace(/\/+$/, '') +
                  '/' +
                  relativeURL.replace(/^\/+/, '')
              : baseURL
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/cookies.js':
        /*!***********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/cookies.js ***!
  \***********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )

          module.exports = utils.isStandardBrowserEnv()
            ? // Standard browser envs support document.cookie
              (function standardBrowserEnv() {
                return {
                  write: function write(
                    name,
                    value,
                    expires,
                    path,
                    domain,
                    secure
                  ) {
                    var cookie = []
                    cookie.push(name + '=' + encodeURIComponent(value))

                    if (utils.isNumber(expires)) {
                      cookie.push('expires=' + new Date(expires).toGMTString())
                    }

                    if (utils.isString(path)) {
                      cookie.push('path=' + path)
                    }

                    if (utils.isString(domain)) {
                      cookie.push('domain=' + domain)
                    }

                    if (secure === true) {
                      cookie.push('secure')
                    }

                    document.cookie = cookie.join('; ')
                  },

                  read: function read(name) {
                    var match = document.cookie.match(
                      new RegExp('(^|;\\s*)(' + name + ')=([^;]*)')
                    )
                    return match ? decodeURIComponent(match[3]) : null
                  },

                  remove: function remove(name) {
                    this.write(name, '', Date.now() - 86400000)
                  }
                }
              })()
            : // Non standard browser env (web workers, react-native) lack needed support.
              (function nonStandardBrowserEnv() {
                return {
                  write: function write() {},
                  read: function read() {
                    return null
                  },
                  remove: function remove() {}
                }
              })()

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/isAbsoluteURL.js':
        /*!*****************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/isAbsoluteURL.js ***!
  \*****************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Determines whether the specified URL is absolute
           *
           * @param {string} url The URL to test
           * @returns {boolean} True if the specified URL is absolute, otherwise false
           */
          module.exports = function isAbsoluteURL(url) {
            // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
            // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
            // by any combination of letters, digits, plus, period, or hyphen.
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url)
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/isURLSameOrigin.js':
        /*!*******************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/isURLSameOrigin.js ***!
  \*******************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )

          module.exports = utils.isStandardBrowserEnv()
            ? // Standard browser envs have full support of the APIs needed to test
              // whether the request URL is of the same origin as current location.
              (function standardBrowserEnv() {
                var msie = /(msie|trident)/i.test(navigator.userAgent)
                var urlParsingNode = document.createElement('a')
                var originURL

                /**
                 * Parse a URL to discover it's components
                 *
                 * @param {String} url The URL to be parsed
                 * @returns {Object}
                 */
                function resolveURL(url) {
                  var href = url

                  if (msie) {
                    // IE needs attribute set twice to normalize properties
                    urlParsingNode.setAttribute('href', href)
                    href = urlParsingNode.href
                  }

                  urlParsingNode.setAttribute('href', href)

                  // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
                  return {
                    href: urlParsingNode.href,
                    protocol: urlParsingNode.protocol
                      ? urlParsingNode.protocol.replace(/:$/, '')
                      : '',
                    host: urlParsingNode.host,
                    search: urlParsingNode.search
                      ? urlParsingNode.search.replace(/^\?/, '')
                      : '',
                    hash: urlParsingNode.hash
                      ? urlParsingNode.hash.replace(/^#/, '')
                      : '',
                    hostname: urlParsingNode.hostname,
                    port: urlParsingNode.port,
                    pathname:
                      urlParsingNode.pathname.charAt(0) === '/'
                        ? urlParsingNode.pathname
                        : '/' + urlParsingNode.pathname
                  }
                }

                originURL = resolveURL(window.location.href)

                /**
                 * Determine if a URL shares the same origin as the current location
                 *
                 * @param {String} requestURL The URL to test
                 * @returns {boolean} True if URL shares the same origin, otherwise false
                 */
                return function isURLSameOrigin(requestURL) {
                  var parsed = utils.isString(requestURL)
                    ? resolveURL(requestURL)
                    : requestURL
                  return (
                    parsed.protocol === originURL.protocol &&
                    parsed.host === originURL.host
                  )
                }
              })()
            : // Non standard browser envs (web workers, react-native) lack needed support.
              (function nonStandardBrowserEnv() {
                return function isURLSameOrigin() {
                  return true
                }
              })()

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/normalizeHeaderName.js':
        /*!***********************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/normalizeHeaderName.js ***!
  \***********************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )

          module.exports = function normalizeHeaderName(
            headers,
            normalizedName
          ) {
            utils.forEach(headers, function processHeader(value, name) {
              if (
                name !== normalizedName &&
                name.toUpperCase() === normalizedName.toUpperCase()
              ) {
                headers[normalizedName] = value
                delete headers[name]
              }
            })
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/parseHeaders.js':
        /*!****************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/parseHeaders.js ***!
  \****************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./../utils */ '../../node_modules/@contentful/axios/lib/utils.js'
          )

          // Headers whose duplicates are ignored by node
          // c.f. https://nodejs.org/api/http.html#http_message_headers
          var ignoreDuplicateOf = [
            'age',
            'authorization',
            'content-length',
            'content-type',
            'etag',
            'expires',
            'from',
            'host',
            'if-modified-since',
            'if-unmodified-since',
            'last-modified',
            'location',
            'max-forwards',
            'proxy-authorization',
            'referer',
            'retry-after',
            'user-agent'
          ]

          /**
           * Parse headers into an object
           *
           * ```
           * Date: Wed, 27 Aug 2014 08:58:49 GMT
           * Content-Type: application/json
           * Connection: keep-alive
           * Transfer-Encoding: chunked
           * ```
           *
           * @param {String} headers Headers needing to be parsed
           * @returns {Object} Headers parsed into an object
           */
          module.exports = function parseHeaders(headers) {
            var parsed = {}
            var key
            var val
            var i

            if (!headers) {
              return parsed
            }

            utils.forEach(headers.split('\n'), function parser(line) {
              i = line.indexOf(':')
              key = utils.trim(line.substr(0, i)).toLowerCase()
              val = utils.trim(line.substr(i + 1))

              if (key) {
                if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
                  return
                }
                if (key === 'set-cookie') {
                  parsed[key] = (parsed[key] ? parsed[key] : []).concat([val])
                } else {
                  parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val
                }
              }
            })

            return parsed
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/helpers/spread.js':
        /*!**********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/helpers/spread.js ***!
  \**********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Syntactic sugar for invoking a function and expanding an array for arguments.
           *
           * Common use case would be to use `Function.prototype.apply`.
           *
           *  ```js
           *  function f(x, y, z) {}
           *  var args = [1, 2, 3];
           *  f.apply(null, args);
           *  ```
           *
           * With `spread` this example can be re-written.
           *
           *  ```js
           *  spread(function(x, y, z) {})([1, 2, 3]);
           *  ```
           *
           * @param {Function} callback
           * @returns {Function}
           */
          module.exports = function spread(callback) {
            return function wrap(arr) {
              return callback.apply(null, arr)
            }
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/lib/utils.js':
        /*!*************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/lib/utils.js ***!
  \*************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var bind = __webpack_require__(
            /*! ./helpers/bind */ '../../node_modules/@contentful/axios/lib/helpers/bind.js'
          )
          var isBuffer = __webpack_require__(
            /*! is-buffer */ '../../node_modules/is-buffer/index.js'
          )

          /*global toString:true*/

          // utils is a library of generic helper functions non-specific to axios

          var toString = Object.prototype.toString

          /**
           * Determine if a value is an Array
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is an Array, otherwise false
           */
          function isArray(val) {
            return toString.call(val) === '[object Array]'
          }

          /**
           * Determine if a value is an ArrayBuffer
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is an ArrayBuffer, otherwise false
           */
          function isArrayBuffer(val) {
            return toString.call(val) === '[object ArrayBuffer]'
          }

          /**
           * Determine if a value is a FormData
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is an FormData, otherwise false
           */
          function isFormData(val) {
            return typeof FormData !== 'undefined' && val instanceof FormData
          }

          /**
           * Determine if a value is a view on an ArrayBuffer
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
           */
          function isArrayBufferView(val) {
            var result
            if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
              result = ArrayBuffer.isView(val)
            } else {
              result = val && val.buffer && val.buffer instanceof ArrayBuffer
            }
            return result
          }

          /**
           * Determine if a value is a String
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a String, otherwise false
           */
          function isString(val) {
            return typeof val === 'string'
          }

          /**
           * Determine if a value is a Number
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Number, otherwise false
           */
          function isNumber(val) {
            return typeof val === 'number'
          }

          /**
           * Determine if a value is undefined
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if the value is undefined, otherwise false
           */
          function isUndefined(val) {
            return typeof val === 'undefined'
          }

          /**
           * Determine if a value is an Object
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is an Object, otherwise false
           */
          function isObject(val) {
            return val !== null && typeof val === 'object'
          }

          /**
           * Determine if a value is a Date
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Date, otherwise false
           */
          function isDate(val) {
            return toString.call(val) === '[object Date]'
          }

          /**
           * Determine if a value is a File
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a File, otherwise false
           */
          function isFile(val) {
            return toString.call(val) === '[object File]'
          }

          /**
           * Determine if a value is a Blob
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Blob, otherwise false
           */
          function isBlob(val) {
            return toString.call(val) === '[object Blob]'
          }

          /**
           * Determine if a value is a Function
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Function, otherwise false
           */
          function isFunction(val) {
            return toString.call(val) === '[object Function]'
          }

          /**
           * Determine if a value is a Stream
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Stream, otherwise false
           */
          function isStream(val) {
            return isObject(val) && isFunction(val.pipe)
          }

          /**
           * Determine if a value is a URLSearchParams object
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a URLSearchParams object, otherwise false
           */
          function isURLSearchParams(val) {
            return (
              typeof URLSearchParams !== 'undefined' &&
              val instanceof URLSearchParams
            )
          }

          /**
           * Trim excess whitespace off the beginning and end of a string
           *
           * @param {String} str The String to trim
           * @returns {String} The String freed of excess whitespace
           */
          function trim(str) {
            return str.replace(/^\s*/, '').replace(/\s*$/, '')
          }

          /**
           * Determine if we're running in a standard browser environment
           *
           * This allows axios to run in a web worker, and react-native.
           * Both environments support XMLHttpRequest, but not fully standard globals.
           *
           * web workers:
           *  typeof window -> undefined
           *  typeof document -> undefined
           *
           * react-native:
           *  navigator.product -> 'ReactNative'
           */
          function isStandardBrowserEnv() {
            if (
              typeof navigator !== 'undefined' &&
              navigator.product === 'ReactNative'
            ) {
              return false
            }
            return (
              typeof window !== 'undefined' && typeof document !== 'undefined'
            )
          }

          /**
           * Iterate over an Array or an Object invoking a function for each item.
           *
           * If `obj` is an Array callback will be called passing
           * the value, index, and complete array for each item.
           *
           * If 'obj' is an Object callback will be called passing
           * the value, key, and complete object for each property.
           *
           * @param {Object|Array} obj The object to iterate
           * @param {Function} fn The callback to invoke for each item
           */
          function forEach(obj, fn) {
            // Don't bother if no value provided
            if (obj === null || typeof obj === 'undefined') {
              return
            }

            // Force an array if not already something iterable
            if (typeof obj !== 'object') {
              /*eslint no-param-reassign:0*/
              obj = [obj]
            }

            if (isArray(obj)) {
              // Iterate over array values
              for (var i = 0, l = obj.length; i < l; i++) {
                fn.call(null, obj[i], i, obj)
              }
            } else {
              // Iterate over object keys
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                  fn.call(null, obj[key], key, obj)
                }
              }
            }
          }

          /**
           * Accepts varargs expecting each argument to be an object, then
           * immutably merges the properties of each object and returns result.
           *
           * When multiple objects contain the same key the later object in
           * the arguments list will take precedence.
           *
           * Example:
           *
           * ```js
           * var result = merge({foo: 123}, {foo: 456});
           * console.log(result.foo); // outputs 456
           * ```
           *
           * @param {Object} obj1 Object to merge
           * @returns {Object} Result of all merge properties
           */
          function merge(/* obj1, obj2, obj3, ... */) {
            var result = {}
            function assignValue(val, key) {
              if (typeof result[key] === 'object' && typeof val === 'object') {
                result[key] = merge(result[key], val)
              } else {
                result[key] = val
              }
            }

            for (var i = 0, l = arguments.length; i < l; i++) {
              forEach(arguments[i], assignValue)
            }
            return result
          }

          /**
           * Extends object a by mutably adding to it the properties of object b.
           *
           * @param {Object} a The object to be extended
           * @param {Object} b The object to copy properties from
           * @param {Object} thisArg The object to bind function to
           * @return {Object} The resulting value of object a
           */
          function extend(a, b, thisArg) {
            forEach(b, function assignValue(val, key) {
              if (thisArg && typeof val === 'function') {
                a[key] = bind(val, thisArg)
              } else {
                a[key] = val
              }
            })
            return a
          }

          module.exports = {
            isArray: isArray,
            isArrayBuffer: isArrayBuffer,
            isBuffer: isBuffer,
            isFormData: isFormData,
            isArrayBufferView: isArrayBufferView,
            isString: isString,
            isNumber: isNumber,
            isObject: isObject,
            isUndefined: isUndefined,
            isDate: isDate,
            isFile: isFile,
            isBlob: isBlob,
            isFunction: isFunction,
            isStream: isStream,
            isURLSearchParams: isURLSearchParams,
            isStandardBrowserEnv: isStandardBrowserEnv,
            forEach: forEach,
            merge: merge,
            extend: extend,
            trim: trim
          }

          /***/
        },

      /***/ '../../node_modules/@contentful/axios/package.json':
        /*!*************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/@contentful/axios/package.json ***!
  \*************************************************************************************/
        /*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, typings, dependencies, bundlesize, default */
        /***/ function(module) {
          module.exports = {
            name: '@contentful/axios',
            version: '0.18.0',
            description:
              'Promise based HTTP client for the browser and node.js',
            main: 'index.js',
            scripts: {
              test: 'grunt test && bundlesize',
              start: 'node ./sandbox/server.js',
              build: 'NODE_ENV=production grunt build',
              preversion: 'npm test',
              version:
                'npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json',
              postversion: 'git push && git push --tags',
              examples: 'node ./examples/server.js',
              coveralls:
                'cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js'
            },
            repository: {
              type: 'git',
              url: 'https://github.com/contentful/axios.git'
            },
            keywords: ['xhr', 'http', 'ajax', 'promise', 'node'],
            author: 'Matt Zabriskie',
            license: 'MIT',
            bugs: { url: 'https://github.com/axios/axios/issues' },
            homepage: 'https://github.com/axios/axios',
            devDependencies: {
              bundlesize: '^0.5.7',
              coveralls: '^2.11.9',
              'es6-promise': '^4.0.5',
              grunt: '^1.0.1',
              'grunt-banner': '^0.6.0',
              'grunt-cli': '^1.2.0',
              'grunt-contrib-clean': '^1.0.0',
              'grunt-contrib-nodeunit': '^1.0.0',
              'grunt-contrib-watch': '^1.0.0',
              'grunt-eslint': '^19.0.0',
              'grunt-karma': '^2.0.0',
              'grunt-ts': '^6.0.0-beta.3',
              'grunt-webpack': '^1.0.18',
              'istanbul-instrumenter-loader': '^1.0.0',
              'jasmine-core': '^2.4.1',
              karma: '^1.3.0',
              'karma-chrome-launcher': '^2.0.0',
              'karma-coverage': '^1.0.0',
              'karma-firefox-launcher': '^1.0.0',
              'karma-jasmine': '^1.0.2',
              'karma-jasmine-ajax': '^0.1.13',
              'karma-opera-launcher': '^1.0.0',
              'karma-phantomjs-launcher': '^1.0.0',
              'karma-safari-launcher': '^1.0.0',
              'karma-sauce-launcher': '^1.1.0',
              'karma-sinon': '^1.0.5',
              'karma-sourcemap-loader': '^0.3.7',
              'karma-webpack': '^1.7.0',
              'load-grunt-tasks': '^3.5.2',
              minimist: '^1.2.0',
              'phantomjs-prebuilt': '^2.1.7',
              sinon: '^1.17.4',
              webpack: '^1.13.1',
              'webpack-dev-server': '^1.14.1',
              'url-search-params': '^0.6.1',
              typescript: '^2.0.3'
            },
            browser: { './lib/adapters/http.js': './lib/adapters/xhr.js' },
            typings: './index.d.ts',
            dependencies: {
              'follow-redirects': '^1.2.5',
              'is-buffer': '^1.1.5'
            },
            bundlesize: [{ path: './dist/axios.min.js', threshold: '5kB' }]
          }

          /***/
        },

      /***/ '../../node_modules/JSONStream/index.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/JSONStream/index.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var Parser = __webpack_require__(
              /*! jsonparse */ '../../node_modules/jsonparse/jsonparse.js'
            ),
            through = __webpack_require__(
              /*! through */ '../../node_modules/through/index.js'
            )

          var bufferFrom = Buffer.from && Buffer.from !== Uint8Array.from

          /*

  the value of this.stack that creationix's jsonparse has is weird.

  it makes this code ugly, but his problem is way harder that mine,
  so i'll forgive him.

*/

          exports.parse = function(path, map) {
            var header, footer
            var parser = new Parser()
            var stream = through(
              function(chunk) {
                if ('string' === typeof chunk)
                  chunk = bufferFrom ? Buffer.from(chunk) : new Buffer(chunk)
                parser.write(chunk)
              },
              function(data) {
                if (data) stream.write(data)
                if (header) stream.emit('header', header)
                if (footer) stream.emit('footer', footer)
                stream.queue(null)
              }
            )

            if ('string' === typeof path)
              path = path.split('.').map(function(e) {
                if (e === '$*') return { emitKey: true }
                else if (e === '*') return true
                else if (e === '')
                  // '..'.split('.') returns an empty string
                  return { recurse: true }
                else return e
              })

            var count = 0,
              _key
            if (!path || !path.length) path = null

            parser.onValue = function(value) {
              if (!this.root) stream.root = value

              if (!path) return

              var i = 0 // iterates on path
              var j = 0 // iterates on stack
              var emitKey = false
              var emitPath = false
              while (i < path.length) {
                var key = path[i]
                var c
                j++

                if (key && !key.recurse) {
                  c = j === this.stack.length ? this : this.stack[j]
                  if (!c) return
                  if (!check(key, c.key)) {
                    setHeaderFooter(c.key, value)
                    return
                  }
                  emitKey = !!key.emitKey
                  emitPath = !!key.emitPath
                  i++
                } else {
                  i++
                  var nextKey = path[i]
                  if (!nextKey) return
                  while (true) {
                    c = j === this.stack.length ? this : this.stack[j]
                    if (!c) return
                    if (check(nextKey, c.key)) {
                      i++
                      if (!Object.isFrozen(this.stack[j]))
                        this.stack[j].value = null
                      break
                    } else {
                      setHeaderFooter(c.key, value)
                    }
                    j++
                  }
                }
              }

              // emit header
              if (header) {
                stream.emit('header', header)
                header = false
              }
              if (j !== this.stack.length) return

              count++
              var actualPath = this.stack
                .slice(1)
                .map(function(element) {
                  return element.key
                })
                .concat([this.key])
              var data = value
              if (null != data)
                if (null != (data = map ? map(data, actualPath) : data)) {
                  if (emitKey || emitPath) {
                    data = { value: data }
                    if (emitKey) data['key'] = this.key
                    if (emitPath) data['path'] = actualPath
                  }

                  stream.queue(data)
                }
              if (this.value) delete this.value[this.key]
              for (var k in this.stack)
                if (!Object.isFrozen(this.stack[k])) this.stack[k].value = null
            }
            parser._onToken = parser.onToken

            parser.onToken = function(token, value) {
              parser._onToken(token, value)
              if (this.stack.length === 0) {
                if (stream.root) {
                  if (!path) stream.queue(stream.root)
                  count = 0
                  stream.root = null
                }
              }
            }

            parser.onError = function(err) {
              if (err.message.indexOf('at position') > -1)
                err.message = 'Invalid JSON (' + err.message + ')'
              stream.emit('error', err)
            }

            return stream

            function setHeaderFooter(key, value) {
              // header has not been emitted yet
              if (header !== false) {
                header = header || {}
                header[key] = value
              }

              // footer has not been emitted yet but header has
              if (footer !== false && header === false) {
                footer = footer || {}
                footer[key] = value
              }
            }
          }

          function check(x, y) {
            if ('string' === typeof x) return y == x
            else if (x && 'function' === typeof x.exec) return x.exec(y)
            else if ('boolean' === typeof x || 'object' === typeof x) return x
            else if ('function' === typeof x) return x(y)
            return false
          }

          exports.stringify = function(op, sep, cl, indent) {
            indent = indent || 0
            if (op === false) {
              op = ''
              sep = '\n'
              cl = ''
            } else if (op == null) {
              op = '[\n'
              sep = '\n,\n'
              cl = '\n]\n'
            }

            //else, what ever you like

            var stream,
              first = true,
              anyData = false
            stream = through(
              function(data) {
                anyData = true
                try {
                  var json = JSON.stringify(data, null, indent)
                } catch (err) {
                  return stream.emit('error', err)
                }
                if (first) {
                  first = false
                  stream.queue(op + json)
                } else stream.queue(sep + json)
              },
              function(data) {
                if (!anyData) stream.queue(op)
                stream.queue(cl)
                stream.queue(null)
              }
            )

            return stream
          }

          exports.stringifyObject = function(op, sep, cl, indent) {
            indent = indent || 0
            if (op === false) {
              op = ''
              sep = '\n'
              cl = ''
            } else if (op == null) {
              op = '{\n'
              sep = '\n,\n'
              cl = '\n}\n'
            }

            //else, what ever you like

            var first = true
            var anyData = false
            var stream = through(
              function(data) {
                anyData = true
                var json =
                  JSON.stringify(data[0]) +
                  ':' +
                  JSON.stringify(data[1], null, indent)
                if (first) {
                  first = false
                  this.queue(op + json)
                } else this.queue(sep + json)
              },
              function(data) {
                if (!anyData) this.queue(op)
                this.queue(cl)

                this.queue(null)
              }
            )

            return stream
          }

          /***/
        },

      /***/ '../../node_modules/apr-engine-each/dist/apr-engine-each.umd.js':
        /*!**************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/apr-engine-each/dist/apr-engine-each.umd.js ***!
  \**************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          ;(function(global, factory) {
            true
              ? (module.exports = factory(
                  __webpack_require__(
                    /*! lodash.defaults */ '../../node_modules/lodash.defaults/index.js'
                  ),
                  __webpack_require__(
                    /*! apr-engine-run */ '../../node_modules/apr-engine-run/dist/apr-engine-run.umd.js'
                  )
                ))
              : undefined
          })(this, function(lodash, aprEngineRun) {
            'use strict'

            lodash =
              lodash && lodash.hasOwnProperty('default')
                ? lodash['default']
                : lodash
            aprEngineRun =
              aprEngineRun && aprEngineRun.hasOwnProperty('default')
                ? aprEngineRun['default']
                : aprEngineRun

            var engineEach = function(ctx) {
              return aprEngineRun(
                ctx.input,
                ctx.fn,
                lodash(ctx.opts, {
                  limit: Infinity,
                  after: ctx.after,
                  call: ctx.call
                })
              )
            }

            return engineEach
          })

          //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYW1pdG9zL2Rldi9hcHIvcGFja2FnZXMvZW5naW5lLWVhY2gvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVmYXVsdHMgPSByZXF1aXJlKCdsb2Rhc2guZGVmYXVsdHMnKTtcblxuY29uc3QgcnVuID0gcmVxdWlyZSgnYXByLWVuZ2luZS1ydW4nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjdHggPT5cbiAgcnVuKFxuICAgIGN0eC5pbnB1dCxcbiAgICBjdHguZm4sXG4gICAgZGVmYXVsdHMoY3R4Lm9wdHMsIHtcbiAgICAgIGxpbWl0OiBJbmZpbml0eSxcbiAgICAgIGFmdGVyOiBjdHguYWZ0ZXIsXG4gICAgICBjYWxsOiBjdHguY2FsbFxuICAgIH0pXG4gICk7XG4iXSwibmFtZXMiOlsibW9kdWxlIiwicnVuIiwiY3R4IiwiaW5wdXQiLCJmbiIsImRlZmF1bHRzIiwib3B0cyIsIkluZmluaXR5IiwiYWZ0ZXIiLCJjYWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFJQUEsY0FBQSxHQUFpQjtTQUNmQyxhQUNFQyxJQUFJQyxLQUROLEVBRUVELElBQUlFLEVBRk4sRUFHRUMsT0FBU0gsSUFBSUksSUFBYixFQUFtQjtXQUNWQyxRQURVO1dBRVZMLElBQUlNLEtBRk07VUFHWE4sSUFBSU87R0FIWixDQUhGLENBRGU7Q0FBakI7Ozs7Ozs7OyJ9

          /***/
        },

      /***/ '../../node_modules/apr-engine-iterator/dist/apr-engine-iterator.umd.js':
        /*!**********************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/apr-engine-iterator/dist/apr-engine-iterator.umd.js ***!
  \**********************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          ;(function(global, factory) {
            true
              ? (module.exports = factory(
                  __webpack_require__(
                    /*! build-array */ '../../node_modules/build-array/src/build-array.js'
                  ),
                  __webpack_require__(
                    /*! lodash.isarraylike */ '../../node_modules/lodash.isarraylike/index.js'
                  ),
                  __webpack_require__(
                    /*! lodash.isfinite */ '../../node_modules/lodash.isfinite/index.js'
                  ),
                  __webpack_require__(
                    /*! lodash.keys */ '../../node_modules/apr-engine-iterator/node_modules/lodash.keys/index.js'
                  ),
                  __webpack_require__(
                    /*! apr-engine-until */ '../../node_modules/apr-engine-until/dist/apr-engine-until.umd.js'
                  )
                ))
              : undefined
          })(this, function(
            buildArray,
            lodash,
            lodash$1,
            lodash$2,
            aprEngineUntil
          ) {
            'use strict'

            buildArray =
              buildArray && buildArray.hasOwnProperty('default')
                ? buildArray['default']
                : buildArray
            lodash =
              lodash && lodash.hasOwnProperty('default')
                ? lodash['default']
                : lodash
            lodash$1 =
              lodash$1 && lodash$1.hasOwnProperty('default')
                ? lodash$1['default']
                : lodash$1
            lodash$2 =
              lodash$2 && lodash$2.hasOwnProperty('default')
                ? lodash$2['default']
                : lodash$2
            aprEngineUntil =
              aprEngineUntil && aprEngineUntil.hasOwnProperty('default')
                ? aprEngineUntil['default']
                : aprEngineUntil

            var wrap = function wrap(fn) {
              var i = 0

              var group = function group(size) {
                if (lodash$1(size)) {
                  return buildArray(size).map(next)
                }

                return aprEngineUntil(function() {
                  return next()
                })
              }

              var next = function next(size) {
                if (size) {
                  return group(size)
                }

                return fn(i++)
              }

              return {
                next: next
              }
            }

            var arr = function arr(input) {
              return wrap(function(i) {
                return {
                  value: input[i],
                  done: input.length === i,
                  key: i
                }
              })
            }

            var ittr = function ittr(input) {
              return wrap(function(i) {
                var item = input.next()

                return {
                  done: item.done,
                  value: item.value,
                  key: i
                }
              })
            }

            var obj = function obj(input) {
              var okeys = lodash$2(input)

              return wrap(function(i) {
                var key = okeys[i]

                return {
                  value: input[key],
                  done: okeys.length === i,
                  key: key
                }
              })
            }

            var engineIterator = function(input) {
              if (lodash(input)) {
                return arr(input)
              }

              if (input[Symbol.iterator]) {
                return ittr(input[Symbol.iterator]())
              }

              return obj(input)
            }

            return engineIterator
          })

          //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYW1pdG9zL2Rldi9hcHIvcGFja2FnZXMvZW5naW5lLWl0ZXJhdG9yL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJ1aWxkQXJyYXkgPSByZXF1aXJlKCdidWlsZC1hcnJheScpO1xuY29uc3QgaXNBcnJheSA9IHJlcXVpcmUoJ2xvZGFzaC5pc2FycmF5bGlrZScpO1xuY29uc3QgaXNGaW5pdGUgPSByZXF1aXJlKCdsb2Rhc2guaXNmaW5pdGUnKTtcbmNvbnN0IGtleXMgPSByZXF1aXJlKCdsb2Rhc2gua2V5cycpO1xuXG5jb25zdCB1bnRpbCA9IHJlcXVpcmUoJ2Fwci1lbmdpbmUtdW50aWwnKTtcblxuY29uc3Qgd3JhcCA9IGZuID0+IHtcbiAgbGV0IGkgPSAwO1xuXG4gIGNvbnN0IGdyb3VwID0gc2l6ZSA9PiB7XG4gICAgaWYgKGlzRmluaXRlKHNpemUpKSB7XG4gICAgICByZXR1cm4gYnVpbGRBcnJheShzaXplKS5tYXAobmV4dCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHVudGlsKCgpID0+IG5leHQoKSk7XG4gIH07XG5cbiAgY29uc3QgbmV4dCA9IHNpemUgPT4ge1xuICAgIGlmIChzaXplKSB7XG4gICAgICByZXR1cm4gZ3JvdXAoc2l6ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZuKGkrKyk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBuZXh0XG4gIH07XG59O1xuXG5jb25zdCBhcnIgPSBpbnB1dCA9PlxuICB3cmFwKGkgPT4gKHtcbiAgICB2YWx1ZTogaW5wdXRbaV0sXG4gICAgZG9uZTogaW5wdXQubGVuZ3RoID09PSBpLFxuICAgIGtleTogaVxuICB9KSk7XG5cbmNvbnN0IGl0dHIgPSBpbnB1dCA9PlxuICB3cmFwKGkgPT4ge1xuICAgIGNvbnN0IGl0ZW0gPSBpbnB1dC5uZXh0KCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgZG9uZTogaXRlbS5kb25lLFxuICAgICAgdmFsdWU6IGl0ZW0udmFsdWUsXG4gICAgICBrZXk6IGlcbiAgICB9O1xuICB9KTtcblxuY29uc3Qgb2JqID0gaW5wdXQgPT4ge1xuICBjb25zdCBva2V5cyA9IGtleXMoaW5wdXQpO1xuXG4gIHJldHVybiB3cmFwKGkgPT4ge1xuICAgIGNvbnN0IGtleSA9IG9rZXlzW2ldO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiBpbnB1dFtrZXldLFxuICAgICAgZG9uZTogb2tleXMubGVuZ3RoID09PSBpLFxuICAgICAga2V5XG4gICAgfTtcbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlucHV0ID0+IHtcbiAgaWYgKGlzQXJyYXkoaW5wdXQpKSB7XG4gICAgcmV0dXJuIGFycihpbnB1dCk7XG4gIH1cblxuICBpZiAoaW5wdXRbU3ltYm9sLml0ZXJhdG9yXSkge1xuICAgIHJldHVybiBpdHRyKGlucHV0W1N5bWJvbC5pdGVyYXRvcl0oKSk7XG4gIH1cblxuICByZXR1cm4gb2JqKGlucHV0KTtcbn07XG4iXSwibmFtZXMiOlsid3JhcCIsImkiLCJncm91cCIsImlzRmluaXRlIiwic2l6ZSIsImJ1aWxkQXJyYXkiLCJtYXAiLCJuZXh0IiwidW50aWwiLCJmbiIsImFyciIsImlucHV0IiwibGVuZ3RoIiwiaXR0ciIsIml0ZW0iLCJkb25lIiwidmFsdWUiLCJvYmoiLCJva2V5cyIsImtleXMiLCJrZXkiLCJtb2R1bGUiLCJpc0FycmF5IiwiU3ltYm9sIiwiaXRlcmF0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQU9BLElBQU1BLE9BQU8sU0FBUEEsSUFBTyxLQUFNO01BQ2JDLElBQUksQ0FBUjs7TUFFTUMsUUFBUSxTQUFSQSxLQUFRLE9BQVE7UUFDaEJDLFNBQVNDLElBQVQsQ0FBSixFQUFvQjthQUNYQyxXQUFXRCxJQUFYLEVBQWlCRSxHQUFqQixDQUFxQkMsSUFBckIsQ0FBUDs7O1dBR0tDLGVBQU07YUFBTUQsTUFBTjtLQUFOLENBQVA7R0FMRjs7TUFRTUEsT0FBTyxTQUFQQSxJQUFPLE9BQVE7UUFDZkgsSUFBSixFQUFVO2FBQ0RGLE1BQU1FLElBQU4sQ0FBUDs7O1dBR0tLLEdBQUdSLEdBQUgsQ0FBUDtHQUxGOztTQVFPOztHQUFQO0NBbkJGOztBQXdCQSxJQUFNUyxNQUFNLFNBQU5BLEdBQU07U0FDVlYsS0FBSztXQUFNO2FBQ0ZXLE1BQU1WLENBQU4sQ0FERTtZQUVIVSxNQUFNQyxNQUFOLEtBQWlCWCxDQUZkO1dBR0pBO0tBSEY7R0FBTCxDQURVO0NBQVo7O0FBT0EsSUFBTVksT0FBTyxTQUFQQSxJQUFPO1NBQ1hiLEtBQUssYUFBSztRQUNGYyxPQUFPSCxNQUFNSixJQUFOLEVBQWI7O1dBRU87WUFDQ08sS0FBS0MsSUFETjthQUVFRCxLQUFLRSxLQUZQO1dBR0FmO0tBSFA7R0FIRixDQURXO0NBQWI7O0FBV0EsSUFBTWdCLE1BQU0sU0FBTkEsR0FBTSxRQUFTO01BQ2JDLFFBQVFDLFNBQUtSLEtBQUwsQ0FBZDs7U0FFT1gsS0FBSyxhQUFLO1FBQ1RvQixNQUFNRixNQUFNakIsQ0FBTixDQUFaOztXQUVPO2FBQ0VVLE1BQU1TLEdBQU4sQ0FERjtZQUVDRixNQUFNTixNQUFOLEtBQWlCWCxDQUZsQjs7S0FBUDtHQUhLLENBQVA7Q0FIRjs7QUFjQW9CLGtCQUFBLEdBQWlCLGlCQUFTO01BQ3BCQyxPQUFRWCxLQUFSLENBQUosRUFBb0I7V0FDWEQsSUFBSUMsS0FBSixDQUFQOzs7TUFHRUEsTUFBTVksT0FBT0MsUUFBYixDQUFKLEVBQTRCO1dBQ25CWCxLQUFLRixNQUFNWSxPQUFPQyxRQUFiLEdBQUwsQ0FBUDs7O1NBR0tQLElBQUlOLEtBQUosQ0FBUDtDQVRGOzs7Ozs7OzsifQ==

          /***/
        },

      /***/ '../../node_modules/apr-engine-iterator/node_modules/lodash.keys/index.js':
        /*!************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/apr-engine-iterator/node_modules/lodash.keys/index.js ***!
  \************************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * lodash (Custom Build) <https://lodash.com/>
           * Build: `lodash modularize exports="npm" -o ./`
           * Copyright jQuery Foundation and other contributors <https://jquery.org/>
           * Released under MIT license <https://lodash.com/license>
           * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
           * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
           */

          /** Used as references for various `Number` constants. */
          var MAX_SAFE_INTEGER = 9007199254740991

          /** `Object#toString` result references. */
          var argsTag = '[object Arguments]',
            funcTag = '[object Function]',
            genTag = '[object GeneratorFunction]'

          /** Used to detect unsigned integer values. */
          var reIsUint = /^(?:0|[1-9]\d*)$/

          /**
           * The base implementation of `_.times` without support for iteratee shorthands
           * or max array length checks.
           *
           * @private
           * @param {number} n The number of times to invoke `iteratee`.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns the array of results.
           */
          function baseTimes(n, iteratee) {
            var index = -1,
              result = Array(n)

            while (++index < n) {
              result[index] = iteratee(index)
            }
            return result
          }

          /**
           * Creates a unary function that invokes `func` with its argument transformed.
           *
           * @private
           * @param {Function} func The function to wrap.
           * @param {Function} transform The argument transform.
           * @returns {Function} Returns the new function.
           */
          function overArg(func, transform) {
            return function(arg) {
              return func(transform(arg))
            }
          }

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * Used to resolve the
           * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
           * of values.
           */
          var objectToString = objectProto.toString

          /** Built-in value references. */
          var propertyIsEnumerable = objectProto.propertyIsEnumerable

          /* Built-in method references for those with the same name as other `lodash` methods. */
          var nativeKeys = overArg(Object.keys, Object)

          /**
           * Creates an array of the enumerable property names of the array-like `value`.
           *
           * @private
           * @param {*} value The value to query.
           * @param {boolean} inherited Specify returning inherited property names.
           * @returns {Array} Returns the array of property names.
           */
          function arrayLikeKeys(value, inherited) {
            // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
            // Safari 9 makes `arguments.length` enumerable in strict mode.
            var result =
              isArray(value) || isArguments(value)
                ? baseTimes(value.length, String)
                : []

            var length = result.length,
              skipIndexes = !!length

            for (var key in value) {
              if (
                (inherited || hasOwnProperty.call(value, key)) &&
                !(skipIndexes && (key == 'length' || isIndex(key, length)))
              ) {
                result.push(key)
              }
            }
            return result
          }

          /**
           * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function baseKeys(object) {
            if (!isPrototype(object)) {
              return nativeKeys(object)
            }
            var result = []
            for (var key in Object(object)) {
              if (hasOwnProperty.call(object, key) && key != 'constructor') {
                result.push(key)
              }
            }
            return result
          }

          /**
           * Checks if `value` is a valid array-like index.
           *
           * @private
           * @param {*} value The value to check.
           * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
           * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
           */
          function isIndex(value, length) {
            length = length == null ? MAX_SAFE_INTEGER : length
            return (
              !!length &&
              (typeof value == 'number' || reIsUint.test(value)) &&
              (value > -1 && value % 1 == 0 && value < length)
            )
          }

          /**
           * Checks if `value` is likely a prototype object.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
           */
          function isPrototype(value) {
            var Ctor = value && value.constructor,
              proto =
                (typeof Ctor == 'function' && Ctor.prototype) || objectProto

            return value === proto
          }

          /**
           * Checks if `value` is likely an `arguments` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an `arguments` object,
           *  else `false`.
           * @example
           *
           * _.isArguments(function() { return arguments; }());
           * // => true
           *
           * _.isArguments([1, 2, 3]);
           * // => false
           */
          function isArguments(value) {
            // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
            return (
              isArrayLikeObject(value) &&
              hasOwnProperty.call(value, 'callee') &&
              (!propertyIsEnumerable.call(value, 'callee') ||
                objectToString.call(value) == argsTag)
            )
          }

          /**
           * Checks if `value` is classified as an `Array` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array, else `false`.
           * @example
           *
           * _.isArray([1, 2, 3]);
           * // => true
           *
           * _.isArray(document.body.children);
           * // => false
           *
           * _.isArray('abc');
           * // => false
           *
           * _.isArray(_.noop);
           * // => false
           */
          var isArray = Array.isArray

          /**
           * Checks if `value` is array-like. A value is considered array-like if it's
           * not a function and has a `value.length` that's an integer greater than or
           * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
           * @example
           *
           * _.isArrayLike([1, 2, 3]);
           * // => true
           *
           * _.isArrayLike(document.body.children);
           * // => true
           *
           * _.isArrayLike('abc');
           * // => true
           *
           * _.isArrayLike(_.noop);
           * // => false
           */
          function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value)
          }

          /**
           * This method is like `_.isArrayLike` except that it also checks if `value`
           * is an object.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array-like object,
           *  else `false`.
           * @example
           *
           * _.isArrayLikeObject([1, 2, 3]);
           * // => true
           *
           * _.isArrayLikeObject(document.body.children);
           * // => true
           *
           * _.isArrayLikeObject('abc');
           * // => false
           *
           * _.isArrayLikeObject(_.noop);
           * // => false
           */
          function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value)
          }

          /**
           * Checks if `value` is classified as a `Function` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a function, else `false`.
           * @example
           *
           * _.isFunction(_);
           * // => true
           *
           * _.isFunction(/abc/);
           * // => false
           */
          function isFunction(value) {
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 8-9 which returns 'object' for typed array and other constructors.
            var tag = isObject(value) ? objectToString.call(value) : ''
            return tag == funcTag || tag == genTag
          }

          /**
           * Checks if `value` is a valid array-like length.
           *
           * **Note:** This method is loosely based on
           * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
           * @example
           *
           * _.isLength(3);
           * // => true
           *
           * _.isLength(Number.MIN_VALUE);
           * // => false
           *
           * _.isLength(Infinity);
           * // => false
           *
           * _.isLength('3');
           * // => false
           */
          function isLength(value) {
            return (
              typeof value == 'number' &&
              value > -1 &&
              value % 1 == 0 &&
              value <= MAX_SAFE_INTEGER
            )
          }

          /**
           * Checks if `value` is the
           * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
           * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an object, else `false`.
           * @example
           *
           * _.isObject({});
           * // => true
           *
           * _.isObject([1, 2, 3]);
           * // => true
           *
           * _.isObject(_.noop);
           * // => true
           *
           * _.isObject(null);
           * // => false
           */
          function isObject(value) {
            var type = typeof value
            return !!value && (type == 'object' || type == 'function')
          }

          /**
           * Checks if `value` is object-like. A value is object-like if it's not `null`
           * and has a `typeof` result of "object".
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
           * @example
           *
           * _.isObjectLike({});
           * // => true
           *
           * _.isObjectLike([1, 2, 3]);
           * // => true
           *
           * _.isObjectLike(_.noop);
           * // => false
           *
           * _.isObjectLike(null);
           * // => false
           */
          function isObjectLike(value) {
            return !!value && typeof value == 'object'
          }

          /**
           * Creates an array of the own enumerable property names of `object`.
           *
           * **Note:** Non-object values are coerced to objects. See the
           * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
           * for more details.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.keys(new Foo);
           * // => ['a', 'b'] (iteration order is not guaranteed)
           *
           * _.keys('hi');
           * // => ['0', '1']
           */
          function keys(object) {
            return isArrayLike(object)
              ? arrayLikeKeys(object)
              : baseKeys(object)
          }

          module.exports = keys

          /***/
        },

      /***/ '../../node_modules/apr-engine-run/dist/apr-engine-run.umd.js':
        /*!************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/apr-engine-run/dist/apr-engine-run.umd.js ***!
  \************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          ;(function(global, factory) {
            true
              ? (module.exports = factory(
                  __webpack_require__(
                    /*! apr-engine-iterator */ '../../node_modules/apr-engine-iterator/dist/apr-engine-iterator.umd.js'
                  )
                ))
              : undefined
          })(this, function(aprEngineIterator) {
            'use strict'

            aprEngineIterator =
              aprEngineIterator && aprEngineIterator.hasOwnProperty('default')
                ? aprEngineIterator['default']
                : aprEngineIterator

            var engineRun = function(input, fn, opts) {
              var ittr = aprEngineIterator(input)

              var done = false
              var brk = false
              var i = 0

              var after = function after(items, end) {
                return function(v) {
                  brk =
                    brk ||
                    items.some(function(item, y) {
                      return opts.after && opts.after(v[y], item, i++)
                    })

                  done = done || brk

                  return done ? end() : next(end)
                }
              }

              var next = function next(end) {
                var items = ittr.next(opts.limit).filter(function(item) {
                  done = done || item.done
                  return !item.done
                })

                var call =
                  opts.call ||
                  function(item) {
                    return fn(item.value, item.key, input)
                  }

                Promise.all(items.map(call)).then(after(items, end), end)
              }

              return new Promise(function(resolve, reject) {
                return next(function(err, res) {
                  return err ? reject(err) : resolve(res)
                })
              })
            }

            return engineRun
          })

          //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYW1pdG9zL2Rldi9hcHIvcGFja2FnZXMvZW5naW5lLXJ1bi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBJdGVyYXRvciA9IHJlcXVpcmUoJ2Fwci1lbmdpbmUtaXRlcmF0b3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoaW5wdXQsIGZuLCBvcHRzKSA9PiB7XG4gIGNvbnN0IGl0dHIgPSBJdGVyYXRvcihpbnB1dCk7XG5cbiAgbGV0IGRvbmUgPSBmYWxzZTtcbiAgbGV0IGJyayA9IGZhbHNlO1xuICBsZXQgaSA9IDA7XG5cbiAgY29uc3QgYWZ0ZXIgPSAoaXRlbXMsIGVuZCkgPT4gdiA9PiB7XG4gICAgYnJrID1cbiAgICAgIGJyayB8fCBpdGVtcy5zb21lKChpdGVtLCB5KSA9PiBvcHRzLmFmdGVyICYmIG9wdHMuYWZ0ZXIodlt5XSwgaXRlbSwgaSsrKSk7XG5cbiAgICBkb25lID0gZG9uZSB8fCBicms7XG5cbiAgICByZXR1cm4gZG9uZSA/IGVuZCgpIDogbmV4dChlbmQpO1xuICB9O1xuXG4gIGNvbnN0IG5leHQgPSBlbmQgPT4ge1xuICAgIGNvbnN0IGl0ZW1zID0gaXR0ci5uZXh0KG9wdHMubGltaXQpLmZpbHRlcihpdGVtID0+IHtcbiAgICAgIGRvbmUgPSBkb25lIHx8IGl0ZW0uZG9uZTtcbiAgICAgIHJldHVybiAhaXRlbS5kb25lO1xuICAgIH0pO1xuXG4gICAgY29uc3QgY2FsbCA9IG9wdHMuY2FsbCB8fCAoaXRlbSA9PiBmbihpdGVtLnZhbHVlLCBpdGVtLmtleSwgaW5wdXQpKTtcblxuICAgIFByb21pc2UuYWxsKGl0ZW1zLm1hcChjYWxsKSkudGhlbihhZnRlcihpdGVtcywgZW5kKSwgZW5kKTtcbiAgfTtcblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT5cbiAgICBuZXh0KChlcnIsIHJlcykgPT4gKGVyciA/IHJlamVjdChlcnIpIDogcmVzb2x2ZShyZXMpKSlcbiAgKTtcbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiaW5wdXQiLCJmbiIsIm9wdHMiLCJpdHRyIiwiSXRlcmF0b3IiLCJkb25lIiwiYnJrIiwiaSIsImFmdGVyIiwiaXRlbXMiLCJlbmQiLCJzb21lIiwiaXRlbSIsInkiLCJ2IiwibmV4dCIsImxpbWl0IiwiZmlsdGVyIiwiY2FsbCIsInZhbHVlIiwia2V5IiwiYWxsIiwibWFwIiwidGhlbiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZXJyIiwicmVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUVBQSxhQUFBLEdBQWlCLFVBQUNDLEtBQUQsRUFBUUMsRUFBUixFQUFZQyxJQUFaLEVBQXFCO01BQzlCQyxPQUFPQyxrQkFBU0osS0FBVCxDQUFiOztNQUVJSyxPQUFPLEtBQVg7TUFDSUMsTUFBTSxLQUFWO01BQ0lDLElBQUksQ0FBUjs7TUFFTUMsUUFBUSxTQUFSQSxLQUFRLENBQUNDLEtBQUQsRUFBUUMsR0FBUjtXQUFnQixhQUFLO1lBRS9CSixPQUFPRyxNQUFNRSxJQUFOLENBQVcsVUFBQ0MsSUFBRCxFQUFPQyxDQUFQO2VBQWFYLEtBQUtNLEtBQUwsSUFBY04sS0FBS00sS0FBTCxDQUFXTSxFQUFFRCxDQUFGLENBQVgsRUFBaUJELElBQWpCLEVBQXVCTCxHQUF2QixDQUEzQjtPQUFYLENBRFQ7O2FBR09GLFFBQVFDLEdBQWY7O2FBRU9ELE9BQU9LLEtBQVAsR0FBZUssS0FBS0wsR0FBTCxDQUF0QjtLQU5ZO0dBQWQ7O01BU01LLE9BQU8sU0FBUEEsSUFBTyxNQUFPO1FBQ1pOLFFBQVFOLEtBQUtZLElBQUwsQ0FBVWIsS0FBS2MsS0FBZixFQUFzQkMsTUFBdEIsQ0FBNkIsZ0JBQVE7YUFDMUNaLFFBQVFPLEtBQUtQLElBQXBCO2FBQ08sQ0FBQ08sS0FBS1AsSUFBYjtLQUZZLENBQWQ7O1FBS01hLE9BQU9oQixLQUFLZ0IsSUFBTCxJQUFjO2FBQVFqQixHQUFHVyxLQUFLTyxLQUFSLEVBQWVQLEtBQUtRLEdBQXBCLEVBQXlCcEIsS0FBekIsQ0FBUjtLQUEzQjs7WUFFUXFCLEdBQVIsQ0FBWVosTUFBTWEsR0FBTixDQUFVSixJQUFWLENBQVosRUFBNkJLLElBQTdCLENBQWtDZixNQUFNQyxLQUFOLEVBQWFDLEdBQWIsQ0FBbEMsRUFBcURBLEdBQXJEO0dBUkY7O1NBV08sSUFBSWMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVjtXQUNqQlgsS0FBSyxVQUFDWSxHQUFELEVBQU1DLEdBQU47YUFBZUQsTUFBTUQsT0FBT0MsR0FBUCxDQUFOLEdBQW9CRixRQUFRRyxHQUFSLENBQW5DO0tBQUwsQ0FEaUI7R0FBWixDQUFQO0NBM0JGOzs7Ozs7OzsifQ==

          /***/
        },

      /***/ '../../node_modules/apr-engine-sum/dist/apr-engine-sum.umd.js':
        /*!************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/apr-engine-sum/dist/apr-engine-sum.umd.js ***!
  \************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          ;(function(global, factory) {
            true
              ? (module.exports = factory(
                  __webpack_require__(
                    /*! lodash.isarraylike */ '../../node_modules/lodash.isarraylike/index.js'
                  )
                ))
              : undefined
          })(this, function(lodash) {
            'use strict'

            lodash =
              lodash && lodash.hasOwnProperty('default')
                ? lodash['default']
                : lodash

            var engineSum = function(input) {
              return lodash(input) || input[Symbol.iterator] ? [] : {}
            }

            return engineSum
          })

          //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYW1pdG9zL2Rldi9hcHIvcGFja2FnZXMvZW5naW5lLXN1bS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpc0FycmF5ID0gcmVxdWlyZSgnbG9kYXNoLmlzYXJyYXlsaWtlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gaW5wdXQgPT4gKGlzQXJyYXkoaW5wdXQpIHx8IGlucHV0W1N5bWJvbC5pdGVyYXRvcl0gPyBbXSA6IHt9KTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJpc0FycmF5IiwiaW5wdXQiLCJTeW1ib2wiLCJpdGVyYXRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFQUEsYUFBQSxHQUFpQjtTQUFVQyxPQUFRQyxLQUFSLEtBQWtCQSxNQUFNQyxPQUFPQyxRQUFiLENBQWxCLEdBQTJDLEVBQTNDLEdBQWdELEVBQTFEO0NBQWpCOzs7Ozs7OzsifQ==

          /***/
        },

      /***/ '../../node_modules/apr-engine-until/dist/apr-engine-until.umd.js':
        /*!****************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/apr-engine-until/dist/apr-engine-until.umd.js ***!
  \****************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          ;(function(global, factory) {
            true ? (module.exports = factory()) : undefined
          })(this, function() {
            'use strict'

            var until = function until(sum, next) {
              var curr = next()
              var items = sum.concat([curr])

              if (curr.done) {
                return items
              }

              return until(items, next)
            }

            var engineUntil = function(next) {
              return until([], next)
            }

            return engineUntil
          })

          //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYW1pdG9zL2Rldi9hcHIvcGFja2FnZXMvZW5naW5lLXVudGlsL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHVudGlsID0gKHN1bSwgbmV4dCkgPT4ge1xuICBjb25zdCBjdXJyID0gbmV4dCgpO1xuICBjb25zdCBpdGVtcyA9IHN1bS5jb25jYXQoW2N1cnJdKTtcblxuICBpZiAoY3Vyci5kb25lKSB7XG4gICAgcmV0dXJuIGl0ZW1zO1xuICB9XG5cbiAgcmV0dXJuIHVudGlsKGl0ZW1zLCBuZXh0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gbmV4dCA9PiB1bnRpbChbXSwgbmV4dCk7XG4iXSwibmFtZXMiOlsidW50aWwiLCJzdW0iLCJuZXh0IiwiY3VyciIsIml0ZW1zIiwiY29uY2F0IiwiZG9uZSIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsUUFBUSxTQUFSQSxLQUFRLENBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFlO01BQ3JCQyxPQUFPRCxNQUFiO01BQ01FLFFBQVFILElBQUlJLE1BQUosQ0FBVyxDQUFDRixJQUFELENBQVgsQ0FBZDs7TUFFSUEsS0FBS0csSUFBVCxFQUFlO1dBQ05GLEtBQVA7OztTQUdLSixNQUFNSSxLQUFOLEVBQWFGLElBQWIsQ0FBUDtDQVJGOztBQVdBSyxlQUFBLEdBQWlCO1NBQVFQLE1BQU0sRUFBTixFQUFVRSxJQUFWLENBQVI7Q0FBakI7Ozs7Ozs7OyJ9

          /***/
        },

      /***/ '../../node_modules/apr-map/dist/apr-map.umd.js':
        /*!**********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/apr-map/dist/apr-map.umd.js ***!
  \**********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          ;(function(global, factory) {
            true
              ? factory(
                  exports,
                  __webpack_require__(
                    /*! lodash.defaults */ '../../node_modules/lodash.defaults/index.js'
                  ),
                  __webpack_require__(
                    /*! apr-engine-each */ '../../node_modules/apr-engine-each/dist/apr-engine-each.umd.js'
                  ),
                  __webpack_require__(
                    /*! apr-engine-sum */ '../../node_modules/apr-engine-sum/dist/apr-engine-sum.umd.js'
                  )
                )
              : undefined
          })(this, function(exports, defaults, aprEngineEach, Sum) {
            'use strict'

            defaults =
              defaults && defaults.hasOwnProperty('default')
                ? defaults['default']
                : defaults
            aprEngineEach =
              aprEngineEach && aprEngineEach.hasOwnProperty('default')
                ? aprEngineEach['default']
                : aprEngineEach
            Sum = Sum && Sum.hasOwnProperty('default') ? Sum['default'] : Sum

            var run = function(ctx) {
              var sum = Sum(ctx.input)

              return aprEngineEach(
                defaults(
                  {
                    after: function after(value, item) {
                      sum[item.key] = value
                    }
                  },
                  ctx
                )
              ).then(function() {
                return sum
              })
            }

            /**
             * @kind function
             * @name limit
             * @memberof map
             * @param {Array|Object|Iterable} input
             * @param {Number} limit
             * @param {Function} iteratee
             * @returns {Promise}
             */
            var limit = function(input, limit, fn, opts) {
              return run({
                input: input,
                fn: fn,
                opts: defaults(
                  {
                    limit: limit
                  },
                  opts
                )
              })
            }

            /**
             * @kind function
             * @name series
             * @memberof map
             * @param {Array|Object|Iterable} input
             * @param {Function} iteratee
             * @returns {Promise}
             */
            var series = function(input, fn, opts) {
              return limit(input, 1, fn, opts)
            }

            /**
             * <a id="map"></a>
             * Produces a new collection of values by mapping each value in `coll` through the `iteratee` function.
             *
             * [![](https://img.shields.io/npm/v/apr-map.svg?style=flat-square)](https://www.npmjs.com/package/apr-map) [![](https://img.shields.io/npm/l/apr-map.svg?style=flat-square)](https://www.npmjs.com/package/apr-map)
             *
             * @kind function
             * @name map
             * @param {Array|Object|Iterable} input
             * @param {Function} iteratee
             * @returns {Promise}
             *
             * @example
             * import awaitify from 'apr-awaitify';
             * import map from 'apr-map';
             *
             * const stat = awaitify(fs.stat);
             * const files = [
             *   'file1',
             *   'file2',
             *   'file3'
             * ];
             *
             * const stats = await map(files, async (file) =>
             *   await stat(file);
             * );
             */
            var map = function(input, fn, opts) {
              return run({
                input: input,
                fn: fn,
                opts: opts
              })
            }

            var series$2 = series
            var limit$2 = limit

            map.series = series$2
            map.limit = limit$2

            exports['default'] = map
            exports.series = series$2
            exports.limit = limit$2

            Object.defineProperty(exports, '__esModule', { value: true })
          })

          //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYW1pdG9zL2Rldi9hcHIvcGFja2FnZXMvbWFwL3J1bi5qcyIsIi9Vc2Vycy9yYW1pdG9zL2Rldi9hcHIvcGFja2FnZXMvbWFwL2xpbWl0LmpzIiwiL1VzZXJzL3JhbWl0b3MvZGV2L2Fwci9wYWNrYWdlcy9tYXAvc2VyaWVzLmpzIiwiL1VzZXJzL3JhbWl0b3MvZGV2L2Fwci9wYWNrYWdlcy9tYXAvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVmYXVsdHMgPSByZXF1aXJlKCdsb2Rhc2guZGVmYXVsdHMnKTtcblxuY29uc3QgZWFjaCA9IHJlcXVpcmUoJ2Fwci1lbmdpbmUtZWFjaCcpO1xuY29uc3QgU3VtID0gcmVxdWlyZSgnYXByLWVuZ2luZS1zdW0nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjdHggPT4ge1xuICBjb25zdCBzdW0gPSBTdW0oY3R4LmlucHV0KTtcblxuICByZXR1cm4gZWFjaChcbiAgICBkZWZhdWx0cyhcbiAgICAgIHtcbiAgICAgICAgYWZ0ZXI6ICh2YWx1ZSwgaXRlbSkgPT4ge1xuICAgICAgICAgIHN1bVtpdGVtLmtleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGN0eFxuICAgIClcbiAgKS50aGVuKCgpID0+IHN1bSk7XG59O1xuIiwiY29uc3QgZGVmYXVsdHMgPSByZXF1aXJlKCdsb2Rhc2guZGVmYXVsdHMnKTtcbmNvbnN0IHJ1biA9IHJlcXVpcmUoJy4vcnVuJyk7XG5cbi8qKlxuICogQGtpbmQgZnVuY3Rpb25cbiAqIEBuYW1lIGxpbWl0XG4gKiBAbWVtYmVyb2YgbWFwXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdHxJdGVyYWJsZX0gaW5wdXRcbiAqIEBwYXJhbSB7TnVtYmVyfSBsaW1pdFxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWVcbiAqIEByZXR1cm5zIHtQcm9taXNlfVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IChpbnB1dCwgbGltaXQsIGZuLCBvcHRzKSA9PlxuICBydW4oe1xuICAgIGlucHV0LFxuICAgIGZuLFxuICAgIG9wdHM6IGRlZmF1bHRzKFxuICAgICAge1xuICAgICAgICBsaW1pdFxuICAgICAgfSxcbiAgICAgIG9wdHNcbiAgICApXG4gIH0pO1xuIiwiY29uc3QgbGltaXQgPSByZXF1aXJlKCcuL2xpbWl0Jyk7XG5cbi8qKlxuICogQGtpbmQgZnVuY3Rpb25cbiAqIEBuYW1lIHNlcmllc1xuICogQG1lbWJlcm9mIG1hcFxuICogQHBhcmFtIHtBcnJheXxPYmplY3R8SXRlcmFibGV9IGlucHV0XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZVxuICogQHJldHVybnMge1Byb21pc2V9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gKGlucHV0LCBmbiwgb3B0cykgPT4gbGltaXQoaW5wdXQsIDEsIGZuLCBvcHRzKTtcbiIsImNvbnN0IHJ1biA9IHJlcXVpcmUoJy4vcnVuJyk7XG5cbi8qKlxuICogPGEgaWQ9XCJtYXBcIj48L2E+XG4gKiBQcm9kdWNlcyBhIG5ldyBjb2xsZWN0aW9uIG9mIHZhbHVlcyBieSBtYXBwaW5nIGVhY2ggdmFsdWUgaW4gYGNvbGxgIHRocm91Z2ggdGhlIGBpdGVyYXRlZWAgZnVuY3Rpb24uXG4gKlxuICogWyFbXShodHRwczovL2ltZy5zaGllbGRzLmlvL25wbS92L2Fwci1tYXAuc3ZnP3N0eWxlPWZsYXQtc3F1YXJlKV0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvYXByLW1hcCkgWyFbXShodHRwczovL2ltZy5zaGllbGRzLmlvL25wbS9sL2Fwci1tYXAuc3ZnP3N0eWxlPWZsYXQtc3F1YXJlKV0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvYXByLW1hcClcbiAqXG4gKiBAa2luZCBmdW5jdGlvblxuICogQG5hbWUgbWFwXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdHxJdGVyYWJsZX0gaW5wdXRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IGF3YWl0aWZ5IGZyb20gJ2Fwci1hd2FpdGlmeSc7XG4gKiBpbXBvcnQgbWFwIGZyb20gJ2Fwci1tYXAnO1xuICpcbiAqIGNvbnN0IHN0YXQgPSBhd2FpdGlmeShmcy5zdGF0KTtcbiAqIGNvbnN0IGZpbGVzID0gW1xuICogICAnZmlsZTEnLFxuICogICAnZmlsZTInLFxuICogICAnZmlsZTMnXG4gKiBdO1xuICpcbiAqIGNvbnN0IHN0YXRzID0gYXdhaXQgbWFwKGZpbGVzLCBhc3luYyAoZmlsZSkgPT5cbiAqICAgYXdhaXQgc3RhdChmaWxlKTtcbiAqICk7XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gKGlucHV0LCBmbiwgb3B0cykgPT5cbiAgcnVuKHtcbiAgICBpbnB1dCxcbiAgICBmbixcbiAgICBvcHRzXG4gIH0pO1xuXG5tb2R1bGUuZXhwb3J0cy5zZXJpZXMgPSByZXF1aXJlKCcuL3NlcmllcycpO1xubW9kdWxlLmV4cG9ydHMubGltaXQgPSByZXF1aXJlKCcuL2xpbWl0Jyk7XG4iXSwibmFtZXMiOlsibW9kdWxlIiwic3VtIiwiU3VtIiwiY3R4IiwiaW5wdXQiLCJlYWNoIiwiZGVmYXVsdHMiLCJ2YWx1ZSIsIml0ZW0iLCJrZXkiLCJ0aGVuIiwibGltaXQiLCJmbiIsIm9wdHMiLCJydW4iLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBS0FBLE9BQUEsR0FBaUIsZUFBTztNQUNoQkMsTUFBTUMsSUFBSUMsSUFBSUMsS0FBUixDQUFaOztTQUVPQyxjQUNMQyxTQUNFO1dBQ1MsZUFBQ0MsS0FBRCxFQUFRQyxJQUFSLEVBQWlCO1VBQ2xCQSxLQUFLQyxHQUFULElBQWdCRixLQUFoQjs7R0FITixFQU1FSixHQU5GLENBREssRUFTTE8sSUFUSyxDQVNBO1dBQU1ULEdBQU47R0FUQSxDQUFQO0NBSEY7O0FDRkE7Ozs7Ozs7OztBQVNBRCxTQUFBLEdBQWlCLFVBQUNJLEtBQUQsRUFBUU8sS0FBUixFQUFlQyxFQUFmLEVBQW1CQyxJQUFuQjtTQUNmQyxJQUFJO2dCQUFBO1VBQUE7VUFHSVIsU0FDSjs7S0FESSxFQUlKTyxJQUpJO0dBSFIsQ0FEZTtDQUFqQjs7QUNWQTs7Ozs7Ozs7QUFRQWIsVUFBQSxHQUFpQixVQUFDSSxLQUFELEVBQVFRLEVBQVIsRUFBWUMsSUFBWjtTQUFxQkYsTUFBTVAsS0FBTixFQUFhLENBQWIsRUFBZ0JRLEVBQWhCLEVBQW9CQyxJQUFwQixDQUFyQjtDQUFqQjs7QUNSQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJBYixPQUFBLEdBQWlCLFVBQUNJLEtBQUQsRUFBUVEsRUFBUixFQUFZQyxJQUFaO1NBQ2ZDLElBQUk7Z0JBQUE7VUFBQTs7R0FBSixDQURlO0NBQWpCOztBQU9BZCxZQUFBLEdBQXdCZSxNQUF4QjtBQUNBZixXQUFBLEdBQXVCZSxLQUF2Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=

          /***/
        },

      /***/ '../../node_modules/async-limiter/index.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/async-limiter/index.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          function Queue(options) {
            if (!(this instanceof Queue)) {
              return new Queue(options)
            }

            options = options || {}
            this.concurrency = options.concurrency || Infinity
            this.pending = 0
            this.jobs = []
            this.cbs = []
            this._done = done.bind(this)
          }

          var arrayAddMethods = ['push', 'unshift', 'splice']

          arrayAddMethods.forEach(function(method) {
            Queue.prototype[method] = function() {
              var methodResult = Array.prototype[method].apply(
                this.jobs,
                arguments
              )
              this._run()
              return methodResult
            }
          })

          Object.defineProperty(Queue.prototype, 'length', {
            get: function() {
              return this.pending + this.jobs.length
            }
          })

          Queue.prototype._run = function() {
            if (this.pending === this.concurrency) {
              return
            }
            if (this.jobs.length) {
              var job = this.jobs.shift()
              this.pending++
              job(this._done)
              this._run()
            }

            if (this.pending === 0) {
              while (this.cbs.length !== 0) {
                var cb = this.cbs.pop()
                process.nextTick(cb)
              }
            }
          }

          Queue.prototype.onDone = function(cb) {
            if (typeof cb === 'function') {
              this.cbs.push(cb)
              this._run()
            }
          }

          function done() {
            this.pending--
            this._run()
          }

          module.exports = Queue

          /***/
        },

      /***/ '../../node_modules/asynckit/index.js':
        /*!************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/index.js ***!
  \************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          module.exports = {
            parallel: __webpack_require__(
              /*! ./parallel.js */ '../../node_modules/asynckit/parallel.js'
            ),
            serial: __webpack_require__(
              /*! ./serial.js */ '../../node_modules/asynckit/serial.js'
            ),
            serialOrdered: __webpack_require__(
              /*! ./serialOrdered.js */ '../../node_modules/asynckit/serialOrdered.js'
            )
          }

          /***/
        },

      /***/ '../../node_modules/asynckit/lib/abort.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/lib/abort.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          // API
          module.exports = abort

          /**
           * Aborts leftover active jobs
           *
           * @param {object} state - current state object
           */
          function abort(state) {
            Object.keys(state.jobs).forEach(clean.bind(state))

            // reset leftover jobs
            state.jobs = {}
          }

          /**
           * Cleans up leftover job by invoking abort function for the provided job id
           *
           * @this  state
           * @param {string|number} key - job id to abort
           */
          function clean(key) {
            if (typeof this.jobs[key] == 'function') {
              this.jobs[key]()
            }
          }

          /***/
        },

      /***/ '../../node_modules/asynckit/lib/async.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/lib/async.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var defer = __webpack_require__(
            /*! ./defer.js */ '../../node_modules/asynckit/lib/defer.js'
          )

          // API
          module.exports = async

          /**
           * Runs provided callback asynchronously
           * even if callback itself is not
           *
           * @param   {function} callback - callback to invoke
           * @returns {function} - augmented callback
           */
          function async(callback) {
            var isAsync = false

            // check if async happened
            defer(function() {
              isAsync = true
            })

            return function async_callback(err, result) {
              if (isAsync) {
                callback(err, result)
              } else {
                defer(function nextTick_callback() {
                  callback(err, result)
                })
              }
            }
          }

          /***/
        },

      /***/ '../../node_modules/asynckit/lib/defer.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/lib/defer.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = defer

          /**
           * Runs provided function on next iteration of the event loop
           *
           * @param {function} fn - function to run
           */
          function defer(fn) {
            var nextTick =
              typeof setImmediate == 'function'
                ? setImmediate
                : typeof process == 'object' &&
                  typeof process.nextTick == 'function'
                ? process.nextTick
                : null

            if (nextTick) {
              nextTick(fn)
            } else {
              setTimeout(fn, 0)
            }
          }

          /***/
        },

      /***/ '../../node_modules/asynckit/lib/iterate.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/lib/iterate.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var async = __webpack_require__(
              /*! ./async.js */ '../../node_modules/asynckit/lib/async.js'
            ),
            abort = __webpack_require__(
              /*! ./abort.js */ '../../node_modules/asynckit/lib/abort.js'
            )
          // API
          module.exports = iterate

          /**
           * Iterates over each job object
           *
           * @param {array|object} list - array or object (named list) to iterate over
           * @param {function} iterator - iterator to run
           * @param {object} state - current job status
           * @param {function} callback - invoked when all elements processed
           */
          function iterate(list, iterator, state, callback) {
            // store current index
            var key = state['keyedList']
              ? state['keyedList'][state.index]
              : state.index

            state.jobs[key] = runJob(iterator, key, list[key], function(
              error,
              output
            ) {
              // don't repeat yourself
              // skip secondary callbacks
              if (!(key in state.jobs)) {
                return
              }

              // clean up jobs
              delete state.jobs[key]

              if (error) {
                // don't process rest of the results
                // stop still active jobs
                // and reset the list
                abort(state)
              } else {
                state.results[key] = output
              }

              // return salvaged results
              callback(error, state.results)
            })
          }

          /**
           * Runs iterator over provided job element
           *
           * @param   {function} iterator - iterator to invoke
           * @param   {string|number} key - key/index of the element in the list of jobs
           * @param   {mixed} item - job description
           * @param   {function} callback - invoked after iterator is done with the job
           * @returns {function|mixed} - job abort function or something else
           */
          function runJob(iterator, key, item, callback) {
            var aborter

            // allow shortcut if iterator expects only two arguments
            if (iterator.length == 2) {
              aborter = iterator(item, async(callback))
            }
            // otherwise go with full three arguments
            else {
              aborter = iterator(item, key, async(callback))
            }

            return aborter
          }

          /***/
        },

      /***/ '../../node_modules/asynckit/lib/state.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/lib/state.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          // API
          module.exports = state

          /**
           * Creates initial state object
           * for iteration over list
           *
           * @param   {array|object} list - list to iterate over
           * @param   {function|null} sortMethod - function to use for keys sort,
           *                                     or `null` to keep them as is
           * @returns {object} - initial state object
           */
          function state(list, sortMethod) {
            var isNamedList = !Array.isArray(list),
              initState = {
                index: 0,
                keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
                jobs: {},
                results: isNamedList ? {} : [],
                size: isNamedList ? Object.keys(list).length : list.length
              }
            if (sortMethod) {
              // sort array keys based on it's values
              // sort object's keys just on own merit
              initState.keyedList.sort(
                isNamedList
                  ? sortMethod
                  : function(a, b) {
                      return sortMethod(list[a], list[b])
                    }
              )
            }

            return initState
          }

          /***/
        },

      /***/ '../../node_modules/asynckit/lib/terminator.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/lib/terminator.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var abort = __webpack_require__(
              /*! ./abort.js */ '../../node_modules/asynckit/lib/abort.js'
            ),
            async = __webpack_require__(
              /*! ./async.js */ '../../node_modules/asynckit/lib/async.js'
            )
          // API
          module.exports = terminator

          /**
           * Terminates jobs in the attached state context
           *
           * @this  AsyncKitState#
           * @param {function} callback - final callback to invoke after termination
           */
          function terminator(callback) {
            if (!Object.keys(this.jobs).length) {
              return
            }

            // fast forward iteration index
            this.index = this.size

            // abort jobs
            abort(this)

            // send back results we have so far
            async(callback)(null, this.results)
          }

          /***/
        },

      /***/ '../../node_modules/asynckit/parallel.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/parallel.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var iterate = __webpack_require__(
              /*! ./lib/iterate.js */ '../../node_modules/asynckit/lib/iterate.js'
            ),
            initState = __webpack_require__(
              /*! ./lib/state.js */ '../../node_modules/asynckit/lib/state.js'
            ),
            terminator = __webpack_require__(
              /*! ./lib/terminator.js */ '../../node_modules/asynckit/lib/terminator.js'
            )
          // Public API
          module.exports = parallel

          /**
           * Runs iterator over provided array elements in parallel
           *
           * @param   {array|object} list - array or object (named list) to iterate over
           * @param   {function} iterator - iterator to run
           * @param   {function} callback - invoked when all elements processed
           * @returns {function} - jobs terminator
           */
          function parallel(list, iterator, callback) {
            var state = initState(list)

            while (state.index < (state['keyedList'] || list).length) {
              iterate(list, iterator, state, function(error, result) {
                if (error) {
                  callback(error, result)
                  return
                }

                // looks like it's the last one
                if (Object.keys(state.jobs).length === 0) {
                  callback(null, state.results)
                  return
                }
              })

              state.index++
            }

            return terminator.bind(state, callback)
          }

          /***/
        },

      /***/ '../../node_modules/asynckit/serial.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/serial.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var serialOrdered = __webpack_require__(
            /*! ./serialOrdered.js */ '../../node_modules/asynckit/serialOrdered.js'
          )

          // Public API
          module.exports = serial

          /**
           * Runs iterator over provided array elements in series
           *
           * @param   {array|object} list - array or object (named list) to iterate over
           * @param   {function} iterator - iterator to run
           * @param   {function} callback - invoked when all elements processed
           * @returns {function} - jobs terminator
           */
          function serial(list, iterator, callback) {
            return serialOrdered(list, iterator, null, callback)
          }

          /***/
        },

      /***/ '../../node_modules/asynckit/serialOrdered.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/asynckit/serialOrdered.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var iterate = __webpack_require__(
              /*! ./lib/iterate.js */ '../../node_modules/asynckit/lib/iterate.js'
            ),
            initState = __webpack_require__(
              /*! ./lib/state.js */ '../../node_modules/asynckit/lib/state.js'
            ),
            terminator = __webpack_require__(
              /*! ./lib/terminator.js */ '../../node_modules/asynckit/lib/terminator.js'
            )
          // Public API
          module.exports = serialOrdered
          // sorting helpers
          module.exports.ascending = ascending
          module.exports.descending = descending

          /**
           * Runs iterator over provided sorted array elements in series
           *
           * @param   {array|object} list - array or object (named list) to iterate over
           * @param   {function} iterator - iterator to run
           * @param   {function} sortMethod - custom sort function
           * @param   {function} callback - invoked when all elements processed
           * @returns {function} - jobs terminator
           */
          function serialOrdered(list, iterator, sortMethod, callback) {
            var state = initState(list, sortMethod)

            iterate(list, iterator, state, function iteratorHandler(
              error,
              result
            ) {
              if (error) {
                callback(error, result)
                return
              }

              state.index++

              // are we there yet?
              if (state.index < (state['keyedList'] || list).length) {
                iterate(list, iterator, state, iteratorHandler)
                return
              }

              // done here
              callback(null, state.results)
            })

            return terminator.bind(state, callback)
          }

          /*
           * -- Sort methods
           */

          /**
           * sort helper to sort array elements in ascending order
           *
           * @param   {mixed} a - an item to compare
           * @param   {mixed} b - an item to compare
           * @returns {number} - comparison result
           */
          function ascending(a, b) {
            return a < b ? -1 : a > b ? 1 : 0
          }

          /**
           * sort helper to sort array elements in descending order
           *
           * @param   {mixed} a - an item to compare
           * @param   {mixed} b - an item to compare
           * @returns {number} - comparison result
           */
          function descending(a, b) {
            return -1 * ascending(a, b)
          }

          /***/
        },

      /***/ '../../node_modules/build-array/src/build-array.js':
        /*!*************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/build-array/src/build-array.js ***!
  \*************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var type = __webpack_require__(
            /*! type-component */ '../../node_modules/type-component/index.js'
          )

          module.exports = function(length, val) {
            var arr = Array.apply(null, Array(length))

            if (type(val) === 'undefined') {
              return arr
            }

            return arr.map(function() {
              return val
            })
          }

          /***/
        },

      /***/ '../../node_modules/combined-stream/lib/combined_stream.js':
        /*!*********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/combined-stream/lib/combined_stream.js ***!
  \*********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var util = __webpack_require__(/*! util */ 'util')
          var Stream = __webpack_require__(/*! stream */ 'stream').Stream
          var DelayedStream = __webpack_require__(
            /*! delayed-stream */ '../../node_modules/delayed-stream/lib/delayed_stream.js'
          )
          var defer = __webpack_require__(
            /*! ./defer.js */ '../../node_modules/combined-stream/lib/defer.js'
          )

          module.exports = CombinedStream
          function CombinedStream() {
            this.writable = false
            this.readable = true
            this.dataSize = 0
            this.maxDataSize = 2 * 1024 * 1024
            this.pauseStreams = true

            this._released = false
            this._streams = []
            this._currentStream = null
          }
          util.inherits(CombinedStream, Stream)

          CombinedStream.create = function(options) {
            var combinedStream = new this()

            options = options || {}
            for (var option in options) {
              combinedStream[option] = options[option]
            }

            return combinedStream
          }

          CombinedStream.isStreamLike = function(stream) {
            return (
              typeof stream !== 'function' &&
              typeof stream !== 'string' &&
              typeof stream !== 'boolean' &&
              typeof stream !== 'number' &&
              !Buffer.isBuffer(stream)
            )
          }

          CombinedStream.prototype.append = function(stream) {
            var isStreamLike = CombinedStream.isStreamLike(stream)

            if (isStreamLike) {
              if (!(stream instanceof DelayedStream)) {
                var newStream = DelayedStream.create(stream, {
                  maxDataSize: Infinity,
                  pauseStream: this.pauseStreams
                })
                stream.on('data', this._checkDataSize.bind(this))
                stream = newStream
              }

              this._handleErrors(stream)

              if (this.pauseStreams) {
                stream.pause()
              }
            }

            this._streams.push(stream)
            return this
          }

          CombinedStream.prototype.pipe = function(dest, options) {
            Stream.prototype.pipe.call(this, dest, options)
            this.resume()
            return dest
          }

          CombinedStream.prototype._getNext = function() {
            this._currentStream = null
            var stream = this._streams.shift()

            if (typeof stream == 'undefined') {
              this.end()
              return
            }

            if (typeof stream !== 'function') {
              this._pipeNext(stream)
              return
            }

            var getStream = stream
            getStream(
              function(stream) {
                var isStreamLike = CombinedStream.isStreamLike(stream)
                if (isStreamLike) {
                  stream.on('data', this._checkDataSize.bind(this))
                  this._handleErrors(stream)
                }

                defer(this._pipeNext.bind(this, stream))
              }.bind(this)
            )
          }

          CombinedStream.prototype._pipeNext = function(stream) {
            this._currentStream = stream

            var isStreamLike = CombinedStream.isStreamLike(stream)
            if (isStreamLike) {
              stream.on('end', this._getNext.bind(this))
              stream.pipe(
                this,
                { end: false }
              )
              return
            }

            var value = stream
            this.write(value)
            this._getNext()
          }

          CombinedStream.prototype._handleErrors = function(stream) {
            var self = this
            stream.on('error', function(err) {
              self._emitError(err)
            })
          }

          CombinedStream.prototype.write = function(data) {
            this.emit('data', data)
          }

          CombinedStream.prototype.pause = function() {
            if (!this.pauseStreams) {
              return
            }

            if (
              this.pauseStreams &&
              this._currentStream &&
              typeof this._currentStream.pause == 'function'
            )
              this._currentStream.pause()
            this.emit('pause')
          }

          CombinedStream.prototype.resume = function() {
            if (!this._released) {
              this._released = true
              this.writable = true
              this._getNext()
            }

            if (
              this.pauseStreams &&
              this._currentStream &&
              typeof this._currentStream.resume == 'function'
            )
              this._currentStream.resume()
            this.emit('resume')
          }

          CombinedStream.prototype.end = function() {
            this._reset()
            this.emit('end')
          }

          CombinedStream.prototype.destroy = function() {
            this._reset()
            this.emit('close')
          }

          CombinedStream.prototype._reset = function() {
            this.writable = false
            this._streams = []
            this._currentStream = null
          }

          CombinedStream.prototype._checkDataSize = function() {
            this._updateDataSize()
            if (this.dataSize <= this.maxDataSize) {
              return
            }

            var message =
              'DelayedStream#maxDataSize of ' +
              this.maxDataSize +
              ' bytes exceeded.'
            this._emitError(new Error(message))
          }

          CombinedStream.prototype._updateDataSize = function() {
            this.dataSize = 0

            var self = this
            this._streams.forEach(function(stream) {
              if (!stream.dataSize) {
                return
              }

              self.dataSize += stream.dataSize
            })

            if (this._currentStream && this._currentStream.dataSize) {
              this.dataSize += this._currentStream.dataSize
            }
          }

          CombinedStream.prototype._emitError = function(err) {
            this._reset()
            this.emit('error', err)
          }

          /***/
        },

      /***/ '../../node_modules/combined-stream/lib/defer.js':
        /*!***********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/combined-stream/lib/defer.js ***!
  \***********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = defer

          /**
           * Runs provided function on next iteration of the event loop
           *
           * @param {function} fn - function to run
           */
          function defer(fn) {
            var nextTick =
              typeof setImmediate == 'function'
                ? setImmediate
                : typeof process == 'object' &&
                  typeof process.nextTick == 'function'
                ? process.nextTick
                : null

            if (nextTick) {
              nextTick(fn)
            } else {
              setTimeout(fn, 0)
            }
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/contentful-management.js':
        /*!*********************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/contentful-management.js ***!
  \*********************************************************************************************************************/
        /*! exports provided: createClient */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createClient',
            function() {
              return createClient
            }
          )
          /* harmony import */ var _contentful_axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! @contentful/axios */ '../../node_modules/@contentful/axios/index.js'
          )
          /* harmony import */ var _contentful_axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            _contentful_axios__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _create_contentful_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ./create-contentful-api */ '../../node_modules/contentful-management/dist/es-modules/create-contentful-api.js'
          )
          var _extends =
            Object.assign ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i]
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key]
                  }
                }
              }
              return target
            }

          /**
           * Contentful Management API SDK. Allows you to create instances of a client
           * with access to the Contentful Content Management API.
           * @namespace contentfulManagement
           * @see ContentfulClientAPI
           */

          /**
           * Create a client instance
           * @func
           * @name createClient
           * @memberof contentfulManagement
           * @param {object} params - Client initialization parameters
           * @prop {string=} params.accessToken - Contentful CDA Access Token
           * @prop {boolean=?} params.insecure - Requests will be made over http instead of the default https (default: false)
           * @prop {boolean=?} params.retryOnError - If we should retry on errors and 429 rate limit exceptions (default: true)
           * @prop {string=?} params.host - API host (default: api.contentful.com)
           * @prop {string=?} params.hostUpload - direct file upload host (default : upload.contentful.com)
           * @prop {Object=?} params.httpAgent - Optional Node.js HTTP agent for proxying (see <a href="https://nodejs.org/api/http.html#http_class_http_agent">Node.js docs</a> and <a href="https://www.npmjs.com/package/https-proxy-agent">https-proxy-agent</a>)
           * @prop {Object=?} params.httpsAgent - Optional Node.js HTTP agent for proxying (see <a href="https://nodejs.org/api/http.html#http_class_http_agent">Node.js docs</a> and <a href="https://www.npmjs.com/package/https-proxy-agent">https-proxy-agent</a>)
           * @prop {Object=?} params.proxy - Optional Axios proxy (see <a href="https://github.com/mzabriskie/axios#request-config"> axios docs </a>)
           * @prop {object=?} params.headers - Optional additional headers
           * @prop {function=} params.logHandler - A log handler function to process given log messages & errors. Receives the log level (error, warning & info) and the actual log data (Error object or string). (The default can be found at: https://github.com/contentful/contentful-sdk-core/blob/master/lib/create-http-client.js)
           * @prop {string=?} params.application - Application name and version e.g myApp/version
           * @prop {string=?} params.integration - Integration name and version e.g react/version
           * @prop {number=} params.timeout - Optional number of milliseconds before the request times out. Default is 30000
           * @returns {ContentfulClientAPI.ClientAPI}
           * @example
           * const client = contentfulManagement.createClient({
           *  accessToken: 'myAccessToken'
           * })
           */
          function createClient(params) {
            var defaultParameters = {
              defaultHostname: 'api.contentful.com',
              defaultHostnameUpload: 'upload.contentful.com'
            }
            var userAgentHeader = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_2__[
                'getUserAgentHeader'
              ]
            )(
              'contentful-management.js/' + '5.2.1',
              params.application,
              params.integration,
              params.feature
            )

            var requiredHeaders = {
              'Content-Type': 'application/vnd.contentful.management.v1+json',
              'X-Contentful-User-Agent': userAgentHeader
            }

            params = _extends(
              {},
              defaultParameters,
              lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default()(params)
            )

            if (!params.accessToken) {
              throw new TypeError('Expected parameter accessToken')
            }

            params.headers = _extends({}, params.headers, requiredHeaders)

            var http = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_2__[
                'createHttpClient'
              ]
            )(_contentful_axios__WEBPACK_IMPORTED_MODULE_0___default.a, params)
            var api = Object(
              _create_contentful_api__WEBPACK_IMPORTED_MODULE_3__['default']
            )({
              http: http
            })

            return api
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/create-contentful-api.js':
        /*!*********************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/create-contentful-api.js ***!
  \*********************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return createClientApi
            }
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! ./error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )
          /* harmony import */ var _entities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ./entities */ '../../node_modules/contentful-management/dist/es-modules/entities/index.js'
          )
          /**
           * Contentful Management API Client. Contains methods which allow access to
           * any operations that can be performed with a management token.
           * @namespace ContentfulClientAPI
           */

          /**
           * Types for meta information found across the different entities in Contentful
           * @namespace Meta
           */

          /**
           * System metadata. See <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/introduction/common-resource-attributes">Common Resource Attributes</a> for more details.
           * @memberof Meta
           * @typedef Sys
           * @prop {string} type
           * @prop {string} id
           * @prop {Meta.Link} space
           * @prop {string} createdAt
           * @prop {string} updatedAt
           * @prop {number} revision
           */

          /**
           * Link to another entity. See <a href="https://www.contentful.com/developers/docs/concepts/links/">Links</a> for more details.
           * @memberof Meta
           * @typedef Link
           * @prop {string} type - type of this entity. Always link.
           * @prop {string} id
           * @prop {string} linkType - type of this link. If defined, either Entry or Asset
           */

          /**
           * @memberof ContentfulClientAPI
           * @typedef {Object} ClientAPI
           * @prop {function} getSpace
           * @prop {function} getSpaces
           * @prop {function} createSpace
           * @prop {function} createPersonalAccessToken
           * @prop {function} getCurrentUser
           * @prop {function} getPersonalAccessTokens
           * @prop {function} getPersonalAccessToken
           * @prop {function} getOrganizations
           * @prop {function} rawRequest
           * @prop {function} getUsagePeriods
           * @prop {function} getUsages
           */

          /**
           * Creates API object with methods to access functionality from Contentful's
           * Management API
           * @private
           * @param {Object} params - API initialization params
           * @prop {Object} http - HTTP client instance
           * @prop {Function} shouldLinksResolve - Link resolver preconfigured with global setting
           * @return {ClientAPI}
           */
          function createClientApi(_ref) {
            var http = _ref.http
            var _entities$space =
                _entities__WEBPACK_IMPORTED_MODULE_2__['default'].space,
              wrapSpace = _entities$space.wrapSpace,
              wrapSpaceCollection = _entities$space.wrapSpaceCollection
            var wrapUser =
              _entities__WEBPACK_IMPORTED_MODULE_2__['default'].user.wrapUser
            var _entities$personalAcc =
                _entities__WEBPACK_IMPORTED_MODULE_2__['default']
                  .personalAccessToken,
              wrapPersonalAccessToken =
                _entities$personalAcc.wrapPersonalAccessToken,
              wrapPersonalAccessTokenCollection =
                _entities$personalAcc.wrapPersonalAccessTokenCollection
            var wrapOrganizationCollection =
              _entities__WEBPACK_IMPORTED_MODULE_2__['default'].organization
                .wrapOrganizationCollection
            var wrapUsagePeriodCollection =
              _entities__WEBPACK_IMPORTED_MODULE_2__['default'].usagePeriod
                .wrapUsagePeriodCollection
            var wrapUsageCollection =
              _entities__WEBPACK_IMPORTED_MODULE_2__['default'].usage
                .wrapUsageCollection

            /**
             * Gets all spaces
             * @memberof ContentfulClientAPI
             * @return {Promise<Space.SpaceCollection>} Promise for a collection of Spaces
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpaces()
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */

            function getSpaces() {
              var query =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              return http
                .get(
                  '',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapSpaceCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Gets a space
             * @memberof ContentfulClientAPI
             * @param {string} id - Space ID
             * @return {Promise<Space.Space>} Promise for a Space
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => console.log(space))
             * .catch(console.error)
             */
            function getSpace(id) {
              return http.get(id).then(function(response) {
                return wrapSpace(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Creates a space
             * @memberof ContentfulClientAPI
             * @see {Space.Space}
             * @param {object} data - Object representation of the Space to be created
             * @param {string=} organizationId - Organization ID, if the associated token can manage more than one organization.
             * @return {Promise<Space.Space>} Promise for the newly created Space
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.createSpace({
             *   name: 'Name of new space'
             * })
             * .then((space) => console.log(space))
             * .catch(console.error)
             */
            function createSpace(data, organizationId) {
              return http
                .post('', data, {
                  headers: organizationId
                    ? { 'X-Contentful-Organization': organizationId }
                    : {}
                })
                .then(function(response) {
                  return wrapSpace(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Gets a collection of Organizations
             * @memberof ContentfulClientAPI
             * @return {Promise<OrganizationCollection>} Promise for a collection of Organizations
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getOrganizations()
             * .then(result => console.log(result.items))
             * .catch(console.error)
             */
            function getOrganizations() {
              var baseURL = http.defaults.baseURL.replace(
                '/spaces/',
                '/organizations/'
              )
              return http
                .get('', {
                  baseURL: baseURL
                })
                .then(function(response) {
                  return wrapOrganizationCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Gets a collection of usage periods for the organization.
             * @memberof ContentfulClientAPI
             * @param {string} organizationId - id of organization
             * @return {Promise<UsagePeriod.UsagePeriodCollection>} Promise for a collection of usage periods
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getUsagePeriods('<organizationId>')
             * .then(result => console.log(result.items))
             * .catch(console.error)
             */
            function getUsagePeriods(organizationId) {
              var baseURL = http.defaults.baseURL.replace(
                '/spaces/',
                '/organizations/' + organizationId + '/usage_periods'
              )
              var headers = {
                'x-contentful-enable-alpha-feature': 'usage-insights'
              }
              return http
                .get('', {
                  baseURL: baseURL,
                  headers: headers
                })
                .then(function(response) {
                  return wrapUsagePeriodCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Gets a collection of usages for the organization.
             * @memberof ContentfulClientAPI
             * @param {string} organizationId
             * @param {string} type - either 'organization' or 'space', type of usages to be returned
             * @param {Object<{filters:{metric: string, usagePeriod: string}, orderBy:{metricUsage: string}}>} query - Object with search params.
             * 'filters[metric]' is a required field, possible values are one of 'cda', 'cma', 'cpa', 'all_apis'.
             * 'filters[usagePeriod]' is also required, it's the ID of the usage period.
             * 'orderBy[metricUsage]' is optional, value can be asc or desc. It orders resources in response's 'items' array by total usage
             * @return {Promise<Usage.UsageCollection>} Promise for a collection of usage
             * @example
             *
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getUsages('<organizationId>', 'space', {
             *    'filters[metric]': 'cda', // required
             *    'filters[usagePeriod]': '1234', // required
             *    'orderBy[metricUsage]': 'asc'
             * })
             * .then(result => console.log(result.items))
             * .catch(console.error)
             */
            function getUsages(organizationId, type) {
              var query =
                arguments.length > 2 && arguments[2] !== undefined
                  ? arguments[2]
                  : {}

              if (
                !(query['filters[metric]'] && query['filters[usagePeriod]'])
              ) {
                return Promise.reject(
                  new Error(
                    'Missing either filters[metric] or filters[usagePeriod] in usages query.'
                  )
                )
              }
              var baseURL = http.defaults.baseURL.replace(
                '/spaces/',
                '/organizations/' + organizationId + '/usages/' + type
              )
              var headers = {
                'x-contentful-enable-alpha-feature': 'usage-insights'
              }
              return http
                .get('', {
                  baseURL: baseURL,
                  headers: headers,
                  params: Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__[
                      'createRequestConfig'
                    ]
                  )({ query: query }).params
                })
                .then(function(response) {
                  return wrapUsageCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Gets the authenticated user
             * @memberof ContentfulClientAPI
             * @return {Promise<User>} Promise for a User
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getCurrentUser()
             * .then(user => console.log(user.firstName))
             * .catch(console.error)
             */
            function getCurrentUser() {
              var baseURL = http.defaults.baseURL.replace(
                '/spaces/',
                '/users/me/'
              )
              return http
                .get('', {
                  baseURL: baseURL
                })
                .then(function(response) {
                  return wrapUser(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Creates a personal access token
             * @memberof ContentfulClientAPI
             * @param {Object} data - personal access token config
             * @return {Promise<User>} Promise for a Token
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.createPersonalAccessToken(
             *  {
             *    "name": "My Token",
             *    "scope": [
             *      "content_management_manage"
             *    ]
             *  }
             * )
             * .then(personalAccessToken => console.log(personalAccessToken.token))
             * .catch(console.error)
             */
            function createPersonalAccessToken(data) {
              var baseURL = http.defaults.baseURL.replace(
                '/spaces/',
                '/users/me/access_tokens'
              )
              return http
                .post('', data, {
                  baseURL: baseURL
                })
                .then(function(response) {
                  return wrapPersonalAccessToken(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Gets a personal access token
             * @memberof ContentfulClientAPI
             * @param {Object} data - personal access token config
             * @return {Promise<User>} Promise for a Token
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getPersonalAccessToken(tokenId)
             * .then(token => console.log(token.token))
             * .catch(console.error)
             */
            function getPersonalAccessToken(tokenId) {
              var baseURL = http.defaults.baseURL.replace(
                '/spaces/',
                '/users/me/access_tokens'
              )
              return http
                .post(tokenId, {
                  baseURL: baseURL
                })
                .then(function(response) {
                  return wrapPersonalAccessToken(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Gets all personal access tokens
             * @memberof ContentfulClientAPI
             * @return {Promise<User>} Promise for a Token
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getPersonalAccessTokens()
             * .then(response => console.log(reponse.items))
             * .catch(console.error)
             */
            function getPersonalAccessTokens() {
              var baseURL = http.defaults.baseURL.replace(
                '/spaces/',
                '/users/me/access_tokens'
              )
              return http
                .get('', {
                  baseURL: baseURL
                })
                .then(function(response) {
                  return wrapPersonalAccessTokenCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            /**
             * Make a custom request to the Contentful management API's /spaces endpoint
             * @memberof ContentfulClientAPI
             * @param {Object} opts - axios request options (https://github.com/mzabriskie/axios)
             * @return {Promise<Object>} Promise for the response data
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.rawRequest({
             *   method: 'GET',
             *   url: '/custom/path'
             * })
             * .then((responseData) => console.log(responseData))
             * .catch(console.error)
             */
            function rawRequest(opts) {
              return http(opts).then(function(response) {
                return response.data
              }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }

            return {
              getSpaces: getSpaces,
              getSpace: getSpace,
              createSpace: createSpace,
              getOrganizations: getOrganizations,
              getCurrentUser: getCurrentUser,
              createPersonalAccessToken: createPersonalAccessToken,
              getPersonalAccessToken: getPersonalAccessToken,
              getPersonalAccessTokens: getPersonalAccessTokens,
              rawRequest: rawRequest,
              getUsagePeriods: getUsagePeriods,
              getUsages: getUsages
            }
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/create-environment-api.js':
        /*!**********************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/create-environment-api.js ***!
  \**********************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return createEnvironmentApi
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ./error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )
          /* harmony import */ var _entities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ./entities */ '../../node_modules/contentful-management/dist/es-modules/entities/index.js'
          )
          var _extends =
            Object.assign ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i]
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key]
                  }
                }
              }
              return target
            }

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              })
            } else {
              obj[key] = value
            }
            return obj
          }

          /**
           * Contentful Environment API. Contains methods to access any operations at a space
           * level, such as creating and reading entities contained in a space.
           * @namespace ContentfulEnvironmentAPI
           */

          /**
           * @memberof ContentfulEnvironmentAPI
           * @typedef {Object} ContentfulEnvironmentAPI
           * @prop {function} delete
           * @prop {function} update
           * @prop {function} getContentType
           * @prop {function} getContentTypes
           * @prop {function} createContentType
           * @prop {function} createContentTypeWithId
           * @prop {function} getEntry
           * @prop {function} getEntries
           * @prop {function} createEntry
           * @prop {function} createEntryWithId
           * @prop {function} getAsset
           * @prop {function} getAssets
           * @prop {function} createAsset
           * @prop {function} createAssetWithId
           * @prop {function} getLocale
           * @prop {function} getLocales
           * @prop {function} createLocale
           * @prop {function} getUiExtension
           * @prop {function} getUiExtensions
           * @prop {function} createUiExtension
           * @prop {function} createUiExtensionWithId
           * @prop {function} getEntrySnapshots
           * @prop {function} getContentTypeSnapshots
           */

          /**
           * Creates API object with methods to access the Environment API
           * @private
           * @param {Object} params - API initialization params
           * @prop {Object} http - HTTP client instance
           * @prop {Object} entities - Object with wrapper methods for each kind of entity
           * @return {ContentfulEnvironmentAPI}
           */
          function createEnvironmentApi(_ref) {
            var http = _ref.http,
              httpUpload = _ref.httpUpload
            var wrapEnvironment =
              _entities__WEBPACK_IMPORTED_MODULE_3__['default'].environment
                .wrapEnvironment
            var _entities$contentType =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].contentType,
              wrapContentType = _entities$contentType.wrapContentType,
              wrapContentTypeCollection =
                _entities$contentType.wrapContentTypeCollection
            var _entities$entry =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].entry,
              wrapEntry = _entities$entry.wrapEntry,
              wrapEntryCollection = _entities$entry.wrapEntryCollection
            var _entities$asset =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].asset,
              wrapAsset = _entities$asset.wrapAsset,
              wrapAssetCollection = _entities$asset.wrapAssetCollection
            var _entities$locale =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].locale,
              wrapLocale = _entities$locale.wrapLocale,
              wrapLocaleCollection = _entities$locale.wrapLocaleCollection
            var wrapSnapshotCollection =
              _entities__WEBPACK_IMPORTED_MODULE_3__['default'].snapshot
                .wrapSnapshotCollection
            var wrapEditorInterface =
              _entities__WEBPACK_IMPORTED_MODULE_3__['default'].editorInterface
                .wrapEditorInterface
            var wrapUpload =
              _entities__WEBPACK_IMPORTED_MODULE_3__['default'].upload
                .wrapUpload
            var _entities$uiExtension =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].uiExtension,
              wrapUiExtension = _entities$uiExtension.wrapUiExtension,
              wrapUiExtensionCollection =
                _entities$uiExtension.wrapUiExtensionCollection
            /**
             * Environment instances.
             * @namespace Environment
             */

            /**
             * Deletes the environment
             * @memberof Environment
             * @func delete
             * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.delete())
             * .then(() => console.log('Environment deleted.'))
             * .catch(console.error)
             */

            function deleteEnvironment() {
              return http
                .delete('')
                .then(function(response) {},
                _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Updates the environment
             * @memberof Environment
             * @func update
             * @return {Promise<Environment.Environment>} Promise for the updated environment.
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => {
             *   environment.name = 'New name'
             *   return environment.update()
             * })
             * .then((environment) => console.log(`Environment ${environment.sys.id} renamed.`)
             * .catch(console.error)
             */
            function updateEnvironment() {
              var raw = this.toPlainObject()
              var data = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(
                raw
              )
              delete data.sys
              return http
                .put('', data, {
                  headers: {
                    'X-Contentful-Version': raw.sys.version
                  }
                })
                .then(function(response) {
                  return wrapEnvironment(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a Content Type
             * @memberof ContentfulEnvironmentAPI
             * @param  {string} id
             * @return {Promise<ContentType.ContentType>} Promise for a Content Type
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getContentType('<content_type_id>'))
             * .then((contentType) => console.log(contentType))
             * .catch(console.error)
             */
            function getContentType(id) {
              return http.get('content_types/' + id).then(function(response) {
                return wrapContentType(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an EditorInterface for a ContentType
             * @memberof ContentfulEnvironmentAPI
             * @param  {string} contentTypeId
             * @return {Promise<EditorInterface.EditorInterface>} Promise for an EditorInterface
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getEditorInterfaceForContentType('<content_type_id>'))
             * .then((EditorInterface) => console.log(EditorInterface))
             * .catch(console.error)
             */
            function getEditorInterfaceForContentType(contentTypeId) {
              return http
                .get('content_types/' + contentTypeId + '/editor_interface')
                .then(function(response) {
                  return wrapEditorInterface(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Content Types
             * @memberof ContentfulEnvironmentAPI
             * @param  {Object - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
             * @return {Promise<ContentType.ContentTypeCollection>} Promise for a collection of Content Types
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getContentTypes())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getContentTypes() {
              var query =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              return http
                .get(
                  'content_types',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapContentTypeCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Content Type
             * @memberof ContentfulEnvironmentAPI
             * @see {ContentType}
             * @param {object} data - Object representation of the Content Type to be created
             * @return {Promise<ContentType.ContentType>} Promise for the newly created Content Type
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createContentType({
             *   name: 'Blog Post',
             *   fields: [
             *     {
             *       id: 'title',
             *       name: 'Title',
             *       required: true,
             *       localized: false,
             *       type: 'Text'
             *     }
             *   ]
             * }))
             * .then((contentType) => console.log(contentType))
             * .catch(console.error)
             */
            function createContentType(data) {
              return http.post('content_types', data).then(function(response) {
                return wrapContentType(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Content Type with a custom id
             * @memberof ContentfulEnvironmentAPI
             * @see {ContentType.ContentType}
             * @param {string} id - Content Type ID
             * @param {object} data - Object representation of the Content Type to be created
             * @return {Promise<ContentType.ContentType>} Promise for the newly created Content Type
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createContentTypeWithId('<custom-id>', {
             *   name: 'Blog Post',
             *   fields: [
             *     {
             *       id: 'title',
             *       name: 'Title',
             *       required: true,
             *       localized: false,
             *       type: 'Text'
             *     }
             *   ]
             * }))
             * .then((contentType) => console.log(contentType))
             * .catch(console.error)
             */
            function createContentTypeWithId(id, data) {
              return http
                .put('content_types/' + id, data)
                .then(function(response) {
                  return wrapContentType(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an Entry
             * Warning: if you are using the select operator, when saving, any field that was not selected will be removed
             * from your entry in the backend
             * @memberof ContentfulEnvironmentAPI
             * @param  {string} id
             * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.
             * @return {Promise<Entry.Entry>} Promise for an Entry
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getEntry('<entry-id>'))
             * .then((entry) => console.log(entry))
             * .catch(console.error)
             */
            function getEntry(id) {
              var query =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {}

              normalizeSelect(query)
              return http
                .get(
                  'entries/' + id,
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapEntry(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Entries
             * Warning: if you are using the select operator, when saving, any field that was not selected will be removed
             * from your entry in the backend
             * @memberof ContentfulEnvironmentAPI
             * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
             * @return {Promise<Entry.EntryCollection>} Promise for a collection of Entries
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getEntries({'content_type': 'foo'})) // you can add more queries as 'key': 'value'
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getEntries() {
              var query =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              normalizeSelect(query)
              return http
                .get(
                  'entries',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapEntryCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Entry
             * @memberof ContentfulEnvironmentAPI
             * @see {Entry.Entry}
             * @param {string} contentTypeId - The Content Type which this Entry is based on
             * @param {object} data - Object representation of the Entry to be created
             * @return {Promise<Entry.Entry>} Promise for the newly created Entry
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createEntry('<content_type_id>', {
             *   fields: {
             *     title: {
             *       'en-US': 'Entry title'
             *     }
             *   }
             * }))
             * .then((entry) => console.log(entry))
             * .catch(console.error)
             */
            function createEntry(contentTypeId, data) {
              return http
                .post('entries', data, {
                  headers: {
                    'X-Contentful-Content-Type': contentTypeId
                  }
                })
                .then(function(response) {
                  return wrapEntry(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Entry with a custom id
             * @memberof ContentfulEnvironmentAPI
             * @see {Entry.Entry}
             * @param {string} contentTypeId - The Content Type which this Entry is based on
             * @param {string} id - Entry ID
             * @param {object} data - Object representation of the Entry to be created
             * @return {Promise<Entry.Entry>} Promise for the newly created Entry
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * // Create entry
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createEntryWithId('<content_type_id>', '<entry_id>', {
             *   fields: {
             *     title: {
             *       'en-US': 'Entry title'
             *     }
             *   }
             * }))
             * .then((entry) => console.log(entry))
             * .catch(console.error)
             */
            function createEntryWithId(contentTypeId, id, data) {
              return http
                .put('entries/' + id, data, {
                  headers: {
                    'X-Contentful-Content-Type': contentTypeId
                  }
                })
                .then(function(response) {
                  return wrapEntry(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an Asset
             * Warning: if you are using the select operator, when saving, any field that was not selected will be removed
             * from your entry in the backend
             * @memberof ContentfulEnvironmentAPI
             * @param  {string} id
             * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.
             * @return {Promise<Asset.Asset>} Promise for an Asset
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getAsset('<asset_id>'))
             * .then((asset) => console.log(asset))
             * .catch(console.error)
             */
            function getAsset(id) {
              var query =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {}

              normalizeSelect(query)
              return http
                .get(
                  'assets/' + id,
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapAsset(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Assets
             * Warning: if you are using the select operator, when saving, any field that was not selected will be removed
             * from your entry in the backend
             * @memberof ContentfulEnvironmentAPI
             * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
             * @return {Promise<Asset.AssetCollection>} Promise for a collection of Assets
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getAssets())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getAssets() {
              var query =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              normalizeSelect(query)
              return http
                .get(
                  'assets',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapAssetCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Asset. After creation, call asset.processForLocale or asset.processForAllLocales to start asset processing.
             * @memberof ContentfulEnvironmentAPI
             * @see {Asset.Asset}
             * @param {object} data - Object representation of the Asset to be created. Note that the field object should have an upload property on asset creation, which will be removed and replaced with an url property when processing is finished.
             * @return {Promise<Asset.Asset>} Promise for the newly created Asset
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * // Create asset
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createAsset({
             *   fields: {
             *     title: {
             *       'en-US': 'Playsam Streamliner'
             *    },
             *    file: {
             *       'en-US': {
             *         contentType: 'image/jpeg',
             *        fileName: 'example.jpeg',
             *        upload: 'https://example.com/example.jpg'
             *      }
             *    }
             *   }
             * }))
             * .then((asset) => asset.process())
             * .then((asset) => console.log(asset))
             * .catch(console.error)
             */
            function createAsset(data) {
              return http.post('assets', data).then(function(response) {
                return wrapAsset(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Asset with a custom id. After creation, call asset.processForLocale or asset.processForAllLocales to start asset processing.
             * @memberof ContentfulEnvironmentAPI
             * @see {Asset.Asset}
             * @param {string} id - Asset ID
             * @param {object} data - Object representation of the Asset to be created. Note that the field object should have an upload property on asset creation, which will be removed and replaced with an url property when processing is finished.
             * @return {Promise<Asset.Asset>} Promise for the newly created Asset
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * // Create asset
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createAssetWithId('<asset_id>', {
             *   title: {
             *     'en-US': 'Playsam Streamliner'
             *   },
             *   file: {
             *     'en-US': {
             *       contentType: 'image/jpeg',
             *       fileName: 'example.jpeg',
             *       upload: 'https://example.com/example.jpg'
             *     }
             *   }
             * }))
             * .then((asset) => asset.process())
             * .then((asset) => console.log(asset))
             * .catch(console.error)
             */
            function createAssetWithId(id, data) {
              return http.put('assets/' + id, data).then(function(response) {
                return wrapAsset(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Asset based on files. After creation, call asset.processForLocale or asset.processForAllLocales to start asset processing.
             * @memberof ContentfulEnvironmentAPI
             * @see {Asset.Asset}
             * @param {object} data - Object representation of the Asset to be created. Note that the field object should have an uploadFrom property on asset creation, which will be removed and replaced with an url property when processing is finished.
             * @param {object} data.fields.file.[LOCALE].file - Can be a string, an ArrayBuffer or a Stream.
             * @return {Promise<Asset.Asset>} Promise for the newly created Asset
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createAssetFromFiles({
             *   fields: {
             *     file: {
             *       'en-US': {
             *          contentType: 'image/jpeg',
             *          fileName: 'filename_english.jpg',
             *          file: createReadStream('path/to/filename_english.jpg')
             *       },
             *       'de-DE': {
             *          contentType: 'image/svg+xml',
             *          fileName: 'filename_german.svg',
             *          file: '<svg><path fill="red" d="M50 50h150v50H50z"/></svg>'
             *       }
             *     }
             *   }
             * }))
             * .then((asset) => console.log(asset))
             * .catch(console.error)
             */
            function createAssetFromFiles(data) {
              var file = data.fields.file

              return Promise.all(
                Object.keys(file).map(function(locale) {
                  var _file$locale = file[locale],
                    contentType = _file$locale.contentType,
                    fileName = _file$locale.fileName

                  return createUpload(file[locale]).then(function(upload) {
                    return _defineProperty({}, locale, {
                      contentType: contentType,
                      fileName: fileName,
                      uploadFrom: {
                        sys: {
                          type: 'Link',
                          linkType: 'Upload',
                          id: upload.sys.id
                        }
                      }
                    })
                  })
                })
              )
                .then(function(uploads) {
                  data.fields.file = uploads.reduce(function(
                    fieldsData,
                    upload
                  ) {
                    return _extends({}, fieldsData, upload)
                  },
                  {})
                  return createAsset(data)
                })
                .catch(_error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Upload.
             * @memberof ContentfulEnvironmentAPI
             * @param {object} data - Object with file information.
             * @param {object} data.file - Actual file content. Can be a string, an ArrayBuffer or a Stream.
             * @return {Promise<Upload>} Upload object containing information about the uploaded file.
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             * const uploadStream = createReadStream('path/to/filename_english.jpg')
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createUpload({file: uploadStream, 'image/png'})
             * .then((upload) => console.log(upload))
             * .catch(console.error)
             */
            function createUpload(data) {
              var file = data.file

              if (!file) {
                return Promise.reject(
                  new Error('Unable to locate a file to upload.')
                )
              }
              return httpUpload
                .post('uploads', file, {
                  headers: {
                    'Content-Type': 'application/octet-stream'
                  }
                })
                .then(function(uploadResponse) {
                  return wrapUpload(httpUpload, uploadResponse.data)
                })
                .catch(_error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an Upload
             * @memberof ContentfulEnvironmentAPI
             * @param  {string} id
             * @return {Promise<Upload>} Promise for an Upload
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             * const uploadStream = createReadStream('path/to/filename_english.jpg')
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getUpload('<upload-id>')
             * .then((upload) => console.log(upload))
             * .catch(console.error)
             */
            function getUpload(id) {
              return httpUpload
                .get('uploads/' + id)
                .then(function(response) {
                  return wrapUpload(http, response.data)
                })
                .catch(_error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a Locale
             * @memberof ContentfulEnvironmentAPI
             * @param  {string} id
             * @return {Promise<Locale.Locale>} Promise for an Locale
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getLocale('<locale_id>'))
             * .then((locale) => console.log(locale))
             * .catch(console.error)
             */
            function getLocale(id) {
              return http.get('locales/' + id).then(function(response) {
                return wrapLocale(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Locales
             * @memberof ContentfulEnvironmentAPI
             * @return {Promise<Locale.LocaleCollection>} Promise for a collection of Locales
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getLocales())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getLocales() {
              return http.get('locales').then(function(response) {
                return wrapLocaleCollection(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Locale
             * @memberof ContentfulEnvironmentAPI
             * @see {Locale.Locale}
             * @param {object} data - Object representation of the Locale to be created
             * @return {Promise<Locale.Locale>} Promise for the newly created Locale
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * // Create locale
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createLocale({
             *   name: 'German (Austria)',
             *   code: 'de-AT',
             *   fallbackCode: 'de-DE',
             *   optional: true
             * }))
             * .then((locale) => console.log(locale))
             * .catch(console.error)
             */
            function createLocale(data) {
              return http.post('locales', data).then(function(response) {
                return wrapLocale(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an UI Extension
             * @memberof ContentfulEnvironmentAPI
             * @param  {string} id
             * @return {Promise<UiExtension.UiExtension>} Promise for an UI Extension
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getUiExtension('<ui-extension-id>'))
             * .then((uiExtension) => console.log(uiExtension))
             * .catch(console.error)
             */
            function getUiExtension(id) {
              return http.get('extensions/' + id).then(function(response) {
                return wrapUiExtension(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of UI Extension
             * @memberof ContentfulEnvironmentAPI
             * @return {Promise<UiExtension.UiExtensionCollection>} Promise for a collection of UI Extensions
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getUiExtensions()
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getUiExtensions() {
              return http.get('extensions').then(function(response) {
                return wrapUiExtensionCollection(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a UI Extension
             * @memberof ContentfulEnvironmentAPI
             * @see {UiExtension.UiExtension}
             * @param {object} data - Object representation of the UI Extension to be created
             * @return {Promise<UiExtension.UiExtension>} Promise for the newly created UI Extension
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createUiExtension({
             *   extension: {
             *     name: 'My awesome extension',
             *     src: 'https://example.com/my',
             *     fieldTypes: [
             *       {
             *         type: 'Symbol'
             *       },
             *       {
             *         type: 'Text'
             *       }
             *     ],
             *     sidebar: false
             *   }
             * }))
             * .then((uiExtension) => console.log(uiExtension))
             * .catch(console.error)
             */
            function createUiExtension(data) {
              return http.post('extensions', data).then(function(response) {
                return wrapUiExtension(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a UI Extension with a custom ID
             * @memberof ContentfulEnvironmentAPI
             * @see {UiExtension.UiExtension}
             * @param  {string} id
             * @param {object} data - Object representation of the UI Extension to be created
             * @return {Promise<UiExtension.UiExtension>} Promise for the newly created UI Extension
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.createUiExtensionWithId('<extension_id>', {
             *   extension: {
             *     name: 'My awesome extension',
             *     src: 'https://example.com/my',
             *     fieldTypes: [
             *       {
             *         type: 'Symbol'
             *       },
             *       {
             *         type: 'Text'
             *       }
             *     ],
             *     sidebar: false
             *   }
             * }))
             * .then((uiExtension) => console.log(uiExtension))
             * .catch(console.error)
             */
            function createUiExtensionWithId(id, data) {
              return http
                .put('extensions/' + id, data)
                .then(function(response) {
                  return wrapUiExtension(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets all snapshots of an entry
             * @memberof ContentfulEnvironmentAPI
             * @func getEntrySnapshots
             * @param {string} - entryId id of the entry
             * @param {object} - query additional query paramaters
             * @return Promise<Object>
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getEntrySnapshots('<entry_id>'))
             * .then((snapshots) => console.log(snapshots.items))
             * .catch(console.error)
             */
            function getEntrySnapshots(entryId) {
              var query =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {}

              return http
                .get(
                  'entries/' + entryId + '/snapshots',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapSnapshotCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets all snapshots of a contentType
             * @memberof ContentfulEnvironmentAPI
             * @func getContentTypeSnapshots
             * @param {string} - contentTypeId id of the content type
             * @param {object} - query additional query paramaters
             * @return Promise<Object>
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environment-id>'))
             * .then((environment) => environment.getContentTypeSnapshots('<contentTypeId>'))
             * .then((snapshots) => console.log(snapshots.items))
             * .catch(console.error)
             */
            function getContentTypeSnapshots(contentTypeId) {
              var query =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {}

              return http
                .get(
                  'content_types/' + contentTypeId + '/snapshots',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapSnapshotCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /*
             * @private
             * sdk relies heavily on sys metadata
             * so we cannot omit the sys property on sdk level
             *
             */
            function normalizeSelect(query) {
              if (query.select && !/sys/i.test(query.select)) {
                query.select += ',sys'
              }
            }

            return {
              delete: deleteEnvironment,
              update: updateEnvironment,
              getContentType: getContentType,
              getContentTypes: getContentTypes,
              createContentType: createContentType,
              createContentTypeWithId: createContentTypeWithId,
              getEditorInterfaceForContentType: getEditorInterfaceForContentType,
              getEntry: getEntry,
              getEntries: getEntries,
              createEntry: createEntry,
              createEntryWithId: createEntryWithId,
              getAsset: getAsset,
              getAssets: getAssets,
              createAsset: createAsset,
              createAssetWithId: createAssetWithId,
              createAssetFromFiles: createAssetFromFiles,
              getUpload: getUpload,
              createUpload: createUpload,
              getLocale: getLocale,
              getLocales: getLocales,
              createLocale: createLocale,
              getUiExtension: getUiExtension,
              getUiExtensions: getUiExtensions,
              createUiExtension: createUiExtension,
              createUiExtensionWithId: createUiExtensionWithId,
              getEntrySnapshots: getEntrySnapshots,
              getContentTypeSnapshots: getContentTypeSnapshots
            }
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/create-space-api.js':
        /*!****************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/create-space-api.js ***!
  \****************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return createSpaceApi
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ./error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )
          /* harmony import */ var _entities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ./entities */ '../../node_modules/contentful-management/dist/es-modules/entities/index.js'
          )
          var _extends =
            Object.assign ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i]
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key]
                  }
                }
              }
              return target
            }

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              })
            } else {
              obj[key] = value
            }
            return obj
          }

          /**
           * Contentful Space API. Contains methods to access any operations at a space
           * level, such as creating and reading entities contained in a space.
           * @namespace ContentfulSpaceAPI
           */

          /**
           * @memberof ContentfulSpaceAPI
           * @typedef {Object} ContentfulSpaceAPI
           * @prop {function} delete
           * @prop {function} update
           * @prop {function} getEnvironment
           * @prop {function} getEnvironments
           * @prop {function} createEnvironment
           * @prop {function} createEnvironmentWithId
           * @prop {function} getContentType
           * @prop {function} getContentTypes
           * @prop {function} createContentType
           * @prop {function} createContentTypeWithId
           * @prop {function} getEntry
           * @prop {function} getEntries
           * @prop {function} createEntry
           * @prop {function} createEntryWithId
           * @prop {function} getAsset
           * @prop {function} getAssets
           * @prop {function} createAsset
           * @prop {function} createAssetWithId
           * @prop {function} getLocale
           * @prop {function} getLocales
           * @prop {function} createLocale
           * @prop {function} getWebhook
           * @prop {function} getWebhooks
           * @prop {function} createWebhook
           * @prop {function} createWebhookWithId
           * @prop {function} getRole
           * @prop {function} getRoles
           * @prop {function} createRole
           * @prop {function} createRoleWithId
           * @prop {function} getSpaceMembership
           * @prop {function} getSpaceMemberships
           * @prop {function} createSpaceMembership
           * @prop {function} createSpaceMembershipWithId
           * @prop {function} getApiKey
           * @prop {function} getApiKeys
           * @prop {function} createApiKey
           * @prop {function} createApiKeyWithId
           * @prop {function} getUiExtension
           * @prop {function} getUiExtensions
           * @prop {function} createUiExtension
           * @prop {function} createUiExtensionWithId
           * @prop {function} getEntrySnapshots
           * @prop {function} getContentTypeSnapshots
           */

          function raiseDeprecationWarning(method) {
            console.warn(
              [
                'Deprecated: Space.' +
                  method +
                  '() will be removed in future major versions.',
                null,
                'Please migrate your code to use Environment.' + method + '():',
                'https://contentful.github.io/contentful-management.js/contentful-management/latest/ContentfulEnvironmentAPI.html#.' +
                  method,
                null
              ].join('\n')
            )
          }

          /**
           * Creates API object with methods to access the Space API
           * @private
           * @param {Object} params - API initialization params
           * @prop {Object} http - HTTP client instance
           * @prop {Object} entities - Object with wrapper methods for each kind of entity
           * @return {ContentfulSpaceAPI}
           */
          function createSpaceApi(_ref) {
            var http = _ref.http,
              httpUpload = _ref.httpUpload
            var wrapSpace =
              _entities__WEBPACK_IMPORTED_MODULE_3__['default'].space.wrapSpace
            var _entities$environment =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].environment,
              wrapEnvironment = _entities$environment.wrapEnvironment,
              wrapEnvironmentCollection =
                _entities$environment.wrapEnvironmentCollection
            var _entities$contentType =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].contentType,
              wrapContentType = _entities$contentType.wrapContentType,
              wrapContentTypeCollection =
                _entities$contentType.wrapContentTypeCollection
            var _entities$entry =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].entry,
              wrapEntry = _entities$entry.wrapEntry,
              wrapEntryCollection = _entities$entry.wrapEntryCollection
            var _entities$asset =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].asset,
              wrapAsset = _entities$asset.wrapAsset,
              wrapAssetCollection = _entities$asset.wrapAssetCollection
            var _entities$locale =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].locale,
              wrapLocale = _entities$locale.wrapLocale,
              wrapLocaleCollection = _entities$locale.wrapLocaleCollection
            var _entities$webhook =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].webhook,
              wrapWebhook = _entities$webhook.wrapWebhook,
              wrapWebhookCollection = _entities$webhook.wrapWebhookCollection
            var _entities$role =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].role,
              wrapRole = _entities$role.wrapRole,
              wrapRoleCollection = _entities$role.wrapRoleCollection
            var _entities$spaceMember =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default']
                  .spaceMembership,
              wrapSpaceMembership = _entities$spaceMember.wrapSpaceMembership,
              wrapSpaceMembershipCollection =
                _entities$spaceMember.wrapSpaceMembershipCollection
            var _entities$apiKey =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].apiKey,
              wrapApiKey = _entities$apiKey.wrapApiKey,
              wrapApiKeyCollection = _entities$apiKey.wrapApiKeyCollection
            var _entities$previewApiK =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].previewApiKey,
              wrapPreviewApiKey = _entities$previewApiK.wrapPreviewApiKey,
              wrapPreviewApiKeyCollection =
                _entities$previewApiK.wrapPreviewApiKeyCollection
            var wrapSnapshotCollection =
              _entities__WEBPACK_IMPORTED_MODULE_3__['default'].snapshot
                .wrapSnapshotCollection
            var wrapEditorInterface =
              _entities__WEBPACK_IMPORTED_MODULE_3__['default'].editorInterface
                .wrapEditorInterface
            var wrapUpload =
              _entities__WEBPACK_IMPORTED_MODULE_3__['default'].upload
                .wrapUpload
            var _entities$uiExtension =
                _entities__WEBPACK_IMPORTED_MODULE_3__['default'].uiExtension,
              wrapUiExtension = _entities$uiExtension.wrapUiExtension,
              wrapUiExtensionCollection =
                _entities$uiExtension.wrapUiExtensionCollection

            /**
             * Space instances.
             * @namespace Space
             */

            /**
             * Deletes the space
             * @memberof Space
             * @func delete
             * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.delete())
             * .then(() => console.log('Space deleted.'))
             * .catch(console.error)
             */

            function deleteSpace() {
              return http
                .delete('')
                .then(function(response) {},
                _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Updates the space
             * @memberof Space
             * @func update
             * @return {Promise<Space.Space>} Promise for the updated space.
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => {
             *   space.name = 'New name'
             *   return space.update()
             * })
             * .then((space) => console.log(`Space ${space.sys.id} renamed.`)
             * .catch(console.error)
             */
            function updateSpace() {
              var raw = this.toPlainObject()
              var data = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(
                raw
              )
              delete data.sys
              return http
                .put('', data, {
                  headers: {
                    'X-Contentful-Version': raw.sys.version
                  }
                })
                .then(function(response) {
                  return wrapSpace(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an environment
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<Environment.Environment>} Promise for an Environment
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironment('<environement_id>'))
             * .then((environment) => console.log(environment))
             * .catch(console.error)
             */
            function getEnvironment(id) {
              return http.get('environments/' + id).then(function(response) {
                return wrapEnvironment(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Environments
             * @memberof ContentfulSpaceAPI
             * @return {Promise<Environment.EnvironmentCollection>} Promise for a collection of Environment
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEnvironments())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getEnvironments() {
              return http.get('environments').then(function(response) {
                return wrapEnvironmentCollection(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates an Environement
             * @memberof ContentfulSpaceAPI
             * @see {Environment}
             * @param {object} [data] - Object representation of the Environment to be created
             * @return {Promise<Environment.Environment>} Promise for the newly created Environment
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createEnvironment({ name: 'Staging' }))
             * .then((environment) => console.log(environment))
             * .catch(console.error)
             */
            function createEnvironment() {
              var data =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              return http.post('environments', data).then(function(response) {
                return wrapEnvironment(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates an Environement with a custom id
             * @memberof ContentfulSpaceAPI
             * @see {Environment}
             * @param id string - custom id
             * @param {object} [data] - Object representation of the Environment to be created
             * @return {Promise<Environment.Environment>} Promise for the newly created Environment
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createEnvironment('<custom-id>', { name: 'Staging' }))
             * .then((environment) => console.log(environment))
             * .catch(console.error)
             */
            function createEnvironmentWithId(id) {
              var data =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {}

              return http
                .put('environments/' + id, data)
                .then(function(response) {
                  return wrapEnvironment(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a Content Type
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<ContentType.ContentType>} Promise for a Content Type
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getContentType('<content_type_id>'))
             * .then((contentType) => console.log(contentType))
             * .catch(console.error)
             */
            function getContentType(id) {
              raiseDeprecationWarning('getContentType')
              return http.get('content_types/' + id).then(function(response) {
                return wrapContentType(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an EditorInterface for a ContentType
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {string} contentTypeId
             * @return {Promise<EditorInterface.EditorInterface>} Promise for an EditorInterface
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEditorInterfaceForContentType('<content_type_id>'))
             * .then((EditorInterface) => console.log(EditorInterface))
             * .catch(console.error)
             */
            function getEditorInterfaceForContentType(contentTypeId) {
              raiseDeprecationWarning('getEditorInterfaceForContentType')
              return http
                .get('content_types/' + contentTypeId + '/editor_interface')
                .then(function(response) {
                  return wrapEditorInterface(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Content Types
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {Object - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
             * @return {Promise<ContentType.ContentTypeCollection>} Promise for a collection of Content Types
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getContentTypes())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getContentTypes() {
              var query =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              raiseDeprecationWarning('getContentTypes')
              return http
                .get(
                  'content_types',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapContentTypeCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Content Type
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {ContentType}
             * @param {object} data - Object representation of the Content Type to be created
             * @return {Promise<ContentType.ContentType>} Promise for the newly created Content Type
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createContentType({
             *   name: 'Blog Post',
             *   fields: [
             *     {
             *       id: 'title',
             *       name: 'Title',
             *       required: true,
             *       localized: false,
             *       type: 'Text'
             *     }
             *   ]
             * }))
             * .then((contentType) => console.log(contentType))
             * .catch(console.error)
             */
            function createContentType(data) {
              raiseDeprecationWarning('createContentType')
              return http.post('content_types', data).then(function(response) {
                return wrapContentType(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Content Type with a custom id
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {ContentType.ContentType}
             * @param {string} id - Content Type ID
             * @param {object} data - Object representation of the Content Type to be created
             * @return {Promise<ContentType.ContentType>} Promise for the newly created Content Type
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createContentTypeWithId('<custom-id>', {
             *   name: 'Blog Post',
             *   fields: [
             *     {
             *       id: 'title',
             *       name: 'Title',
             *       required: true,
             *       localized: false,
             *       type: 'Text'
             *     }
             *   ]
             * }))
             * .then((contentType) => console.log(contentType))
             * .catch(console.error)
             */
            function createContentTypeWithId(id, data) {
              raiseDeprecationWarning('createContentTypeWithId')
              return http
                .put('content_types/' + id, data)
                .then(function(response) {
                  return wrapContentType(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an Entry
             * Warning: if you are using the select operator, when saving, any field that was not selected will be removed
             * from your entry in the backend
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.
             * @return {Promise<Entry.Entry>} Promise for an Entry
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEntry('<entry-id>'))
             * .then((entry) => console.log(entry))
             * .catch(console.error)
             */
            function getEntry(id) {
              var query =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {}

              raiseDeprecationWarning('getEntry')
              normalizeSelect(query)
              return http
                .get(
                  'entries/' + id,
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapEntry(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Entries
             * Warning: if you are using the select operator, when saving, any field that was not selected will be removed
             * from your entry in the backend
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
             * @return {Promise<Entry.EntryCollection>} Promise for a collection of Entries
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEntries({'content_type': 'foo'})) // you can add more queries as 'key': 'value'
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getEntries() {
              var query =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              raiseDeprecationWarning('getEntries')
              normalizeSelect(query)
              return http
                .get(
                  'entries',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapEntryCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Entry
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {Entry.Entry}
             * @param {string} contentTypeId - The Content Type which this Entry is based on
             * @param {object} data - Object representation of the Entry to be created
             * @return {Promise<Entry.Entry>} Promise for the newly created Entry
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createEntry('<content_type_id>', {
             *   fields: {
             *     title: {
             *       'en-US': 'Entry title'
             *     }
             *   }
             * }))
             * .then((entry) => console.log(entry))
             * .catch(console.error)
             */
            function createEntry(contentTypeId, data) {
              raiseDeprecationWarning('createEntry')
              return http
                .post('entries', data, {
                  headers: {
                    'X-Contentful-Content-Type': contentTypeId
                  }
                })
                .then(function(response) {
                  return wrapEntry(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Entry with a custom id
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {Entry.Entry}
             * @param {string} contentTypeId - The Content Type which this Entry is based on
             * @param {string} id - Entry ID
             * @param {object} data - Object representation of the Entry to be created
             * @return {Promise<Entry.Entry>} Promise for the newly created Entry
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * // Create entry
             * client.getSpace('<space_id>')
             * .then((space) => space.createEntryWithId('<content_type_id>', '<entry_id>', {
             *   fields: {
             *     title: {
             *       'en-US': 'Entry title'
             *     }
             *   }
             * }))
             * .then((entry) => console.log(entry))
             * .catch(console.error)
             */
            function createEntryWithId(contentTypeId, id, data) {
              raiseDeprecationWarning('createEntryWithId')
              return http
                .put('entries/' + id, data, {
                  headers: {
                    'X-Contentful-Content-Type': contentTypeId
                  }
                })
                .then(function(response) {
                  return wrapEntry(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an Asset
             * Warning: if you are using the select operator, when saving, any field that was not selected will be removed
             * from your entry in the backend
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.
             * @return {Promise<Asset.Asset>} Promise for an Asset
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getAsset('<asset_id>'))
             * .then((asset) => console.log(asset))
             * .catch(console.error)
             */
            function getAsset(id) {
              var query =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {}

              raiseDeprecationWarning('getAsset')
              normalizeSelect(query)
              return http
                .get(
                  'assets/' + id,
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapAsset(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Assets
             * Warning: if you are using the select operator, when saving, any field that was not selected will be removed
             * from your entry in the backend
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
             * @return {Promise<Asset.AssetCollection>} Promise for a collection of Assets
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getAssets())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getAssets() {
              var query =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              raiseDeprecationWarning('getAssets')
              normalizeSelect(query)
              return http
                .get(
                  'assets',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapAssetCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Asset. After creation, call asset.processForLocale or asset.processForAllLocales to start asset processing.
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {Asset.Asset}
             * @param {object} data - Object representation of the Asset to be created. Note that the field object should have an upload property on asset creation, which will be removed and replaced with an url property when processing is finished.
             * @return {Promise<Asset.Asset>} Promise for the newly created Asset
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * // Create asset
             * client.getSpace('<space_id>')
             * .then((space) => space.createAsset({
             *   fields: {
             *     title: {
             *       'en-US': 'Playsam Streamliner'
             *    },
             *    file: {
             *       'en-US': {
             *         contentType: 'image/jpeg',
             *        fileName: 'example.jpeg',
             *        upload: 'https://example.com/example.jpg'
             *      }
             *    }
             *   }
             * }))
             * .then((asset) => asset.process())
             * .then((asset) => console.log(asset))
             * .catch(console.error)
             */
            function createAsset(data) {
              return http.post('assets', data).then(function(response) {
                return wrapAsset(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Asset with a custom id. After creation, call asset.processForLocale or asset.processForAllLocales to start asset processing.
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {Asset.Asset}
             * @param {string} id - Asset ID
             * @param {object} data - Object representation of the Asset to be created. Note that the field object should have an upload property on asset creation, which will be removed and replaced with an url property when processing is finished.
             * @return {Promise<Asset.Asset>} Promise for the newly created Asset
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * // Create asset
             * client.getSpace('<space_id>')
             * .then((space) => space.createAssetWithId('<asset_id>', {
             *   title: {
             *     'en-US': 'Playsam Streamliner'
             *   },
             *   file: {
             *     'en-US': {
             *       contentType: 'image/jpeg',
             *       fileName: 'example.jpeg',
             *       upload: 'https://example.com/example.jpg'
             *     }
             *   }
             * }))
             * .then((asset) => asset.process())
             * .then((asset) => console.log(asset))
             * .catch(console.error)
             */
            function createAssetWithId(id, data) {
              raiseDeprecationWarning('createAssetWithId')
              return http.put('assets/' + id, data).then(function(response) {
                return wrapAsset(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Asset based on files. After creation, call asset.processForLocale or asset.processForAllLocales to start asset processing.
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {Asset.Asset}
             * @param {object} data - Object representation of the Asset to be created. Note that the field object should have an uploadFrom property on asset creation, which will be removed and replaced with an url property when processing is finished.
             * @param {object} data.fields.file.[LOCALE].file - Can be a string, an ArrayBuffer or a Stream.
             * @return {Promise<Asset.Asset>} Promise for the newly created Asset
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             * client.getSpace('<space_id>')
             * .then((space) => space.createAssetFromFiles({
             *   fields: {
             *     file: {
             *       'en-US': {
             *          contentType: 'image/jpeg',
             *          fileName: 'filename_english.jpg',
             *          file: createReadStream('path/to/filename_english.jpg')
             *       },
             *       'de-DE': {
             *          contentType: 'image/svg+xml',
             *          fileName: 'filename_german.svg',
             *          file: '<svg><path fill="red" d="M50 50h150v50H50z"/></svg>'
             *       }
             *     }
             *   }
             * }))
             * .then((asset) => console.log(asset))
             * .catch(console.error)
             */
            function createAssetFromFiles(data) {
              raiseDeprecationWarning('createAssetFromFiles')
              var file = data.fields.file

              return Promise.all(
                Object.keys(file).map(function(locale) {
                  var _file$locale = file[locale],
                    contentType = _file$locale.contentType,
                    fileName = _file$locale.fileName

                  return createUpload(file[locale]).then(function(upload) {
                    return _defineProperty({}, locale, {
                      contentType: contentType,
                      fileName: fileName,
                      uploadFrom: {
                        sys: {
                          type: 'Link',
                          linkType: 'Upload',
                          id: upload.sys.id
                        }
                      }
                    })
                  })
                })
              )
                .then(function(uploads) {
                  data.fields.file = uploads.reduce(function(
                    fieldsData,
                    upload
                  ) {
                    return _extends({}, fieldsData, upload)
                  },
                  {})
                  return createAsset(data)
                })
                .catch(_error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Upload.
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param {object} data - Object with file information.
             * @param {object} data.file - Actual file content. Can be a string, an ArrayBuffer or a Stream.
             * @return {Promise<Upload>} Upload object containing information about the uploaded file.
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             * const uploadStream = createReadStream('path/to/filename_english.jpg')
             * client.getSpace('<space_id>')
             * .then((space) => space.createUpload({file: uploadStream, 'image/png'})
             * .then((upload) => console.log(upload))
             * .catch(console.error)
             */
            function createUpload(data) {
              raiseDeprecationWarning('createUpload')
              var file = data.file

              if (!file) {
                return Promise.reject(
                  new Error('Unable to locate a file to upload.')
                )
              }
              return httpUpload
                .post('uploads', file, {
                  headers: {
                    'Content-Type': 'application/octet-stream'
                  }
                })
                .then(function(uploadResponse) {
                  return wrapUpload(httpUpload, uploadResponse.data)
                })
                .catch(_error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an Upload
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<Upload>} Promise for an Upload
             * @example
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             * const uploadStream = createReadStream('path/to/filename_english.jpg')
             * client.getSpace('<space_id>')
             * .then((space) => space.getUpload('<upload-id>')
             * .then((upload) => console.log(upload))
             * .catch(console.error)
             */
            function getUpload(id) {
              raiseDeprecationWarning('getUpload')
              return httpUpload
                .get('uploads/' + id)
                .then(function(response) {
                  return wrapUpload(http, response.data)
                })
                .catch(_error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a Locale
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<Locale.Locale>} Promise for an Locale
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getLocale('<locale_id>'))
             * .then((locale) => console.log(locale))
             * .catch(console.error)
             */
            function getLocale(id) {
              raiseDeprecationWarning('getLocale')
              return http.get('locales/' + id).then(function(response) {
                return wrapLocale(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Locales
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @return {Promise<Locale.LocaleCollection>} Promise for a collection of Locales
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getLocales())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getLocales() {
              raiseDeprecationWarning('getLocales')
              return http.get('locales').then(function(response) {
                return wrapLocaleCollection(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Locale
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {Locale.Locale}
             * @param {object} data - Object representation of the Locale to be created
             * @return {Promise<Locale.Locale>} Promise for the newly created Locale
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * // Create locale
             * client.getSpace('<space_id>')
             * .then((space) => space.createLocale({
             *   name: 'German (Austria)',
             *   code: 'de-AT',
             *   fallbackCode: 'de-DE',
             *   optional: true
             * }))
             * .then((locale) => console.log(locale))
             * .catch(console.error)
             */
            function createLocale(data) {
              raiseDeprecationWarning('createLocale')
              return http.post('locales', data).then(function(response) {
                return wrapLocale(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a Webhook
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<Webhook.Webhook>} Promise for a Webhook
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getWebhook('<webhook_id>'))
             * .then((webhook) => console.log(webhook))
             * .catch(console.error)
             */
            function getWebhook(id) {
              return http
                .get('webhook_definitions/' + id)
                .then(function(response) {
                  return wrapWebhook(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Webhooks
             * @memberof ContentfulSpaceAPI
             * @return {Promise<Webhook.WebhookCollection>} Promise for a collection of Webhooks
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getWebhooks())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getWebhooks() {
              return http.get('webhook_definitions').then(function(response) {
                return wrapWebhookCollection(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Webhook
             * @memberof ContentfulSpaceAPI
             * @see {Webhook.Webhook}
             * @param {object} data - Object representation of the Webhook to be created
             * @return {Promise<Webhook.Webhook>} Promise for the newly created Webhook
             * @example
             * const contentful = require('contentful-management')
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createWebhook({
             *   'name': 'My webhook',
             *   'url': 'https://www.example.com/test',
             *   'topics': [
             *     'Entry.create',
             *     'ContentType.create',
             *     '*.publish',
             *     'Asset.*'
             *   ]
             * }))
             * .then((webhook) => console.log(webhook))
             * .catch(console.error)
             */
            function createWebhook(data) {
              return http
                .post('webhook_definitions', data)
                .then(function(response) {
                  return wrapWebhook(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Webhook with a custom id
             * @memberof ContentfulSpaceAPI
             * @see {Webhook.Webhook}
             * @param {string} id - Webhook ID
             * @param {object} data - Object representation of the Webhook to be created
             * @return {Promise<Webhook.Webhook>} Promise for the newly created Webhook
             * @example
             * const contentful = require('contentful-management')
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createWebhookWithId('<webhook_id>', {
             *   'name': 'My webhook',
             *   'url': 'https://www.example.com/test',
             *   'topics': [
             *     'Entry.create',
             *     'ContentType.create',
             *     '*.publish',
             *     'Asset.*'
             *   ]
             * }))
             * .then((webhook) => console.log(webhook))
             * .catch(console.error)
             */
            function createWebhookWithId(id, data) {
              return http
                .put('webhook_definitions/' + id, data)
                .then(function(response) {
                  return wrapWebhook(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a Space Membership
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<SpaceMembership.SpaceMembership>} Promise for a Space Membership
             * @example
             * const contentful = require('contentful-management')
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getSpaceMembership('id'))
             * .then((spaceMembership) => console.log(spaceMembership))
             * .catch(console.error)
             */
            function getSpaceMembership(id) {
              return http
                .get('space_memberships/' + id)
                .then(function(response) {
                  return wrapSpaceMembership(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Space Memberships
             * @memberof ContentfulSpaceAPI
             * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
             * @return {Promise<SpaceMembership.SpaceMembershipCollection>} Promise for a collection of Space Memberships
             * @example
             * const contentful = require('contentful-management')
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getSpaceMemberships({'limit': 100})) // you can add more queries as 'key': 'value'
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getSpaceMemberships() {
              var query =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              return http
                .get(
                  'space_memberships',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapSpaceMembershipCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Space Membership
             * @memberof ContentfulSpaceAPI
             * @see {SpaceMembership.SpaceMembership}
             * @param {object} data - Object representation of the Space Membership to be created
             * @return {Promise<SpaceMembership.SpaceMembership>} Promise for the newly created Space Membership
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createSpaceMembership({
             *   admin: false,
             *   roles: [
             *     {
             *       type: 'Link',
             *       linkType: 'Role',
             *       id: '<role_id>'
             *     }
             *   ],
             *   email: 'foo@example.com'
             * }))
             * .then((spaceMembership) => console.log(spaceMembership))
             * .catch(console.error)
             */
            function createSpaceMembership(data) {
              return http
                .post('space_memberships', data)
                .then(function(response) {
                  return wrapSpaceMembership(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Space Membership with a custom id
             * @memberof ContentfulSpaceAPI
             * @see {SpaceMembership.SpaceMembership}
             * @param {string} id - Space Membership ID
             * @param {object} data - Object representation of the Space Membership to be created
             * @return {Promise<SpaceMembership.SpaceMembership>} Promise for the newly created Space Membership
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createSpaceMembershipWithId('<custom-id>', {
             *   admin: false,
             *   roles: [
             *     {
             *       type: 'Link',
             *       linkType: 'Role',
             *       id: '<role_id>'
             *     }
             *   ],
             *   email: 'foo@example.com'
             * }))
             * .then((spaceMembership) => console.log(spaceMembership))
             * .catch(console.error)
             */
            function createSpaceMembershipWithId(id, data) {
              return http
                .put('space_memberships/' + id, data)
                .then(function(response) {
                  return wrapSpaceMembership(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a Role
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<Role.Role>} Promise for a Role
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createRole({
             *   fields: {
             *     title: {
             *       'en-US': 'Role title'
             *     }
             *   }
             * }))
             * .then((role) => console.log(role))
             * .catch(console.error)
             */
            function getRole(id) {
              return http.get('roles/' + id).then(function(response) {
                return wrapRole(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Roles
             * @memberof ContentfulSpaceAPI
             * @return {Promise<Role.RoleCollection>} Promise for a collection of Roles
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getRoles())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getRoles() {
              return http.get('roles').then(function(response) {
                return wrapRoleCollection(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Role
             * @memberof ContentfulSpaceAPI
             * @see {Role.Role}
             * @param {object} data - Object representation of the Role to be created
             * @return {Promise<Role.Role>} Promise for the newly created Role
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             * client.getSpace('<space_id>')
             * .then((space) => space.createRole({
             *   name: 'My Role',
             *   description: 'foobar role',
             *   permissions: {
             *     ContentDelivery: 'all',
             *     ContentModel: ['read'],
             *     Settings: []
             *   },
             *   policies: [
             *     {
             *       effect: 'allow',
             *       actions: 'all',
             *       constraint: {
             *         and: [
             *           {
             *             equals: [
             *               { doc: 'sys.type' },
             *               'Entry'
             *             ]
             *           },
             *           {
             *             equals: [
             *               { doc: 'sys.type' },
             *               'Asset'
             *             ]
             *           }
             *         ]
             *       }
             *     }
             *   ]
             * }))
             * .then((role) => console.log(role))
             * .catch(console.error)
             */
            function createRole(data) {
              return http.post('roles', data).then(function(response) {
                return wrapRole(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Role with a custom id
             * @memberof ContentfulSpaceAPI
             * @see {Role.Role}
             * @param {string} id - Role ID
             * @param {object} data - Object representation of the Role to be created
             * @return {Promise<Role.Role>} Promise for the newly created Role
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             * client.getSpace('<space_id>')
             * .then((space) => space.createRoleWithId(<custom-id>, {
             *   name: 'My Role',
             *   description: 'foobar role',
             *   permissions: {
             *     ContentDelivery: 'all',
             *     ContentModel: ['read'],
             *     Settings: []
             *   },
             *   policies: [
             *     {
             *       effect: 'allow',
             *       actions: 'all',
             *       constraint: {
             *         and: [
             *           {
             *             equals: [
             *               { doc: 'sys.type' },
             *               'Entry'
             *             ]
             *           },
             *           {
             *             equals: [
             *               { doc: 'sys.type' },
             *               'Asset'
             *             ]
             *           }
             *         ]
             *       }
             *     }
             *   ]
             * }))
             * .then((role) => console.log(role))
             * .catch(console.error)
             */
            function createRoleWithId(id, data) {
              return http.put('roles/' + id, data).then(function(response) {
                return wrapRole(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a Api Key
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<ApiKey.ApiKey>} Promise for a Api Key
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getApiKey('<apikey-id>'))
             * .then((apikey) => console.log(apikey))
             * .catch(console.error)
             */
            function getApiKey(id) {
              return http.get('api_keys/' + id).then(function(response) {
                return wrapApiKey(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of Api Keys
             * @memberof ContentfulSpaceAPI
             * @return {Promise<ApiKey.ApiKeyCollection>} Promise for a collection of Api Keys
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getApiKeys())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getApiKeys() {
              return http.get('api_keys').then(function(response) {
                return wrapApiKeyCollection(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a preview Api Key
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<PreviewApiKey.PreviewApiKey>} Promise for a Preview Api Key
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getPreviewApiKey('<preview-apikey-id>'))
             * .then((previewApikey) => console.log(previewApikey))
             * .catch(console.error)
             */
            function getPreviewApiKey(id) {
              return http
                .get('preview_api_keys/' + id)
                .then(function(response) {
                  return wrapPreviewApiKey(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of preview Api Keys
             * @memberof ContentfulSpaceAPI
             * @return {Promise<PreviewApiKey.PreviewApiKeyCollection>} Promise for a collection of Preview Api Keys
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getPreviewApiKeys())
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getPreviewApiKeys() {
              return http.get('preview_api_keys').then(function(response) {
                return wrapPreviewApiKeyCollection(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }
            /**
             * Creates a Api Key
             * @memberof ContentfulSpaceAPI
             * @see {ApiKey.ApiKey}
             * @param {object} data - Object representation of the Api Key to be created
             * @return {Promise<ApiKey.ApiKey>} Promise for the newly created Api Key
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createApiKey({
             *   name: 'API Key name',
             *   environments:[
             *    {
             *     sys: {
             *      type: 'Link'
             *      linkType: 'Environment',
             *      id:'<environment_id>'
             *     }
             *    }
             *   ]
             *   }
             * }))
             * .then((apiKey) => console.log(apiKey))
             * .catch(console.error)
             */
            function createApiKey(data) {
              return http.post('api_keys', data).then(function(response) {
                return wrapApiKey(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a Api Key with a custom id
             * @memberof ContentfulSpaceAPI
             * @see {ApiKey.ApiKey}
             * @param {string} id - Api Key ID
             * @param {object} data - Object representation of the Api Key to be created
             * @return {Promise<ApiKey.ApiKey>} Promise for the newly created Api Key
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createApiKeyWithId('<custom-id>', {
             *   name: 'API Key name'
             *   environments:[
             *    {
             *     sys: {
             *      type: 'Link'
             *      linkType: 'Environment',
             *      id:'<environment_id>'
             *     }
             *    }
             *   ]
             *   }
             * }))
             * .then((apiKey) => console.log(apiKey))
             * .catch(console.error)
             */
            function createApiKeyWithId(id, data) {
              return http.put('api_keys/' + id, data).then(function(response) {
                return wrapApiKey(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets an UI Extension
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @param  {string} id
             * @return {Promise<UiExtension.UiExtension>} Promise for an UI Extension
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getUiExtension('<ui-extension-id>'))
             * .then((uiExtension) => console.log(uiExtension))
             * .catch(console.error)
             */
            function getUiExtension(id) {
              raiseDeprecationWarning('getUiExtension')
              return http.get('extensions/' + id).then(function(response) {
                return wrapUiExtension(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets a collection of UI Extension
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @return {Promise<UiExtension.UiExtensionCollection>} Promise for a collection of UI Extensions
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getUiExtensions()
             * .then((response) => console.log(response.items))
             * .catch(console.error)
             */
            function getUiExtensions() {
              raiseDeprecationWarning('getUiExtensions')
              return http.get('extensions').then(function(response) {
                return wrapUiExtensionCollection(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a UI Extension
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {UiExtension.UiExtension}
             * @param {object} data - Object representation of the UI Extension to be created
             * @return {Promise<UiExtension.UiExtension>} Promise for the newly created UI Extension
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createUiExtension({
             *   extension: {
             *     name: 'My awesome extension',
             *     src: 'https://example.com/my',
             *     fieldTypes: [
             *       {
             *         type: 'Symbol'
             *       },
             *       {
             *         type: 'Text'
             *       }
             *     ],
             *     sidebar: false
             *   }
             * }))
             * .then((uiExtension) => console.log(uiExtension))
             * .catch(console.error)
             */
            function createUiExtension(data) {
              raiseDeprecationWarning('createUiExtension')
              return http.post('extensions', data).then(function(response) {
                return wrapUiExtension(http, response.data)
              }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Creates a UI Extension with a custom ID
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @see {UiExtension.UiExtension}
             * @param  {string} id
             * @param {object} data - Object representation of the UI Extension to be created
             * @return {Promise<UiExtension.UiExtension>} Promise for the newly created UI Extension
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.createUiExtensionWithId('<extension_id>', {
             *   extension: {
             *     name: 'My awesome extension',
             *     src: 'https://example.com/my',
             *     fieldTypes: [
             *       {
             *         type: 'Symbol'
             *       },
             *       {
             *         type: 'Text'
             *       }
             *     ],
             *     sidebar: false
             *   }
             * }))
             * .then((uiExtension) => console.log(uiExtension))
             * .catch(console.error)
             */
            function createUiExtensionWithId(id, data) {
              raiseDeprecationWarning('createUiExtensionWithId')
              return http
                .put('extensions/' + id, data)
                .then(function(response) {
                  return wrapUiExtension(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets all snapshots of an entry
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @func getEntrySnapshots
             * @param {string} - entryId id of the entry
             * @param {object} - query additional query paramaters
             * @return Promise<Object>
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getEntrySnapshots('<entry_id>'))
             * .then((snapshots) => console.log(snapshots.items))
             * .catch(console.error)
             */
            function getEntrySnapshots(entryId) {
              var query =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {}

              raiseDeprecationWarning('getEntrySnapshots')
              return http
                .get(
                  'entries/' + entryId + '/snapshots',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapSnapshotCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /**
             * Gets all snapshots of a contentType
             * @deprecated since version 5.0
             * @memberof ContentfulSpaceAPI
             * @func getContentTypeSnapshots
             * @param {string} - contentTypeId id of the content type
             * @param {object} - query additional query paramaters
             * @return Promise<Object>
             * @example
             * const contentful = require('contentful-management')
             *
             * const client = contentful.createClient({
             *   accessToken: '<content_management_api_key>'
             * })
             *
             * client.getSpace('<space_id>')
             * .then((space) => space.getContentTypeSnapshots('<contentTypeId>'))
             * .then((snapshots) => console.log(snapshots.items))
             * .catch(console.error)
             */
            function getContentTypeSnapshots(contentTypeId) {
              var query =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {}

              raiseDeprecationWarning('getContentTypeSnapshots')
              return http
                .get(
                  'content_types/' + contentTypeId + '/snapshots',
                  Object(
                    contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                      'createRequestConfig'
                    ]
                  )({ query: query })
                )
                .then(function(response) {
                  return wrapSnapshotCollection(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_2__['default'])
            }

            /*
             * @private
             * sdk relies heavily on sys metadata
             * so we cannot omit the sys property on sdk level
             *
             */
            function normalizeSelect(query) {
              if (query.select && !/sys/i.test(query.select)) {
                query.select += ',sys'
              }
            }

            return {
              delete: deleteSpace,
              update: updateSpace,
              getEnvironment: getEnvironment,
              getEnvironments: getEnvironments,
              createEnvironment: createEnvironment,
              createEnvironmentWithId: createEnvironmentWithId,
              getContentType: getContentType,
              getContentTypes: getContentTypes,
              createContentType: createContentType,
              createContentTypeWithId: createContentTypeWithId,
              getEditorInterfaceForContentType: getEditorInterfaceForContentType,
              getEntry: getEntry,
              getEntries: getEntries,
              createEntry: createEntry,
              createEntryWithId: createEntryWithId,
              getAsset: getAsset,
              getAssets: getAssets,
              createAsset: createAsset,
              createAssetWithId: createAssetWithId,
              createAssetFromFiles: createAssetFromFiles,
              getUpload: getUpload,
              createUpload: createUpload,
              getLocale: getLocale,
              getLocales: getLocales,
              createLocale: createLocale,
              getWebhook: getWebhook,
              getWebhooks: getWebhooks,
              createWebhook: createWebhook,
              createWebhookWithId: createWebhookWithId,
              getRole: getRole,
              getRoles: getRoles,
              createRole: createRole,
              createRoleWithId: createRoleWithId,
              getSpaceMembership: getSpaceMembership,
              getSpaceMemberships: getSpaceMemberships,
              createSpaceMembership: createSpaceMembership,
              createSpaceMembershipWithId: createSpaceMembershipWithId,
              getApiKey: getApiKey,
              getApiKeys: getApiKeys,
              getPreviewApiKeys: getPreviewApiKeys,
              getPreviewApiKey: getPreviewApiKey,
              createApiKey: createApiKey,
              createApiKeyWithId: createApiKeyWithId,
              getUiExtension: getUiExtension,
              getUiExtensions: getUiExtensions,
              createUiExtension: createUiExtension,
              createUiExtensionWithId: createUiExtensionWithId,
              getEntrySnapshots: getEntrySnapshots,
              getContentTypeSnapshots: getContentTypeSnapshots
            }
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js':
        /*!********************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/enhance-with-methods.js ***!
  \********************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return enhanceWithMethods
            }
          )
          /**
           * This method enhances a base object which would normally contain data, with
           * methods from another object that might work on manipulating that data.
           * All the added methods are set as non enumerable, non configurable, and non
           * writable properties. This ensures that if we try to clone or stringify the
           * base object, we don't have to worry about these additional methods.
           * @private
           * @param {object} baseObject - Base object with data
           * @param {object} methodsObject - Object with methods as properties. The key
           * values used here will be the same that will be defined on the baseObject.
           */
          function enhanceWithMethods(baseObject, methodsObject) {
            return Object.keys(methodsObject).reduce(function(
              enhancedObject,
              methodName
            ) {
              Object.defineProperty(enhancedObject, methodName, {
                enumerable: false,
                configurable: false,
                writable: false,
                value: methodsObject[methodName]
              })
              return enhancedObject
            },
            baseObject)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/api-key.js':
        /*!****************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/api-key.js ***!
  \****************************************************************************************************************/
        /*! exports provided: wrapApiKey, wrapApiKeyCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapApiKey',
            function() {
              return wrapApiKey
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapApiKeyCollection',
            function() {
              return wrapApiKeyCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /**
           * Api Key instances
           * @namespace ApiKey
           */

          /**
           * @memberof ApiKey
           * @typedef ApiKey
           * @prop {Meta.Sys} sys - System metadata
           * @prop {string} name
           * @prop {string} description
           * @prop {function(): Object} toPlainObject() - Returns this Api Key as a plain JS object
           */

          function createApiKeyApi(http) {
            return {
              /**
               * Sends an update to the server with any changes made to the object's properties
               * @memberof ApiKey
               * @func update
               * @return {Promise<ApiKey>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               * client.getSpace('<space_id>')
               * .then((space) => space.getApiKey(<api-key-id>))
               * .then((apiKey) => {
               *  apiKey.name = 'New name'
               *  return apiKey.update()
               * })
               * .then(apiKey => console.log(apiKey.name))
               * .catch(console.error)
               */
              update: function update() {
                if ('accessToken' in this) {
                  delete this.accessToken
                }
                if ('preview_api_key' in this) {
                  delete this.preview_api_key
                }
                if ('policies' in this) {
                  delete this.policies
                }
                var update = Object(
                  _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                    'createUpdateEntity'
                  ]
                )({
                  http: http,
                  entityPath: 'api_keys',
                  wrapperMethod: wrapApiKey
                })
                return update.call(this)
              },

              /**
               * Deletes this object on the server.
               * @memberof ApiKey
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               * client.getSpace('<space_id>')
               * .then((space) => space.getApiKey(<api-key-id>))
               * .then((apiKey) => apiKey.delete())
               * .then(() => console.log('apikey deleted'))
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'api_keys'
              })
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw api key data
           * @return {ApiKey} Wrapped api key data
           */
          function wrapApiKey(http, data) {
            var apiKey = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(apiKey, createApiKeyApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(apiKey)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw api key collection data
           * @return {ApiKeyCollection} Wrapped api key collection data
           */
          function wrapApiKeyCollection(http, data) {
            var apiKeys = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            apiKeys.items = apiKeys.items.map(function(entity) {
              return wrapApiKey(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(apiKeys)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/asset.js':
        /*!**************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/asset.js ***!
  \**************************************************************************************************************/
        /*! exports provided: wrapAsset, wrapAssetCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapAsset',
            function() {
              return wrapAsset
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapAssetCollection',
            function() {
              return wrapAssetCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /**
           * Asset instances
           * @namespace Asset
           */

          var ASSET_PROCESSING_CHECK_WAIT = 2000
          var ASSET_PROCESSING_CHECK_RETRIES = 10

          /**
           * @memberof Asset
           * @typedef Asset
           * @prop {Meta.Sys} sys - Standard system metadata with additional asset specific properties
           * @prop {string=} sys.locale - If present, indicates the locale which this asset uses
           * @prop {Object} fields - Object with content for each field
           * @prop {string} fields.title - Title for this asset
           * @prop {string} fields.description - Description for this asset
           * @prop {Object} fields.file - File object for this asset
           * @prop {Object} fields.file.fileName - Name for the file
           * @prop {string} fields.file.contentType - Mime type for the file
           * @prop {string=} fields.file.upload - Url where the file is available to be downloaded from, into the Contentful asset system. After the asset is processed this field is gone.
           * @prop {string=} fields.file.url - Url where the file is available at the Contentful media asset system. This field won't be available until the asset is processed.
           * @prop {Object} fields.file.details - Details for the file, depending on file type (example: image size in bytes, etc)
           * @prop {function(): Object} toPlainObject() - Returns this Asset as a plain JS object
           */

          function createAssetApi(http) {
            function checkIfAssetHasUrl(_ref) {
              var resolve = _ref.resolve,
                reject = _ref.reject,
                id = _ref.id,
                locale = _ref.locale,
                _ref$processingCheckW = _ref.processingCheckWait,
                processingCheckWait =
                  _ref$processingCheckW === undefined
                    ? ASSET_PROCESSING_CHECK_WAIT
                    : _ref$processingCheckW,
                _ref$processingCheckR = _ref.processingCheckRetries,
                processingCheckRetries =
                  _ref$processingCheckR === undefined
                    ? ASSET_PROCESSING_CHECK_RETRIES
                    : _ref$processingCheckR,
                _ref$checkCount = _ref.checkCount,
                checkCount = _ref$checkCount === undefined ? 0 : _ref$checkCount

              http
                .get('assets/' + id)
                .then(function(response) {
                  return wrapAsset(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_3__['default'])
                .then(function(asset) {
                  if (asset.fields.file[locale].url) {
                    resolve(asset)
                  } else if (checkCount === processingCheckRetries) {
                    var error = new Error()
                    error.name = 'AssetProcessingTimeout'
                    error.message =
                      'Asset is taking longer then expected to process.'
                    reject(error)
                  } else {
                    checkCount++
                    setTimeout(function() {
                      return checkIfAssetHasUrl({
                        resolve: resolve,
                        reject: reject,
                        id: id,
                        locale: locale,
                        checkCount: checkCount,
                        processingCheckWait: processingCheckWait,
                        processingCheckRetries: processingCheckRetries
                      })
                    }, processingCheckWait)
                  }
                })
            }

            function processForLocale(locale) {
              var _ref2 =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : {},
                processingCheckWait = _ref2.processingCheckWait,
                processingCheckRetries = _ref2.processingCheckRetries

              var assetId = this.sys.id
              return http
                .put(
                  'assets/' + this.sys.id + '/files/' + locale + '/process',
                  null,
                  {
                    headers: {
                      'X-Contentful-Version': this.sys.version
                    }
                  }
                )
                .then(function() {
                  return new Promise(function(resolve, reject) {
                    return checkIfAssetHasUrl({
                      resolve: resolve,
                      reject: reject,
                      id: assetId,
                      locale: locale,
                      processingCheckWait: processingCheckWait,
                      processingCheckRetries: processingCheckRetries
                    })
                  })
                }, _error_handler__WEBPACK_IMPORTED_MODULE_3__['default'])
            }

            function processForAllLocales() {
              var options =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {}

              var self = this
              var locales = Object.keys(this.fields.file || {})
              return Promise.all(
                locales.map(function(locale) {
                  return processForLocale.call(self, locale, options)
                })
              ).then(function(assets) {
                return assets[0]
              })
            }

            return {
              /**
               * Sends an update to the server with any changes made to the object's properties
               * @memberof Asset
               * @func update
               * @return {Promise<Asset>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getAsset('<asset_id>'))
               * .then((asset) => {
               *   asset.fields.title['en-US'] = 'New asset title'
               *   return asset.update()
               * })
               * .then((asset) => console.log(`Asset ${asset.sys.id} updated.`)
               * .catch(console.error)
               */
              update: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createUpdateEntity'
                ]
              )({
                http: http,
                entityPath: 'assets',
                wrapperMethod: wrapAsset
              }),

              /**
               * Deletes this object on the server.
               * @memberof Asset
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getAsset('<asset_id>'))
               * .then((asset) => asset.delete())
               * .then((asset) => console.log(`Asset deleted.`)
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'assets'
              }),

              /**
               * Publishes the object
               * @memberof Asset
               * @func publish
               * @return {Promise<Asset>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getAsset('<asset_id>'))
               * .then((asset) => asset.publish())
               * .then((asset) => console.log(`Asset ${asset.sys.id} published.`)
               * .catch(console.error)
               */
              publish: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createPublishEntity'
                ]
              )({
                http: http,
                entityPath: 'assets',
                wrapperMethod: wrapAsset
              }),

              /**
               * Unpublishes the object
               * @memberof Asset
               * @func unpublish
               * @return {Promise<Asset>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getAsset('<asset_id>'))
               * .then((asset) => asset.unpublish())
               * .then((asset) => console.log(`Asset ${asset.sys.id} unpublished.`)
               * .catch(console.error)
               */
              unpublish: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createUnpublishEntity'
                ]
              )({
                http: http,
                entityPath: 'assets',
                wrapperMethod: wrapAsset
              }),

              /**
               * Archives the object
               * @memberof Asset
               * @func archive
               * @return {Promise<Asset>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getAsset('<asset_id>'))
               * .then((asset) => asset.archive())
               * .then((asset) => console.log(`Asset ${asset.sys.id} archived.`)
               * .catch(console.error)
               */
              archive: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createArchiveEntity'
                ]
              )({
                http: http,
                entityPath: 'assets',
                wrapperMethod: wrapAsset
              }),

              /**
               * Unarchives the object
               * @memberof Asset
               * @func unarchive
               * @return {Promise<Asset>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getAsset('<asset_id>'))
               * .then((asset) => asset.unarchive())
               * .then((asset) => console.log(`Asset ${asset.sys.id} unarchived.`)
               * .catch(console.error)
               */
              unarchive: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createUnarchiveEntity'
                ]
              )({
                http: http,
                entityPath: 'assets',
                wrapperMethod: wrapAsset
              }),

              /**
               * Triggers asset processing after an upload, for the file uploaded to a specific locale.
               * @memberof Asset
               * @func processForLocale
               * @param {string} locale - Locale which processing should be triggered for
               * @param {object} options - Additional options for processing
               * @prop {number} options.processingCheckWait - Time in milliseconds to wait before checking again if the asset has been processed (default: 500ms)
               * @prop {number} options.processingCheckRetries - Maximum amount of times to check if the asset has been processed (default: 5)
               * @return {Promise<Asset>} Object returned from the server with updated metadata.
               * @throws {AssetProcessingTimeout} If the asset takes too long to process. If this happens, retrieve the asset again, and if the url property is available, then processing has succeeded. If not, your file might be damaged.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               * client.getSpace('<space_id>')
               * .then((space) => space.createAssetWithId('<asset_id>', {
               *   title: {
               *     'en-US': 'Playsam Streamliner',
               *   },
               *   file: {
               *     'en-US': {
               *       contentType: 'image/jpeg',
               *       fileName: 'example.jpeg',
               *       upload: 'https://example.com/example.jpg'
               *     }
               *   }
               * }))
               * .then((asset) => asset.processForLocale('en-US'))
               * .then((asset) => console.log(asset))
               * .catch(console.error)
               */
              processForLocale: processForLocale,

              /**
               * Triggers asset processing after an upload, for the files uploaded to all locales of an asset.
               * @memberof Asset
               * @func processForAllLocales
               * @param {object} options - Additional options for processing
               * @prop {number} options.processingCheckWait - Time in milliseconds to wait before checking again if the asset has been processed (default: 500ms)
               * @prop {number} options.processingCheckRetries - Maximum amount of times to check if the asset has been processed (default: 5)
               * @return {Promise<Asset>} Object returned from the server with updated metadata.
               * @throws {AssetProcessingTimeout} If the asset takes too long to process. If this happens, retrieve the asset again, and if the url property is available, then processing has succeeded. If not, your file might be damaged.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               * client.getSpace('<space_id>')
               * .then((space) => space.createAssetWithId('<asset_id>', {
               *   title: {
               *     'en-US': 'Playsam Streamliner',
               *     'de-DE': 'Playsam Streamliner'
               *   },
               *   file: {
               *     'en-US': {
               *       contentType: 'image/jpeg',
               *       fileName: 'example.jpeg',
               *       upload: 'https://example.com/example.jpg'
               *     },
               *     'de-DE': {
               *       contentType: 'image/jpeg',
               *       fileName: 'example.jpeg',
               *       upload: 'https://example.com/example-de.jpg'
               *     }
               *   }
               * }))
               * .then((asset) => asset.processForAllLocales())
               * .then((asset) => console.log(asset))
               * .catch(console.error)
               */
              processForAllLocales: processForAllLocales,

              /**
               * Checks if the asset is published. A published asset might have unpublished changes (@see {Asset.isUpdated})
               * @memberof Asset
               * @func isPublished
               * @return {boolean}
               */
              isPublished: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createPublishedChecker'
                ]
              )(),

              /**
               * Checks if the asset is updated. This means the asset was previously published but has unpublished changes.
               * @memberof Asset
               * @func isUpdated
               * @return {boolean}
               */
              isUpdated: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createUpdatedChecker'
                ]
              )(),

              /**
               * Checks if the asset is in draft mode. This means it is not published.
               * @memberof Asset
               * @func isDraft
               * @return {boolean}
               */
              isDraft: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createDraftChecker'
                ]
              )(),

              /**
               * Checks if asset is archived. This means it's not exposed to the Delivery/Preview APIs.
               * @memberof Asset
               * @func isArchived
               * @return {boolean}
               */
              isArchived: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createArchivedChecker'
                ]
              )()
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw asset data
           * @return {Asset} Wrapped asset data
           */
          function wrapAsset(http, data) {
            var asset = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(asset, createAssetApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(asset)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw asset collection data
           * @return {AssetCollection} Wrapped asset collection data
           */
          function wrapAssetCollection(http, data) {
            var assets = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            assets.items = assets.items.map(function(entity) {
              return wrapAsset(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(assets)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/content-type.js':
        /*!*********************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/content-type.js ***!
  \*********************************************************************************************************************/
        /*! exports provided: wrapContentType, wrapContentTypeCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapContentType',
            function() {
              return wrapContentType
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapContentTypeCollection',
            function() {
              return wrapContentTypeCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /* harmony import */ var _editor_interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! ./editor-interface */ '../../node_modules/contentful-management/dist/es-modules/entities/editor-interface.js'
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! ../error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )
          /* harmony import */ var _snapshot__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
            /*! ./snapshot */ '../../node_modules/contentful-management/dist/es-modules/entities/snapshot.js'
          )
          /**
           * Content Type instances
           * @namespace ContentType
           */

          /**
           * @memberof ContentType
           * @typedef ContentType
           * @prop {Meta.Sys} sys - System metadata
           * @prop {string} name
           * @prop {string} description
           * @prop {string} displayField - Field used as the main display field for Entries
           * @prop {Array<Field>} fields - All the fields contained in this Content Type
           * @prop {function(): Object} toPlainObject() - Returns this Content Type as a plain JS object
           */

          function createContentTypeApi(http) {
            return {
              /**
               * Sends an update to the server with any changes made to the object's properties. <br />
               * <strong>Important note about deleting fields</strong>: The standard way to delete a field is with two updates: first omit the property from your responses (set the field attribute "omitted" to true), and then
               * delete it by setting the attribute "deleted" to true. See the "Deleting fields" section in the
               * <a href="https://www.contentful.com/developers/docs/references/content-management-api/#/reference/content-types/content-type">API reference</a> for more reasoning. Alternatively,
               * you may use the convenience method omitAndDeleteField to do both steps at once.
               * @memberof ContentType
               * @func update
               * @return {Promise<ContentType>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getContentType('<contentType_id>'))
               * .then((contentType) => {
               *  contentType.name = 'New name'
               *  return contentType.update()
               * })
               * .then(contentType => console.log(contentType))
               * .catch(console.error)
               */
              update: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUpdateEntity'
                ]
              )({
                http: http,
                entityPath: 'content_types',
                wrapperMethod: wrapContentType
              }),

              /**
               * Deletes this object on the server.
               * @memberof ContentType
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getContentType('<contentType_id>'))
               * .then((contentType) => contentType.delete())
               * .then(() => console.log('contentType deleted'))
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'content_types'
              }),

              /**
               * Publishes the object
               * @memberof ContentType
               * @func publish
               * @return {Promise<ContentType>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getContentType('<contentType_id>'))
               * .then((contentType) => contentType.publish())
               * .then((contentType) => console.log(`${contentType.sys.id} is published`))
               * .catch(console.error)
               */
              publish: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createPublishEntity'
                ]
              )({
                http: http,
                entityPath: 'content_types',
                wrapperMethod: wrapContentType
              }),

              /**
               * Unpublishes the object
               * @memberof ContentType
               * @func unpublish
               * @return {Promise<ContentType>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getContentType('<contentType_id>'))
               * .then((contentType) => contentType.unpublish())
               * .then((contentType) => console.log(`${contentType.sys.id} is unpublished`))
               * .catch(console.error)
               */
              unpublish: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUnpublishEntity'
                ]
              )({
                http: http,
                entityPath: 'content_types',
                wrapperMethod: wrapContentType
              }),

              /**
               * Gets the editor interface for the object <br />
               * <strong>Important note</strong>: The editor interface only represent a published contentType.<br />
               * To get the most recent representation of the contentType make sure to publish it first
               * @memberof ContentType
               * @func getEditorInterface
               * @return {Promise<EditorInterface.EditorInterface>} Object returned from the server with the current editor interface.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getContentType('<contentType_id>'))
               * .then((contentType) => contentType.getEditorInterface())
               * .then((editorInterface) => console.log(editorInterface.contorls))
               * .catch(console.error)
               */
              getEditorInterface: function getEditorInterface() {
                return http
                  .get('content_types/' + this.sys.id + '/editor_interface')
                  .then(function(response) {
                    return Object(
                      _editor_interface__WEBPACK_IMPORTED_MODULE_4__[
                        'wrapEditorInterface'
                      ]
                    )(http, response.data)
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_5__['default'])
              },

              /**
               * Gets all snapshots of a contentType
               * @memberof ContentType
               * @func getSnapshots
               * @return Promise<Snapshot>
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getContentType('<contentType_id>'))
               * .then((entry) => entry.getSnapshots())
               * .then((snapshots) => console.log(snapshots.items))
               * .catch(console.error)
               */
              getSnapshots: function getSnapshots() {
                var query =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : {}

                return http
                  .get(
                    'content_types/' + this.sys.id + '/snapshots',
                    Object(
                      contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                        'createRequestConfig'
                      ]
                    )({ query: query })
                  )
                  .then(function(response) {
                    return Object(
                      _snapshot__WEBPACK_IMPORTED_MODULE_6__[
                        'wrapSnapshotCollection'
                      ]
                    )(http, response.data)
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_5__['default'])
              },

              /**
               * Gets a snapshot of a contentType
               * @memberof ContentType
               * @func getSnapshot
               * @param {string} snapshotId - Id of the snapshot
               * @return Promise<Snapshot>
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getContentType('<content_type-id>'))
               * .then((entry) => entry.getSnapshot('<snapshot-id>'))
               * .then((snapshot) => console.log(snapshot))
               * .catch(console.error)
               */
              getSnapshot: function getSnapshot(snapshotId) {
                return http
                  .get(
                    'content_types/' + this.sys.id + '/snapshots/' + snapshotId
                  )
                  .then(function(response) {
                    return Object(
                      _snapshot__WEBPACK_IMPORTED_MODULE_6__['wrapSnapshot']
                    )(http, response.data)
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_5__['default'])
              },
              /**
               * Checks if the contentType is published. A published contentType might have unpublished changes (@see {ContentType.isUpdated})
               * @memberof ContentType
               * @func isPublished
               * @return {boolean}
               */
              isPublished: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createPublishedChecker'
                ]
              )(),

              /**
               * Checks if the contentType is updated. This means the contentType was previously published but has unpublished changes.
               * @memberof ContentType
               * @func isUpdated
               * @return {boolean}
               */
              isUpdated: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUpdatedChecker'
                ]
              )(),

              /**
               * Checks if the contentType is in draft mode. This means it is not published.
               * @memberof ContentType
               * @func isDraft
               * @return {boolean}
               */
              isDraft: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDraftChecker'
                ]
              )(),

              /**
               * Omits and deletes a field if it exists on the contentType. This is a convenience method which does both operations at once and potentially less
               * safe than the standard way. See note about deleting fields on the Update method.
               * @memberof ContentType
               * @func omitAndDeleteField
               * @return {Promise<ContentType>} Object returned from the server with updated metadata.
               */
              omitAndDeleteField: function omitAndDeleteField(id) {
                return this.findAndUpdateField(id, 'omitted', true)
                  .then(function(newContentType) {
                    return newContentType.findAndUpdateField(
                      id,
                      'deleted',
                      true
                    )
                  })
                  .catch(_error_handler__WEBPACK_IMPORTED_MODULE_5__['default'])
              },

              /**
               * @private
               * @param {string} id - unique ID of the field
               * @param {string} key - the attribute on the field to change
               * @param {string} value - the value to set the attribute to
               * @return {Promise<ContentType>}
               */
              findAndUpdateField: function findAndUpdateField(id, key, value) {
                var field = this.fields.find(function(field) {
                  return field.id === id
                })
                if (!field) {
                  return Promise.reject(
                    new Error(
                      'Tried to omitAndDeleteField on a nonexistent field, ' +
                        id +
                        ', on the content type ' +
                        this.name +
                        '.'
                    )
                  )
                }
                field[key] = value
                return this.update()
              }
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw content type data
           * @return {ContentType} Wrapped content type data
           */
          function wrapContentType(http, data) {
            var contentType = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(contentType, createContentTypeApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(contentType)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw content type collection data
           * @return {ContentTypeCollection} Wrapped content type collection data
           */
          function wrapContentTypeCollection(http, data) {
            var contentTypes = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            contentTypes.items = contentTypes.items.map(function(entity) {
              return wrapContentType(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(contentTypes)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/editor-interface.js':
        /*!*************************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/editor-interface.js ***!
  \*************************************************************************************************************************/
        /*! exports provided: wrapEditorInterface */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapEditorInterface',
            function() {
              return wrapEditorInterface
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )
          /**
           * Editor Interface instances
           * @namespace EditorInterface
           */

          /**
           * @memberof EditorInterface
           * @typedef Control
           * @prop {srting} fieldId - the id of the customized field
           * @prop {string} widgetId - customization associated to the field
           */

          /**
           * @memberof EditorInterface
           * @typedef EditorInterface
           * @prop {Meta.Sys} sys - System metadata
           * @prop {EditorInterface.Control[]} controls - array of fields and it's associated widgetId
           */

          function createEditorInterfaceApi(http) {
            return {
              /**
               * Sends an update to the server with any changes made to the object's properties
               * @memberof EditorInterface
               * @func update
               * @return {Promise<EditorInterface>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getContentType('<contentType_id>'))
               * .then((contentType) => contentType.getEditorInterface())
               * .then((editorInterface) => {
               *  editorInterface.controls[0] = { "fieldId": "title", "widgetId": "singleLine"}
               *  return editorInterface.update()
               * })
               * .catch(console.error)
               */
              update: function update() {
                var raw = this.toPlainObject()
                var data = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(
                  raw
                )
                delete data.sys
                return http
                  .put(
                    'content_types/' +
                      this.sys.contentType.sys.id +
                      '/editor_interface',
                    data,
                    {
                      headers: { 'X-Contentful-Version': this.sys.version }
                    }
                  )
                  .then(function(response) {
                    return wrapEditorInterface(http, response.data)
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_3__['default'])
              },
              /**
               * gets a control for a specific field
               * @memberof EditorInterface
               * @func getControlForField
               * @return {?Object} control object for specific field.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getContentType('<contentType_id>'))
               * .then((contentType) => contentType.getEditorInterface())
               * .then((editorInterface) => {
               *  control = editorInterface.getControlForField('<field-id>')
               *  console.log(control)
               * })
               * .catch(console.error)
               */
              getControlForField: function getControlForField(fieldId) {
                var result = this.controls.filter(function(control) {
                  return control.fieldId === fieldId
                })
                return result && result.length > 0 ? result[0] : null
              }
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw editor-interface data
           * @return {EditorInterface} Wrapped editor-interface data
           */
          function wrapEditorInterface(http, data) {
            var editorInterface = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(editorInterface, createEditorInterfaceApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(editorInterface)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/entry.js':
        /*!**************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/entry.js ***!
  \**************************************************************************************************************/
        /*! exports provided: wrapEntry, wrapEntryCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapEntry',
            function() {
              return wrapEntry
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapEntryCollection',
            function() {
              return wrapEntryCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! ../error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )
          /* harmony import */ var _snapshot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! ./snapshot */ '../../node_modules/contentful-management/dist/es-modules/entities/snapshot.js'
          )
          /**
           * Entry instances
           * @namespace Entry
           */

          /**
           * Types of fields found in an Entry
           * @namespace EntryFields
           */

          /**
           * @memberof EntryFields
           * @typedef Symbol
           * @type string
           */

          /**
           * @memberof EntryFields
           * @typedef Text
           * @type string
           */

          /**
           * @memberof EntryFields
           * @typedef Integer
           * @type number
           */

          /**
           * @memberof EntryFields
           * @typedef Number
           * @type number
           */

          /**
           * @memberof EntryFields
           * @typedef Date
           * @type string
           */

          /**
           * @memberof EntryFields
           * @typedef Boolean
           * @type boolean
           */

          /**
           * @memberof EntryFields
           * @typedef Location
           * @prop {string} lat - latitude
           * @prop {string} lon - longitude
           */

          /**
           * A Field in an Entry can have one of the following types that can be defined in Contentful. See <a href="https://www.contentful.com/developers/docs/references/field-type/">Field Types</a> for more details.
           * @memberof EntryFields
           * @typedef Field
           * @type EntryFields.Symbol | EntryFields.Text | EntryFields.Integer | EntryFields.Number | EntryFields.Date | EntryFields.Boolean | EntryFields.Location | Meta.Link | Array<EntryFields.Symbol|Meta.Link> | Object
           */

          /**
           * @memberof Entry
           * @typedef Entry
           * @prop {Meta.Sys} sys - Standard system metadata with additional entry specific properties
           * @prop {Meta.Link} sys.contentType - Content Type used by this Entry
           * @prop {string=} sys.locale - If present, indicates the locale which this entry uses
           * @prop {Object<EntryFields.Field>} fields - Object with content for each field
           * @prop {function(): Object} toPlainObject() - Returns this Entry as a plain JS object
           */

          function createEntryApi(http) {
            return {
              /**
               * Sends an update to the server with any changes made to the object's properties
               * @memberof Entry
               * @func update
               * @return {Promise<Entry>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getEntry('<entry_id>'))
               * .then((entry) => {
               *   entry.fields.title['en-US'] = 'New entry title'
               *   return entry.update()
               * })
               * .then((entry) => console.log(`Entry ${entry.sys.id} updated.`))
               * .catch(console.error)
               */
              update: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUpdateEntity'
                ]
              )({
                http: http,
                entityPath: 'entries',
                wrapperMethod: wrapEntry
              }),

              /**
               * Deletes this object on the server.
               * @memberof Entry
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getEntry('<entry_id>'))
               * .then((entry) => entry.delete())
               * .then(() => console.log(`Entry deleted.`))
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'entries'
              }),

              /**
               * Publishes the object
               * @memberof Entry
               * @func publish
               * @return {Promise<Entry>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getEntry('<entry_id>'))
               * .then((entry) => entry.publish())
               * .then((entry) => console.log(`Entry ${entry.sys.id} published.`))
               * .catch(console.error)
               */
              publish: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createPublishEntity'
                ]
              )({
                http: http,
                entityPath: 'entries',
                wrapperMethod: wrapEntry
              }),

              /**
               * Unpublishes the object
               * @memberof Entry
               * @func unpublish
               * @return {Promise<Entry>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getEntry('<entry_id>'))
               * .then((entry) => entry.unpublish())
               * .then((entry) => console.log(`Entry ${entry.sys.id} unpublished.`))
               * .catch(console.error)
               */
              unpublish: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUnpublishEntity'
                ]
              )({
                http: http,
                entityPath: 'entries',
                wrapperMethod: wrapEntry
              }),

              /**
               * Archives the object
               * @memberof Entry
               * @func archive
               * @return {Promise<Entry>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getEntry('<entry_id>'))
               * .then((entry) => entry.archive())
               * .then((entry) => console.log(`Entry ${entry.sys.id} archived.`))
               * .catch(console.error)
               */
              archive: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createArchiveEntity'
                ]
              )({
                http: http,
                entityPath: 'entries',
                wrapperMethod: wrapEntry
              }),

              /**
               * Unarchives the object
               * @memberof Entry
               * @func unarchive
               * @return {Promise<Entry>} Object returned from the server with updated metadata.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getEntry('<entry_id>'))
               * .then((entry) => entry.unarchive())
               * .then((entry) => console.log(`Entry ${entry.sys.id} unarchived.`))
               * .catch(console.error)
               */
              unarchive: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUnarchiveEntity'
                ]
              )({
                http: http,
                entityPath: 'entries',
                wrapperMethod: wrapEntry
              }),

              /**
               * Gets all snapshots of an entry
               * @memberof Entry
               * @func getSnapshots
               * @return Promise<Snapshot>
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getEntry('<entry_id>'))
               * .then((entry) => entry.getSnapshots())
               * .then((snapshots) => console.log(snapshots.items))
               * .catch(console.error)
               */
              getSnapshots: function getSnapshots() {
                var query =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : {}

                return http
                  .get(
                    'entries/' + this.sys.id + '/snapshots',
                    Object(
                      contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__[
                        'createRequestConfig'
                      ]
                    )({ query: query })
                  )
                  .then(function(response) {
                    return Object(
                      _snapshot__WEBPACK_IMPORTED_MODULE_5__[
                        'wrapSnapshotCollection'
                      ]
                    )(http, response.data)
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_4__['default'])
              },

              /**
               * Gets a snapshot of an entry
               * @memberof Entry
               * @func getSnapshot
               * @param {string} snapshotId - Id of the snapshot
               * @return Promise<Snapshot>
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getEntry('<entry_id>'))
               * .then((entry) => entry.getSnapshot('<snapshot_id>'))
               * .then((snapshot) => console.log(snapshot))
               * .catch(console.error)
               */
              getSnapshot: function getSnapshot(snapshotId) {
                return http
                  .get('entries/' + this.sys.id + '/snapshots/' + snapshotId)
                  .then(function(response) {
                    return Object(
                      _snapshot__WEBPACK_IMPORTED_MODULE_5__['wrapSnapshot']
                    )(http, response.data)
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_4__['default'])
              },
              /**
               * Checks if the entry is published. A published entry might have unpublished changes (@see {Entry.isUpdated})
               * @memberof Entry
               * @func isPublished
               * @return {boolean}
               */
              isPublished: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createPublishedChecker'
                ]
              )(),

              /**
               * Checks if the entry is updated. This means the entry was previously published but has unpublished changes.
               * @memberof Entry
               * @func isUpdated
               * @return {boolean}
               */
              isUpdated: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUpdatedChecker'
                ]
              )(),

              /**
               * Checks if the entry is in draft mode. This means it is not published.
               * @memberof Entry
               * @func isDraft
               * @return {boolean}
               */
              isDraft: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDraftChecker'
                ]
              )(),

              /**
               * Checks if entry is archived. This means it's not exposed to the Delivery/Preview APIs.
               * @memberof Entry
               * @func isArchived
               * @return {boolean}
               */
              isArchived: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createArchivedChecker'
                ]
              )()
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw entry data
           * @return {Entry} Wrapped entry data
           */
          function wrapEntry(http, data) {
            var entry = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(entry, createEntryApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(entry)
          }

          /**
           * Data is also mixed in with link getters if links exist and includes were requested
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw entry collection data
           * @return {EntryCollection} Wrapped entry collection data
           */
          function wrapEntryCollection(http, data, resolveLinks) {
            var entries = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            entries.items = entries.items.map(function(entity) {
              return wrapEntry(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(entries)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/environment.js':
        /*!********************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/environment.js ***!
  \********************************************************************************************************************/
        /*! exports provided: wrapEnvironment, wrapEnvironmentCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapEnvironment',
            function() {
              return wrapEnvironment
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapEnvironmentCollection',
            function() {
              return wrapEnvironmentCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _create_environment_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../create-environment-api */ '../../node_modules/contentful-management/dist/es-modules/create-environment-api.js'
          )

          /**
           * @memberof Environment
           * @typedef Environment
           * @prop {Object} sys - System metadata
           * @prop {string} sys.id - Environment id
           * @prop {string} sys.type - Entity type
           * @prop {string} name - Environment name
           * @prop {function(): Object} toPlainObject() - Returns this Environment as a plain JS object
           */

          /**
           * @memberof Environment
           * @typedef SpaceCollection
           * @prop {number} total
           * @prop {number} skip
           * @prop {number} limit
           * @prop {Array<Environment.Environment>} items
           * @prop {function(): Object} toPlainObject() - Returns this Environment collection as a plain JS object
           */

          /**
           * This method creates the API for the given environment with all the methods for
           * reading and creating other entities. It also passes down a clone of the
           * http client with a environment id, so the base path for requests now has the
           * environment id already set.
           * @private
           * @param  {Object} http - HTTP client instance
           * @param  {Object} data - API response for a Environment
           * @return {Environment}
           */
          function wrapEnvironment(http, data) {
            var environment = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            var _http$httpClientParam = http.httpClientParams,
              hostUpload = _http$httpClientParam.hostUpload,
              defaultHostnameUpload =
                _http$httpClientParam.defaultHostnameUpload

            var environmentScopedHttpClient = http.cloneWithNewParams({
              baseURL:
                http.defaults.baseURL + 'environments/' + environment.sys.id
            })
            var environmentScopedUploadClient = http.cloneWithNewParams({
              space: environment.sys.space.sys.id,
              host: hostUpload || defaultHostnameUpload
            })
            var environmentApi = Object(
              _create_environment_api__WEBPACK_IMPORTED_MODULE_3__['default']
            )({
              http: environmentScopedHttpClient,
              httpUpload: environmentScopedUploadClient
            })
            var enhancedEnvironment = Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(environment, environmentApi)
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(enhancedEnvironment)
          }

          /**
           * This method wraps each environment in a collection with the environment API. See wrapEnvironment
           * above for more details.
           * @private
           * @param  {Object} http - HTTP client instance
           * @param  {Object} data - API response for a Environment collection
           * @return {SpaceCollection}
           */
          function wrapEnvironmentCollection(http, data) {
            var environments = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            environments.items = environments.items.map(function(entity) {
              return wrapEnvironment(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(environments)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/index.js':
        /*!**************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/index.js ***!
  \**************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony import */ var _space__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! ./space */ '../../node_modules/contentful-management/dist/es-modules/entities/space.js'
          )
          /* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! ./environment */ '../../node_modules/contentful-management/dist/es-modules/entities/environment.js'
          )
          /* harmony import */ var _entry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ./entry */ '../../node_modules/contentful-management/dist/es-modules/entities/entry.js'
          )
          /* harmony import */ var _asset__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ./asset */ '../../node_modules/contentful-management/dist/es-modules/entities/asset.js'
          )
          /* harmony import */ var _content_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! ./content-type */ '../../node_modules/contentful-management/dist/es-modules/entities/content-type.js'
          )
          /* harmony import */ var _editor_interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! ./editor-interface */ '../../node_modules/contentful-management/dist/es-modules/entities/editor-interface.js'
          )
          /* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
            /*! ./locale */ '../../node_modules/contentful-management/dist/es-modules/entities/locale.js'
          )
          /* harmony import */ var _webhook__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
            /*! ./webhook */ '../../node_modules/contentful-management/dist/es-modules/entities/webhook.js'
          )
          /* harmony import */ var _space_membership__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
            /*! ./space-membership */ '../../node_modules/contentful-management/dist/es-modules/entities/space-membership.js'
          )
          /* harmony import */ var _role__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
            /*! ./role */ '../../node_modules/contentful-management/dist/es-modules/entities/role.js'
          )
          /* harmony import */ var _api_key__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
            /*! ./api-key */ '../../node_modules/contentful-management/dist/es-modules/entities/api-key.js'
          )
          /* harmony import */ var _preview_api_key__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
            /*! ./preview-api-key */ '../../node_modules/contentful-management/dist/es-modules/entities/preview-api-key.js'
          )
          /* harmony import */ var _upload__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
            /*! ./upload */ '../../node_modules/contentful-management/dist/es-modules/entities/upload.js'
          )
          /* harmony import */ var _organization__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
            /*! ./organization */ '../../node_modules/contentful-management/dist/es-modules/entities/organization.js'
          )
          /* harmony import */ var _ui_extension__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
            /*! ./ui-extension */ '../../node_modules/contentful-management/dist/es-modules/entities/ui-extension.js'
          )
          /* harmony import */ var _snapshot__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
            /*! ./snapshot */ '../../node_modules/contentful-management/dist/es-modules/entities/snapshot.js'
          )
          /* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
            /*! ./user */ '../../node_modules/contentful-management/dist/es-modules/entities/user.js'
          )
          /* harmony import */ var _personal_access_token__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
            /*! ./personal-access-token */ '../../node_modules/contentful-management/dist/es-modules/entities/personal-access-token.js'
          )
          /* harmony import */ var _usage_period__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
            /*! ./usage-period */ '../../node_modules/contentful-management/dist/es-modules/entities/usage-period.js'
          )
          /* harmony import */ var _usage__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
            /*! ./usage */ '../../node_modules/contentful-management/dist/es-modules/entities/usage.js'
          )

          /* harmony default export */ __webpack_exports__['default'] = {
            space: _space__WEBPACK_IMPORTED_MODULE_0__,
            environment: _environment__WEBPACK_IMPORTED_MODULE_1__,
            entry: _entry__WEBPACK_IMPORTED_MODULE_2__,
            asset: _asset__WEBPACK_IMPORTED_MODULE_3__,
            contentType: _content_type__WEBPACK_IMPORTED_MODULE_4__,
            editorInterface: _editor_interface__WEBPACK_IMPORTED_MODULE_5__,
            locale: _locale__WEBPACK_IMPORTED_MODULE_6__,
            webhook: _webhook__WEBPACK_IMPORTED_MODULE_7__,
            spaceMembership: _space_membership__WEBPACK_IMPORTED_MODULE_8__,
            role: _role__WEBPACK_IMPORTED_MODULE_9__,
            apiKey: _api_key__WEBPACK_IMPORTED_MODULE_10__,
            previewApiKey: _preview_api_key__WEBPACK_IMPORTED_MODULE_11__,
            upload: _upload__WEBPACK_IMPORTED_MODULE_12__,
            organization: _organization__WEBPACK_IMPORTED_MODULE_13__,
            uiExtension: _ui_extension__WEBPACK_IMPORTED_MODULE_14__,
            snapshot: _snapshot__WEBPACK_IMPORTED_MODULE_15__,
            user: _user__WEBPACK_IMPORTED_MODULE_16__,
            personalAccessToken: _personal_access_token__WEBPACK_IMPORTED_MODULE_17__,
            usagePeriod: _usage_period__WEBPACK_IMPORTED_MODULE_18__,
            usage: _usage__WEBPACK_IMPORTED_MODULE_19__
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/locale.js':
        /*!***************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/locale.js ***!
  \***************************************************************************************************************/
        /*! exports provided: wrapLocale, wrapLocaleCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapLocale',
            function() {
              return wrapLocale
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapLocaleCollection',
            function() {
              return wrapLocaleCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /**
           * Locale instances
           * @namespace Locale
           */

          /**
           * @memberof Locale
           * @typedef Locale
           * @prop {Meta.Sys} sys - System metadata
           * @prop {string} name
           * @prop {string} code - Locale code (example: en-us)
           * @prop {string} fallbackCode - the locale code to fallback to when there is not content for the current locale
           * @prop {boolean} contentDeliveryApi - If the content under this locale should be available on the CDA (for public reading)
           * @prop {boolean} contentManagementApi - If the content under this locale should be available on the CMA (for editing)
           * @prop {boolean} default - If this is the default locale
           * @prop {boolean} optional - If the locale needs to be filled in on entries or not
           * @prop {function(): Object} toPlainObject() - Returns this Locale as a plain JS object
           */

          function createLocaleApi(http) {
            return {
              /**
               * Sends an update to the server with any changes made to the object's properties
               * @memberof Locale
               * @func update
               * @return {Promise<Locale>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getLocale('<locale_id>'))
               * .then((locale) => {
               *   locale.name = 'New locale name'
               *   return locale.update()
               * })
               * .then((locale) => console.log(`locale ${locale.sys.id} updated.`))
               * .catch(console.error)
               */
              update: function update() {
                var locale = this
                delete locale.default // we should not send this back
                return Object(
                  _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                    'createUpdateEntity'
                  ]
                )({
                  http: http,
                  entityPath: 'locales',
                  wrapperMethod: wrapLocale
                }).call(locale)
              },

              /**
               * Deletes this object on the server.
               * @memberof Locale
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getLocale('<locale_id>'))
               * .then((locale) => locale.delete())
               * .then(() => console.log(`locale deleted.`))
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'locales'
              })
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw locale data
           * @return {Locale} Wrapped locale data
           */
          function wrapLocale(http, data) {
            delete data.internal_code
            var locale = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(locale, createLocaleApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(locale)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw locale collection data
           * @return {LocaleCollection} Wrapped locale collection data
           */
          function wrapLocaleCollection(http, data) {
            var locales = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            locales.items = locales.items.map(function(entity) {
              return wrapLocale(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(locales)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/organization.js':
        /*!*********************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/organization.js ***!
  \*********************************************************************************************************************/
        /*! exports provided: wrapOrganizationCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapOrganizationCollection',
            function() {
              return wrapOrganizationCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )

          /**
           * This method normalizes each organization in a collection.
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw organization collection data
           * @return {OrganizationCollection} Normalized organization collection data
           */
          function wrapOrganizationCollection(http, data) {
            var organizations = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(organizations)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/personal-access-token.js':
        /*!******************************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/personal-access-token.js ***!
  \******************************************************************************************************************************/
        /*! exports provided: wrapPersonalAccessToken, wrapPersonalAccessTokenCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapPersonalAccessToken',
            function() {
              return wrapPersonalAccessToken
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapPersonalAccessTokenCollection',
            function() {
              return wrapPersonalAccessTokenCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )
          /**
           * Personal access token
           * @namespace PersonalAccessToken
           * */

          function createPersonalAccessToken(http) {
            return {
              /**
               * Revokes a personal access token
               * @memberof PersonalAccessToken
               * @func revoke
               * @return {Promise<PersonalAccessToken>} Object the revoked personal access token
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *  accessToken: <content_management_api_key>
               * })
               *
               * client.getPersonalAccessToken('<token-id>')
               *  .then((personalAccessToken) => {
               *    return personalAccessToken.revoke()
               *  })
               *  .catch(console.error)
               */
              revoke: function revoke() {
                var baseURL = http.defaults.baseURL.replace(
                  '/spaces/',
                  '/users/me/access_tokens'
                )
                return http
                  .put(this.sys.id + '/revoked', null, {
                    baseURL: baseURL
                  })
                  .then(function(response) {
                    return response.data
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_3__['default'])
              }
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw  personal access token data
           * @return {PersonalAccessToken} Wrapped personal access token
           */
          function wrapPersonalAccessToken(http, data) {
            var personalAccessToken = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(personalAccessToken, createPersonalAccessToken(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(personalAccessToken)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw personal access collection data
           * @return {PersonalAccessTokenCollection} Wrapped personal access token collection data
           */
          function wrapPersonalAccessTokenCollection(http, data) {
            var personalAccessTokens = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            personalAccessTokens.items = personalAccessTokens.items.map(
              function(entity) {
                return wrapPersonalAccessToken(http, entity)
              }
            )
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(personalAccessTokens)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/preview-api-key.js':
        /*!************************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/preview-api-key.js ***!
  \************************************************************************************************************************/
        /*! exports provided: wrapPreviewApiKey, wrapPreviewApiKeyCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapPreviewApiKey',
            function() {
              return wrapPreviewApiKey
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapPreviewApiKeyCollection',
            function() {
              return wrapPreviewApiKeyCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /**
           * Preview Api Key instances
           * @namespace PreviewApiKey
           */

          /**
           * @memberof PreviewApiKey
           * @typedef PreviewApiKey
           * @prop {Meta.Sys} sys - System metadata
           * @prop {string} name
           * @prop {string} description
           * @prop {function(): Object} toPlainObject() - Returns this Preview Api Key as a plain JS object
           */

          function createPreviewApiKeyApi(http) {
            return {}
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw api key data
           * @return {PreviewApiKey} Wrapped preview api key data
           */
          function wrapPreviewApiKey(http, data) {
            var previewApiKey = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(previewApiKey, createPreviewApiKeyApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(previewApiKey)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw api key collection data
           * @return {PreviewApiKeyCollection} Wrapped api key collection data
           */
          function wrapPreviewApiKeyCollection(http, data) {
            var previewApiKeys = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            previewApiKeys.items = previewApiKeys.items.map(function(entity) {
              return wrapPreviewApiKey(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(previewApiKeys)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/role.js':
        /*!*************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/role.js ***!
  \*************************************************************************************************************/
        /*! exports provided: wrapRole, wrapRoleCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapRole',
            function() {
              return wrapRole
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapRoleCollection',
            function() {
              return wrapRoleCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /**
           * Role instances
           * @namespace Role
           */

          /**
           * See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/roles/create-a-role
           * @memberof Role
           * @typedef Role
           * @prop {Meta.Sys} sys - System metadata
           * @prop {string} name
           * @prop {object} permissions - Permissions for application sections
           * @prop {object} policies
           * @prop {function(): Object} toPlainObject() - Returns this Role as a plain JS object
           */

          function createRoleApi(http) {
            return {
              /**
               * Sends an update to the server with any changes made to the object's properties
               * @memberof Role
               * @func update
               * @return {Promise<Role>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getRole('<roles_id>'))
               * .then((roles) => {
               *   roles.name = 'New role name'
               *   return roles.update()
               * })
               * .then((roles) => console.log(`roles ${roles.sys.id} updated.`))
               * .catch(console.error)
               */
              update: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUpdateEntity'
                ]
              )({
                http: http,
                entityPath: 'roles',
                wrapperMethod: wrapRole
              }),

              /**
               * Deletes this object on the server.
               * @memberof Role
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getRole('<role_id>'))
               * .then((role) => role.delete())
               * .then((role) => console.log(`role deleted.`))
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'roles'
              })
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw role data
           * @return {Role} Wrapped role data
           */
          function wrapRole(http, data) {
            var role = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(role, createRoleApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(role)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw role collection data
           * @return {RoleCollection} Wrapped role collection data
           */
          function wrapRoleCollection(http, data) {
            var roles = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            roles.items = roles.items.map(function(entity) {
              return wrapRole(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(roles)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/snapshot.js':
        /*!*****************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/snapshot.js ***!
  \*****************************************************************************************************************/
        /*! exports provided: wrapSnapshot, wrapSnapshotCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapSnapshot',
            function() {
              return wrapSnapshot
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapSnapshotCollection',
            function() {
              return wrapSnapshotCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /**
           * Snapshot instances
           * @namespace Snapshot
           */

          /**
           * @memberof Snapshot
           * @typedef Snapshot
           * @prop {Meta.Sys} sys - System metadata
           * @prop {Object<EntryFields.Field>} fields - Object with content for each field
           * @prop {function(): Object} toPlainObject() - Returns this Snapshot as a plain JS object
           */
          function createSnapshotApi(http) {
            return {
              /* In case the snapshot object evolve later */
            }
          }
          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw snapshot data
           * @return {Snapshot} Wrapped snapshot data
           */
          function wrapSnapshot(http, data) {
            var snapshot = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(snapshot, createSnapshotApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(snapshot)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw snapshot collection data
           * @return {ApiKeyCollection} Wrapped snapshot collection data
           */
          function wrapSnapshotCollection(http, data) {
            var snapshots = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            snapshots.items = snapshots.items.map(function(entity) {
              return wrapSnapshot(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(snapshots)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/space-membership.js':
        /*!*************************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/space-membership.js ***!
  \*************************************************************************************************************************/
        /*! exports provided: wrapSpaceMembership, wrapSpaceMembershipCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapSpaceMembership',
            function() {
              return wrapSpaceMembership
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapSpaceMembershipCollection',
            function() {
              return wrapSpaceMembershipCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /**
           * Space Membership instances
           * @namespace SpaceMembership
           */

          /**
           * @memberof SpaceMembership
           * @typedef SpaceMembership
           * @prop {Meta.Sys} sys - System metadata
           * @prop {string} name
           * @prop {boolean} admin - User is an admin
           * @prop {array} roles - Array of Role Links
           * @prop {function(): Object} toPlainObject() - Returns this Space Membership as a plain JS object
           */

          function createSpaceMembershipApi(http) {
            return {
              /**
               * Sends an update to the server with any changes made to the object's properties
               * @memberof SpaceMembership
               * @func update
               * @return {Promise<SpaceMembership>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getSpaceMembership('<spaceMembership_id>'))
               * .then((spaceMembership) => {
               *  spaceMembership.name = 'new space membership name'
               * })
               * .then((spaceMembership) => console.log(`spaceMembership ${spaceMembership.sys.id} updated.`))
               * .catch(console.error)
               */
              update: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUpdateEntity'
                ]
              )({
                http: http,
                entityPath: 'space_memberships',
                wrapperMethod: wrapSpaceMembership
              }),

              /**
               * Deletes this object on the server.
               * @memberof SpaceMembership
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getSpaceMembership('<spaceMembership_id>'))
               * .then((spaceMembership) => spaceMembership.delete())
               * .then(() => console.log(`spaceMembership deleted.`))
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'space_memberships'
              })
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw space membership data
           * @return {SpaceMembership} Wrapped space membership data
           */
          function wrapSpaceMembership(http, data) {
            var spaceMembership = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(spaceMembership, createSpaceMembershipApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(spaceMembership)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw space membership collection data
           * @return {SpaceMembershipCollection} Wrapped space membership collection data
           */
          function wrapSpaceMembershipCollection(http, data) {
            var spaceMemberships = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            spaceMemberships.items = spaceMemberships.items.map(function(
              entity
            ) {
              return wrapSpaceMembership(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(spaceMemberships)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/space.js':
        /*!**************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/space.js ***!
  \**************************************************************************************************************/
        /*! exports provided: wrapSpace, wrapSpaceCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapSpace',
            function() {
              return wrapSpace
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapSpaceCollection',
            function() {
              return wrapSpaceCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _create_space_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../create-space-api */ '../../node_modules/contentful-management/dist/es-modules/create-space-api.js'
          )

          /**
           * @memberof Space
           * @typedef Space
           * @prop {Object} sys - System metadata
           * @prop {string} sys.id - Space id
           * @prop {string} sys.type - Entity type
           * @prop {string} name - Space name
           * @prop {function(): Object} toPlainObject() - Returns this Space as a plain JS object
           */

          /**
           * @memberof Space
           * @typedef SpaceCollection
           * @prop {number} total
           * @prop {number} skip
           * @prop {number} limit
           * @prop {Array<Space.Space>} items
           * @prop {function(): Object} toPlainObject() - Returns this Space collection as a plain JS object
           */

          /**
           * This method creates the API for the given space with all the methods for
           * reading and creating other entities. It also passes down a clone of the
           * http client with a space id, so the base path for requests now has the
           * space id already set.
           * @private
           * @param  {Object} http - HTTP client instance
           * @param  {Object} data - API response for a Space
           * @return {Space}
           */
          function wrapSpace(http, data) {
            var space = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            var _http$httpClientParam = http.httpClientParams,
              hostUpload = _http$httpClientParam.hostUpload,
              defaultHostnameUpload =
                _http$httpClientParam.defaultHostnameUpload

            var spaceScopedHttpClient = http.cloneWithNewParams({
              space: space.sys.id
            })
            var spaceScopedUploadClient = http.cloneWithNewParams({
              space: space.sys.id,
              host: hostUpload || defaultHostnameUpload
            })
            var spaceApi = Object(
              _create_space_api__WEBPACK_IMPORTED_MODULE_3__['default']
            )({
              http: spaceScopedHttpClient,
              httpUpload: spaceScopedUploadClient
            })
            var enhancedSpace = Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(space, spaceApi)
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(enhancedSpace)
          }

          /**
           * This method wraps each space in a collection with the space API. See wrapSpace
           * above for more details.
           * @private
           * @param  {Object} http - HTTP client instance
           * @param  {Object} data - API response for a Space collection
           * @return {SpaceCollection}
           */
          function wrapSpaceCollection(http, data) {
            var spaces = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            spaces.items = spaces.items.map(function(entity) {
              return wrapSpace(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(spaces)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/ui-extension.js':
        /*!*********************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/ui-extension.js ***!
  \*********************************************************************************************************************/
        /*! exports provided: wrapUiExtension, wrapUiExtensionCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapUiExtension',
            function() {
              return wrapUiExtension
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapUiExtensionCollection',
            function() {
              return wrapUiExtensionCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /**
           * UI Extension instances
           * @namespace UiExtension
           */

          /**
           * @memberof UiExtension
           * @typedef UiExtension
           * @prop {Meta.Sys} sys - System metadata
           * @prop {object} extension - UI Extension config
           * @prop {string} extension.name - Extension name
           * @prop {array} extension.fieldTypes - Field types where an extension can be used
           * @prop {array} extension.src - URL where the root HTML document of the extension can be found
           * @prop {array} extension.srcdoc - String representation of the extension (e.g. inline HTML code)
           * @prop {boolean} extension.sidebar - Controls the location of the extension. If true it will be rendered on the sidebar instead of replacing the field's editing control
           * @prop {function(): Object} toPlainObject() - Returns this UI Extension as a plain JS object
           */

          function createUiExtensionApi(http) {
            return {
              /**
               * Sends an update to the server with any changes made to the object's properties
               * @memberof UiExtension
               * @func update
               * @return {Promise<UiExtension>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getUiExtension('<ui_extension_id>'))
               * .then((uiExtension) => {
               *   uiExtension.extension.name = 'New UI Extension name'
               *   return uiExtension.update()
               * })
               * .then((uiExtension) => console.log(`UI Extension ${uiExtension.sys.id} updated.`))
               * .catch(console.error)
               */
              update: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createUpdateEntity'
                ]
              )({
                http: http,
                entityPath: 'extensions',
                wrapperMethod: wrapUiExtension
              }),

              /**
               * Deletes this object on the server.
               * @memberof UiExtension
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getUiExtension('<ui_extension_id>'))
               * .then((uiExtension) => uiExtension.delete())
               * .then(() => console.log(`UI Extension deleted.`))
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'extensions'
              })
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw UI Extension data
           * @return {UiExtension} Wrapped UI Extension data
           */
          function wrapUiExtension(http, data) {
            var uiExtension = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(uiExtension, createUiExtensionApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(uiExtension)
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw UI Extension collection data
           * @return {UiExtensionCollection} Wrapped UI Extension collection data
           */
          function wrapUiExtensionCollection(http, data) {
            var uiExtensions = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            uiExtensions.items = uiExtensions.items.map(function(entity) {
              return wrapUiExtension(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(uiExtensions)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/upload.js':
        /*!***************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/upload.js ***!
  \***************************************************************************************************************/
        /*! exports provided: wrapUpload */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapUpload',
            function() {
              return wrapUpload
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /**
           * Upload instances
           * @namespace Upload
           */

          /**
           * @memberof Upload
           * @typedef {Upload} Upload
           * @prop {Object} sys - Standard system metadata with additional asset specific properties
           * @prop {string} sys.id - The id of the upload
           * @prop {function(): Promise} delete - Deletes an upload
           * @prop {function(): Object} toPlainObject - Returns this Asset as a plain JS object
           */

          function createUploadApi(http) {
            return {
              /**
               * Deletes this object on the server.
               * @memberof Upload
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getUpload('<upload_id>'))
               * .then((upload) => upload.delete())
               * .then((upload) => console.log(`upload ${upload.sys.id} updated.`))
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_3__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'uploads'
              })
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw upload data
           * @return {Upload} Wrapped upload data
           */
          function wrapUpload(http, data) {
            var upload = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(upload, createUploadApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(upload)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/usage-period.js':
        /*!*********************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/usage-period.js ***!
  \*********************************************************************************************************************/
        /*! exports provided: wrapUsagePeriodCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapUsagePeriodCollection',
            function() {
              return wrapUsagePeriodCollection
            }
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__
          )
          /**
           * UsagePeriod
           * @namespace UsagePeriod
           */

          /**
           * @memberof UsagePeriod
           * @typedef UsagePeriod
           * @prop {Object} sys - System metadata
           * @prop {string} sys.id - User id
           * @prop {string} sys.type - Entity type, UsagePeriod
           * @prop {string} startDate - Start date of usage period
           * @prop {string} endDate - End date of usage period. Will be null for current period
           */

          /**
           * @memberof UsagePeriod
           * @typedef UsagePeriodCollection
           * @prop {number} total
           * @prop {number} skip
           * @prop {number} limit
           * @prop {Object} sys
           * @prop {Array<UsagePeriod.UsagePeriod>} items
           * @prop {function(): Object} toPlainObject() - Returns this Space collection as a plain JS object
           */

          /**
           * This method normalizes each organization in a collection.
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw usage period collection data
           * @return {UsagePeriod.UsagePeriodCollection} Normalized usage period collection data
           */
          function wrapUsagePeriodCollection(http, data) {
            var usagePeriods = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default()(data))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__['freezeSys']
            )(usagePeriods)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/usage.js':
        /*!**************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/usage.js ***!
  \**************************************************************************************************************/
        /*! exports provided: wrapUsageCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapUsageCollection',
            function() {
              return wrapUsageCollection
            }
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__
          )
          /**
           * Usages
           * @namespace Usage
           */

          /**
           * @memberof Usage
           * @typedef Usage
           * @prop {Object} sys - System metadata
           * @prop {string} sys.id - User id in form {usagePeriod}_{orgID or spaceID}
           * @prop {string} sys.type - Entity type, ApiUsage
           * @prop {Object} sys.usagePeriod - Link to <UsagePeriod>
           * @prop {Object} organization - optional, depends on type of usage requested. Link to org
           * @prop {Object} space - optional, depends on type of usage requested. Link to space
           * @prop {string} unitOfMeasure
           * @prop {string} interval
           * @prop {string} startDate
           * @prop {string} endDate
           * @prop {Array<number>} usage
           */

          /**
           * @memberof Usage
           * @typedef UsageCollection
           * @prop {number} total
           * @prop {number} skip
           * @prop {number} limit
           * @prop {Object} sys
           * @prop {Array<Usage.Usage>} items
           * @prop {function(): Object} toPlainObject() - Returns this Space collection as a plain JS object
           */

          /**
           * This method normalizes each organization in a collection.
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw usage period collection data
           * @return {Usage.UsageCollection} Normalized usage period collection data
           */
          function wrapUsageCollection(http, data) {
            var usages = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default()(data))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__['freezeSys']
            )(usages)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/user.js':
        /*!*************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/user.js ***!
  \*************************************************************************************************************/
        /*! exports provided: wrapUser */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapUser',
            function() {
              return wrapUser
            }
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2__
          )

          /**
           * @memberof User
           * @typedef User
           * @prop {Object} sys - System metadata
           * @prop {string} sys.id - User id
           * @prop {string} sys.type - Entity type
           * @prop {string} firstName - User first name
           * @prop {string} lastName - User last name
           * @prop {string} avatarUrl - User avatar url
           * @prop {string} email - User email
           * @prop {boolean} activated - User activated
           * @prop {number} signInCount - User sign in count
           * @prop {boolean} confirmed - User confirmed
           * @prop {function(): Object} toPlainObject() - Returns this User as a plain JS object
           */

          /*
           *
           * @private
           * */
          function wrapUser(http, data) {
            var user = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_1__['default']
            )(user, {})
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_0__['freezeSys']
            )(user)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/entities/webhook.js':
        /*!****************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/entities/webhook.js ***!
  \****************************************************************************************************************/
        /*! exports provided: wrapWebhook, wrapWebhookCollection */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapWebhook',
            function() {
              return wrapWebhook
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'wrapWebhookCollection',
            function() {
              return wrapWebhookCollection
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! contentful-sdk-core */ '../../node_modules/contentful-sdk-core/index.es-modules.js'
          )
          /* harmony import */ var _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ../enhance-with-methods */ '../../node_modules/contentful-management/dist/es-modules/enhance-with-methods.js'
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ../error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )
          /* harmony import */ var _instance_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! ../instance-actions */ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js'
          )
          /**
           * Webhook instances
           * @namespace Webhook
           */

          /**
           * @memberof Webhook
           * @typedef Webhook
           * @prop {Meta.Sys} sys - System metadata
           * @prop {string} name
           * @prop {string} url - Url which the webhook will call
           * @prop {string} httpBasicUsername - Username for basic HTTP authentication
           * @prop {string} httpBasicPassword - Password for basic HTTP authentication
           * @prop {object} headers - Key value pairs of additional headers to be sent with every webhook call.
           * @prop {array} topics - Topics which this webhook should be subscribed to. See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/webhooks/create-a-webhook for more details
           * @prop {function(): Object} toPlainObject() - Returns this Webhook as a plain JS object
           */

          function createWebhookApi(http) {
            return {
              /**
               * Sends an update to the server with any changes made to the object's properties
               * @memberof Webhook
               * @func update
               * @return {Promise<Webhook>} Object returned from the server with updated changes.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getWebhook('<webhook_id>'))
               * .then((webhook) => {
               *  webhook.name = 'new webhook name'
               *  return webhook.update()
               * })
               * .then((webhook) => console.log(`webhook ${webhook.sys.id} updated.`))
               * .catch(console.error)
               */
              update: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createUpdateEntity'
                ]
              )({
                http: http,
                entityPath: 'webhook_definitions',
                wrapperMethod: wrapWebhook
              }),

              /**
               * Deletes this object on the server.
               * @memberof Webhook
               * @func delete
               * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getWebhook('<webhook_id>'))
               * .then((webhook) => webhook.delete())
               * .then((webhook) => console.log(`webhook ${webhook.sys.id} updated.`))
               * .catch(console.error)
               */
              delete: Object(
                _instance_actions__WEBPACK_IMPORTED_MODULE_4__[
                  'createDeleteEntity'
                ]
              )({
                http: http,
                entityPath: 'webhook_definitions'
              }),

              /**
               * List of the most recent webhook calls. See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/webhook-calls/webhook-call-overviews for more details.
               * @memberof Webhook
               * @func getCalls
               * @return {Promise<object>} Promise for list of calls
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getWebhook('<webhook_id>'))
               * .then((webhook) => webhook.getCalls())
               * .then((response) => console.log(response.items)) // webhook calls
               * .catch(console.error)
               */
              getCalls: function getCalls() {
                return http
                  .get('webhooks/' + this.sys.id + '/calls')
                  .then(function(response) {
                    return response.data
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_3__['default'])
              },

              /**
               * Webhook call with specific id. See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/webhook-calls/webhook-call-overviews for more details
               * @memberof Webhook
               * @func getCalls
               * @return {Promise<object>} Promise for call details
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getWebhook('<webhook_id>'))
               * .then((webhook) => webhook.getCall(<call-id>))
               * .then((webhookCall) => console.log(webhookCall))
               * .catch(console.error)
               */
              getCall: function getCall(id) {
                return http
                  .get('webhooks/' + this.sys.id + '/calls/' + id)
                  .then(function(response) {
                    return response.data
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_3__['default'])
              },

              /**
               * Overview of the health of webhook calls. See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/webhook-calls/webhook-call-overviews for more details.
               * @memberof Webhook
               * @func getHealth
               * @return {Promise<object>} Promise for health info
               * @example
               * const contentful = require('contentful-management')
               *
               * const client = contentful.createClient({
               *   accessToken: '<content_management_api_key>'
               * })
               *
               * client.getSpace('<space_id>')
               * .then((space) => space.getWebhook('<webhook_id>'))
               * .then((webhook) => webhook.getHealth())
               * .then((webhookHealth) => console.log(webhookHealth))
               * .catch(console.error)
               */
              getHealth: function getHealth() {
                return http
                  .get('webhooks/' + this.sys.id + '/health')
                  .then(function(response) {
                    return response.data
                  }, _error_handler__WEBPACK_IMPORTED_MODULE_3__['default'])
              }
            }
          }

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw webhook data
           * @return {Webhook} Wrapped webhook data
           */
          function wrapWebhook(http, data) {
            var webhook = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            Object(
              _enhance_with_methods__WEBPACK_IMPORTED_MODULE_2__['default']
            )(webhook, createWebhookApi(http))
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(webhook)
          }

          /**
           * @memberof Webhook
           * @typedef WebhookCollection
           * @prop {number} total
           * @prop {number} skip
           * @prop {number} limit
           * @prop {Array<Webhook.Webhook>} items
           * @prop {function(): Object} toPlainObject() - Returns this Webhook collection as a plain JS object
           */

          /**
           * @private
           * @param {Object} http - HTTP client instance
           * @param {Object} data - Raw webhook collection data
           * @return {WebhookCollection} Wrapped webhook collection data
           */
          function wrapWebhookCollection(http, data) {
            var webhooks = Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['toPlainObject']
            )(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(data))
            webhooks.items = webhooks.items.map(function(entity) {
              return wrapWebhook(http, entity)
            })
            return Object(
              contentful_sdk_core__WEBPACK_IMPORTED_MODULE_1__['freezeSys']
            )(webhooks)
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/error-handler.js':
        /*!*************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/error-handler.js ***!
  \*************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return errorHandler
            }
          )
          /* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/isPlainObject */ '../../node_modules/lodash/isPlainObject.js'
          )
          /* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0__
          )

          /**
           * Handles errors received from the server. Parses the error into a more useful
           * format, places it in an exception and throws it.
           * See https://www.contentful.com/developers/docs/references/errors/
           * for more details on the data received on the errorResponse.data property
           * and the expected error codes.
           * @private
           * @param {Object} errorResponse - Error received from an axios request
           * @throws {ErrorResponse}
           */
          function errorHandler(errorResponse) {
            var config = errorResponse.config,
              response = errorResponse.response

            var errorName = void 0

            if (
              !lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default()(
                response
              ) ||
              !lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default()(
                config
              )
            ) {
              throw errorResponse
            }

            var data = response.data

            var errorData = {
              status: response.status,
              statusText: response.statusText,
              message: '',
              details: {}

              // Obscure the Management token
            }
            if (config.headers && config.headers['Authorization']) {
              var token = '...' + config.headers['Authorization'].substr(-5)
              config.headers['Authorization'] = 'Bearer ' + token
            }
            if (
              lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default()(
                config
              )
            ) {
              errorData.request = {
                url: config.url,
                headers: config.headers,
                method: config.method,
                payloadData: config.data
              }
            }
            if (
              lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default()(data)
            ) {
              if ('requestId' in data) {
                errorData.requestId = data.requestId || 'UNKNOWN'
              }
              if ('message' in data) {
                errorData.message = data.message || ''
              }
              if ('details' in data) {
                errorData.details = data.details || {}
              }
              if ('sys' in data) {
                if ('id' in data.sys) {
                  errorName = data.sys.id
                }
              }
            }

            var error = new Error()
            error.name =
              errorName && errorName !== 'Unknown'
                ? errorName
                : response.status + ' ' + response.statusText
            error.message = JSON.stringify(errorData, null, '  ')
            throw error
          }

          /***/
        },

      /***/ '../../node_modules/contentful-management/dist/es-modules/instance-actions.js':
        /*!****************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-management/dist/es-modules/instance-actions.js ***!
  \****************************************************************************************************************/
        /*! exports provided: createUpdateEntity, createDeleteEntity, createPublishEntity, createUnpublishEntity, createArchiveEntity, createUnarchiveEntity, createPublishedChecker, createUpdatedChecker, createDraftChecker, createArchivedChecker */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createUpdateEntity',
            function() {
              return createUpdateEntity
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createDeleteEntity',
            function() {
              return createDeleteEntity
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createPublishEntity',
            function() {
              return createPublishEntity
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createUnpublishEntity',
            function() {
              return createUnpublishEntity
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createArchiveEntity',
            function() {
              return createArchiveEntity
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createUnarchiveEntity',
            function() {
              return createUnarchiveEntity
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createPublishedChecker',
            function() {
              return createPublishedChecker
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createUpdatedChecker',
            function() {
              return createUpdatedChecker
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createDraftChecker',
            function() {
              return createDraftChecker
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createArchivedChecker',
            function() {
              return createArchivedChecker
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var _error_handler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! ./error-handler */ '../../node_modules/contentful-management/dist/es-modules/error-handler.js'
          )

          /**
           * @private
           */
          function createUpdateEntity(_ref) {
            var http = _ref.http,
              entityPath = _ref.entityPath,
              wrapperMethod = _ref.wrapperMethod

            return function() {
              var raw = this.toPlainObject()
              var data = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(
                raw
              )
              delete data.sys
              return http
                .put(entityPath + '/' + this.sys.id, data, {
                  headers: {
                    'X-Contentful-Version': this.sys.version
                  }
                })
                .then(function(response) {
                  return wrapperMethod(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }
          }

          /**
           * @private
           */
          function createDeleteEntity(_ref2) {
            var http = _ref2.http,
              entityPath = _ref2.entityPath

            return function() {
              return http
                .delete(entityPath + '/' + this.sys.id)
                .then(function(response) {},
                _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }
          }

          /**
           * @private
           */
          function createPublishEntity(_ref3) {
            var http = _ref3.http,
              entityPath = _ref3.entityPath,
              wrapperMethod = _ref3.wrapperMethod

            return function() {
              return http
                .put(entityPath + '/' + this.sys.id + '/published', null, {
                  headers: {
                    'X-Contentful-Version': this.sys.version
                  }
                })
                .then(function(response) {
                  return wrapperMethod(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }
          }

          /**
           * @private
           */
          function createUnpublishEntity(_ref4) {
            var http = _ref4.http,
              entityPath = _ref4.entityPath,
              wrapperMethod = _ref4.wrapperMethod

            return function() {
              return http
                .delete(entityPath + '/' + this.sys.id + '/published')
                .then(function(response) {
                  return wrapperMethod(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }
          }

          /**
           * @private
           */
          function createArchiveEntity(_ref5) {
            var http = _ref5.http,
              entityPath = _ref5.entityPath,
              wrapperMethod = _ref5.wrapperMethod

            return function() {
              return http
                .put(entityPath + '/' + this.sys.id + '/archived')
                .then(function(response) {
                  return wrapperMethod(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }
          }

          /**
           * @private
           */
          function createUnarchiveEntity(_ref6) {
            var http = _ref6.http,
              entityPath = _ref6.entityPath,
              wrapperMethod = _ref6.wrapperMethod

            return function() {
              return http
                .delete(entityPath + '/' + this.sys.id + '/archived')
                .then(function(response) {
                  return wrapperMethod(http, response.data)
                }, _error_handler__WEBPACK_IMPORTED_MODULE_1__['default'])
            }
          }

          /**
           * @private
           */
          function createPublishedChecker() {
            return function() {
              return !!this.sys.publishedVersion
            }
          }

          /**
           * @private
           */
          function createUpdatedChecker() {
            return function() {
              // The act of publishing an entity increases its version by 1, so any entry which has
              // 2 versions higher or more than the publishedVersion has unpublished changes.
              return !!(
                this.sys.publishedVersion &&
                this.sys.version > this.sys.publishedVersion + 1
              )
            }
          }

          /**
           * @private
           */
          function createDraftChecker() {
            return function() {
              return !this.sys.publishedVersion
            }
          }

          /**
           * @private
           */
          function createArchivedChecker() {
            return function() {
              return !!this.sys.archivedVersion
            }
          }

          /***/
        },

      /***/ '../../node_modules/contentful-sdk-core/dist/es-modules/create-http-client.js':
        /*!****************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-sdk-core/dist/es-modules/create-http-client.js ***!
  \****************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return createHttpClient
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! qs */ '../../node_modules/qs/lib/index.js'
          )
          /* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
            qs__WEBPACK_IMPORTED_MODULE_1__
          )
          /* harmony import */ var _rate_limit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ./rate-limit */ '../../node_modules/contentful-sdk-core/dist/es-modules/rate-limit.js'
          )
          /* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ./utils */ '../../node_modules/contentful-sdk-core/dist/es-modules/utils.js'
          )
          var _slicedToArray = (function() {
            function sliceIterator(arr, i) {
              var _arr = []
              var _n = true
              var _d = false
              var _e = undefined
              try {
                for (
                  var _i = arr[Symbol.iterator](), _s;
                  !(_n = (_s = _i.next()).done);
                  _n = true
                ) {
                  _arr.push(_s.value)
                  if (i && _arr.length === i) break
                }
              } catch (err) {
                _d = true
                _e = err
              } finally {
                try {
                  if (!_n && _i['return']) _i['return']()
                } finally {
                  if (_d) throw _e
                }
              }
              return _arr
            }
            return function(arr, i) {
              if (Array.isArray(arr)) {
                return arr
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i)
              } else {
                throw new TypeError(
                  'Invalid attempt to destructure non-iterable instance'
                )
              }
            }
          })()

          var _extends =
            Object.assign ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i]
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key]
                  }
                }
              }
              return target
            }

          // Matches 'sub.host:port' and extracts hostname and port
          // Also enforces toplevel domain specified, no spaces and no protocol
          var HOST_REGEX = /^(?!\w+:\/\/)([^\s:]+\.[^\s:]+)(?::(\d+))?(?!:)$/

          /**
           * Create pre configured axios instance
           * @private
           * @param {Object} axios - Axios library
           * @param {Object} httpClientParams - Initialization parameters for the HTTP client
           * @prop {string} space - Space ID
           * @prop {string} accessToken - Access Token
           * @prop {boolean=} insecure - If we should use http instead
           * @prop {string=} host - Alternate host
           * @prop {Object=} httpAgent - HTTP agent for node
           * @prop {Object=} httpsAgent - HTTPS agent for node
           * @prop {Object=} proxy - Axios proxy config
           * @prop {Object=} headers - Additional headers
           * @prop {function=} logHandler - A log handler function to process given log messages & errors. Receives the log level (error, warning & info) and the actual log data (Error object or string). (Default can be found here: https://github.com/contentful/contentful-sdk-core/blob/master/lib/create-http-client.js)
           * @return {Object} Initialized axios instance
           */
          function createHttpClient(axios, options) {
            var defaultConfig = {
              insecure: false,
              retryOnError: true,
              logHandler: function logHandler(level, data) {
                if (level === 'error' && data) {
                  var title = [data.name, data.message]
                    .filter(function(a) {
                      return a
                    })
                    .join(' - ')
                  console.error('[error] ' + title)
                  console.error(data)
                  return
                }
                console.log('[' + level + '] ' + data)
              },
              // Passed to axios
              headers: {},
              httpAgent: false,
              httpsAgent: false,
              timeout: 30000,
              proxy: false,
              basePath: ''
            }
            var config = _extends({}, defaultConfig, options)

            if (!config.accessToken) {
              var missingAccessTokenError = new TypeError(
                'Expected parameter accessToken'
              )
              config.logHandler('error', missingAccessTokenError)
              throw missingAccessTokenError
            }

            // Construct axios baseURL option
            var protocol = config.insecure ? 'http' : 'https'
            var space = config.space ? config.space + '/' : ''
            var hostname = config.defaultHostname
            var port = config.insecure ? 80 : 443

            if (HOST_REGEX.test(config.host)) {
              var parsed = config.host.split(':')
              if (parsed.length === 2) {
                var _parsed = _slicedToArray(parsed, 2)

                hostname = _parsed[0]
                port = _parsed[1]
              } else {
                hostname = parsed[0]
              }
            }

            // Ensure that basePath does start but not end with a slash
            if (config.basePath) {
              config.basePath =
                '/' +
                config.basePath
                  .split('/')
                  .filter(Boolean)
                  .join('/')
            }

            var baseURL =
              options.baseURL ||
              protocol +
                '://' +
                hostname +
                ':' +
                port +
                config.basePath +
                '/spaces/' +
                space

            config.headers['Authorization'] = 'Bearer ' + config.accessToken

            // Set these headers only for node because browsers don't like it when you
            // override user-agent or accept-encoding.
            // The SDKs should set their own X-Contentful-User-Agent.
            if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__['isNode'])()) {
              config.headers['user-agent'] =
                'node.js/' +
                Object(_utils__WEBPACK_IMPORTED_MODULE_3__['getNodeVersion'])()
              config.headers['Accept-Encoding'] = 'gzip'
            }

            var axiosOptions = {
              // Axios
              baseURL: baseURL,
              headers: config.headers,
              httpAgent: config.httpAgent,
              httpsAgent: config.httpsAgent,
              paramsSerializer:
                qs__WEBPACK_IMPORTED_MODULE_1___default.a.stringify,
              proxy: config.proxy,
              timeout: config.timeout,
              // Contentful
              logHandler: config.logHandler,
              retryOnError: config.retryOnError
            }
            var instance = axios.create(axiosOptions)
            instance.httpClientParams = options

            /**
             * Creates a new axios instance with the same default base parameters as the
             * current one, and with any overrides passed to the newParams object
             * This is useful as the SDKs use dependency injection to get the axios library
             * and the version of the library comes from different places depending
             * on whether it's a browser build or a node.js build.
             * @private
             * @param {Object} httpClientParams - Initialization parameters for the HTTP client
             * @return {Object} Initialized axios instance
             */
            instance.cloneWithNewParams = function(newParams) {
              return createHttpClient(
                axios,
                _extends(
                  {},
                  lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(
                    options
                  ),
                  newParams
                )
              )
            }
            Object(_rate_limit__WEBPACK_IMPORTED_MODULE_2__['default'])(
              instance
            )
            return instance
          }

          /***/
        },

      /***/ '../../node_modules/contentful-sdk-core/dist/es-modules/create-request-config.js':
        /*!*******************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-sdk-core/dist/es-modules/create-request-config.js ***!
  \*******************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return createRequestConfig
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )

          /**
           * Creates request parameters configuration by parsing an existing query object
           * @private
           * @param {Object} query
           * @return {Object} Config object with `params` property, ready to be used in axios
           */
          function createRequestConfig(_ref) {
            var query = _ref.query

            var config = {}
            delete query.resolveLinks
            config.params = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(
              query
            )
            return config
          }

          /***/
        },

      /***/ '../../node_modules/contentful-sdk-core/dist/es-modules/enforce-obj-path.js':
        /*!**************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-sdk-core/dist/es-modules/enforce-obj-path.js ***!
  \**************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return enforceObjPath
            }
          )
          function enforceObjPath(obj, path) {
            if (!(path in obj)) {
              var err = new Error()
              err.name = 'PropertyMissing'
              err.message =
                'Required property ' +
                path +
                ' missing from:\n\n' +
                JSON.stringify(obj) +
                '\n\n'
              throw err
            }
            return true
          }

          /***/
        },

      /***/ '../../node_modules/contentful-sdk-core/dist/es-modules/freeze-sys.js':
        /*!********************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-sdk-core/dist/es-modules/freeze-sys.js ***!
  \********************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return freezeSys
            }
          )
          /* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/isPlainObject */ '../../node_modules/lodash/isPlainObject.js'
          )
          /* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0__
          )

          function freezeObjectDeep(obj) {
            Object.keys(obj).forEach(function(key) {
              var value = obj[key]
              if (
                lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default()(
                  value
                )
              ) {
                freezeObjectDeep(value)
              }
            })
            return Object.freeze(obj)
          }

          function freezeSys(obj) {
            freezeObjectDeep(obj.sys || {})
            return obj
          }

          /***/
        },

      /***/ '../../node_modules/contentful-sdk-core/dist/es-modules/get-user-agent.js':
        /*!************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-sdk-core/dist/es-modules/get-user-agent.js ***!
  \************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return getUserAgentHeader
            }
          )
          /* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! os */ 'os'
          )
          /* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            os__WEBPACK_IMPORTED_MODULE_0__
          )
          /* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! ./utils */ '../../node_modules/contentful-sdk-core/dist/es-modules/utils.js'
          )

          function isReactNative() {
            return (
              typeof window !== 'undefined' &&
              'navigator' in window &&
              'product' in window.navigator &&
              window.navigator.product === 'ReactNative'
            )
          }

          function getBrowserOS() {
            if (!window) {
              return null
            }
            var userAgent = window.navigator.userAgent
            var platform = window.navigator.platform
            var macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K']
            var windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE']
            var iosPlatforms = ['iPhone', 'iPad', 'iPod']
            var os = null

            if (macosPlatforms.indexOf(platform) !== -1) {
              os = 'macOS'
            } else if (iosPlatforms.indexOf(platform) !== -1) {
              os = 'iOS'
            } else if (windowsPlatforms.indexOf(platform) !== -1) {
              os = 'Windows'
            } else if (/Android/.test(userAgent)) {
              os = 'Android'
            } else if (/Linux/.test(platform)) {
              os = 'Linux'
            }

            return os
          }

          function getNodeOS() {
            var os =
              Object(os__WEBPACK_IMPORTED_MODULE_0__['platform'])() || 'linux'
            var version =
              Object(os__WEBPACK_IMPORTED_MODULE_0__['release'])() || '0.0.0'
            var osMap = {
              android: 'Android',
              aix: 'Linux',
              darwin: 'macOS',
              freebsd: 'Linux',
              linux: 'Linux',
              openbsd: 'Linux',
              sunos: 'Linux',
              win32: 'Windows'
            }
            if (os in osMap) {
              return (osMap[os] || 'Linux') + '/' + version
            }
            return null
          }

          function getUserAgentHeader(sdk, application, integration, feature) {
            var headerParts = []

            if (application) {
              headerParts.push('app ' + application)
            }

            if (integration) {
              headerParts.push('integration ' + integration)
            }

            if (feature) {
              headerParts.push('feature ' + feature)
            }

            headerParts.push('sdk ' + sdk)

            var os = null
            if (isReactNative()) {
              os = getBrowserOS()
              headerParts.push('platform ReactNative')
            } else if (
              Object(_utils__WEBPACK_IMPORTED_MODULE_1__['isNode'])()
            ) {
              os = getNodeOS()
              headerParts.push(
                'platform node.js/' +
                  Object(
                    _utils__WEBPACK_IMPORTED_MODULE_1__['getNodeVersion']
                  )()
              )
            } else {
              os = getBrowserOS()
              headerParts.push('platform browser')
            }

            if (os) {
              headerParts.push('os ' + os)
            }

            return (
              headerParts
                .filter(function(item) {
                  return item !== ''
                })
                .join('; ') + ';'
            )
          }

          /***/
        },

      /***/ '../../node_modules/contentful-sdk-core/dist/es-modules/rate-limit.js':
        /*!********************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-sdk-core/dist/es-modules/rate-limit.js ***!
  \********************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return rateLimit
            }
          )
          var attempts = {}
          var networkErrorAttempts = 0

          function rateLimit(instance) {
            var maxRetry =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : 5

            instance.interceptors.response.use(
              function(response) {
                // we don't need to do anything here
                return response
              },
              function(error) {
                var response = error.response,
                  config = error.config

                // Do not retry if it is disabled or no request config exists (not an axios error)

                if (!config || !instance.defaults.retryOnError) {
                  return Promise.reject(error)
                }

                var retryErrorType = null
                var wait = 0

                // Errors without response did not recieve anything from the server
                if (!response) {
                  retryErrorType = 'Connection'
                  networkErrorAttempts++

                  if (networkErrorAttempts > maxRetry) {
                    error.attempts = networkErrorAttempts
                    return Promise.reject(error)
                  }

                  wait = Math.pow(Math.SQRT2, networkErrorAttempts)
                  response = {}
                } else {
                  networkErrorAttempts = 0
                }

                if (response.status >= 500 && response.status < 600) {
                  // 5** errors are server related
                  retryErrorType = 'Server ' + response.status
                  var headers = response.headers || {}
                  var requestId = headers['x-contentful-request-id'] || null
                  attempts[requestId] = attempts[requestId] || 0
                  attempts[requestId]++

                  // we reject if there are too much errors of with the same request id
                  if (attempts[requestId] > maxRetry || !requestId) {
                    error.attempts = attempts[requestId]
                    return Promise.reject(error)
                  }
                  wait = Math.pow(Math.SQRT2, attempts[requestId])
                } else if (response.status === 429) {
                  // 429 errors are exceeded rate limit exceptions
                  retryErrorType = 'Rate limit'
                  // all headers are lowercased by axios https://github.com/mzabriskie/axios/issues/413
                  if (
                    response.headers &&
                    error.response.headers['x-contentful-ratelimit-reset']
                  ) {
                    wait = response.headers['x-contentful-ratelimit-reset']
                  }
                }

                var delay = function delay(ms) {
                  return new Promise(function(resolve) {
                    setTimeout(resolve, ms)
                  })
                }

                if (retryErrorType) {
                  // convert to ms and add jitter
                  wait = Math.floor(wait * 1000 + Math.random() * 200 + 500)
                  instance.defaults.logHandler(
                    'warning',
                    retryErrorType +
                      ' error occurred. Waiting for ' +
                      wait +
                      ' ms before retrying...'
                  )
                  return delay(wait).then(function() {
                    return instance(config)
                  })
                }
                return Promise.reject(error)
              }
            )
          }

          /***/
        },

      /***/ '../../node_modules/contentful-sdk-core/dist/es-modules/to-plain-object.js':
        /*!*************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-sdk-core/dist/es-modules/to-plain-object.js ***!
  \*************************************************************************************************************/
        /*! exports provided: default */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'default',
            function() {
              return toPlainObject
            }
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! lodash/cloneDeep */ '../../node_modules/lodash/cloneDeep.js'
          )
          /* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__
          )

          /**
           * Mixes in a method to return just a plain object with no additional methods
           * @private
           * @param {Object} data - Any plain JSON response returned from the API
           * @return {Object} Enhanced object with toPlainObject method
           */
          function toPlainObject(data) {
            return Object.defineProperty(data, 'toPlainObject', {
              enumerable: false,
              configurable: false,
              writable: false,
              value: function value() {
                return lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()(
                  this
                )
              }
            })
          }

          /***/
        },

      /***/ '../../node_modules/contentful-sdk-core/dist/es-modules/utils.js':
        /*!***************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-sdk-core/dist/es-modules/utils.js ***!
  \***************************************************************************************************/
        /*! exports provided: isNode, getNodeVersion */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'isNode',
            function() {
              return isNode
            }
          )
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'getNodeVersion',
            function() {
              return getNodeVersion
            }
          )
          function isNode() {
            /**
             * Polyfills of 'process' might set process.browser === true
             *
             * See:
             * https://github.com/webpack/node-libs-browser/blob/master/mock/process.js#L8
             * https://github.com/defunctzombie/node-process/blob/master/browser.js#L156
             **/
            return typeof process !== 'undefined' && !process.browser
          }

          function getNodeVersion() {
            return process.versions.node
              ? 'v' + process.versions.node
              : process.version
          }

          /***/
        },

      /***/ '../../node_modules/contentful-sdk-core/index.es-modules.js':
        /*!**********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/contentful-sdk-core/index.es-modules.js ***!
  \**********************************************************************************************/
        /*! exports provided: createHttpClient, createRequestConfig, enforceObjPath, freezeSys, getUserAgentHeader, toPlainObject */
        /***/ function(module, __webpack_exports__, __webpack_require__) {
          'use strict'
          __webpack_require__.r(__webpack_exports__)
          /* harmony import */ var _dist_es_modules_create_http_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! ./dist/es-modules/create-http-client */ '../../node_modules/contentful-sdk-core/dist/es-modules/create-http-client.js'
          )
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'createHttpClient',
            function() {
              return _dist_es_modules_create_http_client__WEBPACK_IMPORTED_MODULE_0__[
                'default'
              ]
            }
          )

          /* harmony import */ var _dist_es_modules_create_request_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! ./dist/es-modules/create-request-config */ '../../node_modules/contentful-sdk-core/dist/es-modules/create-request-config.js'
          )
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'createRequestConfig',
            function() {
              return _dist_es_modules_create_request_config__WEBPACK_IMPORTED_MODULE_1__[
                'default'
              ]
            }
          )

          /* harmony import */ var _dist_es_modules_enforce_obj_path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ./dist/es-modules/enforce-obj-path */ '../../node_modules/contentful-sdk-core/dist/es-modules/enforce-obj-path.js'
          )
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'enforceObjPath',
            function() {
              return _dist_es_modules_enforce_obj_path__WEBPACK_IMPORTED_MODULE_2__[
                'default'
              ]
            }
          )

          /* harmony import */ var _dist_es_modules_freeze_sys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ./dist/es-modules/freeze-sys */ '../../node_modules/contentful-sdk-core/dist/es-modules/freeze-sys.js'
          )
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'freezeSys',
            function() {
              return _dist_es_modules_freeze_sys__WEBPACK_IMPORTED_MODULE_3__[
                'default'
              ]
            }
          )

          /* harmony import */ var _dist_es_modules_get_user_agent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! ./dist/es-modules/get-user-agent */ '../../node_modules/contentful-sdk-core/dist/es-modules/get-user-agent.js'
          )
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'getUserAgentHeader',
            function() {
              return _dist_es_modules_get_user_agent__WEBPACK_IMPORTED_MODULE_4__[
                'default'
              ]
            }
          )

          /* harmony import */ var _dist_es_modules_to_plain_object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! ./dist/es-modules/to-plain-object */ '../../node_modules/contentful-sdk-core/dist/es-modules/to-plain-object.js'
          )
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'toPlainObject',
            function() {
              return _dist_es_modules_to_plain_object__WEBPACK_IMPORTED_MODULE_5__[
                'default'
              ]
            }
          )

          /***/
        },

      /***/ '../../node_modules/cookiejar/cookiejar.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/cookiejar/cookiejar.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /* jshint node: true */
          ;(function() {
            'use strict'

            function CookieAccessInfo(domain, path, secure, script) {
              if (this instanceof CookieAccessInfo) {
                this.domain = domain || undefined
                this.path = path || '/'
                this.secure = !!secure
                this.script = !!script
                return this
              }
              return new CookieAccessInfo(domain, path, secure, script)
            }
            CookieAccessInfo.All = Object.freeze(Object.create(null))
            exports.CookieAccessInfo = CookieAccessInfo

            function Cookie(cookiestr, request_domain, request_path) {
              if (cookiestr instanceof Cookie) {
                return cookiestr
              }
              if (this instanceof Cookie) {
                this.name = null
                this.value = null
                this.expiration_date = Infinity
                this.path = String(request_path || '/')
                this.explicit_path = false
                this.domain = request_domain || null
                this.explicit_domain = false
                this.secure = false //how to define default?
                this.noscript = false //httponly
                if (cookiestr) {
                  this.parse(cookiestr, request_domain, request_path)
                }
                return this
              }
              return new Cookie(cookiestr, request_domain, request_path)
            }
            exports.Cookie = Cookie

            Cookie.prototype.toString = function toString() {
              var str = [this.name + '=' + this.value]
              if (this.expiration_date !== Infinity) {
                str.push(
                  'expires=' + new Date(this.expiration_date).toGMTString()
                )
              }
              if (this.domain) {
                str.push('domain=' + this.domain)
              }
              if (this.path) {
                str.push('path=' + this.path)
              }
              if (this.secure) {
                str.push('secure')
              }
              if (this.noscript) {
                str.push('httponly')
              }
              return str.join('; ')
            }

            Cookie.prototype.toValueString = function toValueString() {
              return this.name + '=' + this.value
            }

            var cookie_str_splitter = /[:](?=\s*[a-zA-Z0-9_\-]+\s*[=])/g
            Cookie.prototype.parse = function parse(
              str,
              request_domain,
              request_path
            ) {
              if (this instanceof Cookie) {
                var parts = str.split(';').filter(function(value) {
                  return !!value
                })
                var i

                var pair = parts[0].match(/([^=]+)=([\s\S]*)/)
                if (!pair) {
                  console.warn(
                    "Invalid cookie header encountered. Header: '" + str + "'"
                  )
                  return
                }

                var key = pair[1]
                var value = pair[2]
                if (
                  typeof key !== 'string' ||
                  key.length === 0 ||
                  typeof value !== 'string'
                ) {
                  console.warn(
                    "Unable to extract values from cookie header. Cookie: '" +
                      str +
                      "'"
                  )
                  return
                }

                this.name = key
                this.value = value

                for (i = 1; i < parts.length; i += 1) {
                  pair = parts[i].match(/([^=]+)(?:=([\s\S]*))?/)
                  key = pair[1].trim().toLowerCase()
                  value = pair[2]
                  switch (key) {
                    case 'httponly':
                      this.noscript = true
                      break
                    case 'expires':
                      this.expiration_date = value
                        ? Number(Date.parse(value))
                        : Infinity
                      break
                    case 'path':
                      this.path = value ? value.trim() : ''
                      this.explicit_path = true
                      break
                    case 'domain':
                      this.domain = value ? value.trim() : ''
                      this.explicit_domain = !!this.domain
                      break
                    case 'secure':
                      this.secure = true
                      break
                  }
                }

                if (!this.explicit_path) {
                  this.path = request_path || '/'
                }
                if (!this.explicit_domain) {
                  this.domain = request_domain
                }

                return this
              }
              return new Cookie().parse(str, request_domain, request_path)
            }

            Cookie.prototype.matches = function matches(access_info) {
              if (access_info === CookieAccessInfo.All) {
                return true
              }
              if (
                (this.noscript && access_info.script) ||
                (this.secure && !access_info.secure) ||
                !this.collidesWith(access_info)
              ) {
                return false
              }
              return true
            }

            Cookie.prototype.collidesWith = function collidesWith(access_info) {
              if (
                (this.path && !access_info.path) ||
                (this.domain && !access_info.domain)
              ) {
                return false
              }
              if (this.path && access_info.path.indexOf(this.path) !== 0) {
                return false
              }
              if (
                this.explicit_path &&
                access_info.path.indexOf(this.path) !== 0
              ) {
                return false
              }
              var access_domain =
                access_info.domain && access_info.domain.replace(/^[\.]/, '')
              var cookie_domain =
                this.domain && this.domain.replace(/^[\.]/, '')
              if (cookie_domain === access_domain) {
                return true
              }
              if (cookie_domain) {
                if (!this.explicit_domain) {
                  return false // we already checked if the domains were exactly the same
                }
                var wildcard = access_domain.indexOf(cookie_domain)
                if (
                  wildcard === -1 ||
                  wildcard !== access_domain.length - cookie_domain.length
                ) {
                  return false
                }
                return true
              }
              return true
            }

            function CookieJar() {
              var cookies, cookies_list, collidable_cookie
              if (this instanceof CookieJar) {
                cookies = Object.create(null) //name: [Cookie]

                this.setCookie = function setCookie(
                  cookie,
                  request_domain,
                  request_path
                ) {
                  var remove, i
                  cookie = new Cookie(cookie, request_domain, request_path)
                  //Delete the cookie if the set is past the current time
                  remove = cookie.expiration_date <= Date.now()
                  if (cookies[cookie.name] !== undefined) {
                    cookies_list = cookies[cookie.name]
                    for (i = 0; i < cookies_list.length; i += 1) {
                      collidable_cookie = cookies_list[i]
                      if (collidable_cookie.collidesWith(cookie)) {
                        if (remove) {
                          cookies_list.splice(i, 1)
                          if (cookies_list.length === 0) {
                            delete cookies[cookie.name]
                          }
                          return false
                        }
                        cookies_list[i] = cookie
                        return cookie
                      }
                    }
                    if (remove) {
                      return false
                    }
                    cookies_list.push(cookie)
                    return cookie
                  }
                  if (remove) {
                    return false
                  }
                  cookies[cookie.name] = [cookie]
                  return cookies[cookie.name]
                }
                //returns a cookie
                this.getCookie = function getCookie(cookie_name, access_info) {
                  var cookie, i
                  cookies_list = cookies[cookie_name]
                  if (!cookies_list) {
                    return
                  }
                  for (i = 0; i < cookies_list.length; i += 1) {
                    cookie = cookies_list[i]
                    if (cookie.expiration_date <= Date.now()) {
                      if (cookies_list.length === 0) {
                        delete cookies[cookie.name]
                      }
                      continue
                    }

                    if (cookie.matches(access_info)) {
                      return cookie
                    }
                  }
                }
                //returns a list of cookies
                this.getCookies = function getCookies(access_info) {
                  var matches = [],
                    cookie_name,
                    cookie
                  for (cookie_name in cookies) {
                    cookie = this.getCookie(cookie_name, access_info)
                    if (cookie) {
                      matches.push(cookie)
                    }
                  }
                  matches.toString = function toString() {
                    return matches.join(':')
                  }
                  matches.toValueString = function toValueString() {
                    return matches
                      .map(function(c) {
                        return c.toValueString()
                      })
                      .join(';')
                  }
                  return matches
                }

                return this
              }
              return new CookieJar()
            }
            exports.CookieJar = CookieJar

            //returns list of cookies that were set correctly. Cookies that are expired and removed are not returned.
            CookieJar.prototype.setCookies = function setCookies(
              cookies,
              request_domain,
              request_path
            ) {
              cookies = Array.isArray(cookies)
                ? cookies
                : cookies.split(cookie_str_splitter)
              var successful = [],
                i,
                cookie
              cookies = cookies.map(function(item) {
                return new Cookie(item, request_domain, request_path)
              })
              for (i = 0; i < cookies.length; i += 1) {
                cookie = cookies[i]
                if (this.setCookie(cookie, request_domain, request_path)) {
                  successful.push(cookie)
                }
              }
              return successful
            }
          })()

          /***/
        },

      /***/ '../../node_modules/core-util-is/lib/util.js':
        /*!*******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/core-util-is/lib/util.js ***!
  \*******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // NOTE: These type checking functions intentionally don't use `instanceof`
          // because it is fragile and can be easily faked with `Object.create()`.

          function isArray(arg) {
            if (Array.isArray) {
              return Array.isArray(arg)
            }
            return objectToString(arg) === '[object Array]'
          }
          exports.isArray = isArray

          function isBoolean(arg) {
            return typeof arg === 'boolean'
          }
          exports.isBoolean = isBoolean

          function isNull(arg) {
            return arg === null
          }
          exports.isNull = isNull

          function isNullOrUndefined(arg) {
            return arg == null
          }
          exports.isNullOrUndefined = isNullOrUndefined

          function isNumber(arg) {
            return typeof arg === 'number'
          }
          exports.isNumber = isNumber

          function isString(arg) {
            return typeof arg === 'string'
          }
          exports.isString = isString

          function isSymbol(arg) {
            return typeof arg === 'symbol'
          }
          exports.isSymbol = isSymbol

          function isUndefined(arg) {
            return arg === void 0
          }
          exports.isUndefined = isUndefined

          function isRegExp(re) {
            return objectToString(re) === '[object RegExp]'
          }
          exports.isRegExp = isRegExp

          function isObject(arg) {
            return typeof arg === 'object' && arg !== null
          }
          exports.isObject = isObject

          function isDate(d) {
            return objectToString(d) === '[object Date]'
          }
          exports.isDate = isDate

          function isError(e) {
            return objectToString(e) === '[object Error]' || e instanceof Error
          }
          exports.isError = isError

          function isFunction(arg) {
            return typeof arg === 'function'
          }
          exports.isFunction = isFunction

          function isPrimitive(arg) {
            return (
              arg === null ||
              typeof arg === 'boolean' ||
              typeof arg === 'number' ||
              typeof arg === 'string' ||
              typeof arg === 'symbol' || // ES6 symbol
              typeof arg === 'undefined'
            )
          }
          exports.isPrimitive = isPrimitive

          exports.isBuffer = Buffer.isBuffer

          function objectToString(o) {
            return Object.prototype.toString.call(o)
          }

          /***/
        },

      /***/ '../../node_modules/delayed-stream/lib/delayed_stream.js':
        /*!*******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/delayed-stream/lib/delayed_stream.js ***!
  \*******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Stream = __webpack_require__(/*! stream */ 'stream').Stream
          var util = __webpack_require__(/*! util */ 'util')

          module.exports = DelayedStream
          function DelayedStream() {
            this.source = null
            this.dataSize = 0
            this.maxDataSize = 1024 * 1024
            this.pauseStream = true

            this._maxDataSizeExceeded = false
            this._released = false
            this._bufferedEvents = []
          }
          util.inherits(DelayedStream, Stream)

          DelayedStream.create = function(source, options) {
            var delayedStream = new this()

            options = options || {}
            for (var option in options) {
              delayedStream[option] = options[option]
            }

            delayedStream.source = source

            var realEmit = source.emit
            source.emit = function() {
              delayedStream._handleEmit(arguments)
              return realEmit.apply(source, arguments)
            }

            source.on('error', function() {})
            if (delayedStream.pauseStream) {
              source.pause()
            }

            return delayedStream
          }

          Object.defineProperty(DelayedStream.prototype, 'readable', {
            configurable: true,
            enumerable: true,
            get: function() {
              return this.source.readable
            }
          })

          DelayedStream.prototype.setEncoding = function() {
            return this.source.setEncoding.apply(this.source, arguments)
          }

          DelayedStream.prototype.resume = function() {
            if (!this._released) {
              this.release()
            }

            this.source.resume()
          }

          DelayedStream.prototype.pause = function() {
            this.source.pause()
          }

          DelayedStream.prototype.release = function() {
            this._released = true

            this._bufferedEvents.forEach(
              function(args) {
                this.emit.apply(this, args)
              }.bind(this)
            )
            this._bufferedEvents = []
          }

          DelayedStream.prototype.pipe = function() {
            var r = Stream.prototype.pipe.apply(this, arguments)
            this.resume()
            return r
          }

          DelayedStream.prototype._handleEmit = function(args) {
            if (this._released) {
              this.emit.apply(this, args)
              return
            }

            if (args[0] === 'data') {
              this.dataSize += args[1].length
              this._checkIfMaxDataSizeExceeded()
            }

            this._bufferedEvents.push(args)
          }

          DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
            if (this._maxDataSizeExceeded) {
              return
            }

            if (this.dataSize <= this.maxDataSize) {
              return
            }

            this._maxDataSizeExceeded = true
            var message =
              'DelayedStream#maxDataSize of ' +
              this.maxDataSize +
              ' bytes exceeded.'
            this.emit('error', new Error(message))
          }

          /***/
        },

      /***/ '../../node_modules/dotenv/lib/main.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/dotenv/lib/main.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /* @flow */
          /*::

type DotenvParseOptions = {
  debug?: boolean
}

// keys and values from src
type DotenvParseOutput = { [string]: string }

type DotenvConfigOptions = {
  path?: string, // path to .env file
  encoding?: string, // encoding of .env file
  debug?: string // turn on logging for debugging purposes
}

type DotenvConfigOutput = {
  parsed?: DotenvParseOutput,
  error?: Error
}

*/

          const fs = __webpack_require__(/*! fs */ 'fs')
          const path = __webpack_require__(/*! path */ 'path')

          function log(message /*: string */) {
            console.log(`[dotenv][DEBUG] ${message}`)
          }

          // Parses src into an Object
          function parse(
            src /*: string | Buffer */,
            options /*: ?DotenvParseOptions */
          ) /*: DotenvParseOutput */ {
            const debug = Boolean(options && options.debug)
            const obj = {}

            // convert Buffers before splitting into lines and processing
            src
              .toString()
              .split('\n')
              .forEach(function(line, idx) {
                // matching "KEY' and 'VAL' in 'KEY=VAL'
                const keyValueArr = line.match(/^\s*([\w.-]+)\s*=\s*(.*)?\s*$/)
                // matched?
                if (keyValueArr != null) {
                  const key = keyValueArr[1]

                  // default undefined or missing values to empty string
                  let value = keyValueArr[2] || ''

                  // expand newlines in quoted values
                  const len = value ? value.length : 0
                  if (
                    len > 0 &&
                    value.charAt(0) === '"' &&
                    value.charAt(len - 1) === '"'
                  ) {
                    value = value.replace(/\\n/gm, '\n')
                  }

                  // remove any surrounding quotes and extra spaces
                  value = value.replace(/(^['"]|['"]$)/g, '').trim()

                  obj[key] = value
                } else if (debug) {
                  log(
                    `did not match key and value when parsing line ${idx +
                      1}: ${line}`
                  )
                }
              })

            return obj
          }

          // Populates process.env from .env file
          function config(
            options /*: ?DotenvConfigOptions */
          ) /*: DotenvConfigOutput */ {
            let dotenvPath = path.resolve(process.cwd(), '.env')
            let encoding /*: string */ = 'utf8'
            let debug = false

            if (options) {
              if (options.path != null) {
                dotenvPath = options.path
              }
              if (options.encoding != null) {
                encoding = options.encoding
              }
              if (options.debug != null) {
                debug = true
              }
            }

            try {
              // specifying an encoding returns a string instead of a buffer
              const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), {
                debug
              })

              Object.keys(parsed).forEach(function(key) {
                if (!process.env.hasOwnProperty(key)) {
                  process.env[key] = parsed[key]
                } else if (debug) {
                  log(
                    `"${key}" is already defined in \`process.env\` and will not be overwritten`
                  )
                }
              })

              return { parsed }
            } catch (e) {
              return { error: e }
            }
          }

          module.exports.config = config
          module.exports.load = config
          module.exports.parse = parse

          /***/
        },

      /***/ '../../node_modules/duplexer/index.js':
        /*!************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/duplexer/index.js ***!
  \************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Stream = __webpack_require__(/*! stream */ 'stream')
          var writeMethods = ['write', 'end', 'destroy']
          var readMethods = ['resume', 'pause']
          var readEvents = ['data', 'close']
          var slice = Array.prototype.slice

          module.exports = duplex

          function forEach(arr, fn) {
            if (arr.forEach) {
              return arr.forEach(fn)
            }

            for (var i = 0; i < arr.length; i++) {
              fn(arr[i], i)
            }
          }

          function duplex(writer, reader) {
            var stream = new Stream()
            var ended = false

            forEach(writeMethods, proxyWriter)

            forEach(readMethods, proxyReader)

            forEach(readEvents, proxyStream)

            reader.on('end', handleEnd)

            writer.on('drain', function() {
              stream.emit('drain')
            })

            writer.on('error', reemit)
            reader.on('error', reemit)

            stream.writable = writer.writable
            stream.readable = reader.readable

            return stream

            function proxyWriter(methodName) {
              stream[methodName] = method

              function method() {
                return writer[methodName].apply(writer, arguments)
              }
            }

            function proxyReader(methodName) {
              stream[methodName] = method

              function method() {
                stream.emit(methodName)
                var func = reader[methodName]
                if (func) {
                  return func.apply(reader, arguments)
                }
                reader.emit(methodName)
              }
            }

            function proxyStream(methodName) {
              reader.on(methodName, reemit)

              function reemit() {
                var args = slice.call(arguments)
                args.unshift(methodName)
                stream.emit.apply(stream, args)
              }
            }

            function handleEnd() {
              if (ended) {
                return
              }
              ended = true
              var args = slice.call(arguments)
              args.unshift('end')
              stream.emit.apply(stream, args)
            }

            function reemit(err) {
              stream.emit('error', err)
            }
          }

          /***/
        },

      /***/ '../../node_modules/duplexify/index.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/duplexify/index.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var stream = __webpack_require__(
            /*! readable-stream */ '../../node_modules/readable-stream/readable.js'
          )
          var eos = __webpack_require__(
            /*! end-of-stream */ '../../node_modules/end-of-stream/index.js'
          )
          var inherits = __webpack_require__(
            /*! inherits */ '../../node_modules/inherits/inherits.js'
          )
          var shift = __webpack_require__(
            /*! stream-shift */ '../../node_modules/stream-shift/index.js'
          )

          var SIGNAL_FLUSH =
            Buffer.from && Buffer.from !== Uint8Array.from
              ? Buffer.from([0])
              : new Buffer([0])

          var onuncork = function(self, fn) {
            if (self._corked) self.once('uncork', fn)
            else fn()
          }

          var autoDestroy = function(self, err) {
            if (self._autoDestroy) self.destroy(err)
          }

          var destroyer = function(self, end) {
            return function(err) {
              if (err)
                autoDestroy(
                  self,
                  err.message === 'premature close' ? null : err
                )
              else if (end && !self._ended) self.end()
            }
          }

          var end = function(ws, fn) {
            if (!ws) return fn()
            if (ws._writableState && ws._writableState.finished) return fn()
            if (ws._writableState) return ws.end(fn)
            ws.end()
            fn()
          }

          var toStreams2 = function(rs) {
            return new stream.Readable({
              objectMode: true,
              highWaterMark: 16
            }).wrap(rs)
          }

          var Duplexify = function(writable, readable, opts) {
            if (!(this instanceof Duplexify))
              return new Duplexify(writable, readable, opts)
            stream.Duplex.call(this, opts)

            this._writable = null
            this._readable = null
            this._readable2 = null

            this._autoDestroy = !opts || opts.autoDestroy !== false
            this._forwardDestroy = !opts || opts.destroy !== false
            this._forwardEnd = !opts || opts.end !== false
            this._corked = 1 // start corked
            this._ondrain = null
            this._drained = false
            this._forwarding = false
            this._unwrite = null
            this._unread = null
            this._ended = false

            this.destroyed = false

            if (writable) this.setWritable(writable)
            if (readable) this.setReadable(readable)
          }

          inherits(Duplexify, stream.Duplex)

          Duplexify.obj = function(writable, readable, opts) {
            if (!opts) opts = {}
            opts.objectMode = true
            opts.highWaterMark = 16
            return new Duplexify(writable, readable, opts)
          }

          Duplexify.prototype.cork = function() {
            if (++this._corked === 1) this.emit('cork')
          }

          Duplexify.prototype.uncork = function() {
            if (this._corked && --this._corked === 0) this.emit('uncork')
          }

          Duplexify.prototype.setWritable = function(writable) {
            if (this._unwrite) this._unwrite()

            if (this.destroyed) {
              if (writable && writable.destroy) writable.destroy()
              return
            }

            if (writable === null || writable === false) {
              this.end()
              return
            }

            var self = this
            var unend = eos(
              writable,
              { writable: true, readable: false },
              destroyer(this, this._forwardEnd)
            )

            var ondrain = function() {
              var ondrain = self._ondrain
              self._ondrain = null
              if (ondrain) ondrain()
            }

            var clear = function() {
              self._writable.removeListener('drain', ondrain)
              unend()
            }

            if (this._unwrite) process.nextTick(ondrain) // force a drain on stream reset to avoid livelocks

            this._writable = writable
            this._writable.on('drain', ondrain)
            this._unwrite = clear

            this.uncork() // always uncork setWritable
          }

          Duplexify.prototype.setReadable = function(readable) {
            if (this._unread) this._unread()

            if (this.destroyed) {
              if (readable && readable.destroy) readable.destroy()
              return
            }

            if (readable === null || readable === false) {
              this.push(null)
              this.resume()
              return
            }

            var self = this
            var unend = eos(
              readable,
              { writable: false, readable: true },
              destroyer(this)
            )

            var onreadable = function() {
              self._forward()
            }

            var onend = function() {
              self.push(null)
            }

            var clear = function() {
              self._readable2.removeListener('readable', onreadable)
              self._readable2.removeListener('end', onend)
              unend()
            }

            this._drained = true
            this._readable = readable
            this._readable2 = readable._readableState
              ? readable
              : toStreams2(readable)
            this._readable2.on('readable', onreadable)
            this._readable2.on('end', onend)
            this._unread = clear

            this._forward()
          }

          Duplexify.prototype._read = function() {
            this._drained = true
            this._forward()
          }

          Duplexify.prototype._forward = function() {
            if (this._forwarding || !this._readable2 || !this._drained) return
            this._forwarding = true

            var data

            while (this._drained && (data = shift(this._readable2)) !== null) {
              if (this.destroyed) continue
              this._drained = this.push(data)
            }

            this._forwarding = false
          }

          Duplexify.prototype.destroy = function(err) {
            if (this.destroyed) return
            this.destroyed = true

            var self = this
            process.nextTick(function() {
              self._destroy(err)
            })
          }

          Duplexify.prototype._destroy = function(err) {
            if (err) {
              var ondrain = this._ondrain
              this._ondrain = null
              if (ondrain) ondrain(err)
              else this.emit('error', err)
            }

            if (this._forwardDestroy) {
              if (this._readable && this._readable.destroy)
                this._readable.destroy()
              if (this._writable && this._writable.destroy)
                this._writable.destroy()
            }

            this.emit('close')
          }

          Duplexify.prototype._write = function(data, enc, cb) {
            if (this.destroyed) return cb()
            if (this._corked)
              return onuncork(this, this._write.bind(this, data, enc, cb))
            if (data === SIGNAL_FLUSH) return this._finish(cb)
            if (!this._writable) return cb()

            if (this._writable.write(data) === false) this._ondrain = cb
            else cb()
          }

          Duplexify.prototype._finish = function(cb) {
            var self = this
            this.emit('preend')
            onuncork(this, function() {
              end(self._forwardEnd && self._writable, function() {
                // haxx to not emit prefinish twice
                if (self._writableState.prefinished === false)
                  self._writableState.prefinished = true
                self.emit('prefinish')
                onuncork(self, cb)
              })
            })
          }

          Duplexify.prototype.end = function(data, enc, cb) {
            if (typeof data === 'function') return this.end(null, null, data)
            if (typeof enc === 'function') return this.end(data, null, enc)
            this._ended = true
            if (data) this.write(data)
            if (!this._writableState.ending) this.write(SIGNAL_FLUSH)
            return stream.Writable.prototype.end.call(this, cb)
          }

          module.exports = Duplexify

          /***/
        },

      /***/ '../../node_modules/end-of-stream/index.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/end-of-stream/index.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var once = __webpack_require__(
            /*! once */ '../../node_modules/once/once.js'
          )

          var noop = function() {}

          var isRequest = function(stream) {
            return stream.setHeader && typeof stream.abort === 'function'
          }

          var isChildProcess = function(stream) {
            return (
              stream.stdio &&
              Array.isArray(stream.stdio) &&
              stream.stdio.length === 3
            )
          }

          var eos = function(stream, opts, callback) {
            if (typeof opts === 'function') return eos(stream, null, opts)
            if (!opts) opts = {}

            callback = once(callback || noop)

            var ws = stream._writableState
            var rs = stream._readableState
            var readable =
              opts.readable || (opts.readable !== false && stream.readable)
            var writable =
              opts.writable || (opts.writable !== false && stream.writable)

            var onlegacyfinish = function() {
              if (!stream.writable) onfinish()
            }

            var onfinish = function() {
              writable = false
              if (!readable) callback.call(stream)
            }

            var onend = function() {
              readable = false
              if (!writable) callback.call(stream)
            }

            var onexit = function(exitCode) {
              callback.call(
                stream,
                exitCode
                  ? new Error('exited with error code: ' + exitCode)
                  : null
              )
            }

            var onerror = function(err) {
              callback.call(stream, err)
            }

            var onclose = function() {
              if (readable && !(rs && rs.ended))
                return callback.call(stream, new Error('premature close'))
              if (writable && !(ws && ws.ended))
                return callback.call(stream, new Error('premature close'))
            }

            var onrequest = function() {
              stream.req.on('finish', onfinish)
            }

            if (isRequest(stream)) {
              stream.on('complete', onfinish)
              stream.on('abort', onclose)
              if (stream.req) onrequest()
              else stream.on('request', onrequest)
            } else if (writable && !ws) {
              // legacy streams
              stream.on('end', onlegacyfinish)
              stream.on('close', onlegacyfinish)
            }

            if (isChildProcess(stream)) stream.on('exit', onexit)

            stream.on('end', onend)
            stream.on('finish', onfinish)
            if (opts.error !== false) stream.on('error', onerror)
            stream.on('close', onclose)

            return function() {
              stream.removeListener('complete', onfinish)
              stream.removeListener('abort', onclose)
              stream.removeListener('request', onrequest)
              if (stream.req) stream.req.removeListener('finish', onfinish)
              stream.removeListener('end', onlegacyfinish)
              stream.removeListener('close', onlegacyfinish)
              stream.removeListener('finish', onfinish)
              stream.removeListener('exit', onexit)
              stream.removeListener('end', onend)
              stream.removeListener('error', onerror)
              stream.removeListener('close', onclose)
            }
          }

          module.exports = eos

          /***/
        },

      /***/ '../../node_modules/event-stream/index.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/event-stream/index.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          //filter will reemit the data if cb(err,pass) pass is truthy

          // reduce is more tricky
          // maybe we want to group the reductions or emit progress updates occasionally
          // the most basic reduce just emits one 'data' event after it has recieved 'end'

          var Stream = __webpack_require__(/*! stream */ 'stream').Stream,
            es = exports,
            through = __webpack_require__(
              /*! through */ '../../node_modules/through/index.js'
            ),
            from = __webpack_require__(
              /*! from */ '../../node_modules/from/index.js'
            ),
            duplex = __webpack_require__(
              /*! duplexer */ '../../node_modules/duplexer/index.js'
            ),
            map = __webpack_require__(
              /*! map-stream */ '../../node_modules/map-stream/index.js'
            ),
            pause = __webpack_require__(
              /*! pause-stream */ '../../node_modules/pause-stream/index.js'
            ),
            split = __webpack_require__(
              /*! split */ '../../node_modules/split/index.js'
            ),
            pipeline = __webpack_require__(
              /*! stream-combiner */ '../../node_modules/stream-combiner/index.js'
            ),
            immediately = global.setImmediate || process.nextTick

          es.Stream = Stream //re-export Stream from core
          es.through = through
          es.from = from
          es.duplex = duplex
          es.map = map
          es.pause = pause
          es.split = split
          es.pipeline = es.connect = es.pipe = pipeline
          // merge / concat
          //
          // combine multiple streams into a single stream.
          // will emit end only once

          es.concat = es.merge = function(/*streams...*/) { //actually this should be called concat
            var toMerge = [].slice.call(arguments)
            if (toMerge.length === 1 && toMerge[0] instanceof Array) {
              toMerge = toMerge[0] //handle array as arguments object
            }
            var stream = new Stream()
            stream.setMaxListeners(0) // allow adding more than 11 streams
            var endCount = 0
            stream.writable = stream.readable = true

            if (toMerge.length) {
              toMerge.forEach(function(e) {
                e.pipe(
                  stream,
                  { end: false }
                )
                var ended = false
                e.on('end', function() {
                  if (ended) return
                  ended = true
                  endCount++
                  if (endCount == toMerge.length) stream.emit('end')
                })
              })
            } else {
              process.nextTick(function() {
                stream.emit('end')
              })
            }

            stream.write = function(data) {
              this.emit('data', data)
            }
            stream.destroy = function() {
              toMerge.forEach(function(e) {
                if (e.destroy) e.destroy()
              })
            }
            return stream
          }

          // writable stream, collects all events into an array
          // and calls back when 'end' occurs
          // mainly I'm using this to test the other functions

          es.writeArray = function(done) {
            if ('function' !== typeof done)
              throw new Error(
                'function writeArray (done): done must be function'
              )

            var a = new Stream(),
              array = [],
              isDone = false
            a.write = function(l) {
              array.push(l)
            }
            a.end = function() {
              isDone = true
              done(null, array)
            }
            a.writable = true
            a.readable = false
            a.destroy = function() {
              a.writable = a.readable = false
              if (isDone) return
              done(new Error('destroyed before end'), array)
            }
            return a
          }

          //return a Stream that reads the properties of an object
          //respecting pause() and resume()

          es.readArray = function(array) {
            var stream = new Stream(),
              i = 0,
              paused = false,
              ended = false

            stream.readable = true
            stream.writable = false

            if (!Array.isArray(array))
              throw new Error('event-stream.read expects an array')

            stream.resume = function() {
              if (ended) return
              paused = false
              var l = array.length
              while (i < l && !paused && !ended) {
                stream.emit('data', array[i++])
              }
              if (i == l && !ended)
                (ended = true), (stream.readable = false), stream.emit('end')
            }
            process.nextTick(stream.resume)
            stream.pause = function() {
              paused = true
            }
            stream.destroy = function() {
              ended = true
              stream.emit('close')
            }
            return stream
          }

          //
          // readable (asyncFunction)
          // return a stream that calls an async function while the stream is not paused.
          //
          // the function must take: (count, callback) {...
          //

          es.readable = function(func, continueOnError) {
            var stream = new Stream(),
              i = 0,
              paused = false,
              ended = false,
              reading = false

            stream.readable = true
            stream.writable = false

            if ('function' !== typeof func)
              throw new Error('event-stream.readable expects async function')

            stream.on('end', function() {
              ended = true
            })

            function get(err, data) {
              if (err) {
                stream.emit('error', err)
                if (!continueOnError) stream.emit('end')
              } else if (arguments.length > 1) stream.emit('data', data)

              immediately(function() {
                if (ended || paused || reading) return
                try {
                  reading = true
                  func.call(stream, i++, function() {
                    reading = false
                    get.apply(null, arguments)
                  })
                } catch (err) {
                  stream.emit('error', err)
                }
              })
            }
            stream.resume = function() {
              paused = false
              get()
            }
            process.nextTick(get)
            stream.pause = function() {
              paused = true
            }
            stream.destroy = function() {
              stream.emit('end')
              stream.emit('close')
              ended = true
            }
            return stream
          }

          //
          // map sync
          //

          es.mapSync = function(sync) {
            return es.through(function write(data) {
              var mappedData
              try {
                mappedData = sync(data)
              } catch (err) {
                return this.emit('error', err)
              }
              if (mappedData !== undefined) this.emit('data', mappedData)
            })
          }

          //
          // log just print out what is coming through the stream, for debugging
          //

          es.log = function(name) {
            return es.through(function(data) {
              var args = [].slice.call(arguments)
              if (name) console.error(name, data)
              else console.error(data)
              this.emit('data', data)
            })
          }

          //
          // child -- pipe through a child process
          //

          es.child = function(child) {
            return es.duplex(child.stdin, child.stdout)
          }

          //
          // parse
          //
          // must be used after es.split() to ensure that each chunk represents a line
          // source.pipe(es.split()).pipe(es.parse())

          es.parse = function(options) {
            var emitError = !!(options ? options.error : false)
            return es.through(function(data) {
              var obj
              try {
                if (data)
                  //ignore empty lines
                  obj = JSON.parse(data.toString())
              } catch (err) {
                if (emitError) return this.emit('error', err)
                return console.error(err, 'attempting to parse:', data)
              }
              //ignore lines that where only whitespace.
              if (obj !== undefined) this.emit('data', obj)
            })
          }
          //
          // stringify
          //

          es.stringify = function() {
            var Buffer = __webpack_require__(/*! buffer */ 'buffer').Buffer
            return es.mapSync(function(e) {
              return (
                JSON.stringify(Buffer.isBuffer(e) ? e.toString() : e) + '\n'
              )
            })
          }

          //
          // replace a string within a stream.
          //
          // warn: just concatenates the string and then does str.split().join().
          // probably not optimal.
          // for smallish responses, who cares?
          // I need this for shadow-npm so it's only relatively small json files.

          es.replace = function(from, to) {
            return es.pipeline(es.split(from), es.join(to))
          }

          //
          // join chunks with a joiner. just like Array#join
          // also accepts a callback that is passed the chunks appended together
          // this is still supported for legacy reasons.
          //

          es.join = function(str) {
            //legacy api
            if ('function' === typeof str) return es.wait(str)

            var first = true
            return es.through(function(data) {
              if (!first) this.emit('data', str)
              first = false
              this.emit('data', data)
              return true
            })
          }

          //
          // wait. callback when 'end' is emitted, with all chunks appended as string.
          //

          es.wait = function(callback) {
            var arr = []
            return es.through(
              function(data) {
                arr.push(data)
              },
              function() {
                var body = Buffer.isBuffer(arr[0])
                  ? Buffer.concat(arr)
                  : arr.join('')
                this.emit('data', body)
                this.emit('end')
                if (callback) callback(null, body)
              }
            )
          }

          es.pipeable = function() {
            throw new Error('[EVENT-STREAM] es.pipeable is deprecated')
          }

          /***/
        },

      /***/ '../../node_modules/extend/index.js':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/extend/index.js ***!
  \**********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var hasOwn = Object.prototype.hasOwnProperty
          var toStr = Object.prototype.toString
          var defineProperty = Object.defineProperty
          var gOPD = Object.getOwnPropertyDescriptor

          var isArray = function isArray(arr) {
            if (typeof Array.isArray === 'function') {
              return Array.isArray(arr)
            }

            return toStr.call(arr) === '[object Array]'
          }

          var isPlainObject = function isPlainObject(obj) {
            if (!obj || toStr.call(obj) !== '[object Object]') {
              return false
            }

            var hasOwnConstructor = hasOwn.call(obj, 'constructor')
            var hasIsPrototypeOf =
              obj.constructor &&
              obj.constructor.prototype &&
              hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')
            // Not own constructor property must be Object
            if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
              return false
            }

            // Own properties are enumerated firstly, so to speed up,
            // if last one is own, then all properties are own.
            var key
            for (key in obj) {
              /**/
            }

            return typeof key === 'undefined' || hasOwn.call(obj, key)
          }

          // If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target
          var setProperty = function setProperty(target, options) {
            if (defineProperty && options.name === '__proto__') {
              defineProperty(target, options.name, {
                enumerable: true,
                configurable: true,
                value: options.newValue,
                writable: true
              })
            } else {
              target[options.name] = options.newValue
            }
          }

          // Return undefined instead of __proto__ if '__proto__' is not an own property
          var getProperty = function getProperty(obj, name) {
            if (name === '__proto__') {
              if (!hasOwn.call(obj, name)) {
                return void 0
              } else if (gOPD) {
                // In early versions of node, obj['__proto__'] is buggy when obj has
                // __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
                return gOPD(obj, name).value
              }
            }

            return obj[name]
          }

          module.exports = function extend() {
            var options, name, src, copy, copyIsArray, clone
            var target = arguments[0]
            var i = 1
            var length = arguments.length
            var deep = false

            // Handle a deep copy situation
            if (typeof target === 'boolean') {
              deep = target
              target = arguments[1] || {}
              // skip the boolean and the target
              i = 2
            }
            if (
              target == null ||
              (typeof target !== 'object' && typeof target !== 'function')
            ) {
              target = {}
            }

            for (; i < length; ++i) {
              options = arguments[i]
              // Only deal with non-null/undefined values
              if (options != null) {
                // Extend the base object
                for (name in options) {
                  src = getProperty(target, name)
                  copy = getProperty(options, name)

                  // Prevent never-ending loop
                  if (target !== copy) {
                    // Recurse if we're merging plain objects or arrays
                    if (
                      deep &&
                      copy &&
                      (isPlainObject(copy) || (copyIsArray = isArray(copy)))
                    ) {
                      if (copyIsArray) {
                        copyIsArray = false
                        clone = src && isArray(src) ? src : []
                      } else {
                        clone = src && isPlainObject(src) ? src : {}
                      }

                      // Never move original objects, clone them
                      setProperty(target, {
                        name: name,
                        newValue: extend(deep, clone, copy)
                      })

                      // Don't bring in undefined values
                    } else if (typeof copy !== 'undefined') {
                      setProperty(target, { name: name, newValue: copy })
                    }
                  }
                }
              }
            }

            // Return the modified object
            return target
          }

          /***/
        },

      /***/ '../../node_modules/follow-redirects/index.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/follow-redirects/index.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var url = __webpack_require__(/*! url */ 'url')
          var http = __webpack_require__(/*! http */ 'http')
          var https = __webpack_require__(/*! https */ 'https')
          var assert = __webpack_require__(/*! assert */ 'assert')
          var Writable = __webpack_require__(/*! stream */ 'stream').Writable
          var debug = __webpack_require__(
            /*! debug */ '../../node_modules/follow-redirects/node_modules/debug/src/index.js'
          )('follow-redirects')

          // RFC7231§4.2.1: Of the request methods defined by this specification,
          // the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.
          var SAFE_METHODS = {
            GET: true,
            HEAD: true,
            OPTIONS: true,
            TRACE: true
          }

          // Create handlers that pass events from native requests
          var eventHandlers = Object.create(null)
          ;['abort', 'aborted', 'error', 'socket', 'timeout'].forEach(function(
            event
          ) {
            eventHandlers[event] = function(arg) {
              this._redirectable.emit(event, arg)
            }
          })

          // An HTTP(S) request that can be redirected
          function RedirectableRequest(options, responseCallback) {
            // Initialize the request
            Writable.call(this)
            options.headers = options.headers || {}
            this._options = options
            this._redirectCount = 0
            this._redirects = []
            this._requestBodyLength = 0
            this._requestBodyBuffers = []

            // Since http.request treats host as an alias of hostname,
            // but the url module interprets host as hostname plus port,
            // eliminate the host property to avoid confusion.
            if (options.host) {
              // Use hostname if set, because it has precedence
              if (!options.hostname) {
                options.hostname = options.host
              }
              delete options.host
            }

            // Attach a callback if passed
            if (responseCallback) {
              this.on('response', responseCallback)
            }

            // React to responses of native requests
            var self = this
            this._onNativeResponse = function(response) {
              self._processResponse(response)
            }

            // Complete the URL object when necessary
            if (!options.pathname && options.path) {
              var searchPos = options.path.indexOf('?')
              if (searchPos < 0) {
                options.pathname = options.path
              } else {
                options.pathname = options.path.substring(0, searchPos)
                options.search = options.path.substring(searchPos)
              }
            }

            // Perform the first request
            this._performRequest()
          }
          RedirectableRequest.prototype = Object.create(Writable.prototype)

          // Writes buffered data to the current native request
          RedirectableRequest.prototype.write = function(
            data,
            encoding,
            callback
          ) {
            // Validate input and shift parameters if necessary
            if (
              !(
                typeof data === 'string' ||
                (typeof data === 'object' && 'length' in data)
              )
            ) {
              throw new Error('data should be a string, Buffer or Uint8Array')
            }
            if (typeof encoding === 'function') {
              callback = encoding
              encoding = null
            }

            // Ignore empty buffers, since writing them doesn't invoke the callback
            // https://github.com/nodejs/node/issues/22066
            if (data.length === 0) {
              if (callback) {
                callback()
              }
              return
            }
            // Only write when we don't exceed the maximum body length
            if (
              this._requestBodyLength + data.length <=
              this._options.maxBodyLength
            ) {
              this._requestBodyLength += data.length
              this._requestBodyBuffers.push({ data: data, encoding: encoding })
              this._currentRequest.write(data, encoding, callback)
            }
            // Error when we exceed the maximum body length
            else {
              this.emit(
                'error',
                new Error('Request body larger than maxBodyLength limit')
              )
              this.abort()
            }
          }

          // Ends the current native request
          RedirectableRequest.prototype.end = function(
            data,
            encoding,
            callback
          ) {
            // Shift parameters if necessary
            if (typeof data === 'function') {
              callback = data
              data = encoding = null
            } else if (typeof encoding === 'function') {
              callback = encoding
              encoding = null
            }

            // Write data and end
            var currentRequest = this._currentRequest
            this.write(data || '', encoding, function() {
              currentRequest.end(null, null, callback)
            })
          }

          // Sets a header value on the current native request
          RedirectableRequest.prototype.setHeader = function(name, value) {
            this._options.headers[name] = value
            this._currentRequest.setHeader(name, value)
          }

          // Clears a header value on the current native request
          RedirectableRequest.prototype.removeHeader = function(name) {
            delete this._options.headers[name]
            this._currentRequest.removeHeader(name)
          }

          // Proxy all other public ClientRequest methods
          ;[
            'abort',
            'flushHeaders',
            'getHeader',
            'setNoDelay',
            'setSocketKeepAlive',
            'setTimeout'
          ].forEach(function(method) {
            RedirectableRequest.prototype[method] = function(a, b) {
              return this._currentRequest[method](a, b)
            }
          })

          // Proxy all public ClientRequest properties
          ;['aborted', 'connection', 'socket'].forEach(function(property) {
            Object.defineProperty(RedirectableRequest.prototype, property, {
              get: function() {
                return this._currentRequest[property]
              }
            })
          })

          // Executes the next native request (initial or redirect)
          RedirectableRequest.prototype._performRequest = function() {
            // Load the native protocol
            var protocol = this._options.protocol
            var nativeProtocol = this._options.nativeProtocols[protocol]
            if (!nativeProtocol) {
              this.emit('error', new Error('Unsupported protocol ' + protocol))
              return
            }

            // If specified, use the agent corresponding to the protocol
            // (HTTP and HTTPS use different types of agents)
            if (this._options.agents) {
              var scheme = protocol.substr(0, protocol.length - 1)
              this._options.agent = this._options.agents[scheme]
            }

            // Create the native request
            var request = (this._currentRequest = nativeProtocol.request(
              this._options,
              this._onNativeResponse
            ))
            this._currentUrl = url.format(this._options)

            // Set up event handlers
            request._redirectable = this
            for (var event in eventHandlers) {
              /* istanbul ignore else */
              if (event) {
                request.on(event, eventHandlers[event])
              }
            }

            // End a redirected request
            // (The first request must be ended explicitly with RedirectableRequest#end)
            if (this._isRedirect) {
              // Write the request entity and end.
              var i = 0
              var buffers = this._requestBodyBuffers
              ;(function writeNext() {
                if (i < buffers.length) {
                  var buffer = buffers[i++]
                  request.write(buffer.data, buffer.encoding, writeNext)
                } else {
                  request.end()
                }
              })()
            }
          }

          // Processes a response from the current native request
          RedirectableRequest.prototype._processResponse = function(response) {
            // Store the redirected response
            if (this._options.trackRedirects) {
              this._redirects.push({
                url: this._currentUrl,
                headers: response.headers,
                statusCode: response.statusCode
              })
            }

            // RFC7231§6.4: The 3xx (Redirection) class of status code indicates
            // that further action needs to be taken by the user agent in order to
            // fulfill the request. If a Location header field is provided,
            // the user agent MAY automatically redirect its request to the URI
            // referenced by the Location field value,
            // even if the specific status code is not understood.
            var location = response.headers.location
            if (
              location &&
              this._options.followRedirects !== false &&
              response.statusCode >= 300 &&
              response.statusCode < 400
            ) {
              // RFC7231§6.4: A client SHOULD detect and intervene
              // in cyclical redirections (i.e., "infinite" redirection loops).
              if (++this._redirectCount > this._options.maxRedirects) {
                this.emit('error', new Error('Max redirects exceeded.'))
                return
              }

              // RFC7231§6.4: Automatic redirection needs to done with
              // care for methods not known to be safe […],
              // since the user might not wish to redirect an unsafe request.
              // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates
              // that the target resource resides temporarily under a different URI
              // and the user agent MUST NOT change the request method
              // if it performs an automatic redirection to that URI.
              var header
              var headers = this._options.headers
              if (
                response.statusCode !== 307 &&
                !(this._options.method in SAFE_METHODS)
              ) {
                this._options.method = 'GET'
                // Drop a possible entity and headers related to it
                this._requestBodyBuffers = []
                for (header in headers) {
                  if (/^content-/i.test(header)) {
                    delete headers[header]
                  }
                }
              }

              // Drop the Host header, as the redirect might lead to a different host
              if (!this._isRedirect) {
                for (header in headers) {
                  if (/^host$/i.test(header)) {
                    delete headers[header]
                  }
                }
              }

              // Perform the redirected request
              var redirectUrl = url.resolve(this._currentUrl, location)
              debug('redirecting to', redirectUrl)
              Object.assign(this._options, url.parse(redirectUrl))
              this._isRedirect = true
              this._performRequest()

              // Discard the remainder of the response to avoid waiting for data
              response.destroy()
            } else {
              // The response is not a redirect; return it as-is
              response.responseUrl = this._currentUrl
              response.redirects = this._redirects
              this.emit('response', response)

              // Clean up
              this._requestBodyBuffers = []
            }
          }

          // Wraps the key/value object of protocols with redirect functionality
          function wrap(protocols) {
            // Default settings
            var exports = {
              maxRedirects: 21,
              maxBodyLength: 10 * 1024 * 1024
            }

            // Wrap each protocol
            var nativeProtocols = {}
            Object.keys(protocols).forEach(function(scheme) {
              var protocol = scheme + ':'
              var nativeProtocol = (nativeProtocols[protocol] =
                protocols[scheme])
              var wrappedProtocol = (exports[scheme] = Object.create(
                nativeProtocol
              ))

              // Executes a request, following redirects
              wrappedProtocol.request = function(options, callback) {
                if (typeof options === 'string') {
                  options = url.parse(options)
                  options.maxRedirects = exports.maxRedirects
                } else {
                  options = Object.assign(
                    {
                      protocol: protocol,
                      maxRedirects: exports.maxRedirects,
                      maxBodyLength: exports.maxBodyLength
                    },
                    options
                  )
                }
                options.nativeProtocols = nativeProtocols
                assert.equal(options.protocol, protocol, 'protocol mismatch')
                debug('options', options)
                return new RedirectableRequest(options, callback)
              }

              // Executes a GET request, following redirects
              wrappedProtocol.get = function(options, callback) {
                var request = wrappedProtocol.request(options, callback)
                request.end()
                return request
              }
            })
            return exports
          }

          // Exports
          module.exports = wrap({ http: http, https: https })
          module.exports.wrap = wrap

          /***/
        },

      /***/ '../../node_modules/follow-redirects/node_modules/debug/src/browser.js':
        /*!*********************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/follow-redirects/node_modules/debug/src/browser.js ***!
  \*********************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /**
           * This is the web browser implementation of `debug()`.
           *
           * Expose `debug()` as the module.
           */

          exports = module.exports = __webpack_require__(
            /*! ./debug */ '../../node_modules/follow-redirects/node_modules/debug/src/debug.js'
          )
          exports.log = log
          exports.formatArgs = formatArgs
          exports.save = save
          exports.load = load
          exports.useColors = useColors
          exports.storage =
            'undefined' != typeof chrome && 'undefined' != typeof chrome.storage
              ? chrome.storage.local
              : localstorage()

          /**
           * Colors.
           */

          exports.colors = [
            '#0000CC',
            '#0000FF',
            '#0033CC',
            '#0033FF',
            '#0066CC',
            '#0066FF',
            '#0099CC',
            '#0099FF',
            '#00CC00',
            '#00CC33',
            '#00CC66',
            '#00CC99',
            '#00CCCC',
            '#00CCFF',
            '#3300CC',
            '#3300FF',
            '#3333CC',
            '#3333FF',
            '#3366CC',
            '#3366FF',
            '#3399CC',
            '#3399FF',
            '#33CC00',
            '#33CC33',
            '#33CC66',
            '#33CC99',
            '#33CCCC',
            '#33CCFF',
            '#6600CC',
            '#6600FF',
            '#6633CC',
            '#6633FF',
            '#66CC00',
            '#66CC33',
            '#9900CC',
            '#9900FF',
            '#9933CC',
            '#9933FF',
            '#99CC00',
            '#99CC33',
            '#CC0000',
            '#CC0033',
            '#CC0066',
            '#CC0099',
            '#CC00CC',
            '#CC00FF',
            '#CC3300',
            '#CC3333',
            '#CC3366',
            '#CC3399',
            '#CC33CC',
            '#CC33FF',
            '#CC6600',
            '#CC6633',
            '#CC9900',
            '#CC9933',
            '#CCCC00',
            '#CCCC33',
            '#FF0000',
            '#FF0033',
            '#FF0066',
            '#FF0099',
            '#FF00CC',
            '#FF00FF',
            '#FF3300',
            '#FF3333',
            '#FF3366',
            '#FF3399',
            '#FF33CC',
            '#FF33FF',
            '#FF6600',
            '#FF6633',
            '#FF9900',
            '#FF9933',
            '#FFCC00',
            '#FFCC33'
          ]

          /**
           * Currently only WebKit-based Web Inspectors, Firefox >= v31,
           * and the Firebug extension (any Firefox version) are known
           * to support "%c" CSS customizations.
           *
           * TODO: add a `localStorage` variable to explicitly enable/disable colors
           */

          function useColors() {
            // NB: In an Electron preload script, document will be defined but not fully
            // initialized. Since we know we're in Chrome, we'll just detect this case
            // explicitly
            if (
              typeof window !== 'undefined' &&
              window.process &&
              window.process.type === 'renderer'
            ) {
              return true
            }

            // Internet Explorer and Edge do not support colors.
            if (
              typeof navigator !== 'undefined' &&
              navigator.userAgent &&
              navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
            ) {
              return false
            }

            // is webkit? http://stackoverflow.com/a/16459606/376773
            // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
            return (
              (typeof document !== 'undefined' &&
                document.documentElement &&
                document.documentElement.style &&
                document.documentElement.style.WebkitAppearance) ||
              // is firebug? http://stackoverflow.com/a/398120/376773
              (typeof window !== 'undefined' &&
                window.console &&
                (window.console.firebug ||
                  (window.console.exception && window.console.table))) ||
              // is firefox >= v31?
              // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
              (typeof navigator !== 'undefined' &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
                parseInt(RegExp.$1, 10) >= 31) ||
              // double check webkit in userAgent just in case we are in a worker
              (typeof navigator !== 'undefined' &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
            )
          }

          /**
           * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
           */

          exports.formatters.j = function(v) {
            try {
              return JSON.stringify(v)
            } catch (err) {
              return '[UnexpectedJSONParseError]: ' + err.message
            }
          }

          /**
           * Colorize log arguments if enabled.
           *
           * @api public
           */

          function formatArgs(args) {
            var useColors = this.useColors

            args[0] =
              (useColors ? '%c' : '') +
              this.namespace +
              (useColors ? ' %c' : ' ') +
              args[0] +
              (useColors ? '%c ' : ' ') +
              '+' +
              exports.humanize(this.diff)

            if (!useColors) return

            var c = 'color: ' + this.color
            args.splice(1, 0, c, 'color: inherit')

            // the final "%c" is somewhat tricky, because there could be other
            // arguments passed either before or after the %c, so we need to
            // figure out the correct index to insert the CSS into
            var index = 0
            var lastC = 0
            args[0].replace(/%[a-zA-Z%]/g, function(match) {
              if ('%%' === match) return
              index++
              if ('%c' === match) {
                // we only are interested in the *last* %c
                // (the user may have provided their own)
                lastC = index
              }
            })

            args.splice(lastC, 0, c)
          }

          /**
           * Invokes `console.log()` when available.
           * No-op when `console.log` is not a "function".
           *
           * @api public
           */

          function log() {
            // this hackery is required for IE8/9, where
            // the `console.log` function doesn't have 'apply'
            return (
              'object' === typeof console &&
              console.log &&
              Function.prototype.apply.call(console.log, console, arguments)
            )
          }

          /**
           * Save `namespaces`.
           *
           * @param {String} namespaces
           * @api private
           */

          function save(namespaces) {
            try {
              if (null == namespaces) {
                exports.storage.removeItem('debug')
              } else {
                exports.storage.debug = namespaces
              }
            } catch (e) {}
          }

          /**
           * Load `namespaces`.
           *
           * @return {String} returns the previously persisted debug modes
           * @api private
           */

          function load() {
            var r
            try {
              r = exports.storage.debug
            } catch (e) {}

            // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
            if (!r && typeof process !== 'undefined' && 'env' in process) {
              r = process.env.DEBUG
            }

            return r
          }

          /**
           * Enable namespaces listed in `localStorage.debug` initially.
           */

          exports.enable(load())

          /**
           * Localstorage attempts to return the localstorage.
           *
           * This is necessary because safari throws
           * when a user disables cookies/localstorage
           * and you attempt to access it.
           *
           * @return {LocalStorage}
           * @api private
           */

          function localstorage() {
            try {
              return window.localStorage
            } catch (e) {}
          }

          /***/
        },

      /***/ '../../node_modules/follow-redirects/node_modules/debug/src/debug.js':
        /*!*******************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/follow-redirects/node_modules/debug/src/debug.js ***!
  \*******************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /**
           * This is the common logic for both the Node.js and web browser
           * implementations of `debug()`.
           *
           * Expose `debug()` as the module.
           */

          exports = module.exports = createDebug.debug = createDebug[
            'default'
          ] = createDebug
          exports.coerce = coerce
          exports.disable = disable
          exports.enable = enable
          exports.enabled = enabled
          exports.humanize = __webpack_require__(
            /*! ms */ '../../node_modules/ms/index.js'
          )

          /**
           * Active `debug` instances.
           */
          exports.instances = []

          /**
           * The currently active debug mode names, and names to skip.
           */

          exports.names = []
          exports.skips = []

          /**
           * Map of special "%n" handling functions, for the debug "format" argument.
           *
           * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
           */

          exports.formatters = {}

          /**
           * Select a color.
           * @param {String} namespace
           * @return {Number}
           * @api private
           */

          function selectColor(namespace) {
            var hash = 0,
              i

            for (i in namespace) {
              hash = (hash << 5) - hash + namespace.charCodeAt(i)
              hash |= 0 // Convert to 32bit integer
            }

            return exports.colors[Math.abs(hash) % exports.colors.length]
          }

          /**
           * Create a debugger with the given `namespace`.
           *
           * @param {String} namespace
           * @return {Function}
           * @api public
           */

          function createDebug(namespace) {
            var prevTime

            function debug() {
              // disabled?
              if (!debug.enabled) return

              var self = debug

              // set `diff` timestamp
              var curr = +new Date()
              var ms = curr - (prevTime || curr)
              self.diff = ms
              self.prev = prevTime
              self.curr = curr
              prevTime = curr

              // turn the `arguments` into a proper Array
              var args = new Array(arguments.length)
              for (var i = 0; i < args.length; i++) {
                args[i] = arguments[i]
              }

              args[0] = exports.coerce(args[0])

              if ('string' !== typeof args[0]) {
                // anything else let's inspect with %O
                args.unshift('%O')
              }

              // apply any `formatters` transformations
              var index = 0
              args[0] = args[0].replace(/%([a-zA-Z%])/g, function(
                match,
                format
              ) {
                // if we encounter an escaped % then don't increase the array index
                if (match === '%%') return match
                index++
                var formatter = exports.formatters[format]
                if ('function' === typeof formatter) {
                  var val = args[index]
                  match = formatter.call(self, val)

                  // now we need to remove `args[index]` since it's inlined in the `format`
                  args.splice(index, 1)
                  index--
                }
                return match
              })

              // apply env-specific formatting (colors, etc.)
              exports.formatArgs.call(self, args)

              var logFn = debug.log || exports.log || console.log.bind(console)
              logFn.apply(self, args)
            }

            debug.namespace = namespace
            debug.enabled = exports.enabled(namespace)
            debug.useColors = exports.useColors()
            debug.color = selectColor(namespace)
            debug.destroy = destroy

            // env-specific initialization logic for debug instances
            if ('function' === typeof exports.init) {
              exports.init(debug)
            }

            exports.instances.push(debug)

            return debug
          }

          function destroy() {
            var index = exports.instances.indexOf(this)
            if (index !== -1) {
              exports.instances.splice(index, 1)
              return true
            } else {
              return false
            }
          }

          /**
           * Enables a debug mode by namespaces. This can include modes
           * separated by a colon and wildcards.
           *
           * @param {String} namespaces
           * @api public
           */

          function enable(namespaces) {
            exports.save(namespaces)

            exports.names = []
            exports.skips = []

            var i
            var split = (typeof namespaces === 'string'
              ? namespaces
              : ''
            ).split(/[\s,]+/)
            var len = split.length

            for (i = 0; i < len; i++) {
              if (!split[i]) continue // ignore empty strings
              namespaces = split[i].replace(/\*/g, '.*?')
              if (namespaces[0] === '-') {
                exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'))
              } else {
                exports.names.push(new RegExp('^' + namespaces + '$'))
              }
            }

            for (i = 0; i < exports.instances.length; i++) {
              var instance = exports.instances[i]
              instance.enabled = exports.enabled(instance.namespace)
            }
          }

          /**
           * Disable debug output.
           *
           * @api public
           */

          function disable() {
            exports.enable('')
          }

          /**
           * Returns true if the given mode name is enabled, false otherwise.
           *
           * @param {String} name
           * @return {Boolean}
           * @api public
           */

          function enabled(name) {
            if (name[name.length - 1] === '*') {
              return true
            }
            var i, len
            for (i = 0, len = exports.skips.length; i < len; i++) {
              if (exports.skips[i].test(name)) {
                return false
              }
            }
            for (i = 0, len = exports.names.length; i < len; i++) {
              if (exports.names[i].test(name)) {
                return true
              }
            }
            return false
          }

          /**
           * Coerce `val`.
           *
           * @param {Mixed} val
           * @return {Mixed}
           * @api private
           */

          function coerce(val) {
            if (val instanceof Error) return val.stack || val.message
            return val
          }

          /***/
        },

      /***/ '../../node_modules/follow-redirects/node_modules/debug/src/index.js':
        /*!*******************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/follow-redirects/node_modules/debug/src/index.js ***!
  \*******************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /**
           * Detect Electron renderer process, which is node, but we should
           * treat as a browser.
           */

          if (typeof process === 'undefined' || process.type === 'renderer') {
            module.exports = __webpack_require__(
              /*! ./browser.js */ '../../node_modules/follow-redirects/node_modules/debug/src/browser.js'
            )
          } else {
            module.exports = __webpack_require__(
              /*! ./node.js */ '../../node_modules/follow-redirects/node_modules/debug/src/node.js'
            )
          }

          /***/
        },

      /***/ '../../node_modules/follow-redirects/node_modules/debug/src/node.js':
        /*!******************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/follow-redirects/node_modules/debug/src/node.js ***!
  \******************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /**
           * Module dependencies.
           */

          var tty = __webpack_require__(/*! tty */ 'tty')
          var util = __webpack_require__(/*! util */ 'util')

          /**
           * This is the Node.js implementation of `debug()`.
           *
           * Expose `debug()` as the module.
           */

          exports = module.exports = __webpack_require__(
            /*! ./debug */ '../../node_modules/follow-redirects/node_modules/debug/src/debug.js'
          )
          exports.init = init
          exports.log = log
          exports.formatArgs = formatArgs
          exports.save = save
          exports.load = load
          exports.useColors = useColors

          /**
           * Colors.
           */

          exports.colors = [6, 2, 3, 4, 5, 1]

          try {
            var supportsColor = __webpack_require__(
              /*! supports-color */ '../../node_modules/supports-color/index.js'
            )
            if (supportsColor && supportsColor.level >= 2) {
              exports.colors = [
                20,
                21,
                26,
                27,
                32,
                33,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                56,
                57,
                62,
                63,
                68,
                69,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                92,
                93,
                98,
                99,
                112,
                113,
                128,
                129,
                134,
                135,
                148,
                149,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171,
                172,
                173,
                178,
                179,
                184,
                185,
                196,
                197,
                198,
                199,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                214,
                215,
                220,
                221
              ]
            }
          } catch (err) {
            // swallow - we only care if `supports-color` is available; it doesn't have to be.
          }

          /**
           * Build up the default `inspectOpts` object from the environment variables.
           *
           *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
           */

          exports.inspectOpts = Object.keys(process.env)
            .filter(function(key) {
              return /^debug_/i.test(key)
            })
            .reduce(function(obj, key) {
              // camel-case
              var prop = key
                .substring(6)
                .toLowerCase()
                .replace(/_([a-z])/g, function(_, k) {
                  return k.toUpperCase()
                })

              // coerce string value into JS value
              var val = process.env[key]
              if (/^(yes|on|true|enabled)$/i.test(val)) val = true
              else if (/^(no|off|false|disabled)$/i.test(val)) val = false
              else if (val === 'null') val = null
              else val = Number(val)

              obj[prop] = val
              return obj
            }, {})

          /**
           * Is stdout a TTY? Colored output is enabled when `true`.
           */

          function useColors() {
            return 'colors' in exports.inspectOpts
              ? Boolean(exports.inspectOpts.colors)
              : tty.isatty(process.stderr.fd)
          }

          /**
           * Map %o to `util.inspect()`, all on a single line.
           */

          exports.formatters.o = function(v) {
            this.inspectOpts.colors = this.useColors
            return util
              .inspect(v, this.inspectOpts)
              .split('\n')
              .map(function(str) {
                return str.trim()
              })
              .join(' ')
          }

          /**
           * Map %o to `util.inspect()`, allowing multiple lines if needed.
           */

          exports.formatters.O = function(v) {
            this.inspectOpts.colors = this.useColors
            return util.inspect(v, this.inspectOpts)
          }

          /**
           * Adds ANSI color escape codes if enabled.
           *
           * @api public
           */

          function formatArgs(args) {
            var name = this.namespace
            var useColors = this.useColors

            if (useColors) {
              var c = this.color
              var colorCode = '\u001b[3' + (c < 8 ? c : '8;5;' + c)
              var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\u001b[0m'

              args[0] = prefix + args[0].split('\n').join('\n' + prefix)
              args.push(
                colorCode + 'm+' + exports.humanize(this.diff) + '\u001b[0m'
              )
            } else {
              args[0] = getDate() + name + ' ' + args[0]
            }
          }

          function getDate() {
            if (exports.inspectOpts.hideDate) {
              return ''
            } else {
              return new Date().toISOString() + ' '
            }
          }

          /**
           * Invokes `util.format()` with the specified arguments and writes to stderr.
           */

          function log() {
            return process.stderr.write(
              util.format.apply(util, arguments) + '\n'
            )
          }

          /**
           * Save `namespaces`.
           *
           * @param {String} namespaces
           * @api private
           */

          function save(namespaces) {
            if (null == namespaces) {
              // If you set a process.env field to null or undefined, it gets cast to the
              // string 'null' or 'undefined'. Just delete instead.
              delete process.env.DEBUG
            } else {
              process.env.DEBUG = namespaces
            }
          }

          /**
           * Load `namespaces`.
           *
           * @return {String} returns the previously persisted debug modes
           * @api private
           */

          function load() {
            return process.env.DEBUG
          }

          /**
           * Init logic for `debug` instances.
           *
           * Create a new `inspectOpts` object in case `useColors` is set
           * differently for a particular `debug` instance.
           */

          function init(debug) {
            debug.inspectOpts = {}

            var keys = Object.keys(exports.inspectOpts)
            for (var i = 0; i < keys.length; i++) {
              debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]]
            }
          }

          /**
           * Enable namespaces listed in `process.env.DEBUG` initially.
           */

          exports.enable(load())

          /***/
        },

      /***/ '../../node_modules/form-data/lib/form_data.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/form-data/lib/form_data.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var CombinedStream = __webpack_require__(
            /*! combined-stream */ '../../node_modules/combined-stream/lib/combined_stream.js'
          )
          var util = __webpack_require__(/*! util */ 'util')
          var path = __webpack_require__(/*! path */ 'path')
          var http = __webpack_require__(/*! http */ 'http')
          var https = __webpack_require__(/*! https */ 'https')
          var parseUrl = __webpack_require__(/*! url */ 'url').parse
          var fs = __webpack_require__(/*! fs */ 'fs')
          var mime = __webpack_require__(
            /*! mime-types */ '../../node_modules/mime-types/index.js'
          )
          var asynckit = __webpack_require__(
            /*! asynckit */ '../../node_modules/asynckit/index.js'
          )
          var populate = __webpack_require__(
            /*! ./populate.js */ '../../node_modules/form-data/lib/populate.js'
          )

          // Public API
          module.exports = FormData

          // make it a Stream
          util.inherits(FormData, CombinedStream)

          /**
           * Create readable "multipart/form-data" streams.
           * Can be used to submit forms
           * and file uploads to other web applications.
           *
           * @constructor
           * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream
           */
          function FormData(options) {
            if (!(this instanceof FormData)) {
              return new FormData()
            }

            this._overheadLength = 0
            this._valueLength = 0
            this._valuesToMeasure = []

            CombinedStream.call(this)

            options = options || {}
            for (var option in options) {
              this[option] = options[option]
            }
          }

          FormData.LINE_BREAK = '\r\n'
          FormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream'

          FormData.prototype.append = function(field, value, options) {
            options = options || {}

            // allow filename as single option
            if (typeof options == 'string') {
              options = { filename: options }
            }

            var append = CombinedStream.prototype.append.bind(this)

            // all that streamy business can't handle numbers
            if (typeof value == 'number') {
              value = '' + value
            }

            // https://github.com/felixge/node-form-data/issues/38
            if (util.isArray(value)) {
              // Please convert your array into string
              // the way web server expects it
              this._error(new Error('Arrays are not supported.'))
              return
            }

            var header = this._multiPartHeader(field, value, options)
            var footer = this._multiPartFooter()

            append(header)
            append(value)
            append(footer)

            // pass along options.knownLength
            this._trackLength(header, value, options)
          }

          FormData.prototype._trackLength = function(header, value, options) {
            var valueLength = 0

            // used w/ getLengthSync(), when length is known.
            // e.g. for streaming directly from a remote server,
            // w/ a known file a size, and not wanting to wait for
            // incoming file to finish to get its size.
            if (options.knownLength != null) {
              valueLength += +options.knownLength
            } else if (Buffer.isBuffer(value)) {
              valueLength = value.length
            } else if (typeof value === 'string') {
              valueLength = Buffer.byteLength(value)
            }

            this._valueLength += valueLength

            // @check why add CRLF? does this account for custom/multiple CRLFs?
            this._overheadLength +=
              Buffer.byteLength(header) + FormData.LINE_BREAK.length

            // empty or either doesn't have path or not an http response
            if (
              !value ||
              (!value.path &&
                !(value.readable && value.hasOwnProperty('httpVersion')))
            ) {
              return
            }

            // no need to bother with the length
            if (!options.knownLength) {
              this._valuesToMeasure.push(value)
            }
          }

          FormData.prototype._lengthRetriever = function(value, callback) {
            if (value.hasOwnProperty('fd')) {
              // take read range into a account
              // `end` = Infinity –> read file till the end
              //
              // TODO: Looks like there is bug in Node fs.createReadStream
              // it doesn't respect `end` options without `start` options
              // Fix it when node fixes it.
              // https://github.com/joyent/node/issues/7819
              if (
                value.end != undefined &&
                value.end != Infinity &&
                value.start != undefined
              ) {
                // when end specified
                // no need to calculate range
                // inclusive, starts with 0
                callback(null, value.end + 1 - (value.start ? value.start : 0))

                // not that fast snoopy
              } else {
                // still need to fetch file size from fs
                fs.stat(value.path, function(err, stat) {
                  var fileSize

                  if (err) {
                    callback(err)
                    return
                  }

                  // update final size based on the range options
                  fileSize = stat.size - (value.start ? value.start : 0)
                  callback(null, fileSize)
                })
              }

              // or http response
            } else if (value.hasOwnProperty('httpVersion')) {
              callback(null, +value.headers['content-length'])

              // or request stream http://github.com/mikeal/request
            } else if (value.hasOwnProperty('httpModule')) {
              // wait till response come back
              value.on('response', function(response) {
                value.pause()
                callback(null, +response.headers['content-length'])
              })
              value.resume()

              // something else
            } else {
              callback('Unknown stream')
            }
          }

          FormData.prototype._multiPartHeader = function(
            field,
            value,
            options
          ) {
            // custom header specified (as string)?
            // it becomes responsible for boundary
            // (e.g. to handle extra CRLFs on .NET servers)
            if (typeof options.header == 'string') {
              return options.header
            }

            var contentDisposition = this._getContentDisposition(value, options)
            var contentType = this._getContentType(value, options)

            var contents = ''
            var headers = {
              // add custom disposition as third element or keep it two elements if not
              'Content-Disposition': [
                'form-data',
                'name="' + field + '"'
              ].concat(contentDisposition || []),
              // if no content type. allow it to be empty array
              'Content-Type': [].concat(contentType || [])
            }

            // allow custom headers.
            if (typeof options.header == 'object') {
              populate(headers, options.header)
            }

            var header
            for (var prop in headers) {
              if (!headers.hasOwnProperty(prop)) continue
              header = headers[prop]

              // skip nullish headers.
              if (header == null) {
                continue
              }

              // convert all headers to arrays.
              if (!Array.isArray(header)) {
                header = [header]
              }

              // add non-empty headers.
              if (header.length) {
                contents +=
                  prop + ': ' + header.join('; ') + FormData.LINE_BREAK
              }
            }

            return (
              '--' +
              this.getBoundary() +
              FormData.LINE_BREAK +
              contents +
              FormData.LINE_BREAK
            )
          }

          FormData.prototype._getContentDisposition = function(value, options) {
            var filename, contentDisposition

            if (typeof options.filepath === 'string') {
              // custom filepath for relative paths
              filename = path.normalize(options.filepath).replace(/\\/g, '/')
            } else if (options.filename || value.name || value.path) {
              // custom filename take precedence
              // formidable and the browser add a name property
              // fs- and request- streams have path property
              filename = path.basename(
                options.filename || value.name || value.path
              )
            } else if (value.readable && value.hasOwnProperty('httpVersion')) {
              // or try http response
              filename = path.basename(value.client._httpMessage.path)
            }

            if (filename) {
              contentDisposition = 'filename="' + filename + '"'
            }

            return contentDisposition
          }

          FormData.prototype._getContentType = function(value, options) {
            // use custom content-type above all
            var contentType = options.contentType

            // or try `name` from formidable, browser
            if (!contentType && value.name) {
              contentType = mime.lookup(value.name)
            }

            // or try `path` from fs-, request- streams
            if (!contentType && value.path) {
              contentType = mime.lookup(value.path)
            }

            // or if it's http-reponse
            if (
              !contentType &&
              value.readable &&
              value.hasOwnProperty('httpVersion')
            ) {
              contentType = value.headers['content-type']
            }

            // or guess it from the filepath or filename
            if (!contentType && (options.filepath || options.filename)) {
              contentType = mime.lookup(options.filepath || options.filename)
            }

            // fallback to the default content type if `value` is not simple value
            if (!contentType && typeof value == 'object') {
              contentType = FormData.DEFAULT_CONTENT_TYPE
            }

            return contentType
          }

          FormData.prototype._multiPartFooter = function() {
            return function(next) {
              var footer = FormData.LINE_BREAK

              var lastPart = this._streams.length === 0
              if (lastPart) {
                footer += this._lastBoundary()
              }

              next(footer)
            }.bind(this)
          }

          FormData.prototype._lastBoundary = function() {
            return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK
          }

          FormData.prototype.getHeaders = function(userHeaders) {
            var header
            var formHeaders = {
              'content-type':
                'multipart/form-data; boundary=' + this.getBoundary()
            }

            for (header in userHeaders) {
              if (userHeaders.hasOwnProperty(header)) {
                formHeaders[header.toLowerCase()] = userHeaders[header]
              }
            }

            return formHeaders
          }

          FormData.prototype.getBoundary = function() {
            if (!this._boundary) {
              this._generateBoundary()
            }

            return this._boundary
          }

          FormData.prototype._generateBoundary = function() {
            // This generates a 50 character boundary similar to those used by Firefox.
            // They are optimized for boyer-moore parsing.
            var boundary = '--------------------------'
            for (var i = 0; i < 24; i++) {
              boundary += Math.floor(Math.random() * 10).toString(16)
            }

            this._boundary = boundary
          }

          // Note: getLengthSync DOESN'T calculate streams length
          // As workaround one can calculate file size manually
          // and add it as knownLength option
          FormData.prototype.getLengthSync = function() {
            var knownLength = this._overheadLength + this._valueLength

            // Don't get confused, there are 3 "internal" streams for each keyval pair
            // so it basically checks if there is any value added to the form
            if (this._streams.length) {
              knownLength += this._lastBoundary().length
            }

            // https://github.com/form-data/form-data/issues/40
            if (!this.hasKnownLength()) {
              // Some async length retrievers are present
              // therefore synchronous length calculation is false.
              // Please use getLength(callback) to get proper length
              this._error(
                new Error('Cannot calculate proper length in synchronous way.')
              )
            }

            return knownLength
          }

          // Public API to check if length of added values is known
          // https://github.com/form-data/form-data/issues/196
          // https://github.com/form-data/form-data/issues/262
          FormData.prototype.hasKnownLength = function() {
            var hasKnownLength = true

            if (this._valuesToMeasure.length) {
              hasKnownLength = false
            }

            return hasKnownLength
          }

          FormData.prototype.getLength = function(cb) {
            var knownLength = this._overheadLength + this._valueLength

            if (this._streams.length) {
              knownLength += this._lastBoundary().length
            }

            if (!this._valuesToMeasure.length) {
              process.nextTick(cb.bind(this, null, knownLength))
              return
            }

            asynckit.parallel(
              this._valuesToMeasure,
              this._lengthRetriever,
              function(err, values) {
                if (err) {
                  cb(err)
                  return
                }

                values.forEach(function(length) {
                  knownLength += length
                })

                cb(null, knownLength)
              }
            )
          }

          FormData.prototype.submit = function(params, cb) {
            var request,
              options,
              defaults = { method: 'post' }
            // parse provided url if it's string
            // or treat it as options object
            if (typeof params == 'string') {
              params = parseUrl(params)
              options = populate(
                {
                  port: params.port,
                  path: params.pathname,
                  host: params.hostname,
                  protocol: params.protocol
                },
                defaults
              )

              // use custom params
            } else {
              options = populate(params, defaults)
              // if no port provided use default one
              if (!options.port) {
                options.port = options.protocol == 'https:' ? 443 : 80
              }
            }

            // put that good code in getHeaders to some use
            options.headers = this.getHeaders(params.headers)

            // https if specified, fallback to http in any other case
            if (options.protocol == 'https:') {
              request = https.request(options)
            } else {
              request = http.request(options)
            }

            // get content length and fire away
            this.getLength(
              function(err, length) {
                if (err) {
                  this._error(err)
                  return
                }

                // add content length
                request.setHeader('Content-Length', length)

                this.pipe(request)
                if (cb) {
                  request.on('error', cb)
                  request.on('response', cb.bind(this, null))
                }
              }.bind(this)
            )

            return request
          }

          FormData.prototype._error = function(err) {
            if (!this.error) {
              this.error = err
              this.pause()
              this.emit('error', err)
            }
          }

          FormData.prototype.toString = function() {
            return '[object FormData]'
          }

          /***/
        },

      /***/ '../../node_modules/form-data/lib/populate.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/form-data/lib/populate.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          // populates missing values
          module.exports = function(dst, src) {
            Object.keys(src).forEach(function(prop) {
              dst[prop] = dst[prop] || src[prop]
            })

            return dst
          }

          /***/
        },

      /***/ '../../node_modules/formidable/lib/file.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/formidable/lib/file.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          if (false) {
          }

          var util = __webpack_require__(/*! util */ 'util'),
            fs = __webpack_require__(/*! fs */ 'fs'),
            EventEmitter = __webpack_require__(/*! events */ 'events')
              .EventEmitter,
            crypto = __webpack_require__(/*! crypto */ 'crypto')

          function File(properties) {
            EventEmitter.call(this)

            this.size = 0
            this.path = null
            this.name = null
            this.type = null
            this.hash = null
            this.lastModifiedDate = null

            this._writeStream = null

            for (var key in properties) {
              this[key] = properties[key]
            }

            if (typeof this.hash === 'string') {
              this.hash = crypto.createHash(properties.hash)
            } else {
              this.hash = null
            }
          }
          module.exports = File
          util.inherits(File, EventEmitter)

          File.prototype.open = function() {
            this._writeStream = new fs.WriteStream(this.path)
          }

          File.prototype.toJSON = function() {
            var json = {
              size: this.size,
              path: this.path,
              name: this.name,
              type: this.type,
              mtime: this.lastModifiedDate,
              length: this.length,
              filename: this.filename,
              mime: this.mime
            }
            if (this.hash && this.hash != '') {
              json.hash = this.hash
            }
            return json
          }

          File.prototype.write = function(buffer, cb) {
            var self = this
            if (self.hash) {
              self.hash.update(buffer)
            }

            if (this._writeStream.closed) {
              return cb()
            }

            this._writeStream.write(buffer, function() {
              self.lastModifiedDate = new Date()
              self.size += buffer.length
              self.emit('progress', self.size)
              cb()
            })
          }

          File.prototype.end = function(cb) {
            var self = this
            if (self.hash) {
              self.hash = self.hash.digest('hex')
            }
            this._writeStream.end(function() {
              self.emit('end')
              cb()
            })
          }

          /***/
        },

      /***/ '../../node_modules/formidable/lib/incoming_form.js':
        /*!**************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/formidable/lib/incoming_form.js ***!
  \**************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          if (false) {
          }

          var crypto = __webpack_require__(/*! crypto */ 'crypto')
          var fs = __webpack_require__(/*! fs */ 'fs')
          var util = __webpack_require__(/*! util */ 'util'),
            path = __webpack_require__(/*! path */ 'path'),
            File = __webpack_require__(
              /*! ./file */ '../../node_modules/formidable/lib/file.js'
            ),
            MultipartParser = __webpack_require__(
              /*! ./multipart_parser */ '../../node_modules/formidable/lib/multipart_parser.js'
            ).MultipartParser,
            QuerystringParser = __webpack_require__(
              /*! ./querystring_parser */ '../../node_modules/formidable/lib/querystring_parser.js'
            ).QuerystringParser,
            OctetParser = __webpack_require__(
              /*! ./octet_parser */ '../../node_modules/formidable/lib/octet_parser.js'
            ).OctetParser,
            JSONParser = __webpack_require__(
              /*! ./json_parser */ '../../node_modules/formidable/lib/json_parser.js'
            ).JSONParser,
            StringDecoder = __webpack_require__(
              /*! string_decoder */ 'string_decoder'
            ).StringDecoder,
            EventEmitter = __webpack_require__(/*! events */ 'events')
              .EventEmitter,
            Stream = __webpack_require__(/*! stream */ 'stream').Stream,
            os = __webpack_require__(/*! os */ 'os')

          function IncomingForm(opts) {
            if (!(this instanceof IncomingForm)) return new IncomingForm(opts)
            EventEmitter.call(this)

            opts = opts || {}

            this.error = null
            this.ended = false

            this.maxFields = opts.maxFields || 1000
            this.maxFieldsSize = opts.maxFieldsSize || 20 * 1024 * 1024
            this.maxFileSize = opts.maxFileSize || 200 * 1024 * 1024
            this.keepExtensions = opts.keepExtensions || false
            this.uploadDir =
              opts.uploadDir || (os.tmpdir && os.tmpdir()) || os.tmpDir()
            this.encoding = opts.encoding || 'utf-8'
            this.headers = null
            this.type = null
            this.hash = opts.hash || false
            this.multiples = opts.multiples || false

            this.bytesReceived = null
            this.bytesExpected = null

            this._parser = null
            this._flushing = 0
            this._fieldsSize = 0
            this._fileSize = 0
            this.openedFiles = []

            return this
          }
          util.inherits(IncomingForm, EventEmitter)
          exports.IncomingForm = IncomingForm

          IncomingForm.prototype.parse = function(req, cb) {
            this.pause = function() {
              try {
                req.pause()
              } catch (err) {
                // the stream was destroyed
                if (!this.ended) {
                  // before it was completed, crash & burn
                  this._error(err)
                }
                return false
              }
              return true
            }

            this.resume = function() {
              try {
                req.resume()
              } catch (err) {
                // the stream was destroyed
                if (!this.ended) {
                  // before it was completed, crash & burn
                  this._error(err)
                }
                return false
              }

              return true
            }

            // Setup callback first, so we don't miss anything from data events emitted
            // immediately.
            if (cb) {
              var fields = {},
                files = {}
              this.on('field', function(name, value) {
                fields[name] = value
              })
                .on('file', function(name, file) {
                  if (this.multiples) {
                    if (files[name]) {
                      if (!Array.isArray(files[name])) {
                        files[name] = [files[name]]
                      }
                      files[name].push(file)
                    } else {
                      files[name] = file
                    }
                  } else {
                    files[name] = file
                  }
                })
                .on('error', function(err) {
                  cb(err, fields, files)
                })
                .on('end', function() {
                  cb(null, fields, files)
                })
            }

            // Parse headers and setup the parser, ready to start listening for data.
            this.writeHeaders(req.headers)

            // Start listening for data.
            var self = this
            req
              .on('error', function(err) {
                self._error(err)
              })
              .on('aborted', function() {
                self.emit('aborted')
                self._error(new Error('Request aborted'))
              })
              .on('data', function(buffer) {
                self.write(buffer)
              })
              .on('end', function() {
                if (self.error) {
                  return
                }

                var err = self._parser.end()
                if (err) {
                  self._error(err)
                }
              })

            return this
          }

          IncomingForm.prototype.writeHeaders = function(headers) {
            this.headers = headers
            this._parseContentLength()
            this._parseContentType()
          }

          IncomingForm.prototype.write = function(buffer) {
            if (this.error) {
              return
            }
            if (!this._parser) {
              this._error(new Error('uninitialized parser'))
              return
            }

            this.bytesReceived += buffer.length
            this.emit('progress', this.bytesReceived, this.bytesExpected)

            var bytesParsed = this._parser.write(buffer)
            if (bytesParsed !== buffer.length) {
              this._error(
                new Error(
                  'parser error, ' +
                    bytesParsed +
                    ' of ' +
                    buffer.length +
                    ' bytes parsed'
                )
              )
            }

            return bytesParsed
          }

          IncomingForm.prototype.pause = function() {
            // this does nothing, unless overwritten in IncomingForm.parse
            return false
          }

          IncomingForm.prototype.resume = function() {
            // this does nothing, unless overwritten in IncomingForm.parse
            return false
          }

          IncomingForm.prototype.onPart = function(part) {
            // this method can be overwritten by the user
            this.handlePart(part)
          }

          IncomingForm.prototype.handlePart = function(part) {
            var self = this

            // This MUST check exactly for undefined. You can not change it to !part.filename.
            if (part.filename === undefined) {
              var value = '',
                decoder = new StringDecoder(this.encoding)

              part.on('data', function(buffer) {
                self._fieldsSize += buffer.length
                if (self._fieldsSize > self.maxFieldsSize) {
                  self._error(
                    new Error(
                      'maxFieldsSize exceeded, received ' +
                        self._fieldsSize +
                        ' bytes of field data'
                    )
                  )
                  return
                }
                value += decoder.write(buffer)
              })

              part.on('end', function() {
                self.emit('field', part.name, value)
              })
              return
            }

            this._flushing++

            var file = new File({
              path: this._uploadPath(part.filename),
              name: part.filename,
              type: part.mime,
              hash: self.hash
            })

            this.emit('fileBegin', part.name, file)

            file.open()
            this.openedFiles.push(file)

            part.on('data', function(buffer) {
              self._fileSize += buffer.length
              if (self._fileSize > self.maxFileSize) {
                self._error(
                  new Error(
                    'maxFileSize exceeded, received ' +
                      self._fileSize +
                      ' bytes of file data'
                  )
                )
                return
              }
              if (buffer.length == 0) {
                return
              }
              self.pause()
              file.write(buffer, function() {
                self.resume()
              })
            })

            part.on('end', function() {
              file.end(function() {
                self._flushing--
                self.emit('file', part.name, file)
                self._maybeEnd()
              })
            })
          }

          function dummyParser(self) {
            return {
              end: function() {
                self.ended = true
                self._maybeEnd()
                return null
              }
            }
          }

          IncomingForm.prototype._parseContentType = function() {
            if (this.bytesExpected === 0) {
              this._parser = dummyParser(this)
              return
            }

            if (!this.headers['content-type']) {
              this._error(new Error('bad content-type header, no content-type'))
              return
            }

            if (this.headers['content-type'].match(/octet-stream/i)) {
              this._initOctetStream()
              return
            }

            if (this.headers['content-type'].match(/urlencoded/i)) {
              this._initUrlencoded()
              return
            }

            if (this.headers['content-type'].match(/multipart/i)) {
              var m = this.headers['content-type'].match(
                /boundary=(?:"([^"]+)"|([^;]+))/i
              )
              if (m) {
                this._initMultipart(m[1] || m[2])
              } else {
                this._error(
                  new Error('bad content-type header, no multipart boundary')
                )
              }
              return
            }

            if (this.headers['content-type'].match(/json/i)) {
              this._initJSONencoded()
              return
            }

            this._error(
              new Error(
                'bad content-type header, unknown content-type: ' +
                  this.headers['content-type']
              )
            )
          }

          IncomingForm.prototype._error = function(err) {
            if (this.error || this.ended) {
              return
            }

            this.error = err
            this.emit('error', err)

            if (Array.isArray(this.openedFiles)) {
              this.openedFiles.forEach(function(file) {
                file._writeStream.destroy()
                setTimeout(fs.unlink, 0, file.path, function(error) {})
              })
            }
          }

          IncomingForm.prototype._parseContentLength = function() {
            this.bytesReceived = 0
            if (this.headers['content-length']) {
              this.bytesExpected = parseInt(this.headers['content-length'], 10)
            } else if (this.headers['transfer-encoding'] === undefined) {
              this.bytesExpected = 0
            }

            if (this.bytesExpected !== null) {
              this.emit('progress', this.bytesReceived, this.bytesExpected)
            }
          }

          IncomingForm.prototype._newParser = function() {
            return new MultipartParser()
          }

          IncomingForm.prototype._initMultipart = function(boundary) {
            this.type = 'multipart'

            var parser = new MultipartParser(),
              self = this,
              headerField,
              headerValue,
              part

            parser.initWithBoundary(boundary)

            parser.onPartBegin = function() {
              part = new Stream()
              part.readable = true
              part.headers = {}
              part.name = null
              part.filename = null
              part.mime = null

              part.transferEncoding = 'binary'
              part.transferBuffer = ''

              headerField = ''
              headerValue = ''
            }

            parser.onHeaderField = function(b, start, end) {
              headerField += b.toString(self.encoding, start, end)
            }

            parser.onHeaderValue = function(b, start, end) {
              headerValue += b.toString(self.encoding, start, end)
            }

            parser.onHeaderEnd = function() {
              headerField = headerField.toLowerCase()
              part.headers[headerField] = headerValue

              // matches either a quoted-string or a token (RFC 2616 section 19.5.1)
              var m = headerValue.match(
                /\bname=("([^"]*)"|([^\(\)<>@,;:\\"\/\[\]\?=\{\}\s\t/]+))/i
              )
              if (headerField == 'content-disposition') {
                if (m) {
                  part.name = m[2] || m[3] || ''
                }

                part.filename = self._fileName(headerValue)
              } else if (headerField == 'content-type') {
                part.mime = headerValue
              } else if (headerField == 'content-transfer-encoding') {
                part.transferEncoding = headerValue.toLowerCase()
              }

              headerField = ''
              headerValue = ''
            }

            parser.onHeadersEnd = function() {
              switch (part.transferEncoding) {
                case 'binary':
                case '7bit':
                case '8bit':
                  parser.onPartData = function(b, start, end) {
                    part.emit('data', b.slice(start, end))
                  }

                  parser.onPartEnd = function() {
                    part.emit('end')
                  }
                  break

                case 'base64':
                  parser.onPartData = function(b, start, end) {
                    part.transferBuffer += b.slice(start, end).toString('ascii')

                    /*
        four bytes (chars) in base64 converts to three bytes in binary
        encoding. So we should always work with a number of bytes that
        can be divided by 4, it will result in a number of buytes that
        can be divided vy 3.
        */
                    var offset =
                      parseInt(part.transferBuffer.length / 4, 10) * 4
                    part.emit(
                      'data',
                      new Buffer(
                        part.transferBuffer.substring(0, offset),
                        'base64'
                      )
                    )
                    part.transferBuffer = part.transferBuffer.substring(offset)
                  }

                  parser.onPartEnd = function() {
                    part.emit('data', new Buffer(part.transferBuffer, 'base64'))
                    part.emit('end')
                  }
                  break

                default:
                  return self._error(new Error('unknown transfer-encoding'))
              }

              self.onPart(part)
            }

            parser.onEnd = function() {
              self.ended = true
              self._maybeEnd()
            }

            this._parser = parser
          }

          IncomingForm.prototype._fileName = function(headerValue) {
            // matches either a quoted-string or a token (RFC 2616 section 19.5.1)
            var m = headerValue.match(
              /\bfilename=("(.*?)"|([^\(\)<>@,;:\\"\/\[\]\?=\{\}\s\t/]+))($|;\s)/i
            )
            if (!m) return

            var match = m[2] || m[3] || ''
            var filename = match.substr(match.lastIndexOf('\\') + 1)
            filename = filename.replace(/%22/g, '"')
            filename = filename.replace(/&#([\d]{4});/g, function(m, code) {
              return String.fromCharCode(code)
            })
            return filename
          }

          IncomingForm.prototype._initUrlencoded = function() {
            this.type = 'urlencoded'

            var parser = new QuerystringParser(this.maxFields),
              self = this

            parser.onField = function(key, val) {
              self.emit('field', key, val)
            }

            parser.onEnd = function() {
              self.ended = true
              self._maybeEnd()
            }

            this._parser = parser
          }

          IncomingForm.prototype._initOctetStream = function() {
            this.type = 'octet-stream'
            var filename = this.headers['x-file-name']
            var mime = this.headers['content-type']

            var file = new File({
              path: this._uploadPath(filename),
              name: filename,
              type: mime
            })

            this.emit('fileBegin', filename, file)
            file.open()
            this.openedFiles.push(file)
            this._flushing++

            var self = this

            self._parser = new OctetParser()

            //Keep track of writes that haven't finished so we don't emit the file before it's done being written
            var outstandingWrites = 0

            self._parser.on('data', function(buffer) {
              self.pause()
              outstandingWrites++

              file.write(buffer, function() {
                outstandingWrites--
                self.resume()

                if (self.ended) {
                  self._parser.emit('doneWritingFile')
                }
              })
            })

            self._parser.on('end', function() {
              self._flushing--
              self.ended = true

              var done = function() {
                file.end(function() {
                  self.emit('file', 'file', file)
                  self._maybeEnd()
                })
              }

              if (outstandingWrites === 0) {
                done()
              } else {
                self._parser.once('doneWritingFile', done)
              }
            })
          }

          IncomingForm.prototype._initJSONencoded = function() {
            this.type = 'json'

            var parser = new JSONParser(this),
              self = this

            parser.onField = function(key, val) {
              self.emit('field', key, val)
            }

            parser.onEnd = function() {
              self.ended = true
              self._maybeEnd()
            }

            this._parser = parser
          }

          IncomingForm.prototype._uploadPath = function(filename) {
            var buf = crypto.randomBytes(16)
            var name = 'upload_' + buf.toString('hex')

            if (this.keepExtensions) {
              var ext = path.extname(filename)
              ext = ext.replace(/(\.[a-z0-9]+).*/i, '$1')

              name += ext
            }

            return path.join(this.uploadDir, name)
          }

          IncomingForm.prototype._maybeEnd = function() {
            if (!this.ended || this._flushing || this.error) {
              return
            }

            this.emit('end')
          }

          /***/
        },

      /***/ '../../node_modules/formidable/lib/index.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/formidable/lib/index.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var IncomingForm = __webpack_require__(
            /*! ./incoming_form */ '../../node_modules/formidable/lib/incoming_form.js'
          ).IncomingForm
          IncomingForm.IncomingForm = IncomingForm
          module.exports = IncomingForm

          /***/
        },

      /***/ '../../node_modules/formidable/lib/json_parser.js':
        /*!************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/formidable/lib/json_parser.js ***!
  \************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          if (false) {
          }

          var Buffer = __webpack_require__(/*! buffer */ 'buffer').Buffer

          function JSONParser(parent) {
            this.parent = parent
            this.chunks = []
            this.bytesWritten = 0
          }
          exports.JSONParser = JSONParser

          JSONParser.prototype.write = function(buffer) {
            this.bytesWritten += buffer.length
            this.chunks.push(buffer)
            return buffer.length
          }

          JSONParser.prototype.end = function() {
            try {
              var fields = JSON.parse(Buffer.concat(this.chunks))
              for (var field in fields) {
                this.onField(field, fields[field])
              }
            } catch (e) {
              this.parent.emit('error', e)
            }
            this.data = null

            this.onEnd()
          }

          /***/
        },

      /***/ '../../node_modules/formidable/lib/multipart_parser.js':
        /*!*****************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/formidable/lib/multipart_parser.js ***!
  \*****************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Buffer = __webpack_require__(/*! buffer */ 'buffer').Buffer,
            s = 0,
            S = {
              PARSER_UNINITIALIZED: s++,
              START: s++,
              START_BOUNDARY: s++,
              HEADER_FIELD_START: s++,
              HEADER_FIELD: s++,
              HEADER_VALUE_START: s++,
              HEADER_VALUE: s++,
              HEADER_VALUE_ALMOST_DONE: s++,
              HEADERS_ALMOST_DONE: s++,
              PART_DATA_START: s++,
              PART_DATA: s++,
              PART_END: s++,
              END: s++
            },
            f = 1,
            F = { PART_BOUNDARY: f, LAST_BOUNDARY: (f *= 2) },
            LF = 10,
            CR = 13,
            SPACE = 32,
            HYPHEN = 45,
            COLON = 58,
            A = 97,
            Z = 122,
            lower = function(c) {
              return c | 0x20
            }

          for (s in S) {
            exports[s] = S[s]
          }

          function MultipartParser() {
            this.boundary = null
            this.boundaryChars = null
            this.lookbehind = null
            this.state = S.PARSER_UNINITIALIZED

            this.index = null
            this.flags = 0
          }
          exports.MultipartParser = MultipartParser

          MultipartParser.stateToString = function(stateNumber) {
            for (var state in S) {
              var number = S[state]
              if (number === stateNumber) return state
            }
          }

          MultipartParser.prototype.initWithBoundary = function(str) {
            this.boundary = new Buffer(str.length + 4)
            this.boundary.write('\r\n--', 0)
            this.boundary.write(str, 4)
            this.lookbehind = new Buffer(this.boundary.length + 8)
            this.state = S.START

            this.boundaryChars = {}
            for (var i = 0; i < this.boundary.length; i++) {
              this.boundaryChars[this.boundary[i]] = true
            }
          }

          MultipartParser.prototype.write = function(buffer) {
            var self = this,
              i = 0,
              len = buffer.length,
              prevIndex = this.index,
              index = this.index,
              state = this.state,
              flags = this.flags,
              lookbehind = this.lookbehind,
              boundary = this.boundary,
              boundaryChars = this.boundaryChars,
              boundaryLength = this.boundary.length,
              boundaryEnd = boundaryLength - 1,
              bufferLength = buffer.length,
              c,
              cl,
              mark = function(name) {
                self[name + 'Mark'] = i
              },
              clear = function(name) {
                delete self[name + 'Mark']
              },
              callback = function(name, buffer, start, end) {
                if (start !== undefined && start === end) {
                  return
                }

                var callbackSymbol =
                  'on' + name.substr(0, 1).toUpperCase() + name.substr(1)
                if (callbackSymbol in self) {
                  self[callbackSymbol](buffer, start, end)
                }
              },
              dataCallback = function(name, clear) {
                var markSymbol = name + 'Mark'
                if (!(markSymbol in self)) {
                  return
                }

                if (!clear) {
                  callback(name, buffer, self[markSymbol], buffer.length)
                  self[markSymbol] = 0
                } else {
                  callback(name, buffer, self[markSymbol], i)
                  delete self[markSymbol]
                }
              }

            for (i = 0; i < len; i++) {
              c = buffer[i]
              switch (state) {
                case S.PARSER_UNINITIALIZED:
                  return i
                case S.START:
                  index = 0
                  state = S.START_BOUNDARY
                case S.START_BOUNDARY:
                  if (index == boundary.length - 2) {
                    if (c == HYPHEN) {
                      flags |= F.LAST_BOUNDARY
                    } else if (c != CR) {
                      return i
                    }
                    index++
                    break
                  } else if (index - 1 == boundary.length - 2) {
                    if (flags & F.LAST_BOUNDARY && c == HYPHEN) {
                      callback('end')
                      state = S.END
                      flags = 0
                    } else if (!(flags & F.LAST_BOUNDARY) && c == LF) {
                      index = 0
                      callback('partBegin')
                      state = S.HEADER_FIELD_START
                    } else {
                      return i
                    }
                    break
                  }

                  if (c != boundary[index + 2]) {
                    index = -2
                  }
                  if (c == boundary[index + 2]) {
                    index++
                  }
                  break
                case S.HEADER_FIELD_START:
                  state = S.HEADER_FIELD
                  mark('headerField')
                  index = 0
                case S.HEADER_FIELD:
                  if (c == CR) {
                    clear('headerField')
                    state = S.HEADERS_ALMOST_DONE
                    break
                  }

                  index++
                  if (c == HYPHEN) {
                    break
                  }

                  if (c == COLON) {
                    if (index == 1) {
                      // empty header field
                      return i
                    }
                    dataCallback('headerField', true)
                    state = S.HEADER_VALUE_START
                    break
                  }

                  cl = lower(c)
                  if (cl < A || cl > Z) {
                    return i
                  }
                  break
                case S.HEADER_VALUE_START:
                  if (c == SPACE) {
                    break
                  }

                  mark('headerValue')
                  state = S.HEADER_VALUE
                case S.HEADER_VALUE:
                  if (c == CR) {
                    dataCallback('headerValue', true)
                    callback('headerEnd')
                    state = S.HEADER_VALUE_ALMOST_DONE
                  }
                  break
                case S.HEADER_VALUE_ALMOST_DONE:
                  if (c != LF) {
                    return i
                  }
                  state = S.HEADER_FIELD_START
                  break
                case S.HEADERS_ALMOST_DONE:
                  if (c != LF) {
                    return i
                  }

                  callback('headersEnd')
                  state = S.PART_DATA_START
                  break
                case S.PART_DATA_START:
                  state = S.PART_DATA
                  mark('partData')
                case S.PART_DATA:
                  prevIndex = index

                  if (index === 0) {
                    // boyer-moore derrived algorithm to safely skip non-boundary data
                    i += boundaryEnd
                    while (i < bufferLength && !(buffer[i] in boundaryChars)) {
                      i += boundaryLength
                    }
                    i -= boundaryEnd
                    c = buffer[i]
                  }

                  if (index < boundary.length) {
                    if (boundary[index] == c) {
                      if (index === 0) {
                        dataCallback('partData', true)
                      }
                      index++
                    } else {
                      index = 0
                    }
                  } else if (index == boundary.length) {
                    index++
                    if (c == CR) {
                      // CR = part boundary
                      flags |= F.PART_BOUNDARY
                    } else if (c == HYPHEN) {
                      // HYPHEN = end boundary
                      flags |= F.LAST_BOUNDARY
                    } else {
                      index = 0
                    }
                  } else if (index - 1 == boundary.length) {
                    if (flags & F.PART_BOUNDARY) {
                      index = 0
                      if (c == LF) {
                        // unset the PART_BOUNDARY flag
                        flags &= ~F.PART_BOUNDARY
                        callback('partEnd')
                        callback('partBegin')
                        state = S.HEADER_FIELD_START
                        break
                      }
                    } else if (flags & F.LAST_BOUNDARY) {
                      if (c == HYPHEN) {
                        callback('partEnd')
                        callback('end')
                        state = S.END
                        flags = 0
                      } else {
                        index = 0
                      }
                    } else {
                      index = 0
                    }
                  }

                  if (index > 0) {
                    // when matching a possible boundary, keep a lookbehind reference
                    // in case it turns out to be a false lead
                    lookbehind[index - 1] = c
                  } else if (prevIndex > 0) {
                    // if our boundary turned out to be rubbish, the captured lookbehind
                    // belongs to partData
                    callback('partData', lookbehind, 0, prevIndex)
                    prevIndex = 0
                    mark('partData')

                    // reconsider the current character even so it interrupted the sequence
                    // it could be the beginning of a new sequence
                    i--
                  }

                  break
                case S.END:
                  break
                default:
                  return i
              }
            }

            dataCallback('headerField')
            dataCallback('headerValue')
            dataCallback('partData')

            this.index = index
            this.state = state
            this.flags = flags

            return len
          }

          MultipartParser.prototype.end = function() {
            var callback = function(self, name) {
              var callbackSymbol =
                'on' + name.substr(0, 1).toUpperCase() + name.substr(1)
              if (callbackSymbol in self) {
                self[callbackSymbol]()
              }
            }
            if (
              (this.state == S.HEADER_FIELD_START && this.index === 0) ||
              (this.state == S.PART_DATA && this.index == this.boundary.length)
            ) {
              callback(this, 'partEnd')
              callback(this, 'end')
            } else if (this.state != S.END) {
              return new Error(
                'MultipartParser.end(): stream ended unexpectedly: ' +
                  this.explain()
              )
            }
          }

          MultipartParser.prototype.explain = function() {
            return 'state = ' + MultipartParser.stateToString(this.state)
          }

          /***/
        },

      /***/ '../../node_modules/formidable/lib/octet_parser.js':
        /*!*************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/formidable/lib/octet_parser.js ***!
  \*************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var EventEmitter = __webpack_require__(/*! events */ 'events')
              .EventEmitter,
            util = __webpack_require__(/*! util */ 'util')

          function OctetParser(options) {
            if (!(this instanceof OctetParser)) return new OctetParser(options)
            EventEmitter.call(this)
          }

          util.inherits(OctetParser, EventEmitter)

          exports.OctetParser = OctetParser

          OctetParser.prototype.write = function(buffer) {
            this.emit('data', buffer)
            return buffer.length
          }

          OctetParser.prototype.end = function() {
            this.emit('end')
          }

          /***/
        },

      /***/ '../../node_modules/formidable/lib/querystring_parser.js':
        /*!*******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/formidable/lib/querystring_parser.js ***!
  \*******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          if (false) {
          }

          // This is a buffering parser, not quite as nice as the multipart one.
          // If I find time I'll rewrite this to be fully streaming as well
          var querystring = __webpack_require__(
            /*! querystring */ 'querystring'
          )

          function QuerystringParser(maxKeys) {
            this.maxKeys = maxKeys
            this.buffer = ''
          }
          exports.QuerystringParser = QuerystringParser

          QuerystringParser.prototype.write = function(buffer) {
            this.buffer += buffer.toString('ascii')
            return buffer.length
          }

          QuerystringParser.prototype.end = function() {
            var fields = querystring.parse(this.buffer, '&', '=', {
              maxKeys: this.maxKeys
            })
            for (var field in fields) {
              this.onField(field, fields[field])
            }
            this.buffer = ''

            this.onEnd()
          }

          /***/
        },

      /***/ '../../node_modules/from/index.js':
        /*!********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/from/index.js ***!
  \********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var Stream = __webpack_require__(/*! stream */ 'stream')

          // from
          //
          // a stream that reads from an source.
          // source may be an array, or a function.
          // from handles pause behaviour for you.

          module.exports = function from(source) {
            if (Array.isArray(source)) {
              var source_index = 0,
                source_len = source.length
              return from(function(i) {
                if (source_index < source_len)
                  this.emit('data', source[source_index++])
                else this.emit('end')
                return true
              })
            }
            var s = new Stream(),
              i = 0
            s.ended = false
            s.started = false
            s.readable = true
            s.writable = false
            s.paused = false
            s.ended = false
            s.pause = function() {
              s.started = true
              s.paused = true
            }
            function next() {
              s.started = true
              if (s.ended) return
              while (
                !s.ended &&
                !s.paused &&
                source.call(s, i++, function() {
                  if (!s.ended && !s.paused) process.nextTick(next)
                })
              );
            }
            s.resume = function() {
              s.started = true
              s.paused = false
              next()
            }
            s.on('end', function() {
              s.ended = true
              s.readable = false
              process.nextTick(s.destroy)
            })
            s.destroy = function() {
              s.ended = true
              s.emit('close')
            }
            /*
    by default, the stream will start emitting at nextTick
    if you want, you can pause it, after pipeing.
    you can also resume before next tick, and that will also
    work.
  */
            process.nextTick(function() {
              if (!s.started) s.resume()
            })
            return s
          }

          /***/
        },

      /***/ '../../node_modules/has-flag/index.js':
        /*!************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/has-flag/index.js ***!
  \************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          module.exports = (flag, argv) => {
            argv = argv || process.argv
            const prefix = flag.startsWith('-')
              ? ''
              : flag.length === 1
              ? '-'
              : '--'
            const pos = argv.indexOf(prefix + flag)
            const terminatorPos = argv.indexOf('--')
            return (
              pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos)
            )
          }

          /***/
        },

      /***/ '../../node_modules/inherits/inherits.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/inherits/inherits.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          try {
            var util = __webpack_require__(/*! util */ 'util')
            if (typeof util.inherits !== 'function') throw ''
            module.exports = util.inherits
          } catch (e) {
            module.exports = __webpack_require__(
              /*! ./inherits_browser.js */ '../../node_modules/inherits/inherits_browser.js'
            )
          }

          /***/
        },

      /***/ '../../node_modules/inherits/inherits_browser.js':
        /*!***********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/inherits/inherits_browser.js ***!
  \***********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          if (typeof Object.create === 'function') {
            // implementation from standard node.js 'util' module
            module.exports = function inherits(ctor, superCtor) {
              ctor.super_ = superCtor
              ctor.prototype = Object.create(superCtor.prototype, {
                constructor: {
                  value: ctor,
                  enumerable: false,
                  writable: true,
                  configurable: true
                }
              })
            }
          } else {
            // old school shim for old browsers
            module.exports = function inherits(ctor, superCtor) {
              ctor.super_ = superCtor
              var TempCtor = function() {}
              TempCtor.prototype = superCtor.prototype
              ctor.prototype = new TempCtor()
              ctor.prototype.constructor = ctor
            }
          }

          /***/
        },

      /***/ '../../node_modules/is-buffer/index.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/is-buffer/index.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /*!
           * Determine if an object is a Buffer
           *
           * @author   Feross Aboukhadijeh <https://feross.org>
           * @license  MIT
           */

          // The _isBuffer check is for Safari 5-7 support, because it's missing
          // Object.prototype.constructor. Remove this eventually
          module.exports = function(obj) {
            return (
              obj != null &&
              (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
            )
          }

          function isBuffer(obj) {
            return (
              !!obj.constructor &&
              typeof obj.constructor.isBuffer === 'function' &&
              obj.constructor.isBuffer(obj)
            )
          }

          // For Node v0.10 support. Remove this eventually.
          function isSlowBuffer(obj) {
            return (
              typeof obj.readFloatLE === 'function' &&
              typeof obj.slice === 'function' &&
              isBuffer(obj.slice(0, 0))
            )
          }

          /***/
        },

      /***/ '../../node_modules/isarray/index.js':
        /*!***********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/isarray/index.js ***!
  \***********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          var toString = {}.toString

          module.exports =
            Array.isArray ||
            function(arr) {
              return toString.call(arr) == '[object Array]'
            }

          /***/
        },

      /***/ '../../node_modules/jsonparse/jsonparse.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/jsonparse/jsonparse.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /*global Buffer*/
          // Named constants with unique integer values
          var C = {}
          // Tokens
          var LEFT_BRACE = (C.LEFT_BRACE = 0x1)
          var RIGHT_BRACE = (C.RIGHT_BRACE = 0x2)
          var LEFT_BRACKET = (C.LEFT_BRACKET = 0x3)
          var RIGHT_BRACKET = (C.RIGHT_BRACKET = 0x4)
          var COLON = (C.COLON = 0x5)
          var COMMA = (C.COMMA = 0x6)
          var TRUE = (C.TRUE = 0x7)
          var FALSE = (C.FALSE = 0x8)
          var NULL = (C.NULL = 0x9)
          var STRING = (C.STRING = 0xa)
          var NUMBER = (C.NUMBER = 0xb)
          // Tokenizer States
          var START = (C.START = 0x11)
          var STOP = (C.STOP = 0x12)
          var TRUE1 = (C.TRUE1 = 0x21)
          var TRUE2 = (C.TRUE2 = 0x22)
          var TRUE3 = (C.TRUE3 = 0x23)
          var FALSE1 = (C.FALSE1 = 0x31)
          var FALSE2 = (C.FALSE2 = 0x32)
          var FALSE3 = (C.FALSE3 = 0x33)
          var FALSE4 = (C.FALSE4 = 0x34)
          var NULL1 = (C.NULL1 = 0x41)
          var NULL2 = (C.NULL2 = 0x42)
          var NULL3 = (C.NULL3 = 0x43)
          var NUMBER1 = (C.NUMBER1 = 0x51)
          var NUMBER3 = (C.NUMBER3 = 0x53)
          var STRING1 = (C.STRING1 = 0x61)
          var STRING2 = (C.STRING2 = 0x62)
          var STRING3 = (C.STRING3 = 0x63)
          var STRING4 = (C.STRING4 = 0x64)
          var STRING5 = (C.STRING5 = 0x65)
          var STRING6 = (C.STRING6 = 0x66)
          // Parser States
          var VALUE = (C.VALUE = 0x71)
          var KEY = (C.KEY = 0x72)
          // Parser Modes
          var OBJECT = (C.OBJECT = 0x81)
          var ARRAY = (C.ARRAY = 0x82)
          // Character constants
          var BACK_SLASH = '\\'.charCodeAt(0)
          var FORWARD_SLASH = '/'.charCodeAt(0)
          var BACKSPACE = '\b'.charCodeAt(0)
          var FORM_FEED = '\f'.charCodeAt(0)
          var NEWLINE = '\n'.charCodeAt(0)
          var CARRIAGE_RETURN = '\r'.charCodeAt(0)
          var TAB = '\t'.charCodeAt(0)

          var STRING_BUFFER_SIZE = 64 * 1024

          function Parser() {
            this.tState = START
            this.value = undefined

            this.string = undefined // string data
            this.stringBuffer = Buffer.alloc
              ? Buffer.alloc(STRING_BUFFER_SIZE)
              : new Buffer(STRING_BUFFER_SIZE)
            this.stringBufferOffset = 0
            this.unicode = undefined // unicode escapes
            this.highSurrogate = undefined

            this.key = undefined
            this.mode = undefined
            this.stack = []
            this.state = VALUE
            this.bytes_remaining = 0 // number of bytes remaining in multi byte utf8 char to read after split boundary
            this.bytes_in_sequence = 0 // bytes in multi byte utf8 char to read
            this.temp_buffs = {
              '2': new Buffer(2),
              '3': new Buffer(3),
              '4': new Buffer(4)
            } // for rebuilding chars split before boundary is reached

            // Stream offset
            this.offset = -1
          }

          // Slow code to string converter (only used when throwing syntax errors)
          Parser.toknam = function(code) {
            var keys = Object.keys(C)
            for (var i = 0, l = keys.length; i < l; i++) {
              var key = keys[i]
              if (C[key] === code) {
                return key
              }
            }
            return code && '0x' + code.toString(16)
          }

          var proto = Parser.prototype
          proto.onError = function(err) {
            throw err
          }
          proto.charError = function(buffer, i) {
            this.tState = STOP
            this.onError(
              new Error(
                'Unexpected ' +
                  JSON.stringify(String.fromCharCode(buffer[i])) +
                  ' at position ' +
                  i +
                  ' in state ' +
                  Parser.toknam(this.tState)
              )
            )
          }
          proto.appendStringChar = function(char) {
            if (this.stringBufferOffset >= STRING_BUFFER_SIZE) {
              this.string += this.stringBuffer.toString('utf8')
              this.stringBufferOffset = 0
            }

            this.stringBuffer[this.stringBufferOffset++] = char
          }
          proto.appendStringBuf = function(buf, start, end) {
            var size = buf.length
            if (typeof start === 'number') {
              if (typeof end === 'number') {
                if (end < 0) {
                  // adding a negative end decreeses the size
                  size = buf.length - start + end
                } else {
                  size = end - start
                }
              } else {
                size = buf.length - start
              }
            }

            if (size < 0) {
              size = 0
            }

            if (this.stringBufferOffset + size > STRING_BUFFER_SIZE) {
              this.string += this.stringBuffer.toString(
                'utf8',
                0,
                this.stringBufferOffset
              )
              this.stringBufferOffset = 0
            }

            buf.copy(this.stringBuffer, this.stringBufferOffset, start, end)
            this.stringBufferOffset += size
          }
          proto.write = function(buffer) {
            if (typeof buffer === 'string') buffer = new Buffer(buffer)
            var n
            for (var i = 0, l = buffer.length; i < l; i++) {
              if (this.tState === START) {
                n = buffer[i]
                this.offset++
                if (n === 0x7b) {
                  this.onToken(LEFT_BRACE, '{') // {
                } else if (n === 0x7d) {
                  this.onToken(RIGHT_BRACE, '}') // }
                } else if (n === 0x5b) {
                  this.onToken(LEFT_BRACKET, '[') // [
                } else if (n === 0x5d) {
                  this.onToken(RIGHT_BRACKET, ']') // ]
                } else if (n === 0x3a) {
                  this.onToken(COLON, ':') // :
                } else if (n === 0x2c) {
                  this.onToken(COMMA, ',') // ,
                } else if (n === 0x74) {
                  this.tState = TRUE1 // t
                } else if (n === 0x66) {
                  this.tState = FALSE1 // f
                } else if (n === 0x6e) {
                  this.tState = NULL1 // n
                } else if (n === 0x22) {
                  // "
                  this.string = ''
                  this.stringBufferOffset = 0
                  this.tState = STRING1
                } else if (n === 0x2d) {
                  this.string = '-'
                  this.tState = NUMBER1 // -
                } else {
                  if (n >= 0x30 && n < 0x40) {
                    // 1-9
                    this.string = String.fromCharCode(n)
                    this.tState = NUMBER3
                  } else if (
                    n === 0x20 ||
                    n === 0x09 ||
                    n === 0x0a ||
                    n === 0x0d
                  ) {
                    // whitespace
                  } else {
                    return this.charError(buffer, i)
                  }
                }
              } else if (this.tState === STRING1) {
                // After open quote
                n = buffer[i] // get current byte from buffer
                // check for carry over of a multi byte char split between data chunks
                // & fill temp buffer it with start of this data chunk up to the boundary limit set in the last iteration
                if (this.bytes_remaining > 0) {
                  for (var j = 0; j < this.bytes_remaining; j++) {
                    this.temp_buffs[this.bytes_in_sequence][
                      this.bytes_in_sequence - this.bytes_remaining + j
                    ] = buffer[j]
                  }

                  this.appendStringBuf(this.temp_buffs[this.bytes_in_sequence])
                  this.bytes_in_sequence = this.bytes_remaining = 0
                  i = i + j - 1
                } else if (this.bytes_remaining === 0 && n >= 128) {
                  // else if no remainder bytes carried over, parse multi byte (>=128) chars one at a time
                  if (n <= 193 || n > 244) {
                    return this.onError(
                      new Error(
                        'Invalid UTF-8 character at position ' +
                          i +
                          ' in state ' +
                          Parser.toknam(this.tState)
                      )
                    )
                  }
                  if (n >= 194 && n <= 223) this.bytes_in_sequence = 2
                  if (n >= 224 && n <= 239) this.bytes_in_sequence = 3
                  if (n >= 240 && n <= 244) this.bytes_in_sequence = 4
                  if (this.bytes_in_sequence + i > buffer.length) {
                    // if bytes needed to complete char fall outside buffer length, we have a boundary split
                    for (var k = 0; k <= buffer.length - 1 - i; k++) {
                      this.temp_buffs[this.bytes_in_sequence][k] = buffer[i + k] // fill temp buffer of correct size with bytes available in this chunk
                    }
                    this.bytes_remaining =
                      i + this.bytes_in_sequence - buffer.length
                    i = buffer.length - 1
                  } else {
                    this.appendStringBuf(buffer, i, i + this.bytes_in_sequence)
                    i = i + this.bytes_in_sequence - 1
                  }
                } else if (n === 0x22) {
                  this.tState = START
                  this.string += this.stringBuffer.toString(
                    'utf8',
                    0,
                    this.stringBufferOffset
                  )
                  this.stringBufferOffset = 0
                  this.onToken(STRING, this.string)
                  this.offset += Buffer.byteLength(this.string, 'utf8') + 1
                  this.string = undefined
                } else if (n === 0x5c) {
                  this.tState = STRING2
                } else if (n >= 0x20) {
                  this.appendStringChar(n)
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === STRING2) {
                // After backslash
                n = buffer[i]
                if (n === 0x22) {
                  this.appendStringChar(n)
                  this.tState = STRING1
                } else if (n === 0x5c) {
                  this.appendStringChar(BACK_SLASH)
                  this.tState = STRING1
                } else if (n === 0x2f) {
                  this.appendStringChar(FORWARD_SLASH)
                  this.tState = STRING1
                } else if (n === 0x62) {
                  this.appendStringChar(BACKSPACE)
                  this.tState = STRING1
                } else if (n === 0x66) {
                  this.appendStringChar(FORM_FEED)
                  this.tState = STRING1
                } else if (n === 0x6e) {
                  this.appendStringChar(NEWLINE)
                  this.tState = STRING1
                } else if (n === 0x72) {
                  this.appendStringChar(CARRIAGE_RETURN)
                  this.tState = STRING1
                } else if (n === 0x74) {
                  this.appendStringChar(TAB)
                  this.tState = STRING1
                } else if (n === 0x75) {
                  this.unicode = ''
                  this.tState = STRING3
                } else {
                  return this.charError(buffer, i)
                }
              } else if (
                this.tState === STRING3 ||
                this.tState === STRING4 ||
                this.tState === STRING5 ||
                this.tState === STRING6
              ) {
                // unicode hex codes
                n = buffer[i]
                // 0-9 A-F a-f
                if (
                  (n >= 0x30 && n < 0x40) ||
                  (n > 0x40 && n <= 0x46) ||
                  (n > 0x60 && n <= 0x66)
                ) {
                  this.unicode += String.fromCharCode(n)
                  if (this.tState++ === STRING6) {
                    var intVal = parseInt(this.unicode, 16)
                    this.unicode = undefined
                    if (
                      this.highSurrogate !== undefined &&
                      intVal >= 0xdc00 &&
                      intVal < 0xdfff + 1
                    ) {
                      //<56320,57343> - lowSurrogate
                      this.appendStringBuf(
                        new Buffer(
                          String.fromCharCode(this.highSurrogate, intVal)
                        )
                      )
                      this.highSurrogate = undefined
                    } else if (
                      this.highSurrogate === undefined &&
                      intVal >= 0xd800 &&
                      intVal < 0xdbff + 1
                    ) {
                      //<55296,56319> - highSurrogate
                      this.highSurrogate = intVal
                    } else {
                      if (this.highSurrogate !== undefined) {
                        this.appendStringBuf(
                          new Buffer(String.fromCharCode(this.highSurrogate))
                        )
                        this.highSurrogate = undefined
                      }
                      this.appendStringBuf(
                        new Buffer(String.fromCharCode(intVal))
                      )
                    }
                    this.tState = STRING1
                  }
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === NUMBER1 || this.tState === NUMBER3) {
                n = buffer[i]

                switch (n) {
                  case 0x30: // 0
                  case 0x31: // 1
                  case 0x32: // 2
                  case 0x33: // 3
                  case 0x34: // 4
                  case 0x35: // 5
                  case 0x36: // 6
                  case 0x37: // 7
                  case 0x38: // 8
                  case 0x39: // 9
                  case 0x2e: // .
                  case 0x65: // e
                  case 0x45: // E
                  case 0x2b: // +
                  case 0x2d: // -
                    this.string += String.fromCharCode(n)
                    this.tState = NUMBER3
                    break
                  default:
                    this.tState = START
                    var result = Number(this.string)

                    if (isNaN(result)) {
                      return this.charError(buffer, i)
                    }

                    if (
                      this.string.match(/[0-9]+/) == this.string &&
                      result.toString() != this.string
                    ) {
                      // Long string of digits which is an ID string and not valid and/or safe JavaScript integer Number
                      this.onToken(STRING, this.string)
                    } else {
                      this.onToken(NUMBER, result)
                    }

                    this.offset += this.string.length - 1
                    this.string = undefined
                    i--
                    break
                }
              } else if (this.tState === TRUE1) {
                // r
                if (buffer[i] === 0x72) {
                  this.tState = TRUE2
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === TRUE2) {
                // u
                if (buffer[i] === 0x75) {
                  this.tState = TRUE3
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === TRUE3) {
                // e
                if (buffer[i] === 0x65) {
                  this.tState = START
                  this.onToken(TRUE, true)
                  this.offset += 3
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === FALSE1) {
                // a
                if (buffer[i] === 0x61) {
                  this.tState = FALSE2
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === FALSE2) {
                // l
                if (buffer[i] === 0x6c) {
                  this.tState = FALSE3
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === FALSE3) {
                // s
                if (buffer[i] === 0x73) {
                  this.tState = FALSE4
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === FALSE4) {
                // e
                if (buffer[i] === 0x65) {
                  this.tState = START
                  this.onToken(FALSE, false)
                  this.offset += 4
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === NULL1) {
                // u
                if (buffer[i] === 0x75) {
                  this.tState = NULL2
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === NULL2) {
                // l
                if (buffer[i] === 0x6c) {
                  this.tState = NULL3
                } else {
                  return this.charError(buffer, i)
                }
              } else if (this.tState === NULL3) {
                // l
                if (buffer[i] === 0x6c) {
                  this.tState = START
                  this.onToken(NULL, null)
                  this.offset += 3
                } else {
                  return this.charError(buffer, i)
                }
              }
            }
          }
          proto.onToken = function(token, value) {
            // Override this to get events
          }

          proto.parseError = function(token, value) {
            this.tState = STOP
            this.onError(
              new Error(
                'Unexpected ' +
                  Parser.toknam(token) +
                  (value ? '(' + JSON.stringify(value) + ')' : '') +
                  ' in state ' +
                  Parser.toknam(this.state)
              )
            )
          }
          proto.push = function() {
            this.stack.push({
              value: this.value,
              key: this.key,
              mode: this.mode
            })
          }
          proto.pop = function() {
            var value = this.value
            var parent = this.stack.pop()
            this.value = parent.value
            this.key = parent.key
            this.mode = parent.mode
            this.emit(value)
            if (!this.mode) {
              this.state = VALUE
            }
          }
          proto.emit = function(value) {
            if (this.mode) {
              this.state = COMMA
            }
            this.onValue(value)
          }
          proto.onValue = function(value) {
            // Override me
          }
          proto.onToken = function(token, value) {
            if (this.state === VALUE) {
              if (
                token === STRING ||
                token === NUMBER ||
                token === TRUE ||
                token === FALSE ||
                token === NULL
              ) {
                if (this.value) {
                  this.value[this.key] = value
                }
                this.emit(value)
              } else if (token === LEFT_BRACE) {
                this.push()
                if (this.value) {
                  this.value = this.value[this.key] = {}
                } else {
                  this.value = {}
                }
                this.key = undefined
                this.state = KEY
                this.mode = OBJECT
              } else if (token === LEFT_BRACKET) {
                this.push()
                if (this.value) {
                  this.value = this.value[this.key] = []
                } else {
                  this.value = []
                }
                this.key = 0
                this.mode = ARRAY
                this.state = VALUE
              } else if (token === RIGHT_BRACE) {
                if (this.mode === OBJECT) {
                  this.pop()
                } else {
                  return this.parseError(token, value)
                }
              } else if (token === RIGHT_BRACKET) {
                if (this.mode === ARRAY) {
                  this.pop()
                } else {
                  return this.parseError(token, value)
                }
              } else {
                return this.parseError(token, value)
              }
            } else if (this.state === KEY) {
              if (token === STRING) {
                this.key = value
                this.state = COLON
              } else if (token === RIGHT_BRACE) {
                this.pop()
              } else {
                return this.parseError(token, value)
              }
            } else if (this.state === COLON) {
              if (token === COLON) {
                this.state = VALUE
              } else {
                return this.parseError(token, value)
              }
            } else if (this.state === COMMA) {
              if (token === COMMA) {
                if (this.mode === ARRAY) {
                  this.key++
                  this.state = VALUE
                } else if (this.mode === OBJECT) {
                  this.state = KEY
                }
              } else if (
                (token === RIGHT_BRACKET && this.mode === ARRAY) ||
                (token === RIGHT_BRACE && this.mode === OBJECT)
              ) {
                this.pop()
              } else {
                return this.parseError(token, value)
              }
            } else {
              return this.parseError(token, value)
            }
          }

          Parser.C = C

          module.exports = Parser

          /***/
        },

      /***/ '../../node_modules/lodash.defaults/index.js':
        /*!*******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash.defaults/index.js ***!
  \*******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * lodash (Custom Build) <https://lodash.com/>
           * Build: `lodash modularize exports="npm" -o ./`
           * Copyright jQuery Foundation and other contributors <https://jquery.org/>
           * Released under MIT license <https://lodash.com/license>
           * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
           * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
           */

          /** Used as references for various `Number` constants. */
          var MAX_SAFE_INTEGER = 9007199254740991

          /** `Object#toString` result references. */
          var argsTag = '[object Arguments]',
            funcTag = '[object Function]',
            genTag = '[object GeneratorFunction]'

          /** Used to detect unsigned integer values. */
          var reIsUint = /^(?:0|[1-9]\d*)$/

          /**
           * A faster alternative to `Function#apply`, this function invokes `func`
           * with the `this` binding of `thisArg` and the arguments of `args`.
           *
           * @private
           * @param {Function} func The function to invoke.
           * @param {*} thisArg The `this` binding of `func`.
           * @param {Array} args The arguments to invoke `func` with.
           * @returns {*} Returns the result of `func`.
           */
          function apply(func, thisArg, args) {
            switch (args.length) {
              case 0:
                return func.call(thisArg)
              case 1:
                return func.call(thisArg, args[0])
              case 2:
                return func.call(thisArg, args[0], args[1])
              case 3:
                return func.call(thisArg, args[0], args[1], args[2])
            }
            return func.apply(thisArg, args)
          }

          /**
           * The base implementation of `_.times` without support for iteratee shorthands
           * or max array length checks.
           *
           * @private
           * @param {number} n The number of times to invoke `iteratee`.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns the array of results.
           */
          function baseTimes(n, iteratee) {
            var index = -1,
              result = Array(n)

            while (++index < n) {
              result[index] = iteratee(index)
            }
            return result
          }

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * Used to resolve the
           * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
           * of values.
           */
          var objectToString = objectProto.toString

          /** Built-in value references. */
          var propertyIsEnumerable = objectProto.propertyIsEnumerable

          /* Built-in method references for those with the same name as other `lodash` methods. */
          var nativeMax = Math.max

          /**
           * Creates an array of the enumerable property names of the array-like `value`.
           *
           * @private
           * @param {*} value The value to query.
           * @param {boolean} inherited Specify returning inherited property names.
           * @returns {Array} Returns the array of property names.
           */
          function arrayLikeKeys(value, inherited) {
            // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
            // Safari 9 makes `arguments.length` enumerable in strict mode.
            var result =
              isArray(value) || isArguments(value)
                ? baseTimes(value.length, String)
                : []

            var length = result.length,
              skipIndexes = !!length

            for (var key in value) {
              if (
                (inherited || hasOwnProperty.call(value, key)) &&
                !(skipIndexes && (key == 'length' || isIndex(key, length)))
              ) {
                result.push(key)
              }
            }
            return result
          }

          /**
           * Used by `_.defaults` to customize its `_.assignIn` use.
           *
           * @private
           * @param {*} objValue The destination value.
           * @param {*} srcValue The source value.
           * @param {string} key The key of the property to assign.
           * @param {Object} object The parent object of `objValue`.
           * @returns {*} Returns the value to assign.
           */
          function assignInDefaults(objValue, srcValue, key, object) {
            if (
              objValue === undefined ||
              (eq(objValue, objectProto[key]) &&
                !hasOwnProperty.call(object, key))
            ) {
              return srcValue
            }
            return objValue
          }

          /**
           * Assigns `value` to `key` of `object` if the existing value is not equivalent
           * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {string} key The key of the property to assign.
           * @param {*} value The value to assign.
           */
          function assignValue(object, key, value) {
            var objValue = object[key]
            if (
              !(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
              (value === undefined && !(key in object))
            ) {
              object[key] = value
            }
          }

          /**
           * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function baseKeysIn(object) {
            if (!isObject(object)) {
              return nativeKeysIn(object)
            }
            var isProto = isPrototype(object),
              result = []

            for (var key in object) {
              if (
                !(
                  key == 'constructor' &&
                  (isProto || !hasOwnProperty.call(object, key))
                )
              ) {
                result.push(key)
              }
            }
            return result
          }

          /**
           * The base implementation of `_.rest` which doesn't validate or coerce arguments.
           *
           * @private
           * @param {Function} func The function to apply a rest parameter to.
           * @param {number} [start=func.length-1] The start position of the rest parameter.
           * @returns {Function} Returns the new function.
           */
          function baseRest(func, start) {
            start = nativeMax(start === undefined ? func.length - 1 : start, 0)
            return function() {
              var args = arguments,
                index = -1,
                length = nativeMax(args.length - start, 0),
                array = Array(length)

              while (++index < length) {
                array[index] = args[start + index]
              }
              index = -1
              var otherArgs = Array(start + 1)
              while (++index < start) {
                otherArgs[index] = args[index]
              }
              otherArgs[start] = array
              return apply(func, this, otherArgs)
            }
          }

          /**
           * Copies properties of `source` to `object`.
           *
           * @private
           * @param {Object} source The object to copy properties from.
           * @param {Array} props The property identifiers to copy.
           * @param {Object} [object={}] The object to copy properties to.
           * @param {Function} [customizer] The function to customize copied values.
           * @returns {Object} Returns `object`.
           */
          function copyObject(source, props, object, customizer) {
            object || (object = {})

            var index = -1,
              length = props.length

            while (++index < length) {
              var key = props[index]

              var newValue = customizer
                ? customizer(object[key], source[key], key, object, source)
                : undefined

              assignValue(
                object,
                key,
                newValue === undefined ? source[key] : newValue
              )
            }
            return object
          }

          /**
           * Creates a function like `_.assign`.
           *
           * @private
           * @param {Function} assigner The function to assign values.
           * @returns {Function} Returns the new assigner function.
           */
          function createAssigner(assigner) {
            return baseRest(function(object, sources) {
              var index = -1,
                length = sources.length,
                customizer = length > 1 ? sources[length - 1] : undefined,
                guard = length > 2 ? sources[2] : undefined

              customizer =
                assigner.length > 3 && typeof customizer == 'function'
                  ? (length--, customizer)
                  : undefined

              if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                customizer = length < 3 ? undefined : customizer
                length = 1
              }
              object = Object(object)
              while (++index < length) {
                var source = sources[index]
                if (source) {
                  assigner(object, source, index, customizer)
                }
              }
              return object
            })
          }

          /**
           * Checks if `value` is a valid array-like index.
           *
           * @private
           * @param {*} value The value to check.
           * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
           * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
           */
          function isIndex(value, length) {
            length = length == null ? MAX_SAFE_INTEGER : length
            return (
              !!length &&
              (typeof value == 'number' || reIsUint.test(value)) &&
              (value > -1 && value % 1 == 0 && value < length)
            )
          }

          /**
           * Checks if the given arguments are from an iteratee call.
           *
           * @private
           * @param {*} value The potential iteratee value argument.
           * @param {*} index The potential iteratee index or key argument.
           * @param {*} object The potential iteratee object argument.
           * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
           *  else `false`.
           */
          function isIterateeCall(value, index, object) {
            if (!isObject(object)) {
              return false
            }
            var type = typeof index
            if (
              type == 'number'
                ? isArrayLike(object) && isIndex(index, object.length)
                : type == 'string' && index in object
            ) {
              return eq(object[index], value)
            }
            return false
          }

          /**
           * Checks if `value` is likely a prototype object.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
           */
          function isPrototype(value) {
            var Ctor = value && value.constructor,
              proto =
                (typeof Ctor == 'function' && Ctor.prototype) || objectProto

            return value === proto
          }

          /**
           * This function is like
           * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
           * except that it includes inherited enumerable properties.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function nativeKeysIn(object) {
            var result = []
            if (object != null) {
              for (var key in Object(object)) {
                result.push(key)
              }
            }
            return result
          }

          /**
           * Performs a
           * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * comparison between two values to determine if they are equivalent.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
           * @example
           *
           * var object = { 'a': 1 };
           * var other = { 'a': 1 };
           *
           * _.eq(object, object);
           * // => true
           *
           * _.eq(object, other);
           * // => false
           *
           * _.eq('a', 'a');
           * // => true
           *
           * _.eq('a', Object('a'));
           * // => false
           *
           * _.eq(NaN, NaN);
           * // => true
           */
          function eq(value, other) {
            return value === other || (value !== value && other !== other)
          }

          /**
           * Checks if `value` is likely an `arguments` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an `arguments` object,
           *  else `false`.
           * @example
           *
           * _.isArguments(function() { return arguments; }());
           * // => true
           *
           * _.isArguments([1, 2, 3]);
           * // => false
           */
          function isArguments(value) {
            // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
            return (
              isArrayLikeObject(value) &&
              hasOwnProperty.call(value, 'callee') &&
              (!propertyIsEnumerable.call(value, 'callee') ||
                objectToString.call(value) == argsTag)
            )
          }

          /**
           * Checks if `value` is classified as an `Array` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array, else `false`.
           * @example
           *
           * _.isArray([1, 2, 3]);
           * // => true
           *
           * _.isArray(document.body.children);
           * // => false
           *
           * _.isArray('abc');
           * // => false
           *
           * _.isArray(_.noop);
           * // => false
           */
          var isArray = Array.isArray

          /**
           * Checks if `value` is array-like. A value is considered array-like if it's
           * not a function and has a `value.length` that's an integer greater than or
           * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
           * @example
           *
           * _.isArrayLike([1, 2, 3]);
           * // => true
           *
           * _.isArrayLike(document.body.children);
           * // => true
           *
           * _.isArrayLike('abc');
           * // => true
           *
           * _.isArrayLike(_.noop);
           * // => false
           */
          function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value)
          }

          /**
           * This method is like `_.isArrayLike` except that it also checks if `value`
           * is an object.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array-like object,
           *  else `false`.
           * @example
           *
           * _.isArrayLikeObject([1, 2, 3]);
           * // => true
           *
           * _.isArrayLikeObject(document.body.children);
           * // => true
           *
           * _.isArrayLikeObject('abc');
           * // => false
           *
           * _.isArrayLikeObject(_.noop);
           * // => false
           */
          function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value)
          }

          /**
           * Checks if `value` is classified as a `Function` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a function, else `false`.
           * @example
           *
           * _.isFunction(_);
           * // => true
           *
           * _.isFunction(/abc/);
           * // => false
           */
          function isFunction(value) {
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 8-9 which returns 'object' for typed array and other constructors.
            var tag = isObject(value) ? objectToString.call(value) : ''
            return tag == funcTag || tag == genTag
          }

          /**
           * Checks if `value` is a valid array-like length.
           *
           * **Note:** This method is loosely based on
           * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
           * @example
           *
           * _.isLength(3);
           * // => true
           *
           * _.isLength(Number.MIN_VALUE);
           * // => false
           *
           * _.isLength(Infinity);
           * // => false
           *
           * _.isLength('3');
           * // => false
           */
          function isLength(value) {
            return (
              typeof value == 'number' &&
              value > -1 &&
              value % 1 == 0 &&
              value <= MAX_SAFE_INTEGER
            )
          }

          /**
           * Checks if `value` is the
           * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
           * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an object, else `false`.
           * @example
           *
           * _.isObject({});
           * // => true
           *
           * _.isObject([1, 2, 3]);
           * // => true
           *
           * _.isObject(_.noop);
           * // => true
           *
           * _.isObject(null);
           * // => false
           */
          function isObject(value) {
            var type = typeof value
            return !!value && (type == 'object' || type == 'function')
          }

          /**
           * Checks if `value` is object-like. A value is object-like if it's not `null`
           * and has a `typeof` result of "object".
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
           * @example
           *
           * _.isObjectLike({});
           * // => true
           *
           * _.isObjectLike([1, 2, 3]);
           * // => true
           *
           * _.isObjectLike(_.noop);
           * // => false
           *
           * _.isObjectLike(null);
           * // => false
           */
          function isObjectLike(value) {
            return !!value && typeof value == 'object'
          }

          /**
           * This method is like `_.assignIn` except that it accepts `customizer`
           * which is invoked to produce the assigned values. If `customizer` returns
           * `undefined`, assignment is handled by the method instead. The `customizer`
           * is invoked with five arguments: (objValue, srcValue, key, object, source).
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @alias extendWith
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} sources The source objects.
           * @param {Function} [customizer] The function to customize assigned values.
           * @returns {Object} Returns `object`.
           * @see _.assignWith
           * @example
           *
           * function customizer(objValue, srcValue) {
           *   return _.isUndefined(objValue) ? srcValue : objValue;
           * }
           *
           * var defaults = _.partialRight(_.assignInWith, customizer);
           *
           * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
           * // => { 'a': 1, 'b': 2 }
           */
          var assignInWith = createAssigner(function(
            object,
            source,
            srcIndex,
            customizer
          ) {
            copyObject(source, keysIn(source), object, customizer)
          })

          /**
           * Assigns own and inherited enumerable string keyed properties of source
           * objects to the destination object for all destination properties that
           * resolve to `undefined`. Source objects are applied from left to right.
           * Once a property is set, additional values of the same property are ignored.
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} [sources] The source objects.
           * @returns {Object} Returns `object`.
           * @see _.defaultsDeep
           * @example
           *
           * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
           * // => { 'a': 1, 'b': 2 }
           */
          var defaults = baseRest(function(args) {
            args.push(undefined, assignInDefaults)
            return apply(assignInWith, undefined, args)
          })

          /**
           * Creates an array of the own and inherited enumerable property names of `object`.
           *
           * **Note:** Non-object values are coerced to objects.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.keysIn(new Foo);
           * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
           */
          function keysIn(object) {
            return isArrayLike(object)
              ? arrayLikeKeys(object, true)
              : baseKeysIn(object)
          }

          module.exports = defaults

          /***/
        },

      /***/ '../../node_modules/lodash.find/index.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash.find/index.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /* WEBPACK VAR INJECTION */ ;(function(module) {
            /**
             * lodash (Custom Build) <https://lodash.com/>
             * Build: `lodash modularize exports="npm" -o ./`
             * Copyright jQuery Foundation and other contributors <https://jquery.org/>
             * Released under MIT license <https://lodash.com/license>
             * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
             * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
             */

            /** Used as the size to enable large array optimizations. */
            var LARGE_ARRAY_SIZE = 200

            /** Used as the `TypeError` message for "Functions" methods. */
            var FUNC_ERROR_TEXT = 'Expected a function'

            /** Used to stand-in for `undefined` hash values. */
            var HASH_UNDEFINED = '__lodash_hash_undefined__'

            /** Used to compose bitmasks for comparison styles. */
            var UNORDERED_COMPARE_FLAG = 1,
              PARTIAL_COMPARE_FLAG = 2

            /** Used as references for various `Number` constants. */
            var INFINITY = 1 / 0,
              MAX_SAFE_INTEGER = 9007199254740991,
              MAX_INTEGER = 1.7976931348623157e308,
              NAN = 0 / 0

            /** `Object#toString` result references. */
            var argsTag = '[object Arguments]',
              arrayTag = '[object Array]',
              boolTag = '[object Boolean]',
              dateTag = '[object Date]',
              errorTag = '[object Error]',
              funcTag = '[object Function]',
              genTag = '[object GeneratorFunction]',
              mapTag = '[object Map]',
              numberTag = '[object Number]',
              objectTag = '[object Object]',
              promiseTag = '[object Promise]',
              regexpTag = '[object RegExp]',
              setTag = '[object Set]',
              stringTag = '[object String]',
              symbolTag = '[object Symbol]',
              weakMapTag = '[object WeakMap]'

            var arrayBufferTag = '[object ArrayBuffer]',
              dataViewTag = '[object DataView]',
              float32Tag = '[object Float32Array]',
              float64Tag = '[object Float64Array]',
              int8Tag = '[object Int8Array]',
              int16Tag = '[object Int16Array]',
              int32Tag = '[object Int32Array]',
              uint8Tag = '[object Uint8Array]',
              uint8ClampedTag = '[object Uint8ClampedArray]',
              uint16Tag = '[object Uint16Array]',
              uint32Tag = '[object Uint32Array]'

            /** Used to match property names within property paths. */
            var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
              reIsPlainProp = /^\w*$/,
              reLeadingDot = /^\./,
              rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g

            /**
             * Used to match `RegExp`
             * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
             */
            var reRegExpChar = /[\\^$.*+?()[\]{}|]/g

            /** Used to match leading and trailing whitespace. */
            var reTrim = /^\s+|\s+$/g

            /** Used to match backslashes in property paths. */
            var reEscapeChar = /\\(\\)?/g

            /** Used to detect bad signed hexadecimal string values. */
            var reIsBadHex = /^[-+]0x[0-9a-f]+$/i

            /** Used to detect binary string values. */
            var reIsBinary = /^0b[01]+$/i

            /** Used to detect host constructors (Safari). */
            var reIsHostCtor = /^\[object .+?Constructor\]$/

            /** Used to detect octal string values. */
            var reIsOctal = /^0o[0-7]+$/i

            /** Used to detect unsigned integer values. */
            var reIsUint = /^(?:0|[1-9]\d*)$/

            /** Used to identify `toStringTag` values of typed arrays. */
            var typedArrayTags = {}
            typedArrayTags[float32Tag] = typedArrayTags[
              float64Tag
            ] = typedArrayTags[int8Tag] = typedArrayTags[
              int16Tag
            ] = typedArrayTags[int32Tag] = typedArrayTags[
              uint8Tag
            ] = typedArrayTags[uint8ClampedTag] = typedArrayTags[
              uint16Tag
            ] = typedArrayTags[uint32Tag] = true
            typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[
              arrayBufferTag
            ] = typedArrayTags[boolTag] = typedArrayTags[
              dataViewTag
            ] = typedArrayTags[dateTag] = typedArrayTags[
              errorTag
            ] = typedArrayTags[funcTag] = typedArrayTags[
              mapTag
            ] = typedArrayTags[numberTag] = typedArrayTags[
              objectTag
            ] = typedArrayTags[regexpTag] = typedArrayTags[
              setTag
            ] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false

            /** Built-in method references without a dependency on `root`. */
            var freeParseInt = parseInt

            /** Detect free variable `global` from Node.js. */
            var freeGlobal =
              typeof global == 'object' &&
              global &&
              global.Object === Object &&
              global

            /** Detect free variable `self`. */
            var freeSelf =
              typeof self == 'object' && self && self.Object === Object && self

            /** Used as a reference to the global object. */
            var root = freeGlobal || freeSelf || Function('return this')()

            /** Detect free variable `exports`. */
            var freeExports = true && exports && !exports.nodeType && exports

            /** Detect free variable `module`. */
            var freeModule =
              freeExports &&
              typeof module == 'object' &&
              module &&
              !module.nodeType &&
              module

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports

            /** Detect free variable `process` from Node.js. */
            var freeProcess = moduleExports && freeGlobal.process

            /** Used to access faster Node.js helpers. */
            var nodeUtil = (function() {
              try {
                return freeProcess && freeProcess.binding('util')
              } catch (e) {}
            })()

            /* Node.js helper references. */
            var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray

            /**
             * A specialized version of `_.some` for arrays without support for iteratee
             * shorthands.
             *
             * @private
             * @param {Array} [array] The array to iterate over.
             * @param {Function} predicate The function invoked per iteration.
             * @returns {boolean} Returns `true` if any element passes the predicate check,
             *  else `false`.
             */
            function arraySome(array, predicate) {
              var index = -1,
                length = array ? array.length : 0

              while (++index < length) {
                if (predicate(array[index], index, array)) {
                  return true
                }
              }
              return false
            }

            /**
             * The base implementation of `_.findIndex` and `_.findLastIndex` without
             * support for iteratee shorthands.
             *
             * @private
             * @param {Array} array The array to inspect.
             * @param {Function} predicate The function invoked per iteration.
             * @param {number} fromIndex The index to search from.
             * @param {boolean} [fromRight] Specify iterating from right to left.
             * @returns {number} Returns the index of the matched value, else `-1`.
             */
            function baseFindIndex(array, predicate, fromIndex, fromRight) {
              var length = array.length,
                index = fromIndex + (fromRight ? 1 : -1)

              while (fromRight ? index-- : ++index < length) {
                if (predicate(array[index], index, array)) {
                  return index
                }
              }
              return -1
            }

            /**
             * The base implementation of `_.property` without support for deep paths.
             *
             * @private
             * @param {string} key The key of the property to get.
             * @returns {Function} Returns the new accessor function.
             */
            function baseProperty(key) {
              return function(object) {
                return object == null ? undefined : object[key]
              }
            }

            /**
             * The base implementation of `_.times` without support for iteratee shorthands
             * or max array length checks.
             *
             * @private
             * @param {number} n The number of times to invoke `iteratee`.
             * @param {Function} iteratee The function invoked per iteration.
             * @returns {Array} Returns the array of results.
             */
            function baseTimes(n, iteratee) {
              var index = -1,
                result = Array(n)

              while (++index < n) {
                result[index] = iteratee(index)
              }
              return result
            }

            /**
             * The base implementation of `_.unary` without support for storing metadata.
             *
             * @private
             * @param {Function} func The function to cap arguments for.
             * @returns {Function} Returns the new capped function.
             */
            function baseUnary(func) {
              return function(value) {
                return func(value)
              }
            }

            /**
             * Gets the value at `key` of `object`.
             *
             * @private
             * @param {Object} [object] The object to query.
             * @param {string} key The key of the property to get.
             * @returns {*} Returns the property value.
             */
            function getValue(object, key) {
              return object == null ? undefined : object[key]
            }

            /**
             * Checks if `value` is a host object in IE < 9.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
             */
            function isHostObject(value) {
              // Many host objects are `Object` objects that can coerce to strings
              // despite having improperly defined `toString` methods.
              var result = false
              if (value != null && typeof value.toString != 'function') {
                try {
                  result = !!(value + '')
                } catch (e) {}
              }
              return result
            }

            /**
             * Converts `map` to its key-value pairs.
             *
             * @private
             * @param {Object} map The map to convert.
             * @returns {Array} Returns the key-value pairs.
             */
            function mapToArray(map) {
              var index = -1,
                result = Array(map.size)

              map.forEach(function(value, key) {
                result[++index] = [key, value]
              })
              return result
            }

            /**
             * Creates a unary function that invokes `func` with its argument transformed.
             *
             * @private
             * @param {Function} func The function to wrap.
             * @param {Function} transform The argument transform.
             * @returns {Function} Returns the new function.
             */
            function overArg(func, transform) {
              return function(arg) {
                return func(transform(arg))
              }
            }

            /**
             * Converts `set` to an array of its values.
             *
             * @private
             * @param {Object} set The set to convert.
             * @returns {Array} Returns the values.
             */
            function setToArray(set) {
              var index = -1,
                result = Array(set.size)

              set.forEach(function(value) {
                result[++index] = value
              })
              return result
            }

            /** Used for built-in method references. */
            var arrayProto = Array.prototype,
              funcProto = Function.prototype,
              objectProto = Object.prototype

            /** Used to detect overreaching core-js shims. */
            var coreJsData = root['__core-js_shared__']

            /** Used to detect methods masquerading as native. */
            var maskSrcKey = (function() {
              var uid = /[^.]+$/.exec(
                (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) ||
                  ''
              )
              return uid ? 'Symbol(src)_1.' + uid : ''
            })()

            /** Used to resolve the decompiled source of functions. */
            var funcToString = funcProto.toString

            /** Used to check objects for own properties. */
            var hasOwnProperty = objectProto.hasOwnProperty

            /**
             * Used to resolve the
             * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
             * of values.
             */
            var objectToString = objectProto.toString

            /** Used to detect if a method is native. */
            var reIsNative = RegExp(
              '^' +
                funcToString
                  .call(hasOwnProperty)
                  .replace(reRegExpChar, '\\$&')
                  .replace(
                    /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                    '$1.*?'
                  ) +
                '$'
            )

            /** Built-in value references. */
            var Symbol = root.Symbol,
              Uint8Array = root.Uint8Array,
              propertyIsEnumerable = objectProto.propertyIsEnumerable,
              splice = arrayProto.splice

            /* Built-in method references for those with the same name as other `lodash` methods. */
            var nativeKeys = overArg(Object.keys, Object),
              nativeMax = Math.max

            /* Built-in method references that are verified to be native. */
            var DataView = getNative(root, 'DataView'),
              Map = getNative(root, 'Map'),
              Promise = getNative(root, 'Promise'),
              Set = getNative(root, 'Set'),
              WeakMap = getNative(root, 'WeakMap'),
              nativeCreate = getNative(Object, 'create')

            /** Used to detect maps, sets, and weakmaps. */
            var dataViewCtorString = toSource(DataView),
              mapCtorString = toSource(Map),
              promiseCtorString = toSource(Promise),
              setCtorString = toSource(Set),
              weakMapCtorString = toSource(WeakMap)

            /** Used to convert symbols to primitives and strings. */
            var symbolProto = Symbol ? Symbol.prototype : undefined,
              symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
              symbolToString = symbolProto ? symbolProto.toString : undefined

            /**
             * Creates a hash object.
             *
             * @private
             * @constructor
             * @param {Array} [entries] The key-value pairs to cache.
             */
            function Hash(entries) {
              var index = -1,
                length = entries ? entries.length : 0

              this.clear()
              while (++index < length) {
                var entry = entries[index]
                this.set(entry[0], entry[1])
              }
            }

            /**
             * Removes all key-value entries from the hash.
             *
             * @private
             * @name clear
             * @memberOf Hash
             */
            function hashClear() {
              this.__data__ = nativeCreate ? nativeCreate(null) : {}
            }

            /**
             * Removes `key` and its value from the hash.
             *
             * @private
             * @name delete
             * @memberOf Hash
             * @param {Object} hash The hash to modify.
             * @param {string} key The key of the value to remove.
             * @returns {boolean} Returns `true` if the entry was removed, else `false`.
             */
            function hashDelete(key) {
              return this.has(key) && delete this.__data__[key]
            }

            /**
             * Gets the hash value for `key`.
             *
             * @private
             * @name get
             * @memberOf Hash
             * @param {string} key The key of the value to get.
             * @returns {*} Returns the entry value.
             */
            function hashGet(key) {
              var data = this.__data__
              if (nativeCreate) {
                var result = data[key]
                return result === HASH_UNDEFINED ? undefined : result
              }
              return hasOwnProperty.call(data, key) ? data[key] : undefined
            }

            /**
             * Checks if a hash value for `key` exists.
             *
             * @private
             * @name has
             * @memberOf Hash
             * @param {string} key The key of the entry to check.
             * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
             */
            function hashHas(key) {
              var data = this.__data__
              return nativeCreate
                ? data[key] !== undefined
                : hasOwnProperty.call(data, key)
            }

            /**
             * Sets the hash `key` to `value`.
             *
             * @private
             * @name set
             * @memberOf Hash
             * @param {string} key The key of the value to set.
             * @param {*} value The value to set.
             * @returns {Object} Returns the hash instance.
             */
            function hashSet(key, value) {
              var data = this.__data__
              data[key] =
                nativeCreate && value === undefined ? HASH_UNDEFINED : value
              return this
            }

            // Add methods to `Hash`.
            Hash.prototype.clear = hashClear
            Hash.prototype['delete'] = hashDelete
            Hash.prototype.get = hashGet
            Hash.prototype.has = hashHas
            Hash.prototype.set = hashSet

            /**
             * Creates an list cache object.
             *
             * @private
             * @constructor
             * @param {Array} [entries] The key-value pairs to cache.
             */
            function ListCache(entries) {
              var index = -1,
                length = entries ? entries.length : 0

              this.clear()
              while (++index < length) {
                var entry = entries[index]
                this.set(entry[0], entry[1])
              }
            }

            /**
             * Removes all key-value entries from the list cache.
             *
             * @private
             * @name clear
             * @memberOf ListCache
             */
            function listCacheClear() {
              this.__data__ = []
            }

            /**
             * Removes `key` and its value from the list cache.
             *
             * @private
             * @name delete
             * @memberOf ListCache
             * @param {string} key The key of the value to remove.
             * @returns {boolean} Returns `true` if the entry was removed, else `false`.
             */
            function listCacheDelete(key) {
              var data = this.__data__,
                index = assocIndexOf(data, key)

              if (index < 0) {
                return false
              }
              var lastIndex = data.length - 1
              if (index == lastIndex) {
                data.pop()
              } else {
                splice.call(data, index, 1)
              }
              return true
            }

            /**
             * Gets the list cache value for `key`.
             *
             * @private
             * @name get
             * @memberOf ListCache
             * @param {string} key The key of the value to get.
             * @returns {*} Returns the entry value.
             */
            function listCacheGet(key) {
              var data = this.__data__,
                index = assocIndexOf(data, key)

              return index < 0 ? undefined : data[index][1]
            }

            /**
             * Checks if a list cache value for `key` exists.
             *
             * @private
             * @name has
             * @memberOf ListCache
             * @param {string} key The key of the entry to check.
             * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
             */
            function listCacheHas(key) {
              return assocIndexOf(this.__data__, key) > -1
            }

            /**
             * Sets the list cache `key` to `value`.
             *
             * @private
             * @name set
             * @memberOf ListCache
             * @param {string} key The key of the value to set.
             * @param {*} value The value to set.
             * @returns {Object} Returns the list cache instance.
             */
            function listCacheSet(key, value) {
              var data = this.__data__,
                index = assocIndexOf(data, key)

              if (index < 0) {
                data.push([key, value])
              } else {
                data[index][1] = value
              }
              return this
            }

            // Add methods to `ListCache`.
            ListCache.prototype.clear = listCacheClear
            ListCache.prototype['delete'] = listCacheDelete
            ListCache.prototype.get = listCacheGet
            ListCache.prototype.has = listCacheHas
            ListCache.prototype.set = listCacheSet

            /**
             * Creates a map cache object to store key-value pairs.
             *
             * @private
             * @constructor
             * @param {Array} [entries] The key-value pairs to cache.
             */
            function MapCache(entries) {
              var index = -1,
                length = entries ? entries.length : 0

              this.clear()
              while (++index < length) {
                var entry = entries[index]
                this.set(entry[0], entry[1])
              }
            }

            /**
             * Removes all key-value entries from the map.
             *
             * @private
             * @name clear
             * @memberOf MapCache
             */
            function mapCacheClear() {
              this.__data__ = {
                hash: new Hash(),
                map: new (Map || ListCache)(),
                string: new Hash()
              }
            }

            /**
             * Removes `key` and its value from the map.
             *
             * @private
             * @name delete
             * @memberOf MapCache
             * @param {string} key The key of the value to remove.
             * @returns {boolean} Returns `true` if the entry was removed, else `false`.
             */
            function mapCacheDelete(key) {
              return getMapData(this, key)['delete'](key)
            }

            /**
             * Gets the map value for `key`.
             *
             * @private
             * @name get
             * @memberOf MapCache
             * @param {string} key The key of the value to get.
             * @returns {*} Returns the entry value.
             */
            function mapCacheGet(key) {
              return getMapData(this, key).get(key)
            }

            /**
             * Checks if a map value for `key` exists.
             *
             * @private
             * @name has
             * @memberOf MapCache
             * @param {string} key The key of the entry to check.
             * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
             */
            function mapCacheHas(key) {
              return getMapData(this, key).has(key)
            }

            /**
             * Sets the map `key` to `value`.
             *
             * @private
             * @name set
             * @memberOf MapCache
             * @param {string} key The key of the value to set.
             * @param {*} value The value to set.
             * @returns {Object} Returns the map cache instance.
             */
            function mapCacheSet(key, value) {
              getMapData(this, key).set(key, value)
              return this
            }

            // Add methods to `MapCache`.
            MapCache.prototype.clear = mapCacheClear
            MapCache.prototype['delete'] = mapCacheDelete
            MapCache.prototype.get = mapCacheGet
            MapCache.prototype.has = mapCacheHas
            MapCache.prototype.set = mapCacheSet

            /**
             *
             * Creates an array cache object to store unique values.
             *
             * @private
             * @constructor
             * @param {Array} [values] The values to cache.
             */
            function SetCache(values) {
              var index = -1,
                length = values ? values.length : 0

              this.__data__ = new MapCache()
              while (++index < length) {
                this.add(values[index])
              }
            }

            /**
             * Adds `value` to the array cache.
             *
             * @private
             * @name add
             * @memberOf SetCache
             * @alias push
             * @param {*} value The value to cache.
             * @returns {Object} Returns the cache instance.
             */
            function setCacheAdd(value) {
              this.__data__.set(value, HASH_UNDEFINED)
              return this
            }

            /**
             * Checks if `value` is in the array cache.
             *
             * @private
             * @name has
             * @memberOf SetCache
             * @param {*} value The value to search for.
             * @returns {number} Returns `true` if `value` is found, else `false`.
             */
            function setCacheHas(value) {
              return this.__data__.has(value)
            }

            // Add methods to `SetCache`.
            SetCache.prototype.add = SetCache.prototype.push = setCacheAdd
            SetCache.prototype.has = setCacheHas

            /**
             * Creates a stack cache object to store key-value pairs.
             *
             * @private
             * @constructor
             * @param {Array} [entries] The key-value pairs to cache.
             */
            function Stack(entries) {
              this.__data__ = new ListCache(entries)
            }

            /**
             * Removes all key-value entries from the stack.
             *
             * @private
             * @name clear
             * @memberOf Stack
             */
            function stackClear() {
              this.__data__ = new ListCache()
            }

            /**
             * Removes `key` and its value from the stack.
             *
             * @private
             * @name delete
             * @memberOf Stack
             * @param {string} key The key of the value to remove.
             * @returns {boolean} Returns `true` if the entry was removed, else `false`.
             */
            function stackDelete(key) {
              return this.__data__['delete'](key)
            }

            /**
             * Gets the stack value for `key`.
             *
             * @private
             * @name get
             * @memberOf Stack
             * @param {string} key The key of the value to get.
             * @returns {*} Returns the entry value.
             */
            function stackGet(key) {
              return this.__data__.get(key)
            }

            /**
             * Checks if a stack value for `key` exists.
             *
             * @private
             * @name has
             * @memberOf Stack
             * @param {string} key The key of the entry to check.
             * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
             */
            function stackHas(key) {
              return this.__data__.has(key)
            }

            /**
             * Sets the stack `key` to `value`.
             *
             * @private
             * @name set
             * @memberOf Stack
             * @param {string} key The key of the value to set.
             * @param {*} value The value to set.
             * @returns {Object} Returns the stack cache instance.
             */
            function stackSet(key, value) {
              var cache = this.__data__
              if (cache instanceof ListCache) {
                var pairs = cache.__data__
                if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                  pairs.push([key, value])
                  return this
                }
                cache = this.__data__ = new MapCache(pairs)
              }
              cache.set(key, value)
              return this
            }

            // Add methods to `Stack`.
            Stack.prototype.clear = stackClear
            Stack.prototype['delete'] = stackDelete
            Stack.prototype.get = stackGet
            Stack.prototype.has = stackHas
            Stack.prototype.set = stackSet

            /**
             * Creates an array of the enumerable property names of the array-like `value`.
             *
             * @private
             * @param {*} value The value to query.
             * @param {boolean} inherited Specify returning inherited property names.
             * @returns {Array} Returns the array of property names.
             */
            function arrayLikeKeys(value, inherited) {
              // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
              // Safari 9 makes `arguments.length` enumerable in strict mode.
              var result =
                isArray(value) || isArguments(value)
                  ? baseTimes(value.length, String)
                  : []

              var length = result.length,
                skipIndexes = !!length

              for (var key in value) {
                if (
                  (inherited || hasOwnProperty.call(value, key)) &&
                  !(skipIndexes && (key == 'length' || isIndex(key, length)))
                ) {
                  result.push(key)
                }
              }
              return result
            }

            /**
             * Gets the index at which the `key` is found in `array` of key-value pairs.
             *
             * @private
             * @param {Array} array The array to inspect.
             * @param {*} key The key to search for.
             * @returns {number} Returns the index of the matched value, else `-1`.
             */
            function assocIndexOf(array, key) {
              var length = array.length
              while (length--) {
                if (eq(array[length][0], key)) {
                  return length
                }
              }
              return -1
            }

            /**
             * The base implementation of `_.get` without support for default values.
             *
             * @private
             * @param {Object} object The object to query.
             * @param {Array|string} path The path of the property to get.
             * @returns {*} Returns the resolved value.
             */
            function baseGet(object, path) {
              path = isKey(path, object) ? [path] : castPath(path)

              var index = 0,
                length = path.length

              while (object != null && index < length) {
                object = object[toKey(path[index++])]
              }
              return index && index == length ? object : undefined
            }

            /**
             * The base implementation of `getTag`.
             *
             * @private
             * @param {*} value The value to query.
             * @returns {string} Returns the `toStringTag`.
             */
            function baseGetTag(value) {
              return objectToString.call(value)
            }

            /**
             * The base implementation of `_.hasIn` without support for deep paths.
             *
             * @private
             * @param {Object} [object] The object to query.
             * @param {Array|string} key The key to check.
             * @returns {boolean} Returns `true` if `key` exists, else `false`.
             */
            function baseHasIn(object, key) {
              return object != null && key in Object(object)
            }

            /**
             * The base implementation of `_.isEqual` which supports partial comparisons
             * and tracks traversed objects.
             *
             * @private
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @param {Function} [customizer] The function to customize comparisons.
             * @param {boolean} [bitmask] The bitmask of comparison flags.
             *  The bitmask may be composed of the following flags:
             *     1 - Unordered comparison
             *     2 - Partial comparison
             * @param {Object} [stack] Tracks traversed `value` and `other` objects.
             * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
             */
            function baseIsEqual(value, other, customizer, bitmask, stack) {
              if (value === other) {
                return true
              }
              if (
                value == null ||
                other == null ||
                (!isObject(value) && !isObjectLike(other))
              ) {
                return value !== value && other !== other
              }
              return baseIsEqualDeep(
                value,
                other,
                baseIsEqual,
                customizer,
                bitmask,
                stack
              )
            }

            /**
             * A specialized version of `baseIsEqual` for arrays and objects which performs
             * deep comparisons and tracks traversed objects enabling objects with circular
             * references to be compared.
             *
             * @private
             * @param {Object} object The object to compare.
             * @param {Object} other The other object to compare.
             * @param {Function} equalFunc The function to determine equivalents of values.
             * @param {Function} [customizer] The function to customize comparisons.
             * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
             *  for more details.
             * @param {Object} [stack] Tracks traversed `object` and `other` objects.
             * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
             */
            function baseIsEqualDeep(
              object,
              other,
              equalFunc,
              customizer,
              bitmask,
              stack
            ) {
              var objIsArr = isArray(object),
                othIsArr = isArray(other),
                objTag = arrayTag,
                othTag = arrayTag

              if (!objIsArr) {
                objTag = getTag(object)
                objTag = objTag == argsTag ? objectTag : objTag
              }
              if (!othIsArr) {
                othTag = getTag(other)
                othTag = othTag == argsTag ? objectTag : othTag
              }
              var objIsObj = objTag == objectTag && !isHostObject(object),
                othIsObj = othTag == objectTag && !isHostObject(other),
                isSameTag = objTag == othTag

              if (isSameTag && !objIsObj) {
                stack || (stack = new Stack())
                return objIsArr || isTypedArray(object)
                  ? equalArrays(
                      object,
                      other,
                      equalFunc,
                      customizer,
                      bitmask,
                      stack
                    )
                  : equalByTag(
                      object,
                      other,
                      objTag,
                      equalFunc,
                      customizer,
                      bitmask,
                      stack
                    )
              }
              if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
                var objIsWrapped =
                    objIsObj && hasOwnProperty.call(object, '__wrapped__'),
                  othIsWrapped =
                    othIsObj && hasOwnProperty.call(other, '__wrapped__')

                if (objIsWrapped || othIsWrapped) {
                  var objUnwrapped = objIsWrapped ? object.value() : object,
                    othUnwrapped = othIsWrapped ? other.value() : other

                  stack || (stack = new Stack())
                  return equalFunc(
                    objUnwrapped,
                    othUnwrapped,
                    customizer,
                    bitmask,
                    stack
                  )
                }
              }
              if (!isSameTag) {
                return false
              }
              stack || (stack = new Stack())
              return equalObjects(
                object,
                other,
                equalFunc,
                customizer,
                bitmask,
                stack
              )
            }

            /**
             * The base implementation of `_.isMatch` without support for iteratee shorthands.
             *
             * @private
             * @param {Object} object The object to inspect.
             * @param {Object} source The object of property values to match.
             * @param {Array} matchData The property names, values, and compare flags to match.
             * @param {Function} [customizer] The function to customize comparisons.
             * @returns {boolean} Returns `true` if `object` is a match, else `false`.
             */
            function baseIsMatch(object, source, matchData, customizer) {
              var index = matchData.length,
                length = index,
                noCustomizer = !customizer

              if (object == null) {
                return !length
              }
              object = Object(object)
              while (index--) {
                var data = matchData[index]
                if (
                  noCustomizer && data[2]
                    ? data[1] !== object[data[0]]
                    : !(data[0] in object)
                ) {
                  return false
                }
              }
              while (++index < length) {
                data = matchData[index]
                var key = data[0],
                  objValue = object[key],
                  srcValue = data[1]

                if (noCustomizer && data[2]) {
                  if (objValue === undefined && !(key in object)) {
                    return false
                  }
                } else {
                  var stack = new Stack()
                  if (customizer) {
                    var result = customizer(
                      objValue,
                      srcValue,
                      key,
                      object,
                      source,
                      stack
                    )
                  }
                  if (
                    !(result === undefined
                      ? baseIsEqual(
                          srcValue,
                          objValue,
                          customizer,
                          UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG,
                          stack
                        )
                      : result)
                  ) {
                    return false
                  }
                }
              }
              return true
            }

            /**
             * The base implementation of `_.isNative` without bad shim checks.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a native function,
             *  else `false`.
             */
            function baseIsNative(value) {
              if (!isObject(value) || isMasked(value)) {
                return false
              }
              var pattern =
                isFunction(value) || isHostObject(value)
                  ? reIsNative
                  : reIsHostCtor
              return pattern.test(toSource(value))
            }

            /**
             * The base implementation of `_.isTypedArray` without Node.js optimizations.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
             */
            function baseIsTypedArray(value) {
              return (
                isObjectLike(value) &&
                isLength(value.length) &&
                !!typedArrayTags[objectToString.call(value)]
              )
            }

            /**
             * The base implementation of `_.iteratee`.
             *
             * @private
             * @param {*} [value=_.identity] The value to convert to an iteratee.
             * @returns {Function} Returns the iteratee.
             */
            function baseIteratee(value) {
              // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
              // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
              if (typeof value == 'function') {
                return value
              }
              if (value == null) {
                return identity
              }
              if (typeof value == 'object') {
                return isArray(value)
                  ? baseMatchesProperty(value[0], value[1])
                  : baseMatches(value)
              }
              return property(value)
            }

            /**
             * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property names.
             */
            function baseKeys(object) {
              if (!isPrototype(object)) {
                return nativeKeys(object)
              }
              var result = []
              for (var key in Object(object)) {
                if (hasOwnProperty.call(object, key) && key != 'constructor') {
                  result.push(key)
                }
              }
              return result
            }

            /**
             * The base implementation of `_.matches` which doesn't clone `source`.
             *
             * @private
             * @param {Object} source The object of property values to match.
             * @returns {Function} Returns the new spec function.
             */
            function baseMatches(source) {
              var matchData = getMatchData(source)
              if (matchData.length == 1 && matchData[0][2]) {
                return matchesStrictComparable(matchData[0][0], matchData[0][1])
              }
              return function(object) {
                return (
                  object === source || baseIsMatch(object, source, matchData)
                )
              }
            }

            /**
             * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
             *
             * @private
             * @param {string} path The path of the property to get.
             * @param {*} srcValue The value to match.
             * @returns {Function} Returns the new spec function.
             */
            function baseMatchesProperty(path, srcValue) {
              if (isKey(path) && isStrictComparable(srcValue)) {
                return matchesStrictComparable(toKey(path), srcValue)
              }
              return function(object) {
                var objValue = get(object, path)
                return objValue === undefined && objValue === srcValue
                  ? hasIn(object, path)
                  : baseIsEqual(
                      srcValue,
                      objValue,
                      undefined,
                      UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG
                    )
              }
            }

            /**
             * A specialized version of `baseProperty` which supports deep paths.
             *
             * @private
             * @param {Array|string} path The path of the property to get.
             * @returns {Function} Returns the new accessor function.
             */
            function basePropertyDeep(path) {
              return function(object) {
                return baseGet(object, path)
              }
            }

            /**
             * The base implementation of `_.toString` which doesn't convert nullish
             * values to empty strings.
             *
             * @private
             * @param {*} value The value to process.
             * @returns {string} Returns the string.
             */
            function baseToString(value) {
              // Exit early for strings to avoid a performance hit in some environments.
              if (typeof value == 'string') {
                return value
              }
              if (isSymbol(value)) {
                return symbolToString ? symbolToString.call(value) : ''
              }
              var result = value + ''
              return result == '0' && 1 / value == -INFINITY ? '-0' : result
            }

            /**
             * Casts `value` to a path array if it's not one.
             *
             * @private
             * @param {*} value The value to inspect.
             * @returns {Array} Returns the cast property path array.
             */
            function castPath(value) {
              return isArray(value) ? value : stringToPath(value)
            }

            /**
             * Creates a `_.find` or `_.findLast` function.
             *
             * @private
             * @param {Function} findIndexFunc The function to find the collection index.
             * @returns {Function} Returns the new find function.
             */
            function createFind(findIndexFunc) {
              return function(collection, predicate, fromIndex) {
                var iterable = Object(collection)
                if (!isArrayLike(collection)) {
                  var iteratee = baseIteratee(predicate, 3)
                  collection = keys(collection)
                  predicate = function(key) {
                    return iteratee(iterable[key], key, iterable)
                  }
                }
                var index = findIndexFunc(collection, predicate, fromIndex)
                return index > -1
                  ? iterable[iteratee ? collection[index] : index]
                  : undefined
              }
            }

            /**
             * A specialized version of `baseIsEqualDeep` for arrays with support for
             * partial deep comparisons.
             *
             * @private
             * @param {Array} array The array to compare.
             * @param {Array} other The other array to compare.
             * @param {Function} equalFunc The function to determine equivalents of values.
             * @param {Function} customizer The function to customize comparisons.
             * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
             *  for more details.
             * @param {Object} stack Tracks traversed `array` and `other` objects.
             * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
             */
            function equalArrays(
              array,
              other,
              equalFunc,
              customizer,
              bitmask,
              stack
            ) {
              var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
                arrLength = array.length,
                othLength = other.length

              if (
                arrLength != othLength &&
                !(isPartial && othLength > arrLength)
              ) {
                return false
              }
              // Assume cyclic values are equal.
              var stacked = stack.get(array)
              if (stacked && stack.get(other)) {
                return stacked == other
              }
              var index = -1,
                result = true,
                seen =
                  bitmask & UNORDERED_COMPARE_FLAG ? new SetCache() : undefined

              stack.set(array, other)
              stack.set(other, array)

              // Ignore non-index properties.
              while (++index < arrLength) {
                var arrValue = array[index],
                  othValue = other[index]

                if (customizer) {
                  var compared = isPartial
                    ? customizer(othValue, arrValue, index, other, array, stack)
                    : customizer(arrValue, othValue, index, array, other, stack)
                }
                if (compared !== undefined) {
                  if (compared) {
                    continue
                  }
                  result = false
                  break
                }
                // Recursively compare arrays (susceptible to call stack limits).
                if (seen) {
                  if (
                    !arraySome(other, function(othValue, othIndex) {
                      if (
                        !seen.has(othIndex) &&
                        (arrValue === othValue ||
                          equalFunc(
                            arrValue,
                            othValue,
                            customizer,
                            bitmask,
                            stack
                          ))
                      ) {
                        return seen.add(othIndex)
                      }
                    })
                  ) {
                    result = false
                    break
                  }
                } else if (
                  !(
                    arrValue === othValue ||
                    equalFunc(arrValue, othValue, customizer, bitmask, stack)
                  )
                ) {
                  result = false
                  break
                }
              }
              stack['delete'](array)
              stack['delete'](other)
              return result
            }

            /**
             * A specialized version of `baseIsEqualDeep` for comparing objects of
             * the same `toStringTag`.
             *
             * **Note:** This function only supports comparing values with tags of
             * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
             *
             * @private
             * @param {Object} object The object to compare.
             * @param {Object} other The other object to compare.
             * @param {string} tag The `toStringTag` of the objects to compare.
             * @param {Function} equalFunc The function to determine equivalents of values.
             * @param {Function} customizer The function to customize comparisons.
             * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
             *  for more details.
             * @param {Object} stack Tracks traversed `object` and `other` objects.
             * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
             */
            function equalByTag(
              object,
              other,
              tag,
              equalFunc,
              customizer,
              bitmask,
              stack
            ) {
              switch (tag) {
                case dataViewTag:
                  if (
                    object.byteLength != other.byteLength ||
                    object.byteOffset != other.byteOffset
                  ) {
                    return false
                  }
                  object = object.buffer
                  other = other.buffer

                case arrayBufferTag:
                  if (
                    object.byteLength != other.byteLength ||
                    !equalFunc(new Uint8Array(object), new Uint8Array(other))
                  ) {
                    return false
                  }
                  return true

                case boolTag:
                case dateTag:
                case numberTag:
                  // Coerce booleans to `1` or `0` and dates to milliseconds.
                  // Invalid dates are coerced to `NaN`.
                  return eq(+object, +other)

                case errorTag:
                  return (
                    object.name == other.name && object.message == other.message
                  )

                case regexpTag:
                case stringTag:
                  // Coerce regexes to strings and treat strings, primitives and objects,
                  // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
                  // for more details.
                  return object == other + ''

                case mapTag:
                  var convert = mapToArray

                case setTag:
                  var isPartial = bitmask & PARTIAL_COMPARE_FLAG
                  convert || (convert = setToArray)

                  if (object.size != other.size && !isPartial) {
                    return false
                  }
                  // Assume cyclic values are equal.
                  var stacked = stack.get(object)
                  if (stacked) {
                    return stacked == other
                  }
                  bitmask |= UNORDERED_COMPARE_FLAG

                  // Recursively compare objects (susceptible to call stack limits).
                  stack.set(object, other)
                  var result = equalArrays(
                    convert(object),
                    convert(other),
                    equalFunc,
                    customizer,
                    bitmask,
                    stack
                  )
                  stack['delete'](object)
                  return result

                case symbolTag:
                  if (symbolValueOf) {
                    return (
                      symbolValueOf.call(object) == symbolValueOf.call(other)
                    )
                  }
              }
              return false
            }

            /**
             * A specialized version of `baseIsEqualDeep` for objects with support for
             * partial deep comparisons.
             *
             * @private
             * @param {Object} object The object to compare.
             * @param {Object} other The other object to compare.
             * @param {Function} equalFunc The function to determine equivalents of values.
             * @param {Function} customizer The function to customize comparisons.
             * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
             *  for more details.
             * @param {Object} stack Tracks traversed `object` and `other` objects.
             * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
             */
            function equalObjects(
              object,
              other,
              equalFunc,
              customizer,
              bitmask,
              stack
            ) {
              var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
                objProps = keys(object),
                objLength = objProps.length,
                othProps = keys(other),
                othLength = othProps.length

              if (objLength != othLength && !isPartial) {
                return false
              }
              var index = objLength
              while (index--) {
                var key = objProps[index]
                if (
                  !(isPartial ? key in other : hasOwnProperty.call(other, key))
                ) {
                  return false
                }
              }
              // Assume cyclic values are equal.
              var stacked = stack.get(object)
              if (stacked && stack.get(other)) {
                return stacked == other
              }
              var result = true
              stack.set(object, other)
              stack.set(other, object)

              var skipCtor = isPartial
              while (++index < objLength) {
                key = objProps[index]
                var objValue = object[key],
                  othValue = other[key]

                if (customizer) {
                  var compared = isPartial
                    ? customizer(othValue, objValue, key, other, object, stack)
                    : customizer(objValue, othValue, key, object, other, stack)
                }
                // Recursively compare objects (susceptible to call stack limits).
                if (
                  !(compared === undefined
                    ? objValue === othValue ||
                      equalFunc(objValue, othValue, customizer, bitmask, stack)
                    : compared)
                ) {
                  result = false
                  break
                }
                skipCtor || (skipCtor = key == 'constructor')
              }
              if (result && !skipCtor) {
                var objCtor = object.constructor,
                  othCtor = other.constructor

                // Non `Object` object instances with different constructors are not equal.
                if (
                  objCtor != othCtor &&
                  ('constructor' in object && 'constructor' in other) &&
                  !(
                    typeof objCtor == 'function' &&
                    objCtor instanceof objCtor &&
                    typeof othCtor == 'function' &&
                    othCtor instanceof othCtor
                  )
                ) {
                  result = false
                }
              }
              stack['delete'](object)
              stack['delete'](other)
              return result
            }

            /**
             * Gets the data for `map`.
             *
             * @private
             * @param {Object} map The map to query.
             * @param {string} key The reference key.
             * @returns {*} Returns the map data.
             */
            function getMapData(map, key) {
              var data = map.__data__
              return isKeyable(key)
                ? data[typeof key == 'string' ? 'string' : 'hash']
                : data.map
            }

            /**
             * Gets the property names, values, and compare flags of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the match data of `object`.
             */
            function getMatchData(object) {
              var result = keys(object),
                length = result.length

              while (length--) {
                var key = result[length],
                  value = object[key]

                result[length] = [key, value, isStrictComparable(value)]
              }
              return result
            }

            /**
             * Gets the native function at `key` of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @param {string} key The key of the method to get.
             * @returns {*} Returns the function if it's native, else `undefined`.
             */
            function getNative(object, key) {
              var value = getValue(object, key)
              return baseIsNative(value) ? value : undefined
            }

            /**
             * Gets the `toStringTag` of `value`.
             *
             * @private
             * @param {*} value The value to query.
             * @returns {string} Returns the `toStringTag`.
             */
            var getTag = baseGetTag

            // Fallback for data views, maps, sets, and weak maps in IE 11,
            // for data views in Edge < 14, and promises in Node.js.
            if (
              (DataView &&
                getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
              (Map && getTag(new Map()) != mapTag) ||
              (Promise && getTag(Promise.resolve()) != promiseTag) ||
              (Set && getTag(new Set()) != setTag) ||
              (WeakMap && getTag(new WeakMap()) != weakMapTag)
            ) {
              getTag = function(value) {
                var result = objectToString.call(value),
                  Ctor = result == objectTag ? value.constructor : undefined,
                  ctorString = Ctor ? toSource(Ctor) : undefined

                if (ctorString) {
                  switch (ctorString) {
                    case dataViewCtorString:
                      return dataViewTag
                    case mapCtorString:
                      return mapTag
                    case promiseCtorString:
                      return promiseTag
                    case setCtorString:
                      return setTag
                    case weakMapCtorString:
                      return weakMapTag
                  }
                }
                return result
              }
            }

            /**
             * Checks if `path` exists on `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @param {Array|string} path The path to check.
             * @param {Function} hasFunc The function to check properties.
             * @returns {boolean} Returns `true` if `path` exists, else `false`.
             */
            function hasPath(object, path, hasFunc) {
              path = isKey(path, object) ? [path] : castPath(path)

              var result,
                index = -1,
                length = path.length

              while (++index < length) {
                var key = toKey(path[index])
                if (!(result = object != null && hasFunc(object, key))) {
                  break
                }
                object = object[key]
              }
              if (result) {
                return result
              }
              var length = object ? object.length : 0
              return (
                !!length &&
                isLength(length) &&
                isIndex(key, length) &&
                (isArray(object) || isArguments(object))
              )
            }

            /**
             * Checks if `value` is a valid array-like index.
             *
             * @private
             * @param {*} value The value to check.
             * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
             * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
             */
            function isIndex(value, length) {
              length = length == null ? MAX_SAFE_INTEGER : length
              return (
                !!length &&
                (typeof value == 'number' || reIsUint.test(value)) &&
                (value > -1 && value % 1 == 0 && value < length)
              )
            }

            /**
             * Checks if `value` is a property name and not a property path.
             *
             * @private
             * @param {*} value The value to check.
             * @param {Object} [object] The object to query keys on.
             * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
             */
            function isKey(value, object) {
              if (isArray(value)) {
                return false
              }
              var type = typeof value
              if (
                type == 'number' ||
                type == 'symbol' ||
                type == 'boolean' ||
                value == null ||
                isSymbol(value)
              ) {
                return true
              }
              return (
                reIsPlainProp.test(value) ||
                !reIsDeepProp.test(value) ||
                (object != null && value in Object(object))
              )
            }

            /**
             * Checks if `value` is suitable for use as unique object key.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
             */
            function isKeyable(value) {
              var type = typeof value
              return type == 'string' ||
                type == 'number' ||
                type == 'symbol' ||
                type == 'boolean'
                ? value !== '__proto__'
                : value === null
            }

            /**
             * Checks if `func` has its source masked.
             *
             * @private
             * @param {Function} func The function to check.
             * @returns {boolean} Returns `true` if `func` is masked, else `false`.
             */
            function isMasked(func) {
              return !!maskSrcKey && maskSrcKey in func
            }

            /**
             * Checks if `value` is likely a prototype object.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
             */
            function isPrototype(value) {
              var Ctor = value && value.constructor,
                proto =
                  (typeof Ctor == 'function' && Ctor.prototype) || objectProto

              return value === proto
            }

            /**
             * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` if suitable for strict
             *  equality comparisons, else `false`.
             */
            function isStrictComparable(value) {
              return value === value && !isObject(value)
            }

            /**
             * A specialized version of `matchesProperty` for source values suitable
             * for strict equality comparisons, i.e. `===`.
             *
             * @private
             * @param {string} key The key of the property to get.
             * @param {*} srcValue The value to match.
             * @returns {Function} Returns the new spec function.
             */
            function matchesStrictComparable(key, srcValue) {
              return function(object) {
                if (object == null) {
                  return false
                }
                return (
                  object[key] === srcValue &&
                  (srcValue !== undefined || key in Object(object))
                )
              }
            }

            /**
             * Converts `string` to a property path array.
             *
             * @private
             * @param {string} string The string to convert.
             * @returns {Array} Returns the property path array.
             */
            var stringToPath = memoize(function(string) {
              string = toString(string)

              var result = []
              if (reLeadingDot.test(string)) {
                result.push('')
              }
              string.replace(rePropName, function(
                match,
                number,
                quote,
                string
              ) {
                result.push(
                  quote ? string.replace(reEscapeChar, '$1') : number || match
                )
              })
              return result
            })

            /**
             * Converts `value` to a string key if it's not a string or symbol.
             *
             * @private
             * @param {*} value The value to inspect.
             * @returns {string|symbol} Returns the key.
             */
            function toKey(value) {
              if (typeof value == 'string' || isSymbol(value)) {
                return value
              }
              var result = value + ''
              return result == '0' && 1 / value == -INFINITY ? '-0' : result
            }

            /**
             * Converts `func` to its source code.
             *
             * @private
             * @param {Function} func The function to process.
             * @returns {string} Returns the source code.
             */
            function toSource(func) {
              if (func != null) {
                try {
                  return funcToString.call(func)
                } catch (e) {}
                try {
                  return func + ''
                } catch (e) {}
              }
              return ''
            }

            /**
             * This method is like `_.find` except that it returns the index of the first
             * element `predicate` returns truthy for instead of the element itself.
             *
             * @static
             * @memberOf _
             * @since 1.1.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {Function} [predicate=_.identity]
             *  The function invoked per iteration.
             * @param {number} [fromIndex=0] The index to search from.
             * @returns {number} Returns the index of the found element, else `-1`.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'active': false },
             *   { 'user': 'fred',    'active': false },
             *   { 'user': 'pebbles', 'active': true }
             * ];
             *
             * _.findIndex(users, function(o) { return o.user == 'barney'; });
             * // => 0
             *
             * // The `_.matches` iteratee shorthand.
             * _.findIndex(users, { 'user': 'fred', 'active': false });
             * // => 1
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.findIndex(users, ['active', false]);
             * // => 0
             *
             * // The `_.property` iteratee shorthand.
             * _.findIndex(users, 'active');
             * // => 2
             */
            function findIndex(array, predicate, fromIndex) {
              var length = array ? array.length : 0
              if (!length) {
                return -1
              }
              var index = fromIndex == null ? 0 : toInteger(fromIndex)
              if (index < 0) {
                index = nativeMax(length + index, 0)
              }
              return baseFindIndex(array, baseIteratee(predicate, 3), index)
            }

            /**
             * Iterates over elements of `collection`, returning the first element
             * `predicate` returns truthy for. The predicate is invoked with three
             * arguments: (value, index|key, collection).
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to inspect.
             * @param {Function} [predicate=_.identity]
             *  The function invoked per iteration.
             * @param {number} [fromIndex=0] The index to search from.
             * @returns {*} Returns the matched element, else `undefined`.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'age': 36, 'active': true },
             *   { 'user': 'fred',    'age': 40, 'active': false },
             *   { 'user': 'pebbles', 'age': 1,  'active': true }
             * ];
             *
             * _.find(users, function(o) { return o.age < 40; });
             * // => object for 'barney'
             *
             * // The `_.matches` iteratee shorthand.
             * _.find(users, { 'age': 1, 'active': true });
             * // => object for 'pebbles'
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.find(users, ['active', false]);
             * // => object for 'fred'
             *
             * // The `_.property` iteratee shorthand.
             * _.find(users, 'active');
             * // => object for 'barney'
             */
            var find = createFind(findIndex)

            /**
             * Creates a function that memoizes the result of `func`. If `resolver` is
             * provided, it determines the cache key for storing the result based on the
             * arguments provided to the memoized function. By default, the first argument
             * provided to the memoized function is used as the map cache key. The `func`
             * is invoked with the `this` binding of the memoized function.
             *
             * **Note:** The cache is exposed as the `cache` property on the memoized
             * function. Its creation may be customized by replacing the `_.memoize.Cache`
             * constructor with one whose instances implement the
             * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
             * method interface of `delete`, `get`, `has`, and `set`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {Function} func The function to have its output memoized.
             * @param {Function} [resolver] The function to resolve the cache key.
             * @returns {Function} Returns the new memoized function.
             * @example
             *
             * var object = { 'a': 1, 'b': 2 };
             * var other = { 'c': 3, 'd': 4 };
             *
             * var values = _.memoize(_.values);
             * values(object);
             * // => [1, 2]
             *
             * values(other);
             * // => [3, 4]
             *
             * object.a = 2;
             * values(object);
             * // => [1, 2]
             *
             * // Modify the result cache.
             * values.cache.set(object, ['a', 'b']);
             * values(object);
             * // => ['a', 'b']
             *
             * // Replace `_.memoize.Cache`.
             * _.memoize.Cache = WeakMap;
             */
            function memoize(func, resolver) {
              if (
                typeof func != 'function' ||
                (resolver && typeof resolver != 'function')
              ) {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              var memoized = function() {
                var args = arguments,
                  key = resolver ? resolver.apply(this, args) : args[0],
                  cache = memoized.cache

                if (cache.has(key)) {
                  return cache.get(key)
                }
                var result = func.apply(this, args)
                memoized.cache = cache.set(key, result)
                return result
              }
              memoized.cache = new (memoize.Cache || MapCache)()
              return memoized
            }

            // Assign cache to `_.memoize`.
            memoize.Cache = MapCache

            /**
             * Performs a
             * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * comparison between two values to determine if they are equivalent.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
             * @example
             *
             * var object = { 'a': 1 };
             * var other = { 'a': 1 };
             *
             * _.eq(object, object);
             * // => true
             *
             * _.eq(object, other);
             * // => false
             *
             * _.eq('a', 'a');
             * // => true
             *
             * _.eq('a', Object('a'));
             * // => false
             *
             * _.eq(NaN, NaN);
             * // => true
             */
            function eq(value, other) {
              return value === other || (value !== value && other !== other)
            }

            /**
             * Checks if `value` is likely an `arguments` object.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an `arguments` object,
             *  else `false`.
             * @example
             *
             * _.isArguments(function() { return arguments; }());
             * // => true
             *
             * _.isArguments([1, 2, 3]);
             * // => false
             */
            function isArguments(value) {
              // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
              return (
                isArrayLikeObject(value) &&
                hasOwnProperty.call(value, 'callee') &&
                (!propertyIsEnumerable.call(value, 'callee') ||
                  objectToString.call(value) == argsTag)
              )
            }

            /**
             * Checks if `value` is classified as an `Array` object.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an array, else `false`.
             * @example
             *
             * _.isArray([1, 2, 3]);
             * // => true
             *
             * _.isArray(document.body.children);
             * // => false
             *
             * _.isArray('abc');
             * // => false
             *
             * _.isArray(_.noop);
             * // => false
             */
            var isArray = Array.isArray

            /**
             * Checks if `value` is array-like. A value is considered array-like if it's
             * not a function and has a `value.length` that's an integer greater than or
             * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
             * @example
             *
             * _.isArrayLike([1, 2, 3]);
             * // => true
             *
             * _.isArrayLike(document.body.children);
             * // => true
             *
             * _.isArrayLike('abc');
             * // => true
             *
             * _.isArrayLike(_.noop);
             * // => false
             */
            function isArrayLike(value) {
              return (
                value != null && isLength(value.length) && !isFunction(value)
              )
            }

            /**
             * This method is like `_.isArrayLike` except that it also checks if `value`
             * is an object.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an array-like object,
             *  else `false`.
             * @example
             *
             * _.isArrayLikeObject([1, 2, 3]);
             * // => true
             *
             * _.isArrayLikeObject(document.body.children);
             * // => true
             *
             * _.isArrayLikeObject('abc');
             * // => false
             *
             * _.isArrayLikeObject(_.noop);
             * // => false
             */
            function isArrayLikeObject(value) {
              return isObjectLike(value) && isArrayLike(value)
            }

            /**
             * Checks if `value` is classified as a `Function` object.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a function, else `false`.
             * @example
             *
             * _.isFunction(_);
             * // => true
             *
             * _.isFunction(/abc/);
             * // => false
             */
            function isFunction(value) {
              // The use of `Object#toString` avoids issues with the `typeof` operator
              // in Safari 8-9 which returns 'object' for typed array and other constructors.
              var tag = isObject(value) ? objectToString.call(value) : ''
              return tag == funcTag || tag == genTag
            }

            /**
             * Checks if `value` is a valid array-like length.
             *
             * **Note:** This method is loosely based on
             * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
             * @example
             *
             * _.isLength(3);
             * // => true
             *
             * _.isLength(Number.MIN_VALUE);
             * // => false
             *
             * _.isLength(Infinity);
             * // => false
             *
             * _.isLength('3');
             * // => false
             */
            function isLength(value) {
              return (
                typeof value == 'number' &&
                value > -1 &&
                value % 1 == 0 &&
                value <= MAX_SAFE_INTEGER
              )
            }

            /**
             * Checks if `value` is the
             * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
             * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an object, else `false`.
             * @example
             *
             * _.isObject({});
             * // => true
             *
             * _.isObject([1, 2, 3]);
             * // => true
             *
             * _.isObject(_.noop);
             * // => true
             *
             * _.isObject(null);
             * // => false
             */
            function isObject(value) {
              var type = typeof value
              return !!value && (type == 'object' || type == 'function')
            }

            /**
             * Checks if `value` is object-like. A value is object-like if it's not `null`
             * and has a `typeof` result of "object".
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
             * @example
             *
             * _.isObjectLike({});
             * // => true
             *
             * _.isObjectLike([1, 2, 3]);
             * // => true
             *
             * _.isObjectLike(_.noop);
             * // => false
             *
             * _.isObjectLike(null);
             * // => false
             */
            function isObjectLike(value) {
              return !!value && typeof value == 'object'
            }

            /**
             * Checks if `value` is classified as a `Symbol` primitive or object.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
             * @example
             *
             * _.isSymbol(Symbol.iterator);
             * // => true
             *
             * _.isSymbol('abc');
             * // => false
             */
            function isSymbol(value) {
              return (
                typeof value == 'symbol' ||
                (isObjectLike(value) && objectToString.call(value) == symbolTag)
              )
            }

            /**
             * Checks if `value` is classified as a typed array.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
             * @example
             *
             * _.isTypedArray(new Uint8Array);
             * // => true
             *
             * _.isTypedArray([]);
             * // => false
             */
            var isTypedArray = nodeIsTypedArray
              ? baseUnary(nodeIsTypedArray)
              : baseIsTypedArray

            /**
             * Converts `value` to a finite number.
             *
             * @static
             * @memberOf _
             * @since 4.12.0
             * @category Lang
             * @param {*} value The value to convert.
             * @returns {number} Returns the converted number.
             * @example
             *
             * _.toFinite(3.2);
             * // => 3.2
             *
             * _.toFinite(Number.MIN_VALUE);
             * // => 5e-324
             *
             * _.toFinite(Infinity);
             * // => 1.7976931348623157e+308
             *
             * _.toFinite('3.2');
             * // => 3.2
             */
            function toFinite(value) {
              if (!value) {
                return value === 0 ? value : 0
              }
              value = toNumber(value)
              if (value === INFINITY || value === -INFINITY) {
                var sign = value < 0 ? -1 : 1
                return sign * MAX_INTEGER
              }
              return value === value ? value : 0
            }

            /**
             * Converts `value` to an integer.
             *
             * **Note:** This method is loosely based on
             * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to convert.
             * @returns {number} Returns the converted integer.
             * @example
             *
             * _.toInteger(3.2);
             * // => 3
             *
             * _.toInteger(Number.MIN_VALUE);
             * // => 0
             *
             * _.toInteger(Infinity);
             * // => 1.7976931348623157e+308
             *
             * _.toInteger('3.2');
             * // => 3
             */
            function toInteger(value) {
              var result = toFinite(value),
                remainder = result % 1

              return result === result
                ? remainder
                  ? result - remainder
                  : result
                : 0
            }

            /**
             * Converts `value` to a number.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to process.
             * @returns {number} Returns the number.
             * @example
             *
             * _.toNumber(3.2);
             * // => 3.2
             *
             * _.toNumber(Number.MIN_VALUE);
             * // => 5e-324
             *
             * _.toNumber(Infinity);
             * // => Infinity
             *
             * _.toNumber('3.2');
             * // => 3.2
             */
            function toNumber(value) {
              if (typeof value == 'number') {
                return value
              }
              if (isSymbol(value)) {
                return NAN
              }
              if (isObject(value)) {
                var other =
                  typeof value.valueOf == 'function' ? value.valueOf() : value
                value = isObject(other) ? other + '' : other
              }
              if (typeof value != 'string') {
                return value === 0 ? value : +value
              }
              value = value.replace(reTrim, '')
              var isBinary = reIsBinary.test(value)
              return isBinary || reIsOctal.test(value)
                ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
                : reIsBadHex.test(value)
                ? NAN
                : +value
            }

            /**
             * Converts `value` to a string. An empty string is returned for `null`
             * and `undefined` values. The sign of `-0` is preserved.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to process.
             * @returns {string} Returns the string.
             * @example
             *
             * _.toString(null);
             * // => ''
             *
             * _.toString(-0);
             * // => '-0'
             *
             * _.toString([1, 2, 3]);
             * // => '1,2,3'
             */
            function toString(value) {
              return value == null ? '' : baseToString(value)
            }

            /**
             * Gets the value at `path` of `object`. If the resolved value is
             * `undefined`, the `defaultValue` is returned in its place.
             *
             * @static
             * @memberOf _
             * @since 3.7.0
             * @category Object
             * @param {Object} object The object to query.
             * @param {Array|string} path The path of the property to get.
             * @param {*} [defaultValue] The value returned for `undefined` resolved values.
             * @returns {*} Returns the resolved value.
             * @example
             *
             * var object = { 'a': [{ 'b': { 'c': 3 } }] };
             *
             * _.get(object, 'a[0].b.c');
             * // => 3
             *
             * _.get(object, ['a', '0', 'b', 'c']);
             * // => 3
             *
             * _.get(object, 'a.b.c', 'default');
             * // => 'default'
             */
            function get(object, path, defaultValue) {
              var result = object == null ? undefined : baseGet(object, path)
              return result === undefined ? defaultValue : result
            }

            /**
             * Checks if `path` is a direct or inherited property of `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The object to query.
             * @param {Array|string} path The path to check.
             * @returns {boolean} Returns `true` if `path` exists, else `false`.
             * @example
             *
             * var object = _.create({ 'a': _.create({ 'b': 2 }) });
             *
             * _.hasIn(object, 'a');
             * // => true
             *
             * _.hasIn(object, 'a.b');
             * // => true
             *
             * _.hasIn(object, ['a', 'b']);
             * // => true
             *
             * _.hasIn(object, 'b');
             * // => false
             */
            function hasIn(object, path) {
              return object != null && hasPath(object, path, baseHasIn)
            }

            /**
             * Creates an array of the own enumerable property names of `object`.
             *
             * **Note:** Non-object values are coerced to objects. See the
             * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
             * for more details.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Object
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property names.
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.keys(new Foo);
             * // => ['a', 'b'] (iteration order is not guaranteed)
             *
             * _.keys('hi');
             * // => ['0', '1']
             */
            function keys(object) {
              return isArrayLike(object)
                ? arrayLikeKeys(object)
                : baseKeys(object)
            }

            /**
             * This method returns the first argument it receives.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Util
             * @param {*} value Any value.
             * @returns {*} Returns `value`.
             * @example
             *
             * var object = { 'a': 1 };
             *
             * console.log(_.identity(object) === object);
             * // => true
             */
            function identity(value) {
              return value
            }

            /**
             * Creates a function that returns the value at `path` of a given object.
             *
             * @static
             * @memberOf _
             * @since 2.4.0
             * @category Util
             * @param {Array|string} path The path of the property to get.
             * @returns {Function} Returns the new accessor function.
             * @example
             *
             * var objects = [
             *   { 'a': { 'b': 2 } },
             *   { 'a': { 'b': 1 } }
             * ];
             *
             * _.map(objects, _.property('a.b'));
             * // => [2, 1]
             *
             * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
             * // => [1, 2]
             */
            function property(path) {
              return isKey(path)
                ? baseProperty(toKey(path))
                : basePropertyDeep(path)
            }

            module.exports = find

            /* WEBPACK VAR INJECTION */
          }.call(
            this,
            __webpack_require__(
              /*! ./../webpack/buildin/module.js */ '../../node_modules/webpack/buildin/module.js'
            )(module)
          ))

          /***/
        },

      /***/ '../../node_modules/lodash.isarraylike/index.js':
        /*!**********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash.isarraylike/index.js ***!
  \**********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * lodash (Custom Build) <https://lodash.com/>
           * Build: `lodash modularize exports="npm" -o ./`
           * Copyright jQuery Foundation and other contributors <https://jquery.org/>
           * Released under MIT license <https://lodash.com/license>
           * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
           * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
           */

          /** Used as references for various `Number` constants. */
          var MAX_SAFE_INTEGER = 9007199254740991

          /** `Object#toString` result references. */
          var funcTag = '[object Function]',
            genTag = '[object GeneratorFunction]'

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /**
           * Used to resolve the
           * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
           * of values.
           */
          var objectToString = objectProto.toString

          /**
           * Checks if `value` is array-like. A value is considered array-like if it's
           * not a function and has a `value.length` that's an integer greater than or
           * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
           * @example
           *
           * _.isArrayLike([1, 2, 3]);
           * // => true
           *
           * _.isArrayLike(document.body.children);
           * // => true
           *
           * _.isArrayLike('abc');
           * // => true
           *
           * _.isArrayLike(_.noop);
           * // => false
           */
          function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value)
          }

          /**
           * Checks if `value` is classified as a `Function` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a function, else `false`.
           * @example
           *
           * _.isFunction(_);
           * // => true
           *
           * _.isFunction(/abc/);
           * // => false
           */
          function isFunction(value) {
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 8-9 which returns 'object' for typed array and other constructors.
            var tag = isObject(value) ? objectToString.call(value) : ''
            return tag == funcTag || tag == genTag
          }

          /**
           * Checks if `value` is a valid array-like length.
           *
           * **Note:** This method is loosely based on
           * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
           * @example
           *
           * _.isLength(3);
           * // => true
           *
           * _.isLength(Number.MIN_VALUE);
           * // => false
           *
           * _.isLength(Infinity);
           * // => false
           *
           * _.isLength('3');
           * // => false
           */
          function isLength(value) {
            return (
              typeof value == 'number' &&
              value > -1 &&
              value % 1 == 0 &&
              value <= MAX_SAFE_INTEGER
            )
          }

          /**
           * Checks if `value` is the
           * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
           * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an object, else `false`.
           * @example
           *
           * _.isObject({});
           * // => true
           *
           * _.isObject([1, 2, 3]);
           * // => true
           *
           * _.isObject(_.noop);
           * // => true
           *
           * _.isObject(null);
           * // => false
           */
          function isObject(value) {
            var type = typeof value
            return !!value && (type == 'object' || type == 'function')
          }

          module.exports = isArrayLike

          /***/
        },

      /***/ '../../node_modules/lodash.isfinite/index.js':
        /*!*******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash.isfinite/index.js ***!
  \*******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * lodash (Custom Build) <https://lodash.com/>
           * Build: `lodash modularize exports="npm" -o ./`
           * Copyright jQuery Foundation and other contributors <https://jquery.org/>
           * Released under MIT license <https://lodash.com/license>
           * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
           * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
           */

          /** Detect free variable `global` from Node.js. */
          var freeGlobal =
            typeof global == 'object' &&
            global &&
            global.Object === Object &&
            global

          /** Detect free variable `self`. */
          var freeSelf =
            typeof self == 'object' && self && self.Object === Object && self

          /** Used as a reference to the global object. */
          var root = freeGlobal || freeSelf || Function('return this')()

          /* Built-in method references for those with the same name as other `lodash` methods. */
          var nativeIsFinite = root.isFinite

          /**
           * Checks if `value` is a finite primitive number.
           *
           * **Note:** This method is based on
           * [`Number.isFinite`](https://mdn.io/Number/isFinite).
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a finite number,
           *  else `false`.
           * @example
           *
           * _.isFinite(3);
           * // => true
           *
           * _.isFinite(Number.MIN_VALUE);
           * // => true
           *
           * _.isFinite(Infinity);
           * // => false
           *
           * _.isFinite('3');
           * // => false
           */
          function isFinite(value) {
            return typeof value == 'number' && nativeIsFinite(value)
          }

          module.exports = isFinite

          /***/
        },

      /***/ '../../node_modules/lodash/_DataView.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_DataView.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getNative = __webpack_require__(
              /*! ./_getNative */ '../../node_modules/lodash/_getNative.js'
            ),
            root = __webpack_require__(
              /*! ./_root */ '../../node_modules/lodash/_root.js'
            )

          /* Built-in method references that are verified to be native. */
          var DataView = getNative(root, 'DataView')

          module.exports = DataView

          /***/
        },

      /***/ '../../node_modules/lodash/_Hash.js':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_Hash.js ***!
  \**********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var hashClear = __webpack_require__(
              /*! ./_hashClear */ '../../node_modules/lodash/_hashClear.js'
            ),
            hashDelete = __webpack_require__(
              /*! ./_hashDelete */ '../../node_modules/lodash/_hashDelete.js'
            ),
            hashGet = __webpack_require__(
              /*! ./_hashGet */ '../../node_modules/lodash/_hashGet.js'
            ),
            hashHas = __webpack_require__(
              /*! ./_hashHas */ '../../node_modules/lodash/_hashHas.js'
            ),
            hashSet = __webpack_require__(
              /*! ./_hashSet */ '../../node_modules/lodash/_hashSet.js'
            )

          /**
           * Creates a hash object.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */
          function Hash(entries) {
            var index = -1,
              length = entries == null ? 0 : entries.length

            this.clear()
            while (++index < length) {
              var entry = entries[index]
              this.set(entry[0], entry[1])
            }
          }

          // Add methods to `Hash`.
          Hash.prototype.clear = hashClear
          Hash.prototype['delete'] = hashDelete
          Hash.prototype.get = hashGet
          Hash.prototype.has = hashHas
          Hash.prototype.set = hashSet

          module.exports = Hash

          /***/
        },

      /***/ '../../node_modules/lodash/_ListCache.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_ListCache.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var listCacheClear = __webpack_require__(
              /*! ./_listCacheClear */ '../../node_modules/lodash/_listCacheClear.js'
            ),
            listCacheDelete = __webpack_require__(
              /*! ./_listCacheDelete */ '../../node_modules/lodash/_listCacheDelete.js'
            ),
            listCacheGet = __webpack_require__(
              /*! ./_listCacheGet */ '../../node_modules/lodash/_listCacheGet.js'
            ),
            listCacheHas = __webpack_require__(
              /*! ./_listCacheHas */ '../../node_modules/lodash/_listCacheHas.js'
            ),
            listCacheSet = __webpack_require__(
              /*! ./_listCacheSet */ '../../node_modules/lodash/_listCacheSet.js'
            )

          /**
           * Creates an list cache object.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */
          function ListCache(entries) {
            var index = -1,
              length = entries == null ? 0 : entries.length

            this.clear()
            while (++index < length) {
              var entry = entries[index]
              this.set(entry[0], entry[1])
            }
          }

          // Add methods to `ListCache`.
          ListCache.prototype.clear = listCacheClear
          ListCache.prototype['delete'] = listCacheDelete
          ListCache.prototype.get = listCacheGet
          ListCache.prototype.has = listCacheHas
          ListCache.prototype.set = listCacheSet

          module.exports = ListCache

          /***/
        },

      /***/ '../../node_modules/lodash/_Map.js':
        /*!*********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_Map.js ***!
  \*********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getNative = __webpack_require__(
              /*! ./_getNative */ '../../node_modules/lodash/_getNative.js'
            ),
            root = __webpack_require__(
              /*! ./_root */ '../../node_modules/lodash/_root.js'
            )

          /* Built-in method references that are verified to be native. */
          var Map = getNative(root, 'Map')

          module.exports = Map

          /***/
        },

      /***/ '../../node_modules/lodash/_MapCache.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_MapCache.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var mapCacheClear = __webpack_require__(
              /*! ./_mapCacheClear */ '../../node_modules/lodash/_mapCacheClear.js'
            ),
            mapCacheDelete = __webpack_require__(
              /*! ./_mapCacheDelete */ '../../node_modules/lodash/_mapCacheDelete.js'
            ),
            mapCacheGet = __webpack_require__(
              /*! ./_mapCacheGet */ '../../node_modules/lodash/_mapCacheGet.js'
            ),
            mapCacheHas = __webpack_require__(
              /*! ./_mapCacheHas */ '../../node_modules/lodash/_mapCacheHas.js'
            ),
            mapCacheSet = __webpack_require__(
              /*! ./_mapCacheSet */ '../../node_modules/lodash/_mapCacheSet.js'
            )

          /**
           * Creates a map cache object to store key-value pairs.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */
          function MapCache(entries) {
            var index = -1,
              length = entries == null ? 0 : entries.length

            this.clear()
            while (++index < length) {
              var entry = entries[index]
              this.set(entry[0], entry[1])
            }
          }

          // Add methods to `MapCache`.
          MapCache.prototype.clear = mapCacheClear
          MapCache.prototype['delete'] = mapCacheDelete
          MapCache.prototype.get = mapCacheGet
          MapCache.prototype.has = mapCacheHas
          MapCache.prototype.set = mapCacheSet

          module.exports = MapCache

          /***/
        },

      /***/ '../../node_modules/lodash/_Promise.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_Promise.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getNative = __webpack_require__(
              /*! ./_getNative */ '../../node_modules/lodash/_getNative.js'
            ),
            root = __webpack_require__(
              /*! ./_root */ '../../node_modules/lodash/_root.js'
            )

          /* Built-in method references that are verified to be native. */
          var Promise = getNative(root, 'Promise')

          module.exports = Promise

          /***/
        },

      /***/ '../../node_modules/lodash/_Set.js':
        /*!*********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_Set.js ***!
  \*********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getNative = __webpack_require__(
              /*! ./_getNative */ '../../node_modules/lodash/_getNative.js'
            ),
            root = __webpack_require__(
              /*! ./_root */ '../../node_modules/lodash/_root.js'
            )

          /* Built-in method references that are verified to be native. */
          var Set = getNative(root, 'Set')

          module.exports = Set

          /***/
        },

      /***/ '../../node_modules/lodash/_Stack.js':
        /*!***********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_Stack.js ***!
  \***********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var ListCache = __webpack_require__(
              /*! ./_ListCache */ '../../node_modules/lodash/_ListCache.js'
            ),
            stackClear = __webpack_require__(
              /*! ./_stackClear */ '../../node_modules/lodash/_stackClear.js'
            ),
            stackDelete = __webpack_require__(
              /*! ./_stackDelete */ '../../node_modules/lodash/_stackDelete.js'
            ),
            stackGet = __webpack_require__(
              /*! ./_stackGet */ '../../node_modules/lodash/_stackGet.js'
            ),
            stackHas = __webpack_require__(
              /*! ./_stackHas */ '../../node_modules/lodash/_stackHas.js'
            ),
            stackSet = __webpack_require__(
              /*! ./_stackSet */ '../../node_modules/lodash/_stackSet.js'
            )

          /**
           * Creates a stack cache object to store key-value pairs.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */
          function Stack(entries) {
            var data = (this.__data__ = new ListCache(entries))
            this.size = data.size
          }

          // Add methods to `Stack`.
          Stack.prototype.clear = stackClear
          Stack.prototype['delete'] = stackDelete
          Stack.prototype.get = stackGet
          Stack.prototype.has = stackHas
          Stack.prototype.set = stackSet

          module.exports = Stack

          /***/
        },

      /***/ '../../node_modules/lodash/_Symbol.js':
        /*!************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_Symbol.js ***!
  \************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var root = __webpack_require__(
            /*! ./_root */ '../../node_modules/lodash/_root.js'
          )

          /** Built-in value references. */
          var Symbol = root.Symbol

          module.exports = Symbol

          /***/
        },

      /***/ '../../node_modules/lodash/_Uint8Array.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_Uint8Array.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var root = __webpack_require__(
            /*! ./_root */ '../../node_modules/lodash/_root.js'
          )

          /** Built-in value references. */
          var Uint8Array = root.Uint8Array

          module.exports = Uint8Array

          /***/
        },

      /***/ '../../node_modules/lodash/_WeakMap.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_WeakMap.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getNative = __webpack_require__(
              /*! ./_getNative */ '../../node_modules/lodash/_getNative.js'
            ),
            root = __webpack_require__(
              /*! ./_root */ '../../node_modules/lodash/_root.js'
            )

          /* Built-in method references that are verified to be native. */
          var WeakMap = getNative(root, 'WeakMap')

          module.exports = WeakMap

          /***/
        },

      /***/ '../../node_modules/lodash/_arrayEach.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_arrayEach.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * A specialized version of `_.forEach` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns `array`.
           */
          function arrayEach(array, iteratee) {
            var index = -1,
              length = array == null ? 0 : array.length

            while (++index < length) {
              if (iteratee(array[index], index, array) === false) {
                break
              }
            }
            return array
          }

          module.exports = arrayEach

          /***/
        },

      /***/ '../../node_modules/lodash/_arrayFilter.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_arrayFilter.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * A specialized version of `_.filter` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {Array} Returns the new filtered array.
           */
          function arrayFilter(array, predicate) {
            var index = -1,
              length = array == null ? 0 : array.length,
              resIndex = 0,
              result = []

            while (++index < length) {
              var value = array[index]
              if (predicate(value, index, array)) {
                result[resIndex++] = value
              }
            }
            return result
          }

          module.exports = arrayFilter

          /***/
        },

      /***/ '../../node_modules/lodash/_arrayLikeKeys.js':
        /*!*******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_arrayLikeKeys.js ***!
  \*******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseTimes = __webpack_require__(
              /*! ./_baseTimes */ '../../node_modules/lodash/_baseTimes.js'
            ),
            isArguments = __webpack_require__(
              /*! ./isArguments */ '../../node_modules/lodash/isArguments.js'
            ),
            isArray = __webpack_require__(
              /*! ./isArray */ '../../node_modules/lodash/isArray.js'
            ),
            isBuffer = __webpack_require__(
              /*! ./isBuffer */ '../../node_modules/lodash/isBuffer.js'
            ),
            isIndex = __webpack_require__(
              /*! ./_isIndex */ '../../node_modules/lodash/_isIndex.js'
            ),
            isTypedArray = __webpack_require__(
              /*! ./isTypedArray */ '../../node_modules/lodash/isTypedArray.js'
            )

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * Creates an array of the enumerable property names of the array-like `value`.
           *
           * @private
           * @param {*} value The value to query.
           * @param {boolean} inherited Specify returning inherited property names.
           * @returns {Array} Returns the array of property names.
           */
          function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value),
              isArg = !isArr && isArguments(value),
              isBuff = !isArr && !isArg && isBuffer(value),
              isType = !isArr && !isArg && !isBuff && isTypedArray(value),
              skipIndexes = isArr || isArg || isBuff || isType,
              result = skipIndexes ? baseTimes(value.length, String) : [],
              length = result.length

            for (var key in value) {
              if (
                (inherited || hasOwnProperty.call(value, key)) &&
                !(
                  skipIndexes &&
                  // Safari 9 has enumerable `arguments.length` in strict mode.
                  (key == 'length' ||
                    // Node.js 0.10 has enumerable non-index properties on buffers.
                    (isBuff && (key == 'offset' || key == 'parent')) ||
                    // PhantomJS 2 has enumerable non-index properties on typed arrays.
                    (isType &&
                      (key == 'buffer' ||
                        key == 'byteLength' ||
                        key == 'byteOffset')) ||
                    // Skip index properties.
                    isIndex(key, length))
                )
              ) {
                result.push(key)
              }
            }
            return result
          }

          module.exports = arrayLikeKeys

          /***/
        },

      /***/ '../../node_modules/lodash/_arrayPush.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_arrayPush.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Appends the elements of `values` to `array`.
           *
           * @private
           * @param {Array} array The array to modify.
           * @param {Array} values The values to append.
           * @returns {Array} Returns `array`.
           */
          function arrayPush(array, values) {
            var index = -1,
              length = values.length,
              offset = array.length

            while (++index < length) {
              array[offset + index] = values[index]
            }
            return array
          }

          module.exports = arrayPush

          /***/
        },

      /***/ '../../node_modules/lodash/_assignValue.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_assignValue.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseAssignValue = __webpack_require__(
              /*! ./_baseAssignValue */ '../../node_modules/lodash/_baseAssignValue.js'
            ),
            eq = __webpack_require__(
              /*! ./eq */ '../../node_modules/lodash/eq.js'
            )

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * Assigns `value` to `key` of `object` if the existing value is not equivalent
           * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {string} key The key of the property to assign.
           * @param {*} value The value to assign.
           */
          function assignValue(object, key, value) {
            var objValue = object[key]
            if (
              !(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
              (value === undefined && !(key in object))
            ) {
              baseAssignValue(object, key, value)
            }
          }

          module.exports = assignValue

          /***/
        },

      /***/ '../../node_modules/lodash/_assocIndexOf.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_assocIndexOf.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var eq = __webpack_require__(
            /*! ./eq */ '../../node_modules/lodash/eq.js'
          )

          /**
           * Gets the index at which the `key` is found in `array` of key-value pairs.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {*} key The key to search for.
           * @returns {number} Returns the index of the matched value, else `-1`.
           */
          function assocIndexOf(array, key) {
            var length = array.length
            while (length--) {
              if (eq(array[length][0], key)) {
                return length
              }
            }
            return -1
          }

          module.exports = assocIndexOf

          /***/
        },

      /***/ '../../node_modules/lodash/_baseAssign.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseAssign.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var copyObject = __webpack_require__(
              /*! ./_copyObject */ '../../node_modules/lodash/_copyObject.js'
            ),
            keys = __webpack_require__(
              /*! ./keys */ '../../node_modules/lodash/keys.js'
            )

          /**
           * The base implementation of `_.assign` without support for multiple sources
           * or `customizer` functions.
           *
           * @private
           * @param {Object} object The destination object.
           * @param {Object} source The source object.
           * @returns {Object} Returns `object`.
           */
          function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object)
          }

          module.exports = baseAssign

          /***/
        },

      /***/ '../../node_modules/lodash/_baseAssignIn.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseAssignIn.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var copyObject = __webpack_require__(
              /*! ./_copyObject */ '../../node_modules/lodash/_copyObject.js'
            ),
            keysIn = __webpack_require__(
              /*! ./keysIn */ '../../node_modules/lodash/keysIn.js'
            )

          /**
           * The base implementation of `_.assignIn` without support for multiple sources
           * or `customizer` functions.
           *
           * @private
           * @param {Object} object The destination object.
           * @param {Object} source The source object.
           * @returns {Object} Returns `object`.
           */
          function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object)
          }

          module.exports = baseAssignIn

          /***/
        },

      /***/ '../../node_modules/lodash/_baseAssignValue.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseAssignValue.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var defineProperty = __webpack_require__(
            /*! ./_defineProperty */ '../../node_modules/lodash/_defineProperty.js'
          )

          /**
           * The base implementation of `assignValue` and `assignMergeValue` without
           * value checks.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {string} key The key of the property to assign.
           * @param {*} value The value to assign.
           */
          function baseAssignValue(object, key, value) {
            if (key == '__proto__' && defineProperty) {
              defineProperty(object, key, {
                configurable: true,
                enumerable: true,
                value: value,
                writable: true
              })
            } else {
              object[key] = value
            }
          }

          module.exports = baseAssignValue

          /***/
        },

      /***/ '../../node_modules/lodash/_baseClone.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseClone.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Stack = __webpack_require__(
              /*! ./_Stack */ '../../node_modules/lodash/_Stack.js'
            ),
            arrayEach = __webpack_require__(
              /*! ./_arrayEach */ '../../node_modules/lodash/_arrayEach.js'
            ),
            assignValue = __webpack_require__(
              /*! ./_assignValue */ '../../node_modules/lodash/_assignValue.js'
            ),
            baseAssign = __webpack_require__(
              /*! ./_baseAssign */ '../../node_modules/lodash/_baseAssign.js'
            ),
            baseAssignIn = __webpack_require__(
              /*! ./_baseAssignIn */ '../../node_modules/lodash/_baseAssignIn.js'
            ),
            cloneBuffer = __webpack_require__(
              /*! ./_cloneBuffer */ '../../node_modules/lodash/_cloneBuffer.js'
            ),
            copyArray = __webpack_require__(
              /*! ./_copyArray */ '../../node_modules/lodash/_copyArray.js'
            ),
            copySymbols = __webpack_require__(
              /*! ./_copySymbols */ '../../node_modules/lodash/_copySymbols.js'
            ),
            copySymbolsIn = __webpack_require__(
              /*! ./_copySymbolsIn */ '../../node_modules/lodash/_copySymbolsIn.js'
            ),
            getAllKeys = __webpack_require__(
              /*! ./_getAllKeys */ '../../node_modules/lodash/_getAllKeys.js'
            ),
            getAllKeysIn = __webpack_require__(
              /*! ./_getAllKeysIn */ '../../node_modules/lodash/_getAllKeysIn.js'
            ),
            getTag = __webpack_require__(
              /*! ./_getTag */ '../../node_modules/lodash/_getTag.js'
            ),
            initCloneArray = __webpack_require__(
              /*! ./_initCloneArray */ '../../node_modules/lodash/_initCloneArray.js'
            ),
            initCloneByTag = __webpack_require__(
              /*! ./_initCloneByTag */ '../../node_modules/lodash/_initCloneByTag.js'
            ),
            initCloneObject = __webpack_require__(
              /*! ./_initCloneObject */ '../../node_modules/lodash/_initCloneObject.js'
            ),
            isArray = __webpack_require__(
              /*! ./isArray */ '../../node_modules/lodash/isArray.js'
            ),
            isBuffer = __webpack_require__(
              /*! ./isBuffer */ '../../node_modules/lodash/isBuffer.js'
            ),
            isMap = __webpack_require__(
              /*! ./isMap */ '../../node_modules/lodash/isMap.js'
            ),
            isObject = __webpack_require__(
              /*! ./isObject */ '../../node_modules/lodash/isObject.js'
            ),
            isSet = __webpack_require__(
              /*! ./isSet */ '../../node_modules/lodash/isSet.js'
            ),
            keys = __webpack_require__(
              /*! ./keys */ '../../node_modules/lodash/keys.js'
            )

          /** Used to compose bitmasks for cloning. */
          var CLONE_DEEP_FLAG = 1,
            CLONE_FLAT_FLAG = 2,
            CLONE_SYMBOLS_FLAG = 4

          /** `Object#toString` result references. */
          var argsTag = '[object Arguments]',
            arrayTag = '[object Array]',
            boolTag = '[object Boolean]',
            dateTag = '[object Date]',
            errorTag = '[object Error]',
            funcTag = '[object Function]',
            genTag = '[object GeneratorFunction]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            objectTag = '[object Object]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            symbolTag = '[object Symbol]',
            weakMapTag = '[object WeakMap]'

          var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]',
            float32Tag = '[object Float32Array]',
            float64Tag = '[object Float64Array]',
            int8Tag = '[object Int8Array]',
            int16Tag = '[object Int16Array]',
            int32Tag = '[object Int32Array]',
            uint8Tag = '[object Uint8Array]',
            uint8ClampedTag = '[object Uint8ClampedArray]',
            uint16Tag = '[object Uint16Array]',
            uint32Tag = '[object Uint32Array]'

          /** Used to identify `toStringTag` values supported by `_.clone`. */
          var cloneableTags = {}
          cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[
            arrayBufferTag
          ] = cloneableTags[dataViewTag] = cloneableTags[
            boolTag
          ] = cloneableTags[dateTag] = cloneableTags[
            float32Tag
          ] = cloneableTags[float64Tag] = cloneableTags[
            int8Tag
          ] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[
            mapTag
          ] = cloneableTags[numberTag] = cloneableTags[
            objectTag
          ] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[
            stringTag
          ] = cloneableTags[symbolTag] = cloneableTags[
            uint8Tag
          ] = cloneableTags[uint8ClampedTag] = cloneableTags[
            uint16Tag
          ] = cloneableTags[uint32Tag] = true
          cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[
            weakMapTag
          ] = false

          /**
           * The base implementation of `_.clone` and `_.cloneDeep` which tracks
           * traversed objects.
           *
           * @private
           * @param {*} value The value to clone.
           * @param {boolean} bitmask The bitmask flags.
           *  1 - Deep clone
           *  2 - Flatten inherited properties
           *  4 - Clone symbols
           * @param {Function} [customizer] The function to customize cloning.
           * @param {string} [key] The key of `value`.
           * @param {Object} [object] The parent object of `value`.
           * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
           * @returns {*} Returns the cloned value.
           */
          function baseClone(value, bitmask, customizer, key, object, stack) {
            var result,
              isDeep = bitmask & CLONE_DEEP_FLAG,
              isFlat = bitmask & CLONE_FLAT_FLAG,
              isFull = bitmask & CLONE_SYMBOLS_FLAG

            if (customizer) {
              result = object
                ? customizer(value, key, object, stack)
                : customizer(value)
            }
            if (result !== undefined) {
              return result
            }
            if (!isObject(value)) {
              return value
            }
            var isArr = isArray(value)
            if (isArr) {
              result = initCloneArray(value)
              if (!isDeep) {
                return copyArray(value, result)
              }
            } else {
              var tag = getTag(value),
                isFunc = tag == funcTag || tag == genTag

              if (isBuffer(value)) {
                return cloneBuffer(value, isDeep)
              }
              if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
                result = isFlat || isFunc ? {} : initCloneObject(value)
                if (!isDeep) {
                  return isFlat
                    ? copySymbolsIn(value, baseAssignIn(result, value))
                    : copySymbols(value, baseAssign(result, value))
                }
              } else {
                if (!cloneableTags[tag]) {
                  return object ? value : {}
                }
                result = initCloneByTag(value, tag, isDeep)
              }
            }
            // Check for circular references and return its corresponding clone.
            stack || (stack = new Stack())
            var stacked = stack.get(value)
            if (stacked) {
              return stacked
            }
            stack.set(value, result)

            if (isSet(value)) {
              value.forEach(function(subValue) {
                result.add(
                  baseClone(
                    subValue,
                    bitmask,
                    customizer,
                    subValue,
                    value,
                    stack
                  )
                )
              })

              return result
            }

            if (isMap(value)) {
              value.forEach(function(subValue, key) {
                result.set(
                  key,
                  baseClone(subValue, bitmask, customizer, key, value, stack)
                )
              })

              return result
            }

            var keysFunc = isFull
              ? isFlat
                ? getAllKeysIn
                : getAllKeys
              : isFlat
              ? keysIn
              : keys

            var props = isArr ? undefined : keysFunc(value)
            arrayEach(props || value, function(subValue, key) {
              if (props) {
                key = subValue
                subValue = value[key]
              }
              // Recursively populate clone (susceptible to call stack limits).
              assignValue(
                result,
                key,
                baseClone(subValue, bitmask, customizer, key, value, stack)
              )
            })
            return result
          }

          module.exports = baseClone

          /***/
        },

      /***/ '../../node_modules/lodash/_baseCreate.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseCreate.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var isObject = __webpack_require__(
            /*! ./isObject */ '../../node_modules/lodash/isObject.js'
          )

          /** Built-in value references. */
          var objectCreate = Object.create

          /**
           * The base implementation of `_.create` without support for assigning
           * properties to the created object.
           *
           * @private
           * @param {Object} proto The object to inherit from.
           * @returns {Object} Returns the new object.
           */
          var baseCreate = (function() {
            function object() {}
            return function(proto) {
              if (!isObject(proto)) {
                return {}
              }
              if (objectCreate) {
                return objectCreate(proto)
              }
              object.prototype = proto
              var result = new object()
              object.prototype = undefined
              return result
            }
          })()

          module.exports = baseCreate

          /***/
        },

      /***/ '../../node_modules/lodash/_baseGetAllKeys.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseGetAllKeys.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var arrayPush = __webpack_require__(
              /*! ./_arrayPush */ '../../node_modules/lodash/_arrayPush.js'
            ),
            isArray = __webpack_require__(
              /*! ./isArray */ '../../node_modules/lodash/isArray.js'
            )

          /**
           * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
           * `keysFunc` and `symbolsFunc` to get the enumerable property names and
           * symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Function} keysFunc The function to get the keys of `object`.
           * @param {Function} symbolsFunc The function to get the symbols of `object`.
           * @returns {Array} Returns the array of property names and symbols.
           */
          function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object)
            return isArray(object)
              ? result
              : arrayPush(result, symbolsFunc(object))
          }

          module.exports = baseGetAllKeys

          /***/
        },

      /***/ '../../node_modules/lodash/_baseGetTag.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseGetTag.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Symbol = __webpack_require__(
              /*! ./_Symbol */ '../../node_modules/lodash/_Symbol.js'
            ),
            getRawTag = __webpack_require__(
              /*! ./_getRawTag */ '../../node_modules/lodash/_getRawTag.js'
            ),
            objectToString = __webpack_require__(
              /*! ./_objectToString */ '../../node_modules/lodash/_objectToString.js'
            )

          /** `Object#toString` result references. */
          var nullTag = '[object Null]',
            undefinedTag = '[object Undefined]'

          /** Built-in value references. */
          var symToStringTag = Symbol ? Symbol.toStringTag : undefined

          /**
           * The base implementation of `getTag` without fallbacks for buggy environments.
           *
           * @private
           * @param {*} value The value to query.
           * @returns {string} Returns the `toStringTag`.
           */
          function baseGetTag(value) {
            if (value == null) {
              return value === undefined ? undefinedTag : nullTag
            }
            return symToStringTag && symToStringTag in Object(value)
              ? getRawTag(value)
              : objectToString(value)
          }

          module.exports = baseGetTag

          /***/
        },

      /***/ '../../node_modules/lodash/_baseIsArguments.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseIsArguments.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseGetTag = __webpack_require__(
              /*! ./_baseGetTag */ '../../node_modules/lodash/_baseGetTag.js'
            ),
            isObjectLike = __webpack_require__(
              /*! ./isObjectLike */ '../../node_modules/lodash/isObjectLike.js'
            )

          /** `Object#toString` result references. */
          var argsTag = '[object Arguments]'

          /**
           * The base implementation of `_.isArguments`.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an `arguments` object,
           */
          function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag
          }

          module.exports = baseIsArguments

          /***/
        },

      /***/ '../../node_modules/lodash/_baseIsMap.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseIsMap.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getTag = __webpack_require__(
              /*! ./_getTag */ '../../node_modules/lodash/_getTag.js'
            ),
            isObjectLike = __webpack_require__(
              /*! ./isObjectLike */ '../../node_modules/lodash/isObjectLike.js'
            )

          /** `Object#toString` result references. */
          var mapTag = '[object Map]'

          /**
           * The base implementation of `_.isMap` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a map, else `false`.
           */
          function baseIsMap(value) {
            return isObjectLike(value) && getTag(value) == mapTag
          }

          module.exports = baseIsMap

          /***/
        },

      /***/ '../../node_modules/lodash/_baseIsNative.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseIsNative.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var isFunction = __webpack_require__(
              /*! ./isFunction */ '../../node_modules/lodash/isFunction.js'
            ),
            isMasked = __webpack_require__(
              /*! ./_isMasked */ '../../node_modules/lodash/_isMasked.js'
            ),
            isObject = __webpack_require__(
              /*! ./isObject */ '../../node_modules/lodash/isObject.js'
            ),
            toSource = __webpack_require__(
              /*! ./_toSource */ '../../node_modules/lodash/_toSource.js'
            )

          /**
           * Used to match `RegExp`
           * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
           */
          var reRegExpChar = /[\\^$.*+?()[\]{}|]/g

          /** Used to detect host constructors (Safari). */
          var reIsHostCtor = /^\[object .+?Constructor\]$/

          /** Used for built-in method references. */
          var funcProto = Function.prototype,
            objectProto = Object.prototype

          /** Used to resolve the decompiled source of functions. */
          var funcToString = funcProto.toString

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /** Used to detect if a method is native. */
          var reIsNative = RegExp(
            '^' +
              funcToString
                .call(hasOwnProperty)
                .replace(reRegExpChar, '\\$&')
                .replace(
                  /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                  '$1.*?'
                ) +
              '$'
          )

          /**
           * The base implementation of `_.isNative` without bad shim checks.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a native function,
           *  else `false`.
           */
          function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) {
              return false
            }
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor
            return pattern.test(toSource(value))
          }

          module.exports = baseIsNative

          /***/
        },

      /***/ '../../node_modules/lodash/_baseIsSet.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseIsSet.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getTag = __webpack_require__(
              /*! ./_getTag */ '../../node_modules/lodash/_getTag.js'
            ),
            isObjectLike = __webpack_require__(
              /*! ./isObjectLike */ '../../node_modules/lodash/isObjectLike.js'
            )

          /** `Object#toString` result references. */
          var setTag = '[object Set]'

          /**
           * The base implementation of `_.isSet` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a set, else `false`.
           */
          function baseIsSet(value) {
            return isObjectLike(value) && getTag(value) == setTag
          }

          module.exports = baseIsSet

          /***/
        },

      /***/ '../../node_modules/lodash/_baseIsTypedArray.js':
        /*!**********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseIsTypedArray.js ***!
  \**********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseGetTag = __webpack_require__(
              /*! ./_baseGetTag */ '../../node_modules/lodash/_baseGetTag.js'
            ),
            isLength = __webpack_require__(
              /*! ./isLength */ '../../node_modules/lodash/isLength.js'
            ),
            isObjectLike = __webpack_require__(
              /*! ./isObjectLike */ '../../node_modules/lodash/isObjectLike.js'
            )

          /** `Object#toString` result references. */
          var argsTag = '[object Arguments]',
            arrayTag = '[object Array]',
            boolTag = '[object Boolean]',
            dateTag = '[object Date]',
            errorTag = '[object Error]',
            funcTag = '[object Function]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            objectTag = '[object Object]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            weakMapTag = '[object WeakMap]'

          var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]',
            float32Tag = '[object Float32Array]',
            float64Tag = '[object Float64Array]',
            int8Tag = '[object Int8Array]',
            int16Tag = '[object Int16Array]',
            int32Tag = '[object Int32Array]',
            uint8Tag = '[object Uint8Array]',
            uint8ClampedTag = '[object Uint8ClampedArray]',
            uint16Tag = '[object Uint16Array]',
            uint32Tag = '[object Uint32Array]'

          /** Used to identify `toStringTag` values of typed arrays. */
          var typedArrayTags = {}
          typedArrayTags[float32Tag] = typedArrayTags[
            float64Tag
          ] = typedArrayTags[int8Tag] = typedArrayTags[
            int16Tag
          ] = typedArrayTags[int32Tag] = typedArrayTags[
            uint8Tag
          ] = typedArrayTags[uint8ClampedTag] = typedArrayTags[
            uint16Tag
          ] = typedArrayTags[uint32Tag] = true
          typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[
            arrayBufferTag
          ] = typedArrayTags[boolTag] = typedArrayTags[
            dataViewTag
          ] = typedArrayTags[dateTag] = typedArrayTags[
            errorTag
          ] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[
            numberTag
          ] = typedArrayTags[objectTag] = typedArrayTags[
            regexpTag
          ] = typedArrayTags[setTag] = typedArrayTags[
            stringTag
          ] = typedArrayTags[weakMapTag] = false

          /**
           * The base implementation of `_.isTypedArray` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
           */
          function baseIsTypedArray(value) {
            return (
              isObjectLike(value) &&
              isLength(value.length) &&
              !!typedArrayTags[baseGetTag(value)]
            )
          }

          module.exports = baseIsTypedArray

          /***/
        },

      /***/ '../../node_modules/lodash/_baseKeys.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseKeys.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var isPrototype = __webpack_require__(
              /*! ./_isPrototype */ '../../node_modules/lodash/_isPrototype.js'
            ),
            nativeKeys = __webpack_require__(
              /*! ./_nativeKeys */ '../../node_modules/lodash/_nativeKeys.js'
            )

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function baseKeys(object) {
            if (!isPrototype(object)) {
              return nativeKeys(object)
            }
            var result = []
            for (var key in Object(object)) {
              if (hasOwnProperty.call(object, key) && key != 'constructor') {
                result.push(key)
              }
            }
            return result
          }

          module.exports = baseKeys

          /***/
        },

      /***/ '../../node_modules/lodash/_baseKeysIn.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseKeysIn.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var isObject = __webpack_require__(
              /*! ./isObject */ '../../node_modules/lodash/isObject.js'
            ),
            isPrototype = __webpack_require__(
              /*! ./_isPrototype */ '../../node_modules/lodash/_isPrototype.js'
            ),
            nativeKeysIn = __webpack_require__(
              /*! ./_nativeKeysIn */ '../../node_modules/lodash/_nativeKeysIn.js'
            )

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function baseKeysIn(object) {
            if (!isObject(object)) {
              return nativeKeysIn(object)
            }
            var isProto = isPrototype(object),
              result = []

            for (var key in object) {
              if (
                !(
                  key == 'constructor' &&
                  (isProto || !hasOwnProperty.call(object, key))
                )
              ) {
                result.push(key)
              }
            }
            return result
          }

          module.exports = baseKeysIn

          /***/
        },

      /***/ '../../node_modules/lodash/_baseTimes.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseTimes.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * The base implementation of `_.times` without support for iteratee shorthands
           * or max array length checks.
           *
           * @private
           * @param {number} n The number of times to invoke `iteratee`.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns the array of results.
           */
          function baseTimes(n, iteratee) {
            var index = -1,
              result = Array(n)

            while (++index < n) {
              result[index] = iteratee(index)
            }
            return result
          }

          module.exports = baseTimes

          /***/
        },

      /***/ '../../node_modules/lodash/_baseUnary.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_baseUnary.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * The base implementation of `_.unary` without support for storing metadata.
           *
           * @private
           * @param {Function} func The function to cap arguments for.
           * @returns {Function} Returns the new capped function.
           */
          function baseUnary(func) {
            return function(value) {
              return func(value)
            }
          }

          module.exports = baseUnary

          /***/
        },

      /***/ '../../node_modules/lodash/_cloneArrayBuffer.js':
        /*!**********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_cloneArrayBuffer.js ***!
  \**********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Uint8Array = __webpack_require__(
            /*! ./_Uint8Array */ '../../node_modules/lodash/_Uint8Array.js'
          )

          /**
           * Creates a clone of `arrayBuffer`.
           *
           * @private
           * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
           * @returns {ArrayBuffer} Returns the cloned array buffer.
           */
          function cloneArrayBuffer(arrayBuffer) {
            var result = new arrayBuffer.constructor(arrayBuffer.byteLength)
            new Uint8Array(result).set(new Uint8Array(arrayBuffer))
            return result
          }

          module.exports = cloneArrayBuffer

          /***/
        },

      /***/ '../../node_modules/lodash/_cloneBuffer.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_cloneBuffer.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /* WEBPACK VAR INJECTION */ ;(function(module) {
            var root = __webpack_require__(
              /*! ./_root */ '../../node_modules/lodash/_root.js'
            )

            /** Detect free variable `exports`. */
            var freeExports = true && exports && !exports.nodeType && exports

            /** Detect free variable `module`. */
            var freeModule =
              freeExports &&
              typeof module == 'object' &&
              module &&
              !module.nodeType &&
              module

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports

            /** Built-in value references. */
            var Buffer = moduleExports ? root.Buffer : undefined,
              allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined

            /**
             * Creates a clone of  `buffer`.
             *
             * @private
             * @param {Buffer} buffer The buffer to clone.
             * @param {boolean} [isDeep] Specify a deep clone.
             * @returns {Buffer} Returns the cloned buffer.
             */
            function cloneBuffer(buffer, isDeep) {
              if (isDeep) {
                return buffer.slice()
              }
              var length = buffer.length,
                result = allocUnsafe
                  ? allocUnsafe(length)
                  : new buffer.constructor(length)

              buffer.copy(result)
              return result
            }

            module.exports = cloneBuffer

            /* WEBPACK VAR INJECTION */
          }.call(
            this,
            __webpack_require__(
              /*! ./../webpack/buildin/module.js */ '../../node_modules/webpack/buildin/module.js'
            )(module)
          ))

          /***/
        },

      /***/ '../../node_modules/lodash/_cloneDataView.js':
        /*!*******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_cloneDataView.js ***!
  \*******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var cloneArrayBuffer = __webpack_require__(
            /*! ./_cloneArrayBuffer */ '../../node_modules/lodash/_cloneArrayBuffer.js'
          )

          /**
           * Creates a clone of `dataView`.
           *
           * @private
           * @param {Object} dataView The data view to clone.
           * @param {boolean} [isDeep] Specify a deep clone.
           * @returns {Object} Returns the cloned data view.
           */
          function cloneDataView(dataView, isDeep) {
            var buffer = isDeep
              ? cloneArrayBuffer(dataView.buffer)
              : dataView.buffer
            return new dataView.constructor(
              buffer,
              dataView.byteOffset,
              dataView.byteLength
            )
          }

          module.exports = cloneDataView

          /***/
        },

      /***/ '../../node_modules/lodash/_cloneRegExp.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_cloneRegExp.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /** Used to match `RegExp` flags from their coerced string values. */
          var reFlags = /\w*$/

          /**
           * Creates a clone of `regexp`.
           *
           * @private
           * @param {Object} regexp The regexp to clone.
           * @returns {Object} Returns the cloned regexp.
           */
          function cloneRegExp(regexp) {
            var result = new regexp.constructor(
              regexp.source,
              reFlags.exec(regexp)
            )
            result.lastIndex = regexp.lastIndex
            return result
          }

          module.exports = cloneRegExp

          /***/
        },

      /***/ '../../node_modules/lodash/_cloneSymbol.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_cloneSymbol.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Symbol = __webpack_require__(
            /*! ./_Symbol */ '../../node_modules/lodash/_Symbol.js'
          )

          /** Used to convert symbols to primitives and strings. */
          var symbolProto = Symbol ? Symbol.prototype : undefined,
            symbolValueOf = symbolProto ? symbolProto.valueOf : undefined

          /**
           * Creates a clone of the `symbol` object.
           *
           * @private
           * @param {Object} symbol The symbol object to clone.
           * @returns {Object} Returns the cloned symbol object.
           */
          function cloneSymbol(symbol) {
            return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {}
          }

          module.exports = cloneSymbol

          /***/
        },

      /***/ '../../node_modules/lodash/_cloneTypedArray.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_cloneTypedArray.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var cloneArrayBuffer = __webpack_require__(
            /*! ./_cloneArrayBuffer */ '../../node_modules/lodash/_cloneArrayBuffer.js'
          )

          /**
           * Creates a clone of `typedArray`.
           *
           * @private
           * @param {Object} typedArray The typed array to clone.
           * @param {boolean} [isDeep] Specify a deep clone.
           * @returns {Object} Returns the cloned typed array.
           */
          function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep
              ? cloneArrayBuffer(typedArray.buffer)
              : typedArray.buffer
            return new typedArray.constructor(
              buffer,
              typedArray.byteOffset,
              typedArray.length
            )
          }

          module.exports = cloneTypedArray

          /***/
        },

      /***/ '../../node_modules/lodash/_copyArray.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_copyArray.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Copies the values of `source` to `array`.
           *
           * @private
           * @param {Array} source The array to copy values from.
           * @param {Array} [array=[]] The array to copy values to.
           * @returns {Array} Returns `array`.
           */
          function copyArray(source, array) {
            var index = -1,
              length = source.length

            array || (array = Array(length))
            while (++index < length) {
              array[index] = source[index]
            }
            return array
          }

          module.exports = copyArray

          /***/
        },

      /***/ '../../node_modules/lodash/_copyObject.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_copyObject.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var assignValue = __webpack_require__(
              /*! ./_assignValue */ '../../node_modules/lodash/_assignValue.js'
            ),
            baseAssignValue = __webpack_require__(
              /*! ./_baseAssignValue */ '../../node_modules/lodash/_baseAssignValue.js'
            )

          /**
           * Copies properties of `source` to `object`.
           *
           * @private
           * @param {Object} source The object to copy properties from.
           * @param {Array} props The property identifiers to copy.
           * @param {Object} [object={}] The object to copy properties to.
           * @param {Function} [customizer] The function to customize copied values.
           * @returns {Object} Returns `object`.
           */
          function copyObject(source, props, object, customizer) {
            var isNew = !object
            object || (object = {})

            var index = -1,
              length = props.length

            while (++index < length) {
              var key = props[index]

              var newValue = customizer
                ? customizer(object[key], source[key], key, object, source)
                : undefined

              if (newValue === undefined) {
                newValue = source[key]
              }
              if (isNew) {
                baseAssignValue(object, key, newValue)
              } else {
                assignValue(object, key, newValue)
              }
            }
            return object
          }

          module.exports = copyObject

          /***/
        },

      /***/ '../../node_modules/lodash/_copySymbols.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_copySymbols.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var copyObject = __webpack_require__(
              /*! ./_copyObject */ '../../node_modules/lodash/_copyObject.js'
            ),
            getSymbols = __webpack_require__(
              /*! ./_getSymbols */ '../../node_modules/lodash/_getSymbols.js'
            )

          /**
           * Copies own symbols of `source` to `object`.
           *
           * @private
           * @param {Object} source The object to copy symbols from.
           * @param {Object} [object={}] The object to copy symbols to.
           * @returns {Object} Returns `object`.
           */
          function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object)
          }

          module.exports = copySymbols

          /***/
        },

      /***/ '../../node_modules/lodash/_copySymbolsIn.js':
        /*!*******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_copySymbolsIn.js ***!
  \*******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var copyObject = __webpack_require__(
              /*! ./_copyObject */ '../../node_modules/lodash/_copyObject.js'
            ),
            getSymbolsIn = __webpack_require__(
              /*! ./_getSymbolsIn */ '../../node_modules/lodash/_getSymbolsIn.js'
            )

          /**
           * Copies own and inherited symbols of `source` to `object`.
           *
           * @private
           * @param {Object} source The object to copy symbols from.
           * @param {Object} [object={}] The object to copy symbols to.
           * @returns {Object} Returns `object`.
           */
          function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object)
          }

          module.exports = copySymbolsIn

          /***/
        },

      /***/ '../../node_modules/lodash/_coreJsData.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_coreJsData.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var root = __webpack_require__(
            /*! ./_root */ '../../node_modules/lodash/_root.js'
          )

          /** Used to detect overreaching core-js shims. */
          var coreJsData = root['__core-js_shared__']

          module.exports = coreJsData

          /***/
        },

      /***/ '../../node_modules/lodash/_defineProperty.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_defineProperty.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getNative = __webpack_require__(
            /*! ./_getNative */ '../../node_modules/lodash/_getNative.js'
          )

          var defineProperty = (function() {
            try {
              var func = getNative(Object, 'defineProperty')
              func({}, '', {})
              return func
            } catch (e) {}
          })()

          module.exports = defineProperty

          /***/
        },

      /***/ '../../node_modules/lodash/_freeGlobal.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_freeGlobal.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /** Detect free variable `global` from Node.js. */
          var freeGlobal =
            typeof global == 'object' &&
            global &&
            global.Object === Object &&
            global

          module.exports = freeGlobal

          /***/
        },

      /***/ '../../node_modules/lodash/_getAllKeys.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getAllKeys.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseGetAllKeys = __webpack_require__(
              /*! ./_baseGetAllKeys */ '../../node_modules/lodash/_baseGetAllKeys.js'
            ),
            getSymbols = __webpack_require__(
              /*! ./_getSymbols */ '../../node_modules/lodash/_getSymbols.js'
            ),
            keys = __webpack_require__(
              /*! ./keys */ '../../node_modules/lodash/keys.js'
            )

          /**
           * Creates an array of own enumerable property names and symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names and symbols.
           */
          function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols)
          }

          module.exports = getAllKeys

          /***/
        },

      /***/ '../../node_modules/lodash/_getAllKeysIn.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getAllKeysIn.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseGetAllKeys = __webpack_require__(
              /*! ./_baseGetAllKeys */ '../../node_modules/lodash/_baseGetAllKeys.js'
            ),
            getSymbolsIn = __webpack_require__(
              /*! ./_getSymbolsIn */ '../../node_modules/lodash/_getSymbolsIn.js'
            ),
            keysIn = __webpack_require__(
              /*! ./keysIn */ '../../node_modules/lodash/keysIn.js'
            )

          /**
           * Creates an array of own and inherited enumerable property names and
           * symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names and symbols.
           */
          function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn)
          }

          module.exports = getAllKeysIn

          /***/
        },

      /***/ '../../node_modules/lodash/_getMapData.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getMapData.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var isKeyable = __webpack_require__(
            /*! ./_isKeyable */ '../../node_modules/lodash/_isKeyable.js'
          )

          /**
           * Gets the data for `map`.
           *
           * @private
           * @param {Object} map The map to query.
           * @param {string} key The reference key.
           * @returns {*} Returns the map data.
           */
          function getMapData(map, key) {
            var data = map.__data__
            return isKeyable(key)
              ? data[typeof key == 'string' ? 'string' : 'hash']
              : data.map
          }

          module.exports = getMapData

          /***/
        },

      /***/ '../../node_modules/lodash/_getNative.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getNative.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseIsNative = __webpack_require__(
              /*! ./_baseIsNative */ '../../node_modules/lodash/_baseIsNative.js'
            ),
            getValue = __webpack_require__(
              /*! ./_getValue */ '../../node_modules/lodash/_getValue.js'
            )

          /**
           * Gets the native function at `key` of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {string} key The key of the method to get.
           * @returns {*} Returns the function if it's native, else `undefined`.
           */
          function getNative(object, key) {
            var value = getValue(object, key)
            return baseIsNative(value) ? value : undefined
          }

          module.exports = getNative

          /***/
        },

      /***/ '../../node_modules/lodash/_getPrototype.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getPrototype.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var overArg = __webpack_require__(
            /*! ./_overArg */ '../../node_modules/lodash/_overArg.js'
          )

          /** Built-in value references. */
          var getPrototype = overArg(Object.getPrototypeOf, Object)

          module.exports = getPrototype

          /***/
        },

      /***/ '../../node_modules/lodash/_getRawTag.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getRawTag.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Symbol = __webpack_require__(
            /*! ./_Symbol */ '../../node_modules/lodash/_Symbol.js'
          )

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * Used to resolve the
           * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
           * of values.
           */
          var nativeObjectToString = objectProto.toString

          /** Built-in value references. */
          var symToStringTag = Symbol ? Symbol.toStringTag : undefined

          /**
           * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
           *
           * @private
           * @param {*} value The value to query.
           * @returns {string} Returns the raw `toStringTag`.
           */
          function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag),
              tag = value[symToStringTag]

            try {
              value[symToStringTag] = undefined
              var unmasked = true
            } catch (e) {}

            var result = nativeObjectToString.call(value)
            if (unmasked) {
              if (isOwn) {
                value[symToStringTag] = tag
              } else {
                delete value[symToStringTag]
              }
            }
            return result
          }

          module.exports = getRawTag

          /***/
        },

      /***/ '../../node_modules/lodash/_getSymbols.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getSymbols.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var arrayFilter = __webpack_require__(
              /*! ./_arrayFilter */ '../../node_modules/lodash/_arrayFilter.js'
            ),
            stubArray = __webpack_require__(
              /*! ./stubArray */ '../../node_modules/lodash/stubArray.js'
            )

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Built-in value references. */
          var propertyIsEnumerable = objectProto.propertyIsEnumerable

          /* Built-in method references for those with the same name as other `lodash` methods. */
          var nativeGetSymbols = Object.getOwnPropertySymbols

          /**
           * Creates an array of the own enumerable symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of symbols.
           */
          var getSymbols = !nativeGetSymbols
            ? stubArray
            : function(object) {
                if (object == null) {
                  return []
                }
                object = Object(object)
                return arrayFilter(nativeGetSymbols(object), function(symbol) {
                  return propertyIsEnumerable.call(object, symbol)
                })
              }

          module.exports = getSymbols

          /***/
        },

      /***/ '../../node_modules/lodash/_getSymbolsIn.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getSymbolsIn.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var arrayPush = __webpack_require__(
              /*! ./_arrayPush */ '../../node_modules/lodash/_arrayPush.js'
            ),
            getPrototype = __webpack_require__(
              /*! ./_getPrototype */ '../../node_modules/lodash/_getPrototype.js'
            ),
            getSymbols = __webpack_require__(
              /*! ./_getSymbols */ '../../node_modules/lodash/_getSymbols.js'
            ),
            stubArray = __webpack_require__(
              /*! ./stubArray */ '../../node_modules/lodash/stubArray.js'
            )

          /* Built-in method references for those with the same name as other `lodash` methods. */
          var nativeGetSymbols = Object.getOwnPropertySymbols

          /**
           * Creates an array of the own and inherited enumerable symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of symbols.
           */
          var getSymbolsIn = !nativeGetSymbols
            ? stubArray
            : function(object) {
                var result = []
                while (object) {
                  arrayPush(result, getSymbols(object))
                  object = getPrototype(object)
                }
                return result
              }

          module.exports = getSymbolsIn

          /***/
        },

      /***/ '../../node_modules/lodash/_getTag.js':
        /*!************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getTag.js ***!
  \************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var DataView = __webpack_require__(
              /*! ./_DataView */ '../../node_modules/lodash/_DataView.js'
            ),
            Map = __webpack_require__(
              /*! ./_Map */ '../../node_modules/lodash/_Map.js'
            ),
            Promise = __webpack_require__(
              /*! ./_Promise */ '../../node_modules/lodash/_Promise.js'
            ),
            Set = __webpack_require__(
              /*! ./_Set */ '../../node_modules/lodash/_Set.js'
            ),
            WeakMap = __webpack_require__(
              /*! ./_WeakMap */ '../../node_modules/lodash/_WeakMap.js'
            ),
            baseGetTag = __webpack_require__(
              /*! ./_baseGetTag */ '../../node_modules/lodash/_baseGetTag.js'
            ),
            toSource = __webpack_require__(
              /*! ./_toSource */ '../../node_modules/lodash/_toSource.js'
            )

          /** `Object#toString` result references. */
          var mapTag = '[object Map]',
            objectTag = '[object Object]',
            promiseTag = '[object Promise]',
            setTag = '[object Set]',
            weakMapTag = '[object WeakMap]'

          var dataViewTag = '[object DataView]'

          /** Used to detect maps, sets, and weakmaps. */
          var dataViewCtorString = toSource(DataView),
            mapCtorString = toSource(Map),
            promiseCtorString = toSource(Promise),
            setCtorString = toSource(Set),
            weakMapCtorString = toSource(WeakMap)

          /**
           * Gets the `toStringTag` of `value`.
           *
           * @private
           * @param {*} value The value to query.
           * @returns {string} Returns the `toStringTag`.
           */
          var getTag = baseGetTag

          // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
          if (
            (DataView &&
              getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
            (Map && getTag(new Map()) != mapTag) ||
            (Promise && getTag(Promise.resolve()) != promiseTag) ||
            (Set && getTag(new Set()) != setTag) ||
            (WeakMap && getTag(new WeakMap()) != weakMapTag)
          ) {
            getTag = function(value) {
              var result = baseGetTag(value),
                Ctor = result == objectTag ? value.constructor : undefined,
                ctorString = Ctor ? toSource(Ctor) : ''

              if (ctorString) {
                switch (ctorString) {
                  case dataViewCtorString:
                    return dataViewTag
                  case mapCtorString:
                    return mapTag
                  case promiseCtorString:
                    return promiseTag
                  case setCtorString:
                    return setTag
                  case weakMapCtorString:
                    return weakMapTag
                }
              }
              return result
            }
          }

          module.exports = getTag

          /***/
        },

      /***/ '../../node_modules/lodash/_getValue.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_getValue.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Gets the value at `key` of `object`.
           *
           * @private
           * @param {Object} [object] The object to query.
           * @param {string} key The key of the property to get.
           * @returns {*} Returns the property value.
           */
          function getValue(object, key) {
            return object == null ? undefined : object[key]
          }

          module.exports = getValue

          /***/
        },

      /***/ '../../node_modules/lodash/_hashClear.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_hashClear.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var nativeCreate = __webpack_require__(
            /*! ./_nativeCreate */ '../../node_modules/lodash/_nativeCreate.js'
          )

          /**
           * Removes all key-value entries from the hash.
           *
           * @private
           * @name clear
           * @memberOf Hash
           */
          function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {}
            this.size = 0
          }

          module.exports = hashClear

          /***/
        },

      /***/ '../../node_modules/lodash/_hashDelete.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_hashDelete.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Removes `key` and its value from the hash.
           *
           * @private
           * @name delete
           * @memberOf Hash
           * @param {Object} hash The hash to modify.
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */
          function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key]
            this.size -= result ? 1 : 0
            return result
          }

          module.exports = hashDelete

          /***/
        },

      /***/ '../../node_modules/lodash/_hashGet.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_hashGet.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var nativeCreate = __webpack_require__(
            /*! ./_nativeCreate */ '../../node_modules/lodash/_nativeCreate.js'
          )

          /** Used to stand-in for `undefined` hash values. */
          var HASH_UNDEFINED = '__lodash_hash_undefined__'

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * Gets the hash value for `key`.
           *
           * @private
           * @name get
           * @memberOf Hash
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */
          function hashGet(key) {
            var data = this.__data__
            if (nativeCreate) {
              var result = data[key]
              return result === HASH_UNDEFINED ? undefined : result
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined
          }

          module.exports = hashGet

          /***/
        },

      /***/ '../../node_modules/lodash/_hashHas.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_hashHas.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var nativeCreate = __webpack_require__(
            /*! ./_nativeCreate */ '../../node_modules/lodash/_nativeCreate.js'
          )

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * Checks if a hash value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf Hash
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */
          function hashHas(key) {
            var data = this.__data__
            return nativeCreate
              ? data[key] !== undefined
              : hasOwnProperty.call(data, key)
          }

          module.exports = hashHas

          /***/
        },

      /***/ '../../node_modules/lodash/_hashSet.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_hashSet.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var nativeCreate = __webpack_require__(
            /*! ./_nativeCreate */ '../../node_modules/lodash/_nativeCreate.js'
          )

          /** Used to stand-in for `undefined` hash values. */
          var HASH_UNDEFINED = '__lodash_hash_undefined__'

          /**
           * Sets the hash `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf Hash
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the hash instance.
           */
          function hashSet(key, value) {
            var data = this.__data__
            this.size += this.has(key) ? 0 : 1
            data[key] =
              nativeCreate && value === undefined ? HASH_UNDEFINED : value
            return this
          }

          module.exports = hashSet

          /***/
        },

      /***/ '../../node_modules/lodash/_initCloneArray.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_initCloneArray.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /**
           * Initializes an array clone.
           *
           * @private
           * @param {Array} array The array to clone.
           * @returns {Array} Returns the initialized clone.
           */
          function initCloneArray(array) {
            var length = array.length,
              result = new array.constructor(length)

            // Add properties assigned by `RegExp#exec`.
            if (
              length &&
              typeof array[0] == 'string' &&
              hasOwnProperty.call(array, 'index')
            ) {
              result.index = array.index
              result.input = array.input
            }
            return result
          }

          module.exports = initCloneArray

          /***/
        },

      /***/ '../../node_modules/lodash/_initCloneByTag.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_initCloneByTag.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var cloneArrayBuffer = __webpack_require__(
              /*! ./_cloneArrayBuffer */ '../../node_modules/lodash/_cloneArrayBuffer.js'
            ),
            cloneDataView = __webpack_require__(
              /*! ./_cloneDataView */ '../../node_modules/lodash/_cloneDataView.js'
            ),
            cloneRegExp = __webpack_require__(
              /*! ./_cloneRegExp */ '../../node_modules/lodash/_cloneRegExp.js'
            ),
            cloneSymbol = __webpack_require__(
              /*! ./_cloneSymbol */ '../../node_modules/lodash/_cloneSymbol.js'
            ),
            cloneTypedArray = __webpack_require__(
              /*! ./_cloneTypedArray */ '../../node_modules/lodash/_cloneTypedArray.js'
            )

          /** `Object#toString` result references. */
          var boolTag = '[object Boolean]',
            dateTag = '[object Date]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            symbolTag = '[object Symbol]'

          var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]',
            float32Tag = '[object Float32Array]',
            float64Tag = '[object Float64Array]',
            int8Tag = '[object Int8Array]',
            int16Tag = '[object Int16Array]',
            int32Tag = '[object Int32Array]',
            uint8Tag = '[object Uint8Array]',
            uint8ClampedTag = '[object Uint8ClampedArray]',
            uint16Tag = '[object Uint16Array]',
            uint32Tag = '[object Uint32Array]'

          /**
           * Initializes an object clone based on its `toStringTag`.
           *
           * **Note:** This function only supports cloning values with tags of
           * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
           *
           * @private
           * @param {Object} object The object to clone.
           * @param {string} tag The `toStringTag` of the object to clone.
           * @param {boolean} [isDeep] Specify a deep clone.
           * @returns {Object} Returns the initialized clone.
           */
          function initCloneByTag(object, tag, isDeep) {
            var Ctor = object.constructor
            switch (tag) {
              case arrayBufferTag:
                return cloneArrayBuffer(object)

              case boolTag:
              case dateTag:
                return new Ctor(+object)

              case dataViewTag:
                return cloneDataView(object, isDeep)

              case float32Tag:
              case float64Tag:
              case int8Tag:
              case int16Tag:
              case int32Tag:
              case uint8Tag:
              case uint8ClampedTag:
              case uint16Tag:
              case uint32Tag:
                return cloneTypedArray(object, isDeep)

              case mapTag:
                return new Ctor()

              case numberTag:
              case stringTag:
                return new Ctor(object)

              case regexpTag:
                return cloneRegExp(object)

              case setTag:
                return new Ctor()

              case symbolTag:
                return cloneSymbol(object)
            }
          }

          module.exports = initCloneByTag

          /***/
        },

      /***/ '../../node_modules/lodash/_initCloneObject.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_initCloneObject.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseCreate = __webpack_require__(
              /*! ./_baseCreate */ '../../node_modules/lodash/_baseCreate.js'
            ),
            getPrototype = __webpack_require__(
              /*! ./_getPrototype */ '../../node_modules/lodash/_getPrototype.js'
            ),
            isPrototype = __webpack_require__(
              /*! ./_isPrototype */ '../../node_modules/lodash/_isPrototype.js'
            )

          /**
           * Initializes an object clone.
           *
           * @private
           * @param {Object} object The object to clone.
           * @returns {Object} Returns the initialized clone.
           */
          function initCloneObject(object) {
            return typeof object.constructor == 'function' &&
              !isPrototype(object)
              ? baseCreate(getPrototype(object))
              : {}
          }

          module.exports = initCloneObject

          /***/
        },

      /***/ '../../node_modules/lodash/_isIndex.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_isIndex.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /** Used as references for various `Number` constants. */
          var MAX_SAFE_INTEGER = 9007199254740991

          /** Used to detect unsigned integer values. */
          var reIsUint = /^(?:0|[1-9]\d*)$/

          /**
           * Checks if `value` is a valid array-like index.
           *
           * @private
           * @param {*} value The value to check.
           * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
           * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
           */
          function isIndex(value, length) {
            var type = typeof value
            length = length == null ? MAX_SAFE_INTEGER : length

            return (
              !!length &&
              (type == 'number' ||
                (type != 'symbol' && reIsUint.test(value))) &&
              (value > -1 && value % 1 == 0 && value < length)
            )
          }

          module.exports = isIndex

          /***/
        },

      /***/ '../../node_modules/lodash/_isKeyable.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_isKeyable.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Checks if `value` is suitable for use as unique object key.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
           */
          function isKeyable(value) {
            var type = typeof value
            return type == 'string' ||
              type == 'number' ||
              type == 'symbol' ||
              type == 'boolean'
              ? value !== '__proto__'
              : value === null
          }

          module.exports = isKeyable

          /***/
        },

      /***/ '../../node_modules/lodash/_isMasked.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_isMasked.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var coreJsData = __webpack_require__(
            /*! ./_coreJsData */ '../../node_modules/lodash/_coreJsData.js'
          )

          /** Used to detect methods masquerading as native. */
          var maskSrcKey = (function() {
            var uid = /[^.]+$/.exec(
              (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || ''
            )
            return uid ? 'Symbol(src)_1.' + uid : ''
          })()

          /**
           * Checks if `func` has its source masked.
           *
           * @private
           * @param {Function} func The function to check.
           * @returns {boolean} Returns `true` if `func` is masked, else `false`.
           */
          function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func
          }

          module.exports = isMasked

          /***/
        },

      /***/ '../../node_modules/lodash/_isPrototype.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_isPrototype.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /**
           * Checks if `value` is likely a prototype object.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
           */
          function isPrototype(value) {
            var Ctor = value && value.constructor,
              proto =
                (typeof Ctor == 'function' && Ctor.prototype) || objectProto

            return value === proto
          }

          module.exports = isPrototype

          /***/
        },

      /***/ '../../node_modules/lodash/_listCacheClear.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_listCacheClear.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Removes all key-value entries from the list cache.
           *
           * @private
           * @name clear
           * @memberOf ListCache
           */
          function listCacheClear() {
            this.__data__ = []
            this.size = 0
          }

          module.exports = listCacheClear

          /***/
        },

      /***/ '../../node_modules/lodash/_listCacheDelete.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_listCacheDelete.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var assocIndexOf = __webpack_require__(
            /*! ./_assocIndexOf */ '../../node_modules/lodash/_assocIndexOf.js'
          )

          /** Used for built-in method references. */
          var arrayProto = Array.prototype

          /** Built-in value references. */
          var splice = arrayProto.splice

          /**
           * Removes `key` and its value from the list cache.
           *
           * @private
           * @name delete
           * @memberOf ListCache
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */
          function listCacheDelete(key) {
            var data = this.__data__,
              index = assocIndexOf(data, key)

            if (index < 0) {
              return false
            }
            var lastIndex = data.length - 1
            if (index == lastIndex) {
              data.pop()
            } else {
              splice.call(data, index, 1)
            }
            --this.size
            return true
          }

          module.exports = listCacheDelete

          /***/
        },

      /***/ '../../node_modules/lodash/_listCacheGet.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_listCacheGet.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var assocIndexOf = __webpack_require__(
            /*! ./_assocIndexOf */ '../../node_modules/lodash/_assocIndexOf.js'
          )

          /**
           * Gets the list cache value for `key`.
           *
           * @private
           * @name get
           * @memberOf ListCache
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */
          function listCacheGet(key) {
            var data = this.__data__,
              index = assocIndexOf(data, key)

            return index < 0 ? undefined : data[index][1]
          }

          module.exports = listCacheGet

          /***/
        },

      /***/ '../../node_modules/lodash/_listCacheHas.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_listCacheHas.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var assocIndexOf = __webpack_require__(
            /*! ./_assocIndexOf */ '../../node_modules/lodash/_assocIndexOf.js'
          )

          /**
           * Checks if a list cache value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf ListCache
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */
          function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1
          }

          module.exports = listCacheHas

          /***/
        },

      /***/ '../../node_modules/lodash/_listCacheSet.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_listCacheSet.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var assocIndexOf = __webpack_require__(
            /*! ./_assocIndexOf */ '../../node_modules/lodash/_assocIndexOf.js'
          )

          /**
           * Sets the list cache `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf ListCache
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the list cache instance.
           */
          function listCacheSet(key, value) {
            var data = this.__data__,
              index = assocIndexOf(data, key)

            if (index < 0) {
              ++this.size
              data.push([key, value])
            } else {
              data[index][1] = value
            }
            return this
          }

          module.exports = listCacheSet

          /***/
        },

      /***/ '../../node_modules/lodash/_mapCacheClear.js':
        /*!*******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_mapCacheClear.js ***!
  \*******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Hash = __webpack_require__(
              /*! ./_Hash */ '../../node_modules/lodash/_Hash.js'
            ),
            ListCache = __webpack_require__(
              /*! ./_ListCache */ '../../node_modules/lodash/_ListCache.js'
            ),
            Map = __webpack_require__(
              /*! ./_Map */ '../../node_modules/lodash/_Map.js'
            )

          /**
           * Removes all key-value entries from the map.
           *
           * @private
           * @name clear
           * @memberOf MapCache
           */
          function mapCacheClear() {
            this.size = 0
            this.__data__ = {
              hash: new Hash(),
              map: new (Map || ListCache)(),
              string: new Hash()
            }
          }

          module.exports = mapCacheClear

          /***/
        },

      /***/ '../../node_modules/lodash/_mapCacheDelete.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_mapCacheDelete.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getMapData = __webpack_require__(
            /*! ./_getMapData */ '../../node_modules/lodash/_getMapData.js'
          )

          /**
           * Removes `key` and its value from the map.
           *
           * @private
           * @name delete
           * @memberOf MapCache
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */
          function mapCacheDelete(key) {
            var result = getMapData(this, key)['delete'](key)
            this.size -= result ? 1 : 0
            return result
          }

          module.exports = mapCacheDelete

          /***/
        },

      /***/ '../../node_modules/lodash/_mapCacheGet.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_mapCacheGet.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getMapData = __webpack_require__(
            /*! ./_getMapData */ '../../node_modules/lodash/_getMapData.js'
          )

          /**
           * Gets the map value for `key`.
           *
           * @private
           * @name get
           * @memberOf MapCache
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */
          function mapCacheGet(key) {
            return getMapData(this, key).get(key)
          }

          module.exports = mapCacheGet

          /***/
        },

      /***/ '../../node_modules/lodash/_mapCacheHas.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_mapCacheHas.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getMapData = __webpack_require__(
            /*! ./_getMapData */ '../../node_modules/lodash/_getMapData.js'
          )

          /**
           * Checks if a map value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf MapCache
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */
          function mapCacheHas(key) {
            return getMapData(this, key).has(key)
          }

          module.exports = mapCacheHas

          /***/
        },

      /***/ '../../node_modules/lodash/_mapCacheSet.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_mapCacheSet.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getMapData = __webpack_require__(
            /*! ./_getMapData */ '../../node_modules/lodash/_getMapData.js'
          )

          /**
           * Sets the map `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf MapCache
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the map cache instance.
           */
          function mapCacheSet(key, value) {
            var data = getMapData(this, key),
              size = data.size

            data.set(key, value)
            this.size += data.size == size ? 0 : 1
            return this
          }

          module.exports = mapCacheSet

          /***/
        },

      /***/ '../../node_modules/lodash/_nativeCreate.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_nativeCreate.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var getNative = __webpack_require__(
            /*! ./_getNative */ '../../node_modules/lodash/_getNative.js'
          )

          /* Built-in method references that are verified to be native. */
          var nativeCreate = getNative(Object, 'create')

          module.exports = nativeCreate

          /***/
        },

      /***/ '../../node_modules/lodash/_nativeKeys.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_nativeKeys.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var overArg = __webpack_require__(
            /*! ./_overArg */ '../../node_modules/lodash/_overArg.js'
          )

          /* Built-in method references for those with the same name as other `lodash` methods. */
          var nativeKeys = overArg(Object.keys, Object)

          module.exports = nativeKeys

          /***/
        },

      /***/ '../../node_modules/lodash/_nativeKeysIn.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_nativeKeysIn.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * This function is like
           * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
           * except that it includes inherited enumerable properties.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function nativeKeysIn(object) {
            var result = []
            if (object != null) {
              for (var key in Object(object)) {
                result.push(key)
              }
            }
            return result
          }

          module.exports = nativeKeysIn

          /***/
        },

      /***/ '../../node_modules/lodash/_nodeUtil.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_nodeUtil.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /* WEBPACK VAR INJECTION */ ;(function(module) {
            var freeGlobal = __webpack_require__(
              /*! ./_freeGlobal */ '../../node_modules/lodash/_freeGlobal.js'
            )

            /** Detect free variable `exports`. */
            var freeExports = true && exports && !exports.nodeType && exports

            /** Detect free variable `module`. */
            var freeModule =
              freeExports &&
              typeof module == 'object' &&
              module &&
              !module.nodeType &&
              module

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports

            /** Detect free variable `process` from Node.js. */
            var freeProcess = moduleExports && freeGlobal.process

            /** Used to access faster Node.js helpers. */
            var nodeUtil = (function() {
              try {
                // Use `util.types` for Node.js 10+.
                var types =
                  freeModule &&
                  freeModule.require &&
                  freeModule.require('util').types

                if (types) {
                  return types
                }

                // Legacy `process.binding('util')` for Node.js < 10.
                return (
                  freeProcess &&
                  freeProcess.binding &&
                  freeProcess.binding('util')
                )
              } catch (e) {}
            })()

            module.exports = nodeUtil

            /* WEBPACK VAR INJECTION */
          }.call(
            this,
            __webpack_require__(
              /*! ./../webpack/buildin/module.js */ '../../node_modules/webpack/buildin/module.js'
            )(module)
          ))

          /***/
        },

      /***/ '../../node_modules/lodash/_objectToString.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_objectToString.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /**
           * Used to resolve the
           * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
           * of values.
           */
          var nativeObjectToString = objectProto.toString

          /**
           * Converts `value` to a string using `Object.prototype.toString`.
           *
           * @private
           * @param {*} value The value to convert.
           * @returns {string} Returns the converted string.
           */
          function objectToString(value) {
            return nativeObjectToString.call(value)
          }

          module.exports = objectToString

          /***/
        },

      /***/ '../../node_modules/lodash/_overArg.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_overArg.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Creates a unary function that invokes `func` with its argument transformed.
           *
           * @private
           * @param {Function} func The function to wrap.
           * @param {Function} transform The argument transform.
           * @returns {Function} Returns the new function.
           */
          function overArg(func, transform) {
            return function(arg) {
              return func(transform(arg))
            }
          }

          module.exports = overArg

          /***/
        },

      /***/ '../../node_modules/lodash/_root.js':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_root.js ***!
  \**********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var freeGlobal = __webpack_require__(
            /*! ./_freeGlobal */ '../../node_modules/lodash/_freeGlobal.js'
          )

          /** Detect free variable `self`. */
          var freeSelf =
            typeof self == 'object' && self && self.Object === Object && self

          /** Used as a reference to the global object. */
          var root = freeGlobal || freeSelf || Function('return this')()

          module.exports = root

          /***/
        },

      /***/ '../../node_modules/lodash/_stackClear.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_stackClear.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var ListCache = __webpack_require__(
            /*! ./_ListCache */ '../../node_modules/lodash/_ListCache.js'
          )

          /**
           * Removes all key-value entries from the stack.
           *
           * @private
           * @name clear
           * @memberOf Stack
           */
          function stackClear() {
            this.__data__ = new ListCache()
            this.size = 0
          }

          module.exports = stackClear

          /***/
        },

      /***/ '../../node_modules/lodash/_stackDelete.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_stackDelete.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Removes `key` and its value from the stack.
           *
           * @private
           * @name delete
           * @memberOf Stack
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */
          function stackDelete(key) {
            var data = this.__data__,
              result = data['delete'](key)

            this.size = data.size
            return result
          }

          module.exports = stackDelete

          /***/
        },

      /***/ '../../node_modules/lodash/_stackGet.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_stackGet.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Gets the stack value for `key`.
           *
           * @private
           * @name get
           * @memberOf Stack
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */
          function stackGet(key) {
            return this.__data__.get(key)
          }

          module.exports = stackGet

          /***/
        },

      /***/ '../../node_modules/lodash/_stackHas.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_stackHas.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Checks if a stack value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf Stack
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */
          function stackHas(key) {
            return this.__data__.has(key)
          }

          module.exports = stackHas

          /***/
        },

      /***/ '../../node_modules/lodash/_stackSet.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_stackSet.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var ListCache = __webpack_require__(
              /*! ./_ListCache */ '../../node_modules/lodash/_ListCache.js'
            ),
            Map = __webpack_require__(
              /*! ./_Map */ '../../node_modules/lodash/_Map.js'
            ),
            MapCache = __webpack_require__(
              /*! ./_MapCache */ '../../node_modules/lodash/_MapCache.js'
            )

          /** Used as the size to enable large array optimizations. */
          var LARGE_ARRAY_SIZE = 200

          /**
           * Sets the stack `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf Stack
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the stack cache instance.
           */
          function stackSet(key, value) {
            var data = this.__data__
            if (data instanceof ListCache) {
              var pairs = data.__data__
              if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                pairs.push([key, value])
                this.size = ++data.size
                return this
              }
              data = this.__data__ = new MapCache(pairs)
            }
            data.set(key, value)
            this.size = data.size
            return this
          }

          module.exports = stackSet

          /***/
        },

      /***/ '../../node_modules/lodash/_toSource.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/_toSource.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /** Used for built-in method references. */
          var funcProto = Function.prototype

          /** Used to resolve the decompiled source of functions. */
          var funcToString = funcProto.toString

          /**
           * Converts `func` to its source code.
           *
           * @private
           * @param {Function} func The function to convert.
           * @returns {string} Returns the source code.
           */
          function toSource(func) {
            if (func != null) {
              try {
                return funcToString.call(func)
              } catch (e) {}
              try {
                return func + ''
              } catch (e) {}
            }
            return ''
          }

          module.exports = toSource

          /***/
        },

      /***/ '../../node_modules/lodash/cloneDeep.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/cloneDeep.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseClone = __webpack_require__(
            /*! ./_baseClone */ '../../node_modules/lodash/_baseClone.js'
          )

          /** Used to compose bitmasks for cloning. */
          var CLONE_DEEP_FLAG = 1,
            CLONE_SYMBOLS_FLAG = 4

          /**
           * This method is like `_.clone` except that it recursively clones `value`.
           *
           * @static
           * @memberOf _
           * @since 1.0.0
           * @category Lang
           * @param {*} value The value to recursively clone.
           * @returns {*} Returns the deep cloned value.
           * @see _.clone
           * @example
           *
           * var objects = [{ 'a': 1 }, { 'b': 2 }];
           *
           * var deep = _.cloneDeep(objects);
           * console.log(deep[0] === objects[0]);
           * // => false
           */
          function cloneDeep(value) {
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG)
          }

          module.exports = cloneDeep

          /***/
        },

      /***/ '../../node_modules/lodash/eq.js':
        /*!*******************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/eq.js ***!
  \*******************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Performs a
           * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * comparison between two values to determine if they are equivalent.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
           * @example
           *
           * var object = { 'a': 1 };
           * var other = { 'a': 1 };
           *
           * _.eq(object, object);
           * // => true
           *
           * _.eq(object, other);
           * // => false
           *
           * _.eq('a', 'a');
           * // => true
           *
           * _.eq('a', Object('a'));
           * // => false
           *
           * _.eq(NaN, NaN);
           * // => true
           */
          function eq(value, other) {
            return value === other || (value !== value && other !== other)
          }

          module.exports = eq

          /***/
        },

      /***/ '../../node_modules/lodash/isArguments.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isArguments.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseIsArguments = __webpack_require__(
              /*! ./_baseIsArguments */ '../../node_modules/lodash/_baseIsArguments.js'
            ),
            isObjectLike = __webpack_require__(
              /*! ./isObjectLike */ '../../node_modules/lodash/isObjectLike.js'
            )

          /** Used for built-in method references. */
          var objectProto = Object.prototype

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /** Built-in value references. */
          var propertyIsEnumerable = objectProto.propertyIsEnumerable

          /**
           * Checks if `value` is likely an `arguments` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an `arguments` object,
           *  else `false`.
           * @example
           *
           * _.isArguments(function() { return arguments; }());
           * // => true
           *
           * _.isArguments([1, 2, 3]);
           * // => false
           */
          var isArguments = baseIsArguments(
            (function() {
              return arguments
            })()
          )
            ? baseIsArguments
            : function(value) {
                return (
                  isObjectLike(value) &&
                  hasOwnProperty.call(value, 'callee') &&
                  !propertyIsEnumerable.call(value, 'callee')
                )
              }

          module.exports = isArguments

          /***/
        },

      /***/ '../../node_modules/lodash/isArray.js':
        /*!************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isArray.js ***!
  \************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Checks if `value` is classified as an `Array` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array, else `false`.
           * @example
           *
           * _.isArray([1, 2, 3]);
           * // => true
           *
           * _.isArray(document.body.children);
           * // => false
           *
           * _.isArray('abc');
           * // => false
           *
           * _.isArray(_.noop);
           * // => false
           */
          var isArray = Array.isArray

          module.exports = isArray

          /***/
        },

      /***/ '../../node_modules/lodash/isArrayLike.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isArrayLike.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var isFunction = __webpack_require__(
              /*! ./isFunction */ '../../node_modules/lodash/isFunction.js'
            ),
            isLength = __webpack_require__(
              /*! ./isLength */ '../../node_modules/lodash/isLength.js'
            )

          /**
           * Checks if `value` is array-like. A value is considered array-like if it's
           * not a function and has a `value.length` that's an integer greater than or
           * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
           * @example
           *
           * _.isArrayLike([1, 2, 3]);
           * // => true
           *
           * _.isArrayLike(document.body.children);
           * // => true
           *
           * _.isArrayLike('abc');
           * // => true
           *
           * _.isArrayLike(_.noop);
           * // => false
           */
          function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value)
          }

          module.exports = isArrayLike

          /***/
        },

      /***/ '../../node_modules/lodash/isBuffer.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isBuffer.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /* WEBPACK VAR INJECTION */ ;(function(module) {
            var root = __webpack_require__(
                /*! ./_root */ '../../node_modules/lodash/_root.js'
              ),
              stubFalse = __webpack_require__(
                /*! ./stubFalse */ '../../node_modules/lodash/stubFalse.js'
              )

            /** Detect free variable `exports`. */
            var freeExports = true && exports && !exports.nodeType && exports

            /** Detect free variable `module`. */
            var freeModule =
              freeExports &&
              typeof module == 'object' &&
              module &&
              !module.nodeType &&
              module

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports

            /** Built-in value references. */
            var Buffer = moduleExports ? root.Buffer : undefined

            /* Built-in method references for those with the same name as other `lodash` methods. */
            var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined

            /**
             * Checks if `value` is a buffer.
             *
             * @static
             * @memberOf _
             * @since 4.3.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
             * @example
             *
             * _.isBuffer(new Buffer(2));
             * // => true
             *
             * _.isBuffer(new Uint8Array(2));
             * // => false
             */
            var isBuffer = nativeIsBuffer || stubFalse

            module.exports = isBuffer

            /* WEBPACK VAR INJECTION */
          }.call(
            this,
            __webpack_require__(
              /*! ./../webpack/buildin/module.js */ '../../node_modules/webpack/buildin/module.js'
            )(module)
          ))

          /***/
        },

      /***/ '../../node_modules/lodash/isFunction.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isFunction.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseGetTag = __webpack_require__(
              /*! ./_baseGetTag */ '../../node_modules/lodash/_baseGetTag.js'
            ),
            isObject = __webpack_require__(
              /*! ./isObject */ '../../node_modules/lodash/isObject.js'
            )

          /** `Object#toString` result references. */
          var asyncTag = '[object AsyncFunction]',
            funcTag = '[object Function]',
            genTag = '[object GeneratorFunction]',
            proxyTag = '[object Proxy]'

          /**
           * Checks if `value` is classified as a `Function` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a function, else `false`.
           * @example
           *
           * _.isFunction(_);
           * // => true
           *
           * _.isFunction(/abc/);
           * // => false
           */
          function isFunction(value) {
            if (!isObject(value)) {
              return false
            }
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 9 which returns 'object' for typed arrays and other constructors.
            var tag = baseGetTag(value)
            return (
              tag == funcTag ||
              tag == genTag ||
              tag == asyncTag ||
              tag == proxyTag
            )
          }

          module.exports = isFunction

          /***/
        },

      /***/ '../../node_modules/lodash/isLength.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isLength.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /** Used as references for various `Number` constants. */
          var MAX_SAFE_INTEGER = 9007199254740991

          /**
           * Checks if `value` is a valid array-like length.
           *
           * **Note:** This method is loosely based on
           * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
           * @example
           *
           * _.isLength(3);
           * // => true
           *
           * _.isLength(Number.MIN_VALUE);
           * // => false
           *
           * _.isLength(Infinity);
           * // => false
           *
           * _.isLength('3');
           * // => false
           */
          function isLength(value) {
            return (
              typeof value == 'number' &&
              value > -1 &&
              value % 1 == 0 &&
              value <= MAX_SAFE_INTEGER
            )
          }

          module.exports = isLength

          /***/
        },

      /***/ '../../node_modules/lodash/isMap.js':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isMap.js ***!
  \**********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseIsMap = __webpack_require__(
              /*! ./_baseIsMap */ '../../node_modules/lodash/_baseIsMap.js'
            ),
            baseUnary = __webpack_require__(
              /*! ./_baseUnary */ '../../node_modules/lodash/_baseUnary.js'
            ),
            nodeUtil = __webpack_require__(
              /*! ./_nodeUtil */ '../../node_modules/lodash/_nodeUtil.js'
            )

          /* Node.js helper references. */
          var nodeIsMap = nodeUtil && nodeUtil.isMap

          /**
           * Checks if `value` is classified as a `Map` object.
           *
           * @static
           * @memberOf _
           * @since 4.3.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a map, else `false`.
           * @example
           *
           * _.isMap(new Map);
           * // => true
           *
           * _.isMap(new WeakMap);
           * // => false
           */
          var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap

          module.exports = isMap

          /***/
        },

      /***/ '../../node_modules/lodash/isObject.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isObject.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Checks if `value` is the
           * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
           * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an object, else `false`.
           * @example
           *
           * _.isObject({});
           * // => true
           *
           * _.isObject([1, 2, 3]);
           * // => true
           *
           * _.isObject(_.noop);
           * // => true
           *
           * _.isObject(null);
           * // => false
           */
          function isObject(value) {
            var type = typeof value
            return value != null && (type == 'object' || type == 'function')
          }

          module.exports = isObject

          /***/
        },

      /***/ '../../node_modules/lodash/isObjectLike.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isObjectLike.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Checks if `value` is object-like. A value is object-like if it's not `null`
           * and has a `typeof` result of "object".
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
           * @example
           *
           * _.isObjectLike({});
           * // => true
           *
           * _.isObjectLike([1, 2, 3]);
           * // => true
           *
           * _.isObjectLike(_.noop);
           * // => false
           *
           * _.isObjectLike(null);
           * // => false
           */
          function isObjectLike(value) {
            return value != null && typeof value == 'object'
          }

          module.exports = isObjectLike

          /***/
        },

      /***/ '../../node_modules/lodash/isPlainObject.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isPlainObject.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseGetTag = __webpack_require__(
              /*! ./_baseGetTag */ '../../node_modules/lodash/_baseGetTag.js'
            ),
            getPrototype = __webpack_require__(
              /*! ./_getPrototype */ '../../node_modules/lodash/_getPrototype.js'
            ),
            isObjectLike = __webpack_require__(
              /*! ./isObjectLike */ '../../node_modules/lodash/isObjectLike.js'
            )

          /** `Object#toString` result references. */
          var objectTag = '[object Object]'

          /** Used for built-in method references. */
          var funcProto = Function.prototype,
            objectProto = Object.prototype

          /** Used to resolve the decompiled source of functions. */
          var funcToString = funcProto.toString

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty

          /** Used to infer the `Object` constructor. */
          var objectCtorString = funcToString.call(Object)

          /**
           * Checks if `value` is a plain object, that is, an object created by the
           * `Object` constructor or one with a `[[Prototype]]` of `null`.
           *
           * @static
           * @memberOf _
           * @since 0.8.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           * }
           *
           * _.isPlainObject(new Foo);
           * // => false
           *
           * _.isPlainObject([1, 2, 3]);
           * // => false
           *
           * _.isPlainObject({ 'x': 0, 'y': 0 });
           * // => true
           *
           * _.isPlainObject(Object.create(null));
           * // => true
           */
          function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
              return false
            }
            var proto = getPrototype(value)
            if (proto === null) {
              return true
            }
            var Ctor =
              hasOwnProperty.call(proto, 'constructor') && proto.constructor
            return (
              typeof Ctor == 'function' &&
              Ctor instanceof Ctor &&
              funcToString.call(Ctor) == objectCtorString
            )
          }

          module.exports = isPlainObject

          /***/
        },

      /***/ '../../node_modules/lodash/isSet.js':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isSet.js ***!
  \**********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseIsSet = __webpack_require__(
              /*! ./_baseIsSet */ '../../node_modules/lodash/_baseIsSet.js'
            ),
            baseUnary = __webpack_require__(
              /*! ./_baseUnary */ '../../node_modules/lodash/_baseUnary.js'
            ),
            nodeUtil = __webpack_require__(
              /*! ./_nodeUtil */ '../../node_modules/lodash/_nodeUtil.js'
            )

          /* Node.js helper references. */
          var nodeIsSet = nodeUtil && nodeUtil.isSet

          /**
           * Checks if `value` is classified as a `Set` object.
           *
           * @static
           * @memberOf _
           * @since 4.3.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a set, else `false`.
           * @example
           *
           * _.isSet(new Set);
           * // => true
           *
           * _.isSet(new WeakSet);
           * // => false
           */
          var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet

          module.exports = isSet

          /***/
        },

      /***/ '../../node_modules/lodash/isTypedArray.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/isTypedArray.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var baseIsTypedArray = __webpack_require__(
              /*! ./_baseIsTypedArray */ '../../node_modules/lodash/_baseIsTypedArray.js'
            ),
            baseUnary = __webpack_require__(
              /*! ./_baseUnary */ '../../node_modules/lodash/_baseUnary.js'
            ),
            nodeUtil = __webpack_require__(
              /*! ./_nodeUtil */ '../../node_modules/lodash/_nodeUtil.js'
            )

          /* Node.js helper references. */
          var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray

          /**
           * Checks if `value` is classified as a typed array.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
           * @example
           *
           * _.isTypedArray(new Uint8Array);
           * // => true
           *
           * _.isTypedArray([]);
           * // => false
           */
          var isTypedArray = nodeIsTypedArray
            ? baseUnary(nodeIsTypedArray)
            : baseIsTypedArray

          module.exports = isTypedArray

          /***/
        },

      /***/ '../../node_modules/lodash/keys.js':
        /*!*********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/keys.js ***!
  \*********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var arrayLikeKeys = __webpack_require__(
              /*! ./_arrayLikeKeys */ '../../node_modules/lodash/_arrayLikeKeys.js'
            ),
            baseKeys = __webpack_require__(
              /*! ./_baseKeys */ '../../node_modules/lodash/_baseKeys.js'
            ),
            isArrayLike = __webpack_require__(
              /*! ./isArrayLike */ '../../node_modules/lodash/isArrayLike.js'
            )

          /**
           * Creates an array of the own enumerable property names of `object`.
           *
           * **Note:** Non-object values are coerced to objects. See the
           * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
           * for more details.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.keys(new Foo);
           * // => ['a', 'b'] (iteration order is not guaranteed)
           *
           * _.keys('hi');
           * // => ['0', '1']
           */
          function keys(object) {
            return isArrayLike(object)
              ? arrayLikeKeys(object)
              : baseKeys(object)
          }

          module.exports = keys

          /***/
        },

      /***/ '../../node_modules/lodash/keysIn.js':
        /*!***********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/keysIn.js ***!
  \***********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var arrayLikeKeys = __webpack_require__(
              /*! ./_arrayLikeKeys */ '../../node_modules/lodash/_arrayLikeKeys.js'
            ),
            baseKeysIn = __webpack_require__(
              /*! ./_baseKeysIn */ '../../node_modules/lodash/_baseKeysIn.js'
            ),
            isArrayLike = __webpack_require__(
              /*! ./isArrayLike */ '../../node_modules/lodash/isArrayLike.js'
            )

          /**
           * Creates an array of the own and inherited enumerable property names of `object`.
           *
           * **Note:** Non-object values are coerced to objects.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.keysIn(new Foo);
           * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
           */
          function keysIn(object) {
            return isArrayLike(object)
              ? arrayLikeKeys(object, true)
              : baseKeysIn(object)
          }

          module.exports = keysIn

          /***/
        },

      /***/ '../../node_modules/lodash/stubArray.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/stubArray.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * This method returns a new empty array.
           *
           * @static
           * @memberOf _
           * @since 4.13.0
           * @category Util
           * @returns {Array} Returns the new empty array.
           * @example
           *
           * var arrays = _.times(2, _.stubArray);
           *
           * console.log(arrays);
           * // => [[], []]
           *
           * console.log(arrays[0] === arrays[1]);
           * // => false
           */
          function stubArray() {
            return []
          }

          module.exports = stubArray

          /***/
        },

      /***/ '../../node_modules/lodash/stubFalse.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/lodash/stubFalse.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * This method returns `false`.
           *
           * @static
           * @memberOf _
           * @since 4.13.0
           * @category Util
           * @returns {boolean} Returns `false`.
           * @example
           *
           * _.times(2, _.stubFalse);
           * // => [false, false]
           */
          function stubFalse() {
            return false
          }

          module.exports = stubFalse

          /***/
        },

      /***/ '../../node_modules/map-stream/index.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/map-stream/index.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          //filter will reemit the data if cb(err,pass) pass is truthy

          // reduce is more tricky
          // maybe we want to group the reductions or emit progress updates occasionally
          // the most basic reduce just emits one 'data' event after it has recieved 'end'

          var Stream = __webpack_require__(/*! stream */ 'stream').Stream

          //create an event stream and apply function to each .write
          //emitting each response as data
          //unless it's an empty callback

          module.exports = function(mapper, opts) {
            var stream = new Stream(),
              inputs = 0,
              outputs = 0,
              ended = false,
              paused = false,
              destroyed = false,
              lastWritten = 0,
              inNext = false

            opts = opts || {}
            var errorEventName = opts.failures ? 'failure' : 'error'

            // Items that are not ready to be written yet (because they would come out of
            // order) get stuck in a queue for later.
            var writeQueue = {}

            stream.writable = true
            stream.readable = true

            function queueData(data, number) {
              var nextToWrite = lastWritten + 1

              if (number === nextToWrite) {
                // If it's next, and its not undefined write it
                if (data !== undefined) {
                  stream.emit.apply(stream, ['data', data])
                }
                lastWritten++
                nextToWrite++
              } else {
                // Otherwise queue it for later.
                writeQueue[number] = data
              }

              // If the next value is in the queue, write it
              if (writeQueue.hasOwnProperty(nextToWrite)) {
                var dataToWrite = writeQueue[nextToWrite]
                delete writeQueue[nextToWrite]
                return queueData(dataToWrite, nextToWrite)
              }

              outputs++
              if (inputs === outputs) {
                if (paused) (paused = false), stream.emit('drain') //written all the incoming events
                if (ended) end()
              }
            }

            function next(err, data, number) {
              if (destroyed) return
              inNext = true

              if (!err || opts.failures) {
                queueData(data, number)
              }

              if (err) {
                stream.emit.apply(stream, [errorEventName, err])
              }

              inNext = false
            }

            // Wrap the mapper function by calling its callback with the order number of
            // the item in the stream.
            function wrappedMapper(input, number, callback) {
              return mapper.call(null, input, function(err, data) {
                callback(err, data, number)
              })
            }

            stream.write = function(data) {
              if (ended) throw new Error('map stream is not writable')
              inNext = false
              inputs++

              try {
                //catch sync errors and handle them like async errors
                var written = wrappedMapper(data, inputs, next)
                paused = written === false
                return !paused
              } catch (err) {
                //if the callback has been called syncronously, and the error
                //has occured in an listener, throw it again.
                if (inNext) throw err
                next(err)
                return !paused
              }
            }

            function end(data) {
              //if end was called with args, write it,
              ended = true //write will emit 'end' if ended is true
              stream.writable = false
              if (data !== undefined) {
                return queueData(data, inputs)
              } else if (inputs == outputs) {
                //wait for processing
                ;(stream.readable = false), stream.emit('end'), stream.destroy()
              }
            }

            stream.end = function(data) {
              if (ended) return
              end(data)
            }

            stream.destroy = function() {
              ended = destroyed = true
              stream.writable = stream.readable = paused = false
              process.nextTick(function() {
                stream.emit('close')
              })
            }
            stream.pause = function() {
              paused = true
            }

            stream.resume = function() {
              paused = false
            }

            return stream
          }

          /***/
        },

      /***/ '../../node_modules/meetup-api/index.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/meetup-api/index.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          exports = module.exports = __webpack_require__(
            /*! ./lib/meetup.js */ '../../node_modules/meetup-api/lib/meetup.js'
          )

          /***/
        },

      /***/ '../../node_modules/meetup-api/lib sync recursive':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/meetup-api/lib sync ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          function webpackEmptyContext(req) {
            var e = new Error("Cannot find module '" + req + "'")
            e.code = 'MODULE_NOT_FOUND'
            throw e
          }
          webpackEmptyContext.keys = function() {
            return []
          }
          webpackEmptyContext.resolve = webpackEmptyContext
          module.exports = webpackEmptyContext
          webpackEmptyContext.id =
            '../../node_modules/meetup-api/lib sync recursive'

          /***/
        },

      /***/ '../../node_modules/meetup-api/lib/endpoints.json':
        /*!************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/meetup-api/lib/endpoints.json ***!
  \************************************************************************************/
        /*! exports provided: getStatus, getBoards, getDiscussions, getDiscussion, getCategories, postCheckin, getCities, getOpenEvents, getUpcomingEvents, getConcierge, getEvents, getEvent, postEvent, editEvent, deleteEvent, getEventComments, getEventComment, postEventComment, deleteEventComment, postEventCommentSubscribe, deleteEventCommentSubscribe, postEventCommentFlag, getEventCommentLikes, postEventCommentLike, deleteEventCommentLike, postEventsWatchlist, getEventPhotos, deleteEventsWatchlist, getEventRatings, postEventRating, getEventAttendance, takeEventAttendance, postEventPayments, getActivity, getGroups, getPROGroups, getGroup, editGroup, postGroupPhoto, findGroups, getRecommendedGroups, postRecommendedGroupsIgnore, postTopics, deleteTopics, getSimilarGroups, getComments, getMembers, getPROMembers, getMember, getMemberProfiles, editMember, postMemberPhoto, deleteMemberPhoto, getOEMBed, postPhoto, deletePhoto, getPhotoComments, postPhotoComment, getPhotoAlbums, postPhotoAlbum, getProfiles, getProfile, postProfiles, postProfile, editProfile, deleteProfile, membershipApproval, membershipDecline, postRSVP, getRSVPs, getEventRSVPs, postEventRSVPs, getRSVP, getOpenVenues, getVenues, findVenues, getRecommendedVenues, getTopics, findTopics, getTopicCategories, findTopicCategories, getRecommendedGroupTopics, dashboard, getNotifications, setNotificationsRead, getStreamRSVPs, getStreamOpenEvents, getStreamPhotos, getStreamEventComments, findLocations, getSelfEvents, getSelfCalendar, getSelfGroups, getHosts, default */
        /***/ function(module) {
          module.exports = {
            getStatus: {
              resource: 'https://api.meetup.com/status',
              method: 'get',
              test: { params: {}, return: { type: 'object', keys: ['status'] } }
            },
            getBoards: {
              resource: 'https://api.meetup.com/:urlname/boards',
              method: 'get',
              test: {
                params: { urlname: 'banodejs' },
                return: { type: 'array' }
              }
            },
            getDiscussions: {
              resource:
                'https://api.meetup.com/:urlname/boards/:bid/discussions',
              method: 'get'
            },
            getDiscussion: {
              resource:
                'https://api.meetup.com/:urlname/boards/:bid/discussions/:did',
              method: 'get'
            },
            getCategories: {
              resource: 'https://api.meetup.com/2/categories',
              method: 'get',
              test: {
                params: { page: '20' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            postCheckin: {
              resource: 'https://api.meetup.com/2/checkin',
              method: 'post'
            },
            getCities: {
              resource: 'https://api.meetup.com/2/cities',
              method: 'get',
              test: {
                params: { page: '20' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getOpenEvents: {
              resource: 'https://api.meetup.com/2/open_events',
              method: 'get',
              test: {
                params: { topic: 'javascript' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getUpcomingEvents: {
              resource: 'https://api.meetup.com/find/upcoming_events',
              method: 'get',
              test: {
                params: {},
                return: { type: 'object', keys: ['city', 'events'] }
              }
            },
            getConcierge: {
              resource: 'https://api.meetup.com/2/concierge',
              method: 'get',
              test: {
                params: { country: 'argentina' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getEvents: {
              resource: 'https://api.meetup.com/2/events',
              method: 'get',
              test: {
                params: { group_urlname: 'banodejs' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getEvent: {
              resource: 'https://api.meetup.com/:urlname/events/:id',
              method: 'get',
              test: {
                params: { urlname: 'banodejs', id: '221235192' },
                return: {
                  type: 'object',
                  keys: ['status', 'venue', 'id', 'group']
                }
              }
            },
            postEvent: {
              resource: 'https://api.meetup.com/2/event',
              method: 'post'
            },
            editEvent: {
              resource: 'https://api.meetup.com/2/event/:id',
              method: 'post'
            },
            deleteEvent: {
              resource: 'https://api.meetup.com/2/event/:id',
              method: 'delete'
            },
            getEventComments: {
              resource: 'https://api.meetup.com/2/event_comments',
              method: 'get',
              test: {
                params: { group_id: '18405217' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getEventComment: {
              resource: 'https://api.meetup.com/2/event_comment/:id',
              method: 'get',
              test: {
                params: { id: '469881308' },
                return: { type: 'object', keys: ['comment', 'event_id'] }
              }
            },
            postEventComment: {
              resource: 'https://api.meetup.com/2/event_comment',
              method: 'post'
            },
            deleteEventComment: {
              resource: 'https://api.meetup.com/2/event_comment/:id',
              method: 'delete'
            },
            postEventCommentSubscribe: {
              resource: 'https://api.meetup.com/2/event_comment_subscribe/:id',
              method: 'post'
            },
            deleteEventCommentSubscribe: {
              resource: 'https://api.meetup.com/2/event_comment_subscribe/:id',
              method: 'delete'
            },
            postEventCommentFlag: {
              resource: 'https://api.meetup.com/2/event_comment_flag',
              method: 'post'
            },
            getEventCommentLikes: {
              resource: 'https://api.meetup.com/2/event_comment_likes',
              method: 'get',
              test: {
                params: { comment_id: '113951632' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            postEventCommentLike: {
              resource: 'https://api.meetup.com/2/event_comment_like/:id',
              method: 'post'
            },
            deleteEventCommentLike: {
              resource: 'https://api.meetup.com/2/event_comment_like/:id',
              method: 'delete'
            },
            postEventsWatchlist: {
              resource: 'https://api.meetup.com/:urlname/events/:id/watchlist',
              method: 'post'
            },
            getEventPhotos: {
              resource: 'https://api.meetup.com/:urlname/events/:id/photos',
              method: 'get',
              test: {
                params: { urlname: 'ReactStuttgart', id: '233941914' },
                return: { type: 'array' }
              }
            },
            deleteEventsWatchlist: {
              resource: 'https://api.meetup.com/:urlname/events/:id/watchlist',
              method: 'delete'
            },
            getEventRatings: {
              resource: 'https://api.meetup.com/2/event_ratings',
              method: 'get',
              test: {
                params: { event_id: '221235192' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            postEventRating: {
              resource: 'https://api.meetup.com/2/event_rating',
              method: 'post'
            },
            getEventAttendance: {
              resource: 'https://api.meetup.com/:urlname/events/:id/attendance',
              method: 'get'
            },
            takeEventAttendance: {
              resource: 'https://api.meetup.com/:urlname/events/:id/attendance',
              method: 'post'
            },
            postEventPayments: {
              resource: 'https://api.meetup.com/:urlname/events/:id/payments',
              method: 'post'
            },
            getActivity: {
              resource: 'https://api.meetup.com/activity',
              method: 'get',
              test: {
                params: { page_start: '0' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getGroups: {
              resource: 'https://api.meetup.com/2/groups',
              method: 'get',
              test: {
                params: { group_id: '4603552' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getPROGroups: {
              resource: 'https://api.meetup.com/pro/:urlname/groups',
              method: 'get'
            },
            getGroup: {
              resource: 'https://api.meetup.com/:urlname',
              method: 'get',
              test: {
                params: { urlname: 'banodejs' },
                return: { type: 'object', keys: ['urlname', 'id'] }
              }
            },
            editGroup: {
              resource: 'https://api.meetup.com/:urlname',
              method: 'post'
            },
            postGroupPhoto: {
              resource: 'https://api.meetup.com/2/group_photo',
              method: 'post',
              multipart_photo: true
            },
            findGroups: {
              resource: 'https://api.meetup.com/find/groups',
              method: 'get',
              test: { params: { page: 1 }, return: { type: 'array' } }
            },
            getRecommendedGroups: {
              resource: 'https://api.meetup.com/recommended/groups',
              method: 'get',
              test: {
                params: { urlname: 'banodejs' },
                return: { type: 'array' }
              }
            },
            postRecommendedGroupsIgnore: {
              resource: ' /recommended/groups/ignores/:urlname',
              method: 'post'
            },
            postTopics: { resource: '/:urlname/topics', method: 'post' },
            deleteTopics: { resource: '/:urlname/topics', method: 'delete' },
            getSimilarGroups: {
              resource: 'https://api.meetup.com/:urlname/similar_groups',
              method: 'get',
              test: {
                params: { urlname: 'banodejs' },
                return: { type: 'array' }
              }
            },
            getComments: {
              resource: 'https://api.meetup.com/comments',
              method: 'get',
              test: {
                params: { group_id: '4603552' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getMembers: {
              resource: 'https://api.meetup.com/2/members',
              method: 'get',
              test: {
                params: { group_id: '4603552' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getPROMembers: {
              resource: 'https://api.meetup.com/pro/:urlname/members',
              method: 'get'
            },
            getMember: {
              resource: 'https://api.meetup.com/2/member/:id',
              method: 'get',
              test: {
                params: { id: '46861012' },
                return: { type: 'object', keys: ['id', 'name'] }
              }
            },
            getMemberProfiles: {
              resource: 'https://api.meetup.com/:urlname/members',
              method: 'get',
              test: {
                params: { urlname: 'banodejs' },
                return: { type: 'array' }
              }
            },
            editMember: {
              resource: 'https://api.meetup.com/2/member/:id',
              method: 'post'
            },
            postMemberPhoto: {
              resource: 'https://api.meetup.com/2/member_photo',
              method: 'post',
              multipart_photo: true
            },
            deleteMemberPhoto: {
              resource: 'https://api.meetup.com/2/member_photo/:id',
              method: 'delete'
            },
            getOEMBed: {
              resource: 'https://api.meetup.com/oembed',
              method: 'get',
              test: {
                params: {
                  url: 'http://www.meetup.com/banodejs/events/221235192/'
                },
                return: { type: 'object', keys: ['type', 'html'] }
              }
            },
            postPhoto: {
              resource: 'https://api.meetup.com/2/photo',
              method: 'post',
              multipart_photo: true
            },
            deletePhoto: {
              resource: 'https://api.meetup.com/2/photo/:id',
              method: 'delete'
            },
            getPhotoComments: {
              resource: 'https://api.meetup.com/2/photo_comments',
              method: 'get',
              test: {
                params: { photo_id: '12208722' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            postPhotoComment: {
              resource: 'https://api.meetup.com/2/photo_comment',
              method: 'post'
            },
            getPhotoAlbums: {
              resource: 'https://api.meetup.com/2/photo_albums',
              method: 'get',
              test: {
                params: { group_id: '4603552' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            postPhotoAlbum: {
              resource: 'https://api.meetup.com/2/photo_album',
              method: 'post'
            },
            getProfiles: {
              resource: 'https://api.meetup.com/2/profiles',
              method: 'get',
              test: {
                params: { group_id: '18405217' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getProfile: {
              resource: 'https://api.meetup.com/2/profile/:gid/:mid',
              method: 'get',
              test: {
                params: { gid: '18405217', mid: '46861012' },
                return: { type: 'object', keys: ['profile_url', 'member_id'] }
              }
            },
            postProfiles: {
              resource: 'https://api.meetup.com/2/profiles',
              method: 'post'
            },
            postProfile: {
              resource: 'https://api.meetup.com/2/profile',
              method: 'post'
            },
            editProfile: {
              resource: 'https://api.meetup.com/2/profile/:gid/:mid',
              method: 'post'
            },
            deleteProfile: {
              resource: 'https://api.meetup.com/2/profile/:gid/:mid',
              method: 'delete'
            },
            membershipApproval: {
              resource: 'https://api.meetup.com/:urlname/member/approvals',
              method: 'post'
            },
            membershipDecline: {
              resource: 'https://api.meetup.com/:urlname/member/approvals',
              method: 'delete'
            },
            postRSVP: {
              resource: 'https://api.meetup.com/2/rsvp',
              method: 'post'
            },
            getRSVPs: {
              resource: 'https://api.meetup.com/2/rsvps',
              method: 'get',
              test: {
                params: { event_id: '221235192' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getEventRSVPs: {
              resource:
                'https://api.meetup.com/:urlname/events/:event_id/rsvps',
              method: 'get',
              test: {
                params: { urlname: 'banodejs', event_id: '239365282' },
                return: { type: 'array' }
              }
            },
            postEventRSVPs: {
              resource:
                'https://api.meetup.com/:urlname/events/:event_id/rsvps',
              method: 'post'
            },
            getRSVP: {
              resource: 'https://api.meetup.com/2/rsvp/:id',
              method: 'get',
              test: {
                params: { id: '1541748484' },
                return: { type: 'object', keys: ['response', 'rsvp_id'] }
              }
            },
            getOpenVenues: {
              resource: 'https://api.meetup.com/2/open_venues',
              method: 'get',
              test: {
                params: { group_urlname: 'banodejs' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            getVenues: {
              resource: 'https://api.meetup.com/2/venues',
              method: 'get',
              test: {
                params: { group_urlname: 'banodejs' },
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            findVenues: {
              resource: 'https://api.meetup.com/find/venues',
              method: 'get',
              test: {
                params: { text: 'Buenos Aires' },
                return: { type: 'array' }
              }
            },
            getRecommendedVenues: {
              resource: 'https://api.meetup.com/recommended/venues',
              method: 'get',
              test: {
                params: { group_urlname: 'banodejs' },
                return: { type: 'array' }
              }
            },
            getTopics: {
              resource: 'https://api.meetup.com/topics',
              method: 'get',
              test: {
                params: {},
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            findTopics: {
              resource: 'https://api.meetup.com/find/topics',
              method: 'get',
              test: {
                params: { query: 'javascript' },
                return: { type: 'array' }
              }
            },
            getTopicCategories: {
              resource: 'https://api.meetup.com/2/topic_categories',
              method: 'get',
              test: {
                params: {},
                return: { type: 'object', keys: ['results', 'meta'] }
              }
            },
            findTopicCategories: {
              resource: 'https://api.meetup.com/find/topic_categories',
              method: 'get',
              test: { params: {}, return: { type: 'array' } }
            },
            getRecommendedGroupTopics: {
              resource: 'https://api.meetup.com/recommended/group_topics',
              method: 'get',
              test: {
                params: { text: 'javascript' },
                return: { type: 'array' }
              }
            },
            dashboard: {
              resource: 'https://api.meetup.com/dashboard',
              method: 'get',
              test: {
                params: { fields: 'stats' },
                return: { type: 'object', keys: ['stats'] }
              }
            },
            getNotifications: {
              resource: 'https://api.meetup.com/notifications',
              method: 'get',
              test: { params: {}, return: { type: 'array' } }
            },
            setNotificationsRead: {
              resource: 'https://api.meetup.com/notifications/read',
              method: 'post'
            },
            getStreamRSVPs: {
              resource: 'wss://stream.meetup.com/2/rsvps',
              method: 'get',
              test: {
                params: { since_mtime: '1294435118533' },
                return: { type: 'object', keys: ['response', 'member'] }
              }
            },
            getStreamOpenEvents: {
              resource: 'https://stream.meetup.com/2/open_events',
              method: 'get',
              chunked: true,
              test: {
                params: { since_mtime: '1294435118533' },
                return: { type: 'object', keys: ['event_url', 'id'] }
              }
            },
            getStreamPhotos: {
              resource: 'wss://stream.meetup.com/2/photos',
              method: 'get',
              test: {
                params: { since_mtime: '1294435118533' },
                return: { type: 'object', keys: ['photo_id', 'photo_link'] }
              }
            },
            getStreamEventComments: {
              resource: 'wss://stream.meetup.com/2/event_comments',
              method: 'get',
              test: {
                params: { since_mtime: '1294435118533' },
                return: { type: 'object', keys: ['id', 'member'] }
              }
            },
            findLocations: {
              resource: 'https://api.meetup.com/find/locations',
              method: 'get',
              test: {
                params: { lon: '-58.381592', lat: '-34.603722' },
                return: { type: 'array' }
              }
            },
            getSelfEvents: {
              resource: 'https://api.meetup.com/self/events',
              method: 'get',
              test: { params: {}, return: { type: 'array' } }
            },
            getSelfCalendar: {
              resource: 'https://api.meetup.com/self/calendar',
              method: 'get',
              test: { params: {}, return: { type: 'array' } }
            },
            getSelfGroups: {
              resource: 'https://api.meetup.com/self/groups',
              method: 'get',
              test: { params: {}, return: { type: 'array' } }
            },
            getHosts: {
              resource:
                'https://api.meetup.com/:urlname/events/:event_id/hosts',
              method: 'get',
              test: {
                params: { event_id: '239365282', urlname: 'banodejs' },
                return: { type: 'array' }
              }
            }
          }

          /***/
        },

      /***/ '../../node_modules/meetup-api/lib/meetup.js':
        /*!*******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/meetup-api/lib/meetup.js ***!
  \*******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*jslint node: true, maxcomplexity: 7 */

          /*
    Meetup.js - Node JS Meetup API library

    This library is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/

          /*
           * Module dependencies
           */

          const request = __webpack_require__(
              /*! superagent */ '../../node_modules/superagent/lib/node/index.js'
            ),
            websocket = __webpack_require__(
              /*! websocket-stream */ '../../node_modules/websocket-stream/index.js'
            ),
            JSONStream = __webpack_require__(
              /*! JSONStream */ '../../node_modules/JSONStream/index.js'
            ),
            evStream = __webpack_require__(
              /*! event-stream */ '../../node_modules/event-stream/index.js'
            ),
            URLfn = __webpack_require__(/*! url */ 'url'),
            endpoints = __webpack_require__(
              /*! ./endpoints.json */ '../../node_modules/meetup-api/lib/endpoints.json'
            ),
            packageJSON = __webpack_require__(
              /*! ../package.json */ '../../node_modules/meetup-api/package.json'
            ),
            Throttle = __webpack_require__(
              /*! superagent-throttle */ '../../node_modules/superagent-throttle/dist/index.js'
            ),
            requireOpt = __webpack_require__(
              /*! ./myUtils */ '../../node_modules/meetup-api/lib/myUtils.js'
            ).requireOpt

          /*
           * Optional module dependencies
           */
          const ProxyAgent = requireOpt('proxy-agent')['proxy-agent'],
            OAuth = requireOpt(['oauth', 'superagent-oauth'], modules => {
              return (
                (modules &&
                  modules['superagent-oauth'] &&
                  (modules['superagent-oauth'](request) || true) &&
                  modules.oauth) ||
                null
              )
            })

          /*
           *  Module private variables
           */

          let MeetupAPIkey, ProxyURI

          /*
           * Constructor
           *
           * @params
           *      {key} Meetup API key
           *      {oath}{key, secret} Meetup API oauth object
           * @return {Object} new instance
           */

          class Meetup {
            // Meetup contructor
            constructor(params) {
              // Assign Meetup auth data
              MeetupAPIkey = params && (params.key || params.oauth || null)
              Meetup.oauth = null
              Meetup.oauth2 = null
            }

            // create metadata properties
            get commands() {
              return Object.freeze(Object.keys(Meetup.prototype)) // delete this
            }
            get version() {
              return Object.freeze(packageJSON.version)
            }
            get name() {
              return Object.freeze(packageJSON.name)
            }
            get description() {
              return Object.freeze(packageJSON.description)
            }
            get dependencies() {
              return Object.freeze(packageJSON.dependencies)
            }
            get optionalDependencies() {
              return Object.freeze(packageJSON.optionalDependencies)
            }
            get repository() {
              return Object.freeze(packageJSON.repository)
            }
            get authkey() {
              return !!MeetupAPIkey
            }
            set authkey(auth) {
              MeetupAPIkey = auth || null
            }
            get proxy() {
              return !!(ProxyAgent && ProxyURI)
            }
            set proxy(uri) {
              ProxyURI = ProxyAgent && uri ? uri : null
            }

            [Symbol.iterator]() {
              let index = -1,
                commands = Object.keys(Meetup.prototype)
              return {
                next: () => ({
                  value: commands[++index],
                  done: index === commands.length
                })
              }
            }

            // OAUTH functions
            getOAuthRequestToken(callback) {
              let errMessage =
                MeetupAPIkey && MeetupAPIkey.key && MeetupAPIkey.secret
                  ? null
                  : 'No OAuth Keys'
              errMessage = OAuth ? errMessage : 'No OAuth support'

              if (errMessage) {
                callback(
                  {
                    message: errMessage
                  },
                  null
                )
              } else {
                Meetup.oauth = new OAuth.OAuth(
                  'https://api.meetup.com/oauth/request/',
                  'https://api.meetup.com/oauth/access/',
                  MeetupAPIkey.key,
                  MeetupAPIkey.secret,
                  '1.0',
                  null,
                  'HMAC-SHA1'
                )

                return Meetup.oauth.getOAuthRequestToken(
                  {},
                  (error, oauth_token, oauth_token_secret) => {
                    let authorizeURL = null
                    if (!error) {
                      MeetupAPIkey.oauth_token = oauth_token
                      MeetupAPIkey.oauth_token_secret = oauth_token_secret
                      authorizeURL =
                        'http://www.meetup.com/authorize/?oauth_token=' +
                        oauth_token
                    }
                    callback(error, authorizeURL)
                  }
                )
              }
            }

            getOAuthAccessToken(oauth_verifier, callback) {
              return Meetup.oauth.getOAuthAccessToken(
                MeetupAPIkey.oauth_token,
                MeetupAPIkey.oauth_token_secret,
                oauth_verifier,
                (error, access_token, access_token_secret) => {
                  if (error) {
                    callback(error)
                  } else {
                    MeetupAPIkey.access_token = access_token
                    MeetupAPIkey.access_token_secret = access_token_secret
                    callback(null)
                  }
                }
              )
            }

            getOAuth2RequestToken(params, callback) {
              let errMessage = OAuth
                ? MeetupAPIkey && MeetupAPIkey.key && MeetupAPIkey.secret
                  ? null
                  : 'No OAuth Keys'
                : 'No OAuth support'

              if (errMessage) {
                callback(
                  {
                    message: errMessage
                  },
                  null
                )
              } else {
                Meetup.oauth2 = new OAuth.OAuth2(
                  MeetupAPIkey.key,
                  MeetupAPIkey.secret,
                  'https://secure.meetup.com/',
                  'oauth2/authorize',
                  'oauth2/access',
                  null
                )

                MeetupAPIkey.redirect = params.redirect

                let authURL = Meetup.oauth2.getAuthorizeUrl({
                  response_type: params.response_type || 'code',
                  redirect_uri: params.redirect
                })

                if (authURL) {
                  callback(null, authURL)
                } else {
                  callback(
                    {
                      message: 'No authURL return'
                    },
                    null
                  )
                }
              }
            }

            getOAuth2AccessToken(oauth_verifier, callback) {
              if (typeof oauth_verifier === 'function') {
                callback = oauth_verifier
                oauth_verifier = null
              }

              var oauth2Params =
                MeetupAPIkey.access_token && MeetupAPIkey.refresh_token
                  ? { grant_type: 'refresh_token' }
                  : {
                      grant_type: 'authorization_code',
                      redirect_uri: MeetupAPIkey.redirect
                    }

              Meetup.oauth2.getOAuthAccessToken(
                oauth_verifier || MeetupAPIkey.refresh_token,
                oauth2Params,
                (error, access_token, refresh_token) => {
                  if (error) {
                    callback(error)
                  } else {
                    MeetupAPIkey.access_token = access_token
                    MeetupAPIkey.refresh_token = refresh_token
                    callback(null)
                  }
                }
              )
            }

            refreshOAuth2AccessToken(refresh_token, callback) {
              console.warn(
                'WARNING: refreshOAuth2AccessToken() is deprecated use getOAuth2AccessToken() instead!'
              )
              if (MeetupAPIkey.refresh_token) {
                this.getOAuth2AccessToken(refresh_token, callback)
              }
            }
          }

          /*
           * Request functions
           */

          class APIRequest {
            // Preprocess params (used by 'Create Meetup prototypes')
            static preProcess(obj) {
              for (let i in obj) {
                if (obj[i].constructor.name.toLowerCase() === 'array') {
                  obj[i] = obj[i].join(',')
                }
              }
            }

            // Create request object (used by 'HTTP(S) request')
            static create(method, url, params) {
              // insert meetupAPIkey only if it exists
              params.key =
                MeetupAPIkey && typeof MeetupAPIkey === 'string' && MeetupAPIkey

              // supply url vars
              let thisUrl = URLfn.parse(url, true),
                urlVars = thisUrl.pathname.match(/\/:\w+/g) || []

              // disable url.search to force URL.format to use url.query
              thisUrl.search = null

              // replace url variables with parameters data and delete the populated properties from params
              urlVars.forEach(urlVar => {
                thisUrl.pathname = thisUrl.pathname.replace(
                  urlVar,
                  '/' + params[urlVar.substr(2)]
                )
                delete params[urlVar.substr(2)]
              })

              // Setup throttle params
              let throttle = new Throttle({
                active: true, // set false to pause queue
                rate: 2, // how many requests can be sent every `ratePer`
                ratePer: 8000, // number of ms in which `rate` requests may be sent
                concurrent: 2 // how many requests can be sent concurrently
              })

              let req = request(method, URLfn.format(thisUrl))
                .use(throttle.plugin())
                .set(
                  'User-Agent',
                  packageJSON.name + '/NodejsClientLib/' + packageJSON.version
                )

              let agent = APIRequest.createProxyAgent(thisUrl)

              req._agent = agent

              // return request object
              return req
            }

            // Stream event
            static stream(req, callback) {
              // create stream
              req.pipe(JSONStream.parse()).pipe(
                // return data on event
                evStream.map(data => callback(data))
              )
            }

            // Add Oauth params (used by 'HTTP(S) request')
            static addOauthParams(req, params) {
              if (typeof MeetupAPIkey === 'object') {
                if (Meetup.oauth) {
                  //add oauth keys
                  req.sign(
                    Meetup.oauth,
                    (params && params.access_token_key) ||
                      MeetupAPIkey.access_token,
                    (params && params.access_token_secret) ||
                      MeetupAPIkey.access_token_secret
                  )
                }

                if (Meetup.oauth2) {
                  //add oauth2 bearer
                  let bearer =
                    (params && params.access_token_key) ||
                    MeetupAPIkey.access_token
                  req.set('Authorization', 'Bearer ' + bearer)
                }
              }
            }

            // create proxy agent object
            static createProxyAgent(url) {
              let agent = null

              if (ProxyAgent && ProxyURI) {
                // create an instance of the `ProxyAgent` class with the proxy server information
                let opts = URLfn.parse(ProxyURI)

                // IMPORTANT! Set the `secureEndpoint` option to `false` when connecting
                //            over "ws://", but `true` when connecting over "wss://"
                opts.secureEndpoint = url.protocol
                  ? url.protocol === 'wss:' || url.protocol === 'https:'
                  : false

                agent = new ProxyAgent(opts)
              }

              return agent
            }

            // HTTP(S) request
            static http(endpoint, params, callback) {
              // preprocess parameters
              APIRequest.preProcess(params)

              // create request
              let req = APIRequest.create(
                endpoint.method,
                endpoint.resource,
                params
              )

              // add OAUTH parameters for request
              APIRequest.addOauthParams.call(this, req, params)

              // add MultiPart photo upload
              if (params.photo && endpoint.multipart_photo) {
                req.attach('photo', params.photo)
                delete params.photo
              }

              // add query params &
              req
                .query(params)
                .set('Accept', '*/*')
                .set(
                  'User-Agent',
                  packageJSON.name + '/NodejsClientLib/' + packageJSON.version
                )
                .buffer(true)

              // execute the request
              if (!endpoint.chunked) {
                req.end((err, res) => {
                  let response = null

                  if (!err) {
                    try {
                      response = !Object.keys(res.body).length
                        ? JSON.parse(res.text)
                        : res.body
                    } catch (error) {
                      response = null
                      err = error
                      err.response = res
                    }

                    if (res.header['x-ratelimit-limit']) {
                      response = response || {}
                      response.ratelimit = {
                        limit: res.header['x-ratelimit-limit'],
                        remaining: res.header['x-ratelimit-remaining'],
                        reset: res.header['x-ratelimit-reset']
                      }
                    }
                  }

                  callback(err || res.error, response)
                })
              }

              // request funtions
              this.abort = function() {
                req.abort()
                return this
              }

              this.timeout = function(ms) {
                ms = params.callback ? 0 : ms
                req.timeout(ms)
                return this
              }

              // pass callback to request events & create stream on chunked HTTP endpoints
              this.on = function(event, callback) {
                if (endpoint.chunked && event === 'data') {
                  APIRequest.stream(req, callback)
                } else {
                  req.on(event, callback)
                }
                return this
              }

              // listeners functions
              ;[
                'removeListener',
                'removeAllListeners',
                'setMaxListeners'
              ].forEach(fnct => {
                this[fnct] = req[fnct]
                return this
              })
            }

            // WebSocket request
            static ws(endpoint, params) {
              // preprocess parameters
              APIRequest.preProcess(params)

              // supply url vars
              let url = URLfn.parse(endpoint.resource, true)

              // add query to url
              url.query = Object.assign(url.query, params)

              // disable url.search to force URL.format to use url.query
              url.search = null

              url = URLfn.format(url)

              // define websocket options
              let wsoptions = {},
                agent = APIRequest.createProxyAgent(url)

              wsoptions.agent = agent

              // create websocket connection
              let ws = websocket(url, wsoptions)

              // abort websocket stream
              this.abort = function() {
                ws.destroy()
                return this
              }

              // pass websocket events
              this.on = function(event, callback) {
                if (event === 'data') {
                  ws.on(event, data => {
                    // parse buffer string to JSON and return to the callback
                    callback(JSON.parse(data.toString()))
                  })
                } else {
                  // pass call back to websocket event
                  ws.on(event, callback)
                }
                return this
              }

              // listeners functions
              let listeners = [
                'removeListener',
                'removeAllListeners',
                'setMaxListeners'
              ]
              listeners.forEach(fnct => {
                this[fnct] = ws[fnct]
                return this
              })
            }
          }

          /*
           * Create Meetup prototypes
           */

          Object.keys(endpoints).forEach(key => {
            Meetup.prototype[key] = function(params, callback) {
              if (!endpoints[key].disable) {
                // parse endpoint url and get the protocol (without ':')
                let url = URLfn.parse(endpoints[key].resource),
                  reqprotocol = url.protocol.replace(':', '')

                // replace 'https' with 'http' to use the same request function
                reqprotocol = reqprotocol === 'https' ? 'http' : reqprotocol

                // replace 'wss' with 'ws' to use the same request function
                reqprotocol = reqprotocol === 'wss' ? 'ws' : reqprotocol

                // assign param function to callback
                if ('function' === typeof params) {
                  callback = params
                  params = {}
                }

                APIRequest[reqprotocol].call(
                  this,
                  endpoints[key],
                  params,
                  callback
                )
              } else if (endpoints[key].comments) {
                callback(endpoints[key].comments, null)
              }

              // return Meetup object
              return this
            }
          })

          /*
           * Export new constructor wrapper
           */

          module.exports = function(params) {
            // return new Meetup object on require
            return new Meetup(params)
          }

          /***/
        },

      /***/ '../../node_modules/meetup-api/lib/myUtils.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/meetup-api/lib/myUtils.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*jslint node: true, maxcomplexity: 7 */

          module.exports.requireOpt = function(modules, cb) {
            let _loaded = {}

            if (Array.isArray(modules)) {
              _loaded = modules.reduce((_loaded, _module) => {
                try {
                  _loaded[_module] = __webpack_require__(
                    '../../node_modules/meetup-api/lib sync recursive'
                  )(_module)
                } catch (error) {
                  if (
                    Object.prototype.toString.call(_module) !==
                    '[object String]'
                  ) {
                    throw error
                  }
                  return null
                }
                return _loaded
              }, {})
            } else {
              try {
                _loaded[modules] = __webpack_require__(
                  '../../node_modules/meetup-api/lib sync recursive'
                )(modules)
              } catch (error) {
                if (
                  Object.prototype.toString.call(modules) !== '[object String]'
                ) {
                  throw error
                }
                _loaded[modules] = null
              }
            }

            return (
              (cb && cb(_loaded)) ||
              (!cb && ((_loaded.length === 1 && _loaded[0]) || _loaded)) ||
              null
            )
          }

          /***/
        },

      /***/ '../../node_modules/meetup-api/package.json':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/meetup-api/package.json ***!
  \******************************************************************************/
        /*! exports provided: name, description, version, keywords, main, author, bugs, repository, license, directories, engine-strict, engines, dependencies, optionalDependencies, devDependencies, scripts, tonicExampleFilename, default */
        /***/ function(module) {
          module.exports = {
            name: 'meetup-api',
            description: 'Meetup API library',
            version: '1.4.33',
            keywords: ['meetup', 'api'],
            main: 'index.js',
            author: {
              name: 'Juan Pablo Kutianski',
              email: 'jkutianski@gmail.com',
              url: 'https://github.com/jkutianski'
            },
            bugs: { url: 'http://github.com/jkutianski/meetup-api/issues' },
            repository: {
              type: 'git',
              url: 'http://github.com/jkutianski/meetup-api.git'
            },
            license: 'GPL-3.0',
            directories: { lib: './lib', example: './examples' },
            'engine-strict': true,
            engines: { node: '>=4.0.0' },
            dependencies: {
              JSONStream: '1.3.x',
              'event-stream': '3.3.x',
              superagent: '3.8.x',
              'superagent-throttle': '^0.2.5',
              'websocket-stream': '5.1.x',
              ws: '3.3.x'
            },
            optionalDependencies: {
              oauth: '0.9.x',
              'proxy-agent': '3.0.x',
              'superagent-oauth': '0.2.x'
            },
            devDependencies: { forallasync: '1.0.x' },
            scripts: { test: 'node ./test/testEndpoints.js' },
            tonicExampleFilename: 'tonicExample.js'
          }

          /***/
        },

      /***/ '../../node_modules/methods/index.js':
        /*!***********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/methods/index.js ***!
  \***********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * methods
           * Copyright(c) 2013-2014 TJ Holowaychuk
           * Copyright(c) 2015-2016 Douglas Christopher Wilson
           * MIT Licensed
           */

          /**
           * Module dependencies.
           * @private
           */

          var http = __webpack_require__(/*! http */ 'http')

          /**
           * Module exports.
           * @public
           */

          module.exports = getCurrentNodeMethods() || getBasicNodeMethods()

          /**
           * Get the current Node.js methods.
           * @private
           */

          function getCurrentNodeMethods() {
            return (
              http.METHODS &&
              http.METHODS.map(function lowerCaseMethod(method) {
                return method.toLowerCase()
              })
            )
          }

          /**
           * Get the "basic" Node.js methods, a snapshot from Node.js 0.10.
           * @private
           */

          function getBasicNodeMethods() {
            return [
              'get',
              'post',
              'put',
              'head',
              'delete',
              'options',
              'trace',
              'copy',
              'lock',
              'mkcol',
              'move',
              'purge',
              'propfind',
              'proppatch',
              'unlock',
              'report',
              'mkactivity',
              'checkout',
              'merge',
              'm-search',
              'notify',
              'subscribe',
              'unsubscribe',
              'patch',
              'search',
              'connect'
            ]
          }

          /***/
        },

      /***/ '../../node_modules/mime-db/db.json':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/mime-db/db.json ***!
  \**********************************************************************/
        /*! exports provided: application/1d-interleaved-parityfec, application/3gpdash-qoe-report+xml, application/3gpp-ims+xml, application/a2l, application/activemessage, application/activity+json, application/alto-costmap+json, application/alto-costmapfilter+json, application/alto-directory+json, application/alto-endpointcost+json, application/alto-endpointcostparams+json, application/alto-endpointprop+json, application/alto-endpointpropparams+json, application/alto-error+json, application/alto-networkmap+json, application/alto-networkmapfilter+json, application/aml, application/andrew-inset, application/applefile, application/applixware, application/atf, application/atfx, application/atom+xml, application/atomcat+xml, application/atomdeleted+xml, application/atomicmail, application/atomsvc+xml, application/atxml, application/auth-policy+xml, application/bacnet-xdd+zip, application/batch-smtp, application/bdoc, application/beep+xml, application/calendar+json, application/calendar+xml, application/call-completion, application/cals-1840, application/cbor, application/cccex, application/ccmp+xml, application/ccxml+xml, application/cdfx+xml, application/cdmi-capability, application/cdmi-container, application/cdmi-domain, application/cdmi-object, application/cdmi-queue, application/cdni, application/cea, application/cea-2018+xml, application/cellml+xml, application/cfw, application/clue_info+xml, application/cms, application/cnrp+xml, application/coap-group+json, application/coap-payload, application/commonground, application/conference-info+xml, application/cose, application/cose-key, application/cose-key-set, application/cpl+xml, application/csrattrs, application/csta+xml, application/cstadata+xml, application/csvm+json, application/cu-seeme, application/cwt, application/cybercash, application/dart, application/dash+xml, application/dashdelta, application/davmount+xml, application/dca-rft, application/dcd, application/dec-dx, application/dialog-info+xml, application/dicom, application/dicom+json, application/dicom+xml, application/dii, application/dit, application/dns, application/dns+json, application/dns-message, application/docbook+xml, application/dskpp+xml, application/dssc+der, application/dssc+xml, application/dvcs, application/ecmascript, application/edi-consent, application/edi-x12, application/edifact, application/efi, application/emergencycalldata.comment+xml, application/emergencycalldata.control+xml, application/emergencycalldata.deviceinfo+xml, application/emergencycalldata.ecall.msd, application/emergencycalldata.providerinfo+xml, application/emergencycalldata.serviceinfo+xml, application/emergencycalldata.subscriberinfo+xml, application/emergencycalldata.veds+xml, application/emma+xml, application/emotionml+xml, application/encaprtp, application/epp+xml, application/epub+zip, application/eshop, application/exi, application/fastinfoset, application/fastsoap, application/fdt+xml, application/fhir+json, application/fhir+xml, application/fido.trusted-apps+json, application/fits, application/font-sfnt, application/font-tdpfr, application/font-woff, application/framework-attributes+xml, application/geo+json, application/geo+json-seq, application/geopackage+sqlite3, application/geoxacml+xml, application/gltf-buffer, application/gml+xml, application/gpx+xml, application/gxf, application/gzip, application/h224, application/held+xml, application/hjson, application/http, application/hyperstudio, application/ibe-key-request+xml, application/ibe-pkg-reply+xml, application/ibe-pp-data, application/iges, application/im-iscomposing+xml, application/index, application/index.cmd, application/index.obj, application/index.response, application/index.vnd, application/inkml+xml, application/iotp, application/ipfix, application/ipp, application/isup, application/its+xml, application/java-archive, application/java-serialized-object, application/java-vm, application/javascript, application/jf2feed+json, application/jose, application/jose+json, application/jrd+json, application/json, application/json-patch+json, application/json-seq, application/json5, application/jsonml+json, application/jwk+json, application/jwk-set+json, application/jwt, application/kpml-request+xml, application/kpml-response+xml, application/ld+json, application/lgr+xml, application/link-format, application/load-control+xml, application/lost+xml, application/lostsync+xml, application/lxf, application/mac-binhex40, application/mac-compactpro, application/macwriteii, application/mads+xml, application/manifest+json, application/marc, application/marcxml+xml, application/mathematica, application/mathml+xml, application/mathml-content+xml, application/mathml-presentation+xml, application/mbms-associated-procedure-description+xml, application/mbms-deregister+xml, application/mbms-envelope+xml, application/mbms-msk+xml, application/mbms-msk-response+xml, application/mbms-protection-description+xml, application/mbms-reception-report+xml, application/mbms-register+xml, application/mbms-register-response+xml, application/mbms-schedule+xml, application/mbms-user-service-description+xml, application/mbox, application/media-policy-dataset+xml, application/media_control+xml, application/mediaservercontrol+xml, application/merge-patch+json, application/metalink+xml, application/metalink4+xml, application/mets+xml, application/mf4, application/mikey, application/mmt-usd+xml, application/mods+xml, application/moss-keys, application/moss-signature, application/mosskey-data, application/mosskey-request, application/mp21, application/mp4, application/mpeg4-generic, application/mpeg4-iod, application/mpeg4-iod-xmt, application/mrb-consumer+xml, application/mrb-publish+xml, application/msc-ivr+xml, application/msc-mixer+xml, application/msword, application/mud+json, application/mxf, application/n-quads, application/n-triples, application/nasdata, application/news-checkgroups, application/news-groupinfo, application/news-transmission, application/nlsml+xml, application/node, application/nss, application/ocsp-request, application/ocsp-response, application/octet-stream, application/oda, application/odx, application/oebps-package+xml, application/ogg, application/omdoc+xml, application/onenote, application/oxps, application/p2p-overlay+xml, application/parityfec, application/passport, application/patch-ops-error+xml, application/pdf, application/pdx, application/pgp-encrypted, application/pgp-keys, application/pgp-signature, application/pics-rules, application/pidf+xml, application/pidf-diff+xml, application/pkcs10, application/pkcs12, application/pkcs7-mime, application/pkcs7-signature, application/pkcs8, application/pkcs8-encrypted, application/pkix-attr-cert, application/pkix-cert, application/pkix-crl, application/pkix-pkipath, application/pkixcmp, application/pls+xml, application/poc-settings+xml, application/postscript, application/ppsp-tracker+json, application/problem+json, application/problem+xml, application/provenance+xml, application/prs.alvestrand.titrax-sheet, application/prs.cww, application/prs.hpub+zip, application/prs.nprend, application/prs.plucker, application/prs.rdf-xml-crypt, application/prs.xsf+xml, application/pskc+xml, application/qsig, application/raml+yaml, application/raptorfec, application/rdap+json, application/rdf+xml, application/reginfo+xml, application/relax-ng-compact-syntax, application/remote-printing, application/reputon+json, application/resource-lists+xml, application/resource-lists-diff+xml, application/rfc+xml, application/riscos, application/rlmi+xml, application/rls-services+xml, application/route-apd+xml, application/route-s-tsid+xml, application/route-usd+xml, application/rpki-ghostbusters, application/rpki-manifest, application/rpki-publication, application/rpki-roa, application/rpki-updown, application/rsd+xml, application/rss+xml, application/rtf, application/rtploopback, application/rtx, application/samlassertion+xml, application/samlmetadata+xml, application/sbml+xml, application/scaip+xml, application/scim+json, application/scvp-cv-request, application/scvp-cv-response, application/scvp-vp-request, application/scvp-vp-response, application/sdp, application/secevent+jwt, application/senml+cbor, application/senml+json, application/senml+xml, application/senml-exi, application/sensml+cbor, application/sensml+json, application/sensml+xml, application/sensml-exi, application/sep+xml, application/sep-exi, application/session-info, application/set-payment, application/set-payment-initiation, application/set-registration, application/set-registration-initiation, application/sgml, application/sgml-open-catalog, application/shf+xml, application/sieve, application/simple-filter+xml, application/simple-message-summary, application/simplesymbolcontainer, application/slate, application/smil, application/smil+xml, application/smpte336m, application/soap+fastinfoset, application/soap+xml, application/sparql-query, application/sparql-results+xml, application/spirits-event+xml, application/sql, application/srgs, application/srgs+xml, application/sru+xml, application/ssdl+xml, application/ssml+xml, application/stix+json, application/tamp-apex-update, application/tamp-apex-update-confirm, application/tamp-community-update, application/tamp-community-update-confirm, application/tamp-error, application/tamp-sequence-adjust, application/tamp-sequence-adjust-confirm, application/tamp-status-query, application/tamp-status-response, application/tamp-update, application/tamp-update-confirm, application/tar, application/taxii+json, application/tei+xml, application/thraud+xml, application/timestamp-query, application/timestamp-reply, application/timestamped-data, application/tlsrpt+gzip, application/tlsrpt+json, application/tnauthlist, application/trickle-ice-sdpfrag, application/trig, application/ttml+xml, application/tve-trigger, application/ulpfec, application/urc-grpsheet+xml, application/urc-ressheet+xml, application/urc-targetdesc+xml, application/urc-uisocketdesc+xml, application/vcard+json, application/vcard+xml, application/vemmi, application/vividence.scriptfile, application/vnd.1000minds.decision-model+xml, application/vnd.3gpp-prose+xml, application/vnd.3gpp-prose-pc3ch+xml, application/vnd.3gpp-v2x-local-service-information, application/vnd.3gpp.access-transfer-events+xml, application/vnd.3gpp.bsf+xml, application/vnd.3gpp.gmop+xml, application/vnd.3gpp.mc-signalling-ear, application/vnd.3gpp.mcdata-payload, application/vnd.3gpp.mcdata-signalling, application/vnd.3gpp.mcptt-affiliation-command+xml, application/vnd.3gpp.mcptt-floor-request+xml, application/vnd.3gpp.mcptt-info+xml, application/vnd.3gpp.mcptt-location-info+xml, application/vnd.3gpp.mcptt-mbms-usage-info+xml, application/vnd.3gpp.mcptt-signed+xml, application/vnd.3gpp.mid-call+xml, application/vnd.3gpp.pic-bw-large, application/vnd.3gpp.pic-bw-small, application/vnd.3gpp.pic-bw-var, application/vnd.3gpp.sms, application/vnd.3gpp.sms+xml, application/vnd.3gpp.srvcc-ext+xml, application/vnd.3gpp.srvcc-info+xml, application/vnd.3gpp.state-and-event-info+xml, application/vnd.3gpp.ussd+xml, application/vnd.3gpp2.bcmcsinfo+xml, application/vnd.3gpp2.sms, application/vnd.3gpp2.tcap, application/vnd.3lightssoftware.imagescal, application/vnd.3m.post-it-notes, application/vnd.accpac.simply.aso, application/vnd.accpac.simply.imp, application/vnd.acucobol, application/vnd.acucorp, application/vnd.adobe.air-application-installer-package+zip, application/vnd.adobe.flash.movie, application/vnd.adobe.formscentral.fcdt, application/vnd.adobe.fxp, application/vnd.adobe.partial-upload, application/vnd.adobe.xdp+xml, application/vnd.adobe.xfdf, application/vnd.aether.imp, application/vnd.afpc.afplinedata, application/vnd.afpc.modca, application/vnd.ah-barcode, application/vnd.ahead.space, application/vnd.airzip.filesecure.azf, application/vnd.airzip.filesecure.azs, application/vnd.amadeus+json, application/vnd.amazon.ebook, application/vnd.amazon.mobi8-ebook, application/vnd.americandynamics.acc, application/vnd.amiga.ami, application/vnd.amundsen.maze+xml, application/vnd.android.package-archive, application/vnd.anki, application/vnd.anser-web-certificate-issue-initiation, application/vnd.anser-web-funds-transfer-initiation, application/vnd.antix.game-component, application/vnd.apache.thrift.binary, application/vnd.apache.thrift.compact, application/vnd.apache.thrift.json, application/vnd.api+json, application/vnd.apothekende.reservation+json, application/vnd.apple.installer+xml, application/vnd.apple.keynote, application/vnd.apple.mpegurl, application/vnd.apple.numbers, application/vnd.apple.pages, application/vnd.apple.pkpass, application/vnd.arastra.swi, application/vnd.aristanetworks.swi, application/vnd.artisan+json, application/vnd.artsquare, application/vnd.astraea-software.iota, application/vnd.audiograph, application/vnd.autopackage, application/vnd.avalon+json, application/vnd.avistar+xml, application/vnd.balsamiq.bmml+xml, application/vnd.balsamiq.bmpr, application/vnd.banana-accounting, application/vnd.bbf.usp.msg, application/vnd.bbf.usp.msg+json, application/vnd.bekitzur-stech+json, application/vnd.bint.med-content, application/vnd.biopax.rdf+xml, application/vnd.blink-idb-value-wrapper, application/vnd.blueice.multipass, application/vnd.bluetooth.ep.oob, application/vnd.bluetooth.le.oob, application/vnd.bmi, application/vnd.businessobjects, application/vnd.byu.uapi+json, application/vnd.cab-jscript, application/vnd.canon-cpdl, application/vnd.canon-lips, application/vnd.capasystems-pg+json, application/vnd.cendio.thinlinc.clientconf, application/vnd.century-systems.tcp_stream, application/vnd.chemdraw+xml, application/vnd.chess-pgn, application/vnd.chipnuts.karaoke-mmd, application/vnd.cinderella, application/vnd.cirpack.isdn-ext, application/vnd.citationstyles.style+xml, application/vnd.claymore, application/vnd.cloanto.rp9, application/vnd.clonk.c4group, application/vnd.cluetrust.cartomobile-config, application/vnd.cluetrust.cartomobile-config-pkg, application/vnd.coffeescript, application/vnd.collabio.xodocuments.document, application/vnd.collabio.xodocuments.document-template, application/vnd.collabio.xodocuments.presentation, application/vnd.collabio.xodocuments.presentation-template, application/vnd.collabio.xodocuments.spreadsheet, application/vnd.collabio.xodocuments.spreadsheet-template, application/vnd.collection+json, application/vnd.collection.doc+json, application/vnd.collection.next+json, application/vnd.comicbook+zip, application/vnd.comicbook-rar, application/vnd.commerce-battelle, application/vnd.commonspace, application/vnd.contact.cmsg, application/vnd.coreos.ignition+json, application/vnd.cosmocaller, application/vnd.crick.clicker, application/vnd.crick.clicker.keyboard, application/vnd.crick.clicker.palette, application/vnd.crick.clicker.template, application/vnd.crick.clicker.wordbank, application/vnd.criticaltools.wbs+xml, application/vnd.ctc-posml, application/vnd.ctct.ws+xml, application/vnd.cups-pdf, application/vnd.cups-postscript, application/vnd.cups-ppd, application/vnd.cups-raster, application/vnd.cups-raw, application/vnd.curl, application/vnd.curl.car, application/vnd.curl.pcurl, application/vnd.cyan.dean.root+xml, application/vnd.cybank, application/vnd.d2l.coursepackage1p0+zip, application/vnd.dart, application/vnd.data-vision.rdz, application/vnd.datapackage+json, application/vnd.dataresource+json, application/vnd.debian.binary-package, application/vnd.dece.data, application/vnd.dece.ttml+xml, application/vnd.dece.unspecified, application/vnd.dece.zip, application/vnd.denovo.fcselayout-link, application/vnd.desmume.movie, application/vnd.dir-bi.plate-dl-nosuffix, application/vnd.dm.delegation+xml, application/vnd.dna, application/vnd.document+json, application/vnd.dolby.mlp, application/vnd.dolby.mobile.1, application/vnd.dolby.mobile.2, application/vnd.doremir.scorecloud-binary-document, application/vnd.dpgraph, application/vnd.dreamfactory, application/vnd.drive+json, application/vnd.ds-keypoint, application/vnd.dtg.local, application/vnd.dtg.local.flash, application/vnd.dtg.local.html, application/vnd.dvb.ait, application/vnd.dvb.dvbj, application/vnd.dvb.esgcontainer, application/vnd.dvb.ipdcdftnotifaccess, application/vnd.dvb.ipdcesgaccess, application/vnd.dvb.ipdcesgaccess2, application/vnd.dvb.ipdcesgpdd, application/vnd.dvb.ipdcroaming, application/vnd.dvb.iptv.alfec-base, application/vnd.dvb.iptv.alfec-enhancement, application/vnd.dvb.notif-aggregate-root+xml, application/vnd.dvb.notif-container+xml, application/vnd.dvb.notif-generic+xml, application/vnd.dvb.notif-ia-msglist+xml, application/vnd.dvb.notif-ia-registration-request+xml, application/vnd.dvb.notif-ia-registration-response+xml, application/vnd.dvb.notif-init+xml, application/vnd.dvb.pfr, application/vnd.dvb.service, application/vnd.dxr, application/vnd.dynageo, application/vnd.dzr, application/vnd.easykaraoke.cdgdownload, application/vnd.ecdis-update, application/vnd.ecip.rlp, application/vnd.ecowin.chart, application/vnd.ecowin.filerequest, application/vnd.ecowin.fileupdate, application/vnd.ecowin.series, application/vnd.ecowin.seriesrequest, application/vnd.ecowin.seriesupdate, application/vnd.efi.img, application/vnd.efi.iso, application/vnd.emclient.accessrequest+xml, application/vnd.enliven, application/vnd.enphase.envoy, application/vnd.eprints.data+xml, application/vnd.epson.esf, application/vnd.epson.msf, application/vnd.epson.quickanime, application/vnd.epson.salt, application/vnd.epson.ssf, application/vnd.ericsson.quickcall, application/vnd.espass-espass+zip, application/vnd.eszigno3+xml, application/vnd.etsi.aoc+xml, application/vnd.etsi.asic-e+zip, application/vnd.etsi.asic-s+zip, application/vnd.etsi.cug+xml, application/vnd.etsi.iptvcommand+xml, application/vnd.etsi.iptvdiscovery+xml, application/vnd.etsi.iptvprofile+xml, application/vnd.etsi.iptvsad-bc+xml, application/vnd.etsi.iptvsad-cod+xml, application/vnd.etsi.iptvsad-npvr+xml, application/vnd.etsi.iptvservice+xml, application/vnd.etsi.iptvsync+xml, application/vnd.etsi.iptvueprofile+xml, application/vnd.etsi.mcid+xml, application/vnd.etsi.mheg5, application/vnd.etsi.overload-control-policy-dataset+xml, application/vnd.etsi.pstn+xml, application/vnd.etsi.sci+xml, application/vnd.etsi.simservs+xml, application/vnd.etsi.timestamp-token, application/vnd.etsi.tsl+xml, application/vnd.etsi.tsl.der, application/vnd.eudora.data, application/vnd.evolv.ecig.profile, application/vnd.evolv.ecig.settings, application/vnd.evolv.ecig.theme, application/vnd.exstream-empower+zip, application/vnd.ezpix-album, application/vnd.ezpix-package, application/vnd.f-secure.mobile, application/vnd.fastcopy-disk-image, application/vnd.fdf, application/vnd.fdsn.mseed, application/vnd.fdsn.seed, application/vnd.ffsns, application/vnd.filmit.zfc, application/vnd.fints, application/vnd.firemonkeys.cloudcell, application/vnd.flographit, application/vnd.fluxtime.clip, application/vnd.font-fontforge-sfd, application/vnd.framemaker, application/vnd.frogans.fnc, application/vnd.frogans.ltf, application/vnd.fsc.weblaunch, application/vnd.fujitsu.oasys, application/vnd.fujitsu.oasys2, application/vnd.fujitsu.oasys3, application/vnd.fujitsu.oasysgp, application/vnd.fujitsu.oasysprs, application/vnd.fujixerox.art-ex, application/vnd.fujixerox.art4, application/vnd.fujixerox.ddd, application/vnd.fujixerox.docuworks, application/vnd.fujixerox.docuworks.binder, application/vnd.fujixerox.docuworks.container, application/vnd.fujixerox.hbpl, application/vnd.fut-misnet, application/vnd.futoin+cbor, application/vnd.futoin+json, application/vnd.fuzzysheet, application/vnd.genomatix.tuxedo, application/vnd.geo+json, application/vnd.geocube+xml, application/vnd.geogebra.file, application/vnd.geogebra.tool, application/vnd.geometry-explorer, application/vnd.geonext, application/vnd.geoplan, application/vnd.geospace, application/vnd.gerber, application/vnd.globalplatform.card-content-mgt, application/vnd.globalplatform.card-content-mgt-response, application/vnd.gmx, application/vnd.google-apps.document, application/vnd.google-apps.presentation, application/vnd.google-apps.spreadsheet, application/vnd.google-earth.kml+xml, application/vnd.google-earth.kmz, application/vnd.gov.sk.e-form+xml, application/vnd.gov.sk.e-form+zip, application/vnd.gov.sk.xmldatacontainer+xml, application/vnd.grafeq, application/vnd.gridmp, application/vnd.groove-account, application/vnd.groove-help, application/vnd.groove-identity-message, application/vnd.groove-injector, application/vnd.groove-tool-message, application/vnd.groove-tool-template, application/vnd.groove-vcard, application/vnd.hal+json, application/vnd.hal+xml, application/vnd.handheld-entertainment+xml, application/vnd.hbci, application/vnd.hc+json, application/vnd.hcl-bireports, application/vnd.hdt, application/vnd.heroku+json, application/vnd.hhe.lesson-player, application/vnd.hp-hpgl, application/vnd.hp-hpid, application/vnd.hp-hps, application/vnd.hp-jlyt, application/vnd.hp-pcl, application/vnd.hp-pclxl, application/vnd.httphone, application/vnd.hydrostatix.sof-data, application/vnd.hyper+json, application/vnd.hyper-item+json, application/vnd.hyperdrive+json, application/vnd.hzn-3d-crossword, application/vnd.ibm.afplinedata, application/vnd.ibm.electronic-media, application/vnd.ibm.minipay, application/vnd.ibm.modcap, application/vnd.ibm.rights-management, application/vnd.ibm.secure-container, application/vnd.iccprofile, application/vnd.ieee.1905, application/vnd.igloader, application/vnd.imagemeter.folder+zip, application/vnd.imagemeter.image+zip, application/vnd.immervision-ivp, application/vnd.immervision-ivu, application/vnd.ims.imsccv1p1, application/vnd.ims.imsccv1p2, application/vnd.ims.imsccv1p3, application/vnd.ims.lis.v2.result+json, application/vnd.ims.lti.v2.toolconsumerprofile+json, application/vnd.ims.lti.v2.toolproxy+json, application/vnd.ims.lti.v2.toolproxy.id+json, application/vnd.ims.lti.v2.toolsettings+json, application/vnd.ims.lti.v2.toolsettings.simple+json, application/vnd.informedcontrol.rms+xml, application/vnd.informix-visionary, application/vnd.infotech.project, application/vnd.infotech.project+xml, application/vnd.innopath.wamp.notification, application/vnd.insors.igm, application/vnd.intercon.formnet, application/vnd.intergeo, application/vnd.intertrust.digibox, application/vnd.intertrust.nncp, application/vnd.intu.qbo, application/vnd.intu.qfx, application/vnd.iptc.g2.catalogitem+xml, application/vnd.iptc.g2.conceptitem+xml, application/vnd.iptc.g2.knowledgeitem+xml, application/vnd.iptc.g2.newsitem+xml, application/vnd.iptc.g2.newsmessage+xml, application/vnd.iptc.g2.packageitem+xml, application/vnd.iptc.g2.planningitem+xml, application/vnd.ipunplugged.rcprofile, application/vnd.irepository.package+xml, application/vnd.is-xpr, application/vnd.isac.fcs, application/vnd.jam, application/vnd.japannet-directory-service, application/vnd.japannet-jpnstore-wakeup, application/vnd.japannet-payment-wakeup, application/vnd.japannet-registration, application/vnd.japannet-registration-wakeup, application/vnd.japannet-setstore-wakeup, application/vnd.japannet-verification, application/vnd.japannet-verification-wakeup, application/vnd.jcp.javame.midlet-rms, application/vnd.jisp, application/vnd.joost.joda-archive, application/vnd.jsk.isdn-ngn, application/vnd.kahootz, application/vnd.kde.karbon, application/vnd.kde.kchart, application/vnd.kde.kformula, application/vnd.kde.kivio, application/vnd.kde.kontour, application/vnd.kde.kpresenter, application/vnd.kde.kspread, application/vnd.kde.kword, application/vnd.kenameaapp, application/vnd.kidspiration, application/vnd.kinar, application/vnd.koan, application/vnd.kodak-descriptor, application/vnd.las.las+json, application/vnd.las.las+xml, application/vnd.leap+json, application/vnd.liberty-request+xml, application/vnd.llamagraphics.life-balance.desktop, application/vnd.llamagraphics.life-balance.exchange+xml, application/vnd.lotus-1-2-3, application/vnd.lotus-approach, application/vnd.lotus-freelance, application/vnd.lotus-notes, application/vnd.lotus-organizer, application/vnd.lotus-screencam, application/vnd.lotus-wordpro, application/vnd.macports.portpkg, application/vnd.mapbox-vector-tile, application/vnd.marlin.drm.actiontoken+xml, application/vnd.marlin.drm.conftoken+xml, application/vnd.marlin.drm.license+xml, application/vnd.marlin.drm.mdcf, application/vnd.mason+json, application/vnd.maxmind.maxmind-db, application/vnd.mcd, application/vnd.medcalcdata, application/vnd.mediastation.cdkey, application/vnd.meridian-slingshot, application/vnd.mfer, application/vnd.mfmp, application/vnd.micro+json, application/vnd.micrografx.flo, application/vnd.micrografx.igx, application/vnd.microsoft.portable-executable, application/vnd.microsoft.windows.thumbnail-cache, application/vnd.miele+json, application/vnd.mif, application/vnd.minisoft-hp3000-save, application/vnd.mitsubishi.misty-guard.trustweb, application/vnd.mobius.daf, application/vnd.mobius.dis, application/vnd.mobius.mbk, application/vnd.mobius.mqy, application/vnd.mobius.msl, application/vnd.mobius.plc, application/vnd.mobius.txf, application/vnd.mophun.application, application/vnd.mophun.certificate, application/vnd.motorola.flexsuite, application/vnd.motorola.flexsuite.adsi, application/vnd.motorola.flexsuite.fis, application/vnd.motorola.flexsuite.gotap, application/vnd.motorola.flexsuite.kmr, application/vnd.motorola.flexsuite.ttc, application/vnd.motorola.flexsuite.wem, application/vnd.motorola.iprm, application/vnd.mozilla.xul+xml, application/vnd.ms-3mfdocument, application/vnd.ms-artgalry, application/vnd.ms-asf, application/vnd.ms-cab-compressed, application/vnd.ms-color.iccprofile, application/vnd.ms-excel, application/vnd.ms-excel.addin.macroenabled.12, application/vnd.ms-excel.sheet.binary.macroenabled.12, application/vnd.ms-excel.sheet.macroenabled.12, application/vnd.ms-excel.template.macroenabled.12, application/vnd.ms-fontobject, application/vnd.ms-htmlhelp, application/vnd.ms-ims, application/vnd.ms-lrm, application/vnd.ms-office.activex+xml, application/vnd.ms-officetheme, application/vnd.ms-opentype, application/vnd.ms-outlook, application/vnd.ms-package.obfuscated-opentype, application/vnd.ms-pki.seccat, application/vnd.ms-pki.stl, application/vnd.ms-playready.initiator+xml, application/vnd.ms-powerpoint, application/vnd.ms-powerpoint.addin.macroenabled.12, application/vnd.ms-powerpoint.presentation.macroenabled.12, application/vnd.ms-powerpoint.slide.macroenabled.12, application/vnd.ms-powerpoint.slideshow.macroenabled.12, application/vnd.ms-powerpoint.template.macroenabled.12, application/vnd.ms-printdevicecapabilities+xml, application/vnd.ms-printing.printticket+xml, application/vnd.ms-printschematicket+xml, application/vnd.ms-project, application/vnd.ms-tnef, application/vnd.ms-windows.devicepairing, application/vnd.ms-windows.nwprinting.oob, application/vnd.ms-windows.printerpairing, application/vnd.ms-windows.wsd.oob, application/vnd.ms-wmdrm.lic-chlg-req, application/vnd.ms-wmdrm.lic-resp, application/vnd.ms-wmdrm.meter-chlg-req, application/vnd.ms-wmdrm.meter-resp, application/vnd.ms-word.document.macroenabled.12, application/vnd.ms-word.template.macroenabled.12, application/vnd.ms-works, application/vnd.ms-wpl, application/vnd.ms-xpsdocument, application/vnd.msa-disk-image, application/vnd.mseq, application/vnd.msign, application/vnd.multiad.creator, application/vnd.multiad.creator.cif, application/vnd.music-niff, application/vnd.musician, application/vnd.muvee.style, application/vnd.mynfc, application/vnd.ncd.control, application/vnd.ncd.reference, application/vnd.nearst.inv+json, application/vnd.nervana, application/vnd.netfpx, application/vnd.neurolanguage.nlu, application/vnd.nimn, application/vnd.nintendo.nitro.rom, application/vnd.nintendo.snes.rom, application/vnd.nitf, application/vnd.noblenet-directory, application/vnd.noblenet-sealer, application/vnd.noblenet-web, application/vnd.nokia.catalogs, application/vnd.nokia.conml+wbxml, application/vnd.nokia.conml+xml, application/vnd.nokia.iptv.config+xml, application/vnd.nokia.isds-radio-presets, application/vnd.nokia.landmark+wbxml, application/vnd.nokia.landmark+xml, application/vnd.nokia.landmarkcollection+xml, application/vnd.nokia.n-gage.ac+xml, application/vnd.nokia.n-gage.data, application/vnd.nokia.n-gage.symbian.install, application/vnd.nokia.ncd, application/vnd.nokia.pcd+wbxml, application/vnd.nokia.pcd+xml, application/vnd.nokia.radio-preset, application/vnd.nokia.radio-presets, application/vnd.novadigm.edm, application/vnd.novadigm.edx, application/vnd.novadigm.ext, application/vnd.ntt-local.content-share, application/vnd.ntt-local.file-transfer, application/vnd.ntt-local.ogw_remote-access, application/vnd.ntt-local.sip-ta_remote, application/vnd.ntt-local.sip-ta_tcp_stream, application/vnd.oasis.opendocument.chart, application/vnd.oasis.opendocument.chart-template, application/vnd.oasis.opendocument.database, application/vnd.oasis.opendocument.formula, application/vnd.oasis.opendocument.formula-template, application/vnd.oasis.opendocument.graphics, application/vnd.oasis.opendocument.graphics-template, application/vnd.oasis.opendocument.image, application/vnd.oasis.opendocument.image-template, application/vnd.oasis.opendocument.presentation, application/vnd.oasis.opendocument.presentation-template, application/vnd.oasis.opendocument.spreadsheet, application/vnd.oasis.opendocument.spreadsheet-template, application/vnd.oasis.opendocument.text, application/vnd.oasis.opendocument.text-master, application/vnd.oasis.opendocument.text-template, application/vnd.oasis.opendocument.text-web, application/vnd.obn, application/vnd.ocf+cbor, application/vnd.oftn.l10n+json, application/vnd.oipf.contentaccessdownload+xml, application/vnd.oipf.contentaccessstreaming+xml, application/vnd.oipf.cspg-hexbinary, application/vnd.oipf.dae.svg+xml, application/vnd.oipf.dae.xhtml+xml, application/vnd.oipf.mippvcontrolmessage+xml, application/vnd.oipf.pae.gem, application/vnd.oipf.spdiscovery+xml, application/vnd.oipf.spdlist+xml, application/vnd.oipf.ueprofile+xml, application/vnd.oipf.userprofile+xml, application/vnd.olpc-sugar, application/vnd.oma-scws-config, application/vnd.oma-scws-http-request, application/vnd.oma-scws-http-response, application/vnd.oma.bcast.associated-procedure-parameter+xml, application/vnd.oma.bcast.drm-trigger+xml, application/vnd.oma.bcast.imd+xml, application/vnd.oma.bcast.ltkm, application/vnd.oma.bcast.notification+xml, application/vnd.oma.bcast.provisioningtrigger, application/vnd.oma.bcast.sgboot, application/vnd.oma.bcast.sgdd+xml, application/vnd.oma.bcast.sgdu, application/vnd.oma.bcast.simple-symbol-container, application/vnd.oma.bcast.smartcard-trigger+xml, application/vnd.oma.bcast.sprov+xml, application/vnd.oma.bcast.stkm, application/vnd.oma.cab-address-book+xml, application/vnd.oma.cab-feature-handler+xml, application/vnd.oma.cab-pcc+xml, application/vnd.oma.cab-subs-invite+xml, application/vnd.oma.cab-user-prefs+xml, application/vnd.oma.dcd, application/vnd.oma.dcdc, application/vnd.oma.dd2+xml, application/vnd.oma.drm.risd+xml, application/vnd.oma.group-usage-list+xml, application/vnd.oma.lwm2m+json, application/vnd.oma.lwm2m+tlv, application/vnd.oma.pal+xml, application/vnd.oma.poc.detailed-progress-report+xml, application/vnd.oma.poc.final-report+xml, application/vnd.oma.poc.groups+xml, application/vnd.oma.poc.invocation-descriptor+xml, application/vnd.oma.poc.optimized-progress-report+xml, application/vnd.oma.push, application/vnd.oma.scidm.messages+xml, application/vnd.oma.xcap-directory+xml, application/vnd.omads-email+xml, application/vnd.omads-file+xml, application/vnd.omads-folder+xml, application/vnd.omaloc-supl-init, application/vnd.onepager, application/vnd.onepagertamp, application/vnd.onepagertamx, application/vnd.onepagertat, application/vnd.onepagertatp, application/vnd.onepagertatx, application/vnd.openblox.game+xml, application/vnd.openblox.game-binary, application/vnd.openeye.oeb, application/vnd.openofficeorg.extension, application/vnd.openstreetmap.data+xml, application/vnd.openxmlformats-officedocument.custom-properties+xml, application/vnd.openxmlformats-officedocument.customxmlproperties+xml, application/vnd.openxmlformats-officedocument.drawing+xml, application/vnd.openxmlformats-officedocument.drawingml.chart+xml, application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml, application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml, application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml, application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml, application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml, application/vnd.openxmlformats-officedocument.extended-properties+xml, application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml, application/vnd.openxmlformats-officedocument.presentationml.comments+xml, application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml, application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml, application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml, application/vnd.openxmlformats-officedocument.presentationml.presentation, application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml, application/vnd.openxmlformats-officedocument.presentationml.presprops+xml, application/vnd.openxmlformats-officedocument.presentationml.slide, application/vnd.openxmlformats-officedocument.presentationml.slide+xml, application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml, application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml, application/vnd.openxmlformats-officedocument.presentationml.slideshow, application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml, application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml, application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml, application/vnd.openxmlformats-officedocument.presentationml.tags+xml, application/vnd.openxmlformats-officedocument.presentationml.template, application/vnd.openxmlformats-officedocument.presentationml.template.main+xml, application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.template, application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml, application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml, application/vnd.openxmlformats-officedocument.theme+xml, application/vnd.openxmlformats-officedocument.themeoverride+xml, application/vnd.openxmlformats-officedocument.vmldrawing, application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.template, application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml, application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml, application/vnd.openxmlformats-package.core-properties+xml, application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml, application/vnd.openxmlformats-package.relationships+xml, application/vnd.oracle.resource+json, application/vnd.orange.indata, application/vnd.osa.netdeploy, application/vnd.osgeo.mapguide.package, application/vnd.osgi.bundle, application/vnd.osgi.dp, application/vnd.osgi.subsystem, application/vnd.otps.ct-kip+xml, application/vnd.oxli.countgraph, application/vnd.pagerduty+json, application/vnd.palm, application/vnd.panoply, application/vnd.paos.xml, application/vnd.patentdive, application/vnd.pawaafile, application/vnd.pcos, application/vnd.pg.format, application/vnd.pg.osasli, application/vnd.piaccess.application-licence, application/vnd.picsel, application/vnd.pmi.widget, application/vnd.poc.group-advertisement+xml, application/vnd.pocketlearn, application/vnd.powerbuilder6, application/vnd.powerbuilder6-s, application/vnd.powerbuilder7, application/vnd.powerbuilder7-s, application/vnd.powerbuilder75, application/vnd.powerbuilder75-s, application/vnd.preminet, application/vnd.previewsystems.box, application/vnd.proteus.magazine, application/vnd.psfs, application/vnd.publishare-delta-tree, application/vnd.pvi.ptid1, application/vnd.pwg-multiplexed, application/vnd.pwg-xhtml-print+xml, application/vnd.qualcomm.brew-app-res, application/vnd.quarantainenet, application/vnd.quark.quarkxpress, application/vnd.quobject-quoxdocument, application/vnd.radisys.moml+xml, application/vnd.radisys.msml+xml, application/vnd.radisys.msml-audit+xml, application/vnd.radisys.msml-audit-conf+xml, application/vnd.radisys.msml-audit-conn+xml, application/vnd.radisys.msml-audit-dialog+xml, application/vnd.radisys.msml-audit-stream+xml, application/vnd.radisys.msml-conf+xml, application/vnd.radisys.msml-dialog+xml, application/vnd.radisys.msml-dialog-base+xml, application/vnd.radisys.msml-dialog-fax-detect+xml, application/vnd.radisys.msml-dialog-fax-sendrecv+xml, application/vnd.radisys.msml-dialog-group+xml, application/vnd.radisys.msml-dialog-speech+xml, application/vnd.radisys.msml-dialog-transform+xml, application/vnd.rainstor.data, application/vnd.rapid, application/vnd.rar, application/vnd.realvnc.bed, application/vnd.recordare.musicxml, application/vnd.recordare.musicxml+xml, application/vnd.renlearn.rlprint, application/vnd.restful+json, application/vnd.rig.cryptonote, application/vnd.rim.cod, application/vnd.rn-realmedia, application/vnd.rn-realmedia-vbr, application/vnd.route66.link66+xml, application/vnd.rs-274x, application/vnd.ruckus.download, application/vnd.s3sms, application/vnd.sailingtracker.track, application/vnd.sbm.cid, application/vnd.sbm.mid2, application/vnd.scribus, application/vnd.sealed.3df, application/vnd.sealed.csf, application/vnd.sealed.doc, application/vnd.sealed.eml, application/vnd.sealed.mht, application/vnd.sealed.net, application/vnd.sealed.ppt, application/vnd.sealed.tiff, application/vnd.sealed.xls, application/vnd.sealedmedia.softseal.html, application/vnd.sealedmedia.softseal.pdf, application/vnd.seemail, application/vnd.sema, application/vnd.semd, application/vnd.semf, application/vnd.shana.informed.formdata, application/vnd.shana.informed.formtemplate, application/vnd.shana.informed.interchange, application/vnd.shana.informed.package, application/vnd.shootproof+json, application/vnd.sigrok.session, application/vnd.simtech-mindmapper, application/vnd.siren+json, application/vnd.smaf, application/vnd.smart.notebook, application/vnd.smart.teacher, application/vnd.software602.filler.form+xml, application/vnd.software602.filler.form-xml-zip, application/vnd.solent.sdkm+xml, application/vnd.spotfire.dxp, application/vnd.spotfire.sfs, application/vnd.sqlite3, application/vnd.sss-cod, application/vnd.sss-dtf, application/vnd.sss-ntf, application/vnd.stardivision.calc, application/vnd.stardivision.draw, application/vnd.stardivision.impress, application/vnd.stardivision.math, application/vnd.stardivision.writer, application/vnd.stardivision.writer-global, application/vnd.stepmania.package, application/vnd.stepmania.stepchart, application/vnd.street-stream, application/vnd.sun.wadl+xml, application/vnd.sun.xml.calc, application/vnd.sun.xml.calc.template, application/vnd.sun.xml.draw, application/vnd.sun.xml.draw.template, application/vnd.sun.xml.impress, application/vnd.sun.xml.impress.template, application/vnd.sun.xml.math, application/vnd.sun.xml.writer, application/vnd.sun.xml.writer.global, application/vnd.sun.xml.writer.template, application/vnd.sus-calendar, application/vnd.svd, application/vnd.swiftview-ics, application/vnd.symbian.install, application/vnd.syncml+xml, application/vnd.syncml.dm+wbxml, application/vnd.syncml.dm+xml, application/vnd.syncml.dm.notification, application/vnd.syncml.dmddf+wbxml, application/vnd.syncml.dmddf+xml, application/vnd.syncml.dmtnds+wbxml, application/vnd.syncml.dmtnds+xml, application/vnd.syncml.ds.notification, application/vnd.tableschema+json, application/vnd.tao.intent-module-archive, application/vnd.tcpdump.pcap, application/vnd.think-cell.ppttc+json, application/vnd.tmd.mediaflex.api+xml, application/vnd.tml, application/vnd.tmobile-livetv, application/vnd.tri.onesource, application/vnd.trid.tpt, application/vnd.triscape.mxs, application/vnd.trueapp, application/vnd.truedoc, application/vnd.ubisoft.webplayer, application/vnd.ufdl, application/vnd.uiq.theme, application/vnd.umajin, application/vnd.unity, application/vnd.uoml+xml, application/vnd.uplanet.alert, application/vnd.uplanet.alert-wbxml, application/vnd.uplanet.bearer-choice, application/vnd.uplanet.bearer-choice-wbxml, application/vnd.uplanet.cacheop, application/vnd.uplanet.cacheop-wbxml, application/vnd.uplanet.channel, application/vnd.uplanet.channel-wbxml, application/vnd.uplanet.list, application/vnd.uplanet.list-wbxml, application/vnd.uplanet.listcmd, application/vnd.uplanet.listcmd-wbxml, application/vnd.uplanet.signal, application/vnd.uri-map, application/vnd.valve.source.material, application/vnd.vcx, application/vnd.vd-study, application/vnd.vectorworks, application/vnd.vel+json, application/vnd.verimatrix.vcas, application/vnd.vidsoft.vidconference, application/vnd.visio, application/vnd.visionary, application/vnd.vividence.scriptfile, application/vnd.vsf, application/vnd.wap.sic, application/vnd.wap.slc, application/vnd.wap.wbxml, application/vnd.wap.wmlc, application/vnd.wap.wmlscriptc, application/vnd.webturbo, application/vnd.wfa.p2p, application/vnd.wfa.wsc, application/vnd.windows.devicepairing, application/vnd.wmc, application/vnd.wmf.bootstrap, application/vnd.wolfram.mathematica, application/vnd.wolfram.mathematica.package, application/vnd.wolfram.player, application/vnd.wordperfect, application/vnd.wqd, application/vnd.wrq-hp3000-labelled, application/vnd.wt.stf, application/vnd.wv.csp+wbxml, application/vnd.wv.csp+xml, application/vnd.wv.ssp+xml, application/vnd.xacml+json, application/vnd.xara, application/vnd.xfdl, application/vnd.xfdl.webform, application/vnd.xmi+xml, application/vnd.xmpie.cpkg, application/vnd.xmpie.dpkg, application/vnd.xmpie.plan, application/vnd.xmpie.ppkg, application/vnd.xmpie.xlim, application/vnd.yamaha.hv-dic, application/vnd.yamaha.hv-script, application/vnd.yamaha.hv-voice, application/vnd.yamaha.openscoreformat, application/vnd.yamaha.openscoreformat.osfpvg+xml, application/vnd.yamaha.remote-setup, application/vnd.yamaha.smaf-audio, application/vnd.yamaha.smaf-phrase, application/vnd.yamaha.through-ngn, application/vnd.yamaha.tunnel-udpencap, application/vnd.yaoweme, application/vnd.yellowriver-custom-menu, application/vnd.youtube.yt, application/vnd.zul, application/vnd.zzazz.deck+xml, application/voicexml+xml, application/voucher-cms+json, application/vq-rtcpxr, application/wasm, application/watcherinfo+xml, application/webpush-options+json, application/whoispp-query, application/whoispp-response, application/widget, application/winhlp, application/wita, application/wordperfect5.1, application/wsdl+xml, application/wspolicy+xml, application/x-7z-compressed, application/x-abiword, application/x-ace-compressed, application/x-amf, application/x-apple-diskimage, application/x-arj, application/x-authorware-bin, application/x-authorware-map, application/x-authorware-seg, application/x-bcpio, application/x-bdoc, application/x-bittorrent, application/x-blorb, application/x-bzip, application/x-bzip2, application/x-cbr, application/x-cdlink, application/x-cfs-compressed, application/x-chat, application/x-chess-pgn, application/x-chrome-extension, application/x-cocoa, application/x-compress, application/x-conference, application/x-cpio, application/x-csh, application/x-deb, application/x-debian-package, application/x-dgc-compressed, application/x-director, application/x-doom, application/x-dtbncx+xml, application/x-dtbook+xml, application/x-dtbresource+xml, application/x-dvi, application/x-envoy, application/x-eva, application/x-font-bdf, application/x-font-dos, application/x-font-framemaker, application/x-font-ghostscript, application/x-font-libgrx, application/x-font-linux-psf, application/x-font-pcf, application/x-font-snf, application/x-font-speedo, application/x-font-sunos-news, application/x-font-type1, application/x-font-vfont, application/x-freearc, application/x-futuresplash, application/x-gca-compressed, application/x-glulx, application/x-gnumeric, application/x-gramps-xml, application/x-gtar, application/x-gzip, application/x-hdf, application/x-httpd-php, application/x-install-instructions, application/x-iso9660-image, application/x-java-archive-diff, application/x-java-jnlp-file, application/x-javascript, application/x-latex, application/x-lua-bytecode, application/x-lzh-compressed, application/x-makeself, application/x-mie, application/x-mobipocket-ebook, application/x-mpegurl, application/x-ms-application, application/x-ms-shortcut, application/x-ms-wmd, application/x-ms-wmz, application/x-ms-xbap, application/x-msaccess, application/x-msbinder, application/x-mscardfile, application/x-msclip, application/x-msdos-program, application/x-msdownload, application/x-msmediaview, application/x-msmetafile, application/x-msmoney, application/x-mspublisher, application/x-msschedule, application/x-msterminal, application/x-mswrite, application/x-netcdf, application/x-ns-proxy-autoconfig, application/x-nzb, application/x-perl, application/x-pilot, application/x-pkcs12, application/x-pkcs7-certificates, application/x-pkcs7-certreqresp, application/x-rar-compressed, application/x-redhat-package-manager, application/x-research-info-systems, application/x-sea, application/x-sh, application/x-shar, application/x-shockwave-flash, application/x-silverlight-app, application/x-sql, application/x-stuffit, application/x-stuffitx, application/x-subrip, application/x-sv4cpio, application/x-sv4crc, application/x-t3vm-image, application/x-tads, application/x-tar, application/x-tcl, application/x-tex, application/x-tex-tfm, application/x-texinfo, application/x-tgif, application/x-ustar, application/x-virtualbox-hdd, application/x-virtualbox-ova, application/x-virtualbox-ovf, application/x-virtualbox-vbox, application/x-virtualbox-vbox-extpack, application/x-virtualbox-vdi, application/x-virtualbox-vhd, application/x-virtualbox-vmdk, application/x-wais-source, application/x-web-app-manifest+json, application/x-www-form-urlencoded, application/x-x509-ca-cert, application/x-xfig, application/x-xliff+xml, application/x-xpinstall, application/x-xz, application/x-zmachine, application/x400-bp, application/xacml+xml, application/xaml+xml, application/xcap-att+xml, application/xcap-caps+xml, application/xcap-diff+xml, application/xcap-el+xml, application/xcap-error+xml, application/xcap-ns+xml, application/xcon-conference-info+xml, application/xcon-conference-info-diff+xml, application/xenc+xml, application/xhtml+xml, application/xhtml-voice+xml, application/xliff+xml, application/xml, application/xml-dtd, application/xml-external-parsed-entity, application/xml-patch+xml, application/xmpp+xml, application/xop+xml, application/xproc+xml, application/xslt+xml, application/xspf+xml, application/xv+xml, application/yang, application/yang-data+json, application/yang-data+xml, application/yang-patch+json, application/yang-patch+xml, application/yin+xml, application/zip, application/zlib, application/zstd, audio/1d-interleaved-parityfec, audio/32kadpcm, audio/3gpp, audio/3gpp2, audio/aac, audio/ac3, audio/adpcm, audio/amr, audio/amr-wb, audio/amr-wb+, audio/aptx, audio/asc, audio/atrac-advanced-lossless, audio/atrac-x, audio/atrac3, audio/basic, audio/bv16, audio/bv32, audio/clearmode, audio/cn, audio/dat12, audio/dls, audio/dsr-es201108, audio/dsr-es202050, audio/dsr-es202211, audio/dsr-es202212, audio/dv, audio/dvi4, audio/eac3, audio/encaprtp, audio/evrc, audio/evrc-qcp, audio/evrc0, audio/evrc1, audio/evrcb, audio/evrcb0, audio/evrcb1, audio/evrcnw, audio/evrcnw0, audio/evrcnw1, audio/evrcwb, audio/evrcwb0, audio/evrcwb1, audio/evs, audio/fwdred, audio/g711-0, audio/g719, audio/g722, audio/g7221, audio/g723, audio/g726-16, audio/g726-24, audio/g726-32, audio/g726-40, audio/g728, audio/g729, audio/g7291, audio/g729d, audio/g729e, audio/gsm, audio/gsm-efr, audio/gsm-hr-08, audio/ilbc, audio/ip-mr_v2.5, audio/isac, audio/l16, audio/l20, audio/l24, audio/l8, audio/lpc, audio/melp, audio/melp1200, audio/melp2400, audio/melp600, audio/midi, audio/mobile-xmf, audio/mp3, audio/mp4, audio/mp4a-latm, audio/mpa, audio/mpa-robust, audio/mpeg, audio/mpeg4-generic, audio/musepack, audio/ogg, audio/opus, audio/parityfec, audio/pcma, audio/pcma-wb, audio/pcmu, audio/pcmu-wb, audio/prs.sid, audio/qcelp, audio/raptorfec, audio/red, audio/rtp-enc-aescm128, audio/rtp-midi, audio/rtploopback, audio/rtx, audio/s3m, audio/silk, audio/smv, audio/smv-qcp, audio/smv0, audio/sp-midi, audio/speex, audio/t140c, audio/t38, audio/telephone-event, audio/tone, audio/uemclip, audio/ulpfec, audio/usac, audio/vdvi, audio/vmr-wb, audio/vnd.3gpp.iufp, audio/vnd.4sb, audio/vnd.audiokoz, audio/vnd.celp, audio/vnd.cisco.nse, audio/vnd.cmles.radio-events, audio/vnd.cns.anp1, audio/vnd.cns.inf1, audio/vnd.dece.audio, audio/vnd.digital-winds, audio/vnd.dlna.adts, audio/vnd.dolby.heaac.1, audio/vnd.dolby.heaac.2, audio/vnd.dolby.mlp, audio/vnd.dolby.mps, audio/vnd.dolby.pl2, audio/vnd.dolby.pl2x, audio/vnd.dolby.pl2z, audio/vnd.dolby.pulse.1, audio/vnd.dra, audio/vnd.dts, audio/vnd.dts.hd, audio/vnd.dvb.file, audio/vnd.everad.plj, audio/vnd.hns.audio, audio/vnd.lucent.voice, audio/vnd.ms-playready.media.pya, audio/vnd.nokia.mobile-xmf, audio/vnd.nortel.vbk, audio/vnd.nuera.ecelp4800, audio/vnd.nuera.ecelp7470, audio/vnd.nuera.ecelp9600, audio/vnd.octel.sbc, audio/vnd.presonus.multitrack, audio/vnd.qcelp, audio/vnd.rhetorex.32kadpcm, audio/vnd.rip, audio/vnd.rn-realaudio, audio/vnd.sealedmedia.softseal.mpeg, audio/vnd.vmx.cvsd, audio/vnd.wave, audio/vorbis, audio/vorbis-config, audio/wav, audio/wave, audio/webm, audio/x-aac, audio/x-aiff, audio/x-caf, audio/x-flac, audio/x-m4a, audio/x-matroska, audio/x-mpegurl, audio/x-ms-wax, audio/x-ms-wma, audio/x-pn-realaudio, audio/x-pn-realaudio-plugin, audio/x-realaudio, audio/x-tta, audio/x-wav, audio/xm, chemical/x-cdx, chemical/x-cif, chemical/x-cmdf, chemical/x-cml, chemical/x-csml, chemical/x-pdb, chemical/x-xyz, font/collection, font/otf, font/sfnt, font/ttf, font/woff, font/woff2, image/aces, image/apng, image/avci, image/avcs, image/bmp, image/cgm, image/dicom-rle, image/emf, image/fits, image/g3fax, image/gif, image/heic, image/heic-sequence, image/heif, image/heif-sequence, image/ief, image/jls, image/jp2, image/jpeg, image/jpm, image/jpx, image/ktx, image/naplps, image/pjpeg, image/png, image/prs.btif, image/prs.pti, image/pwg-raster, image/sgi, image/svg+xml, image/t38, image/tiff, image/tiff-fx, image/vnd.adobe.photoshop, image/vnd.airzip.accelerator.azv, image/vnd.cns.inf2, image/vnd.dece.graphic, image/vnd.djvu, image/vnd.dvb.subtitle, image/vnd.dwg, image/vnd.dxf, image/vnd.fastbidsheet, image/vnd.fpx, image/vnd.fst, image/vnd.fujixerox.edmics-mmr, image/vnd.fujixerox.edmics-rlc, image/vnd.globalgraphics.pgb, image/vnd.microsoft.icon, image/vnd.mix, image/vnd.mozilla.apng, image/vnd.ms-modi, image/vnd.ms-photo, image/vnd.net-fpx, image/vnd.radiance, image/vnd.sealed.png, image/vnd.sealedmedia.softseal.gif, image/vnd.sealedmedia.softseal.jpg, image/vnd.svf, image/vnd.tencent.tap, image/vnd.valve.source.texture, image/vnd.wap.wbmp, image/vnd.xiff, image/vnd.zbrush.pcx, image/webp, image/wmf, image/x-3ds, image/x-cmu-raster, image/x-cmx, image/x-freehand, image/x-icon, image/x-jng, image/x-mrsid-image, image/x-ms-bmp, image/x-pcx, image/x-pict, image/x-portable-anymap, image/x-portable-bitmap, image/x-portable-graymap, image/x-portable-pixmap, image/x-rgb, image/x-tga, image/x-xbitmap, image/x-xcf, image/x-xpixmap, image/x-xwindowdump, message/cpim, message/delivery-status, message/disposition-notification, message/external-body, message/feedback-report, message/global, message/global-delivery-status, message/global-disposition-notification, message/global-headers, message/http, message/imdn+xml, message/news, message/partial, message/rfc822, message/s-http, message/sip, message/sipfrag, message/tracking-status, message/vnd.si.simp, message/vnd.wfa.wsc, model/3mf, model/gltf+json, model/gltf-binary, model/iges, model/mesh, model/stl, model/vnd.collada+xml, model/vnd.dwf, model/vnd.flatland.3dml, model/vnd.gdl, model/vnd.gs-gdl, model/vnd.gs.gdl, model/vnd.gtw, model/vnd.moml+xml, model/vnd.mts, model/vnd.opengex, model/vnd.parasolid.transmit.binary, model/vnd.parasolid.transmit.text, model/vnd.rosette.annotated-data-model, model/vnd.usdz+zip, model/vnd.valve.source.compiled-map, model/vnd.vtu, model/vrml, model/x3d+binary, model/x3d+fastinfoset, model/x3d+vrml, model/x3d+xml, model/x3d-vrml, multipart/alternative, multipart/appledouble, multipart/byteranges, multipart/digest, multipart/encrypted, multipart/form-data, multipart/header-set, multipart/mixed, multipart/multilingual, multipart/parallel, multipart/related, multipart/report, multipart/signed, multipart/vnd.bint.med-plus, multipart/voice-message, multipart/x-mixed-replace, text/1d-interleaved-parityfec, text/cache-manifest, text/calendar, text/calender, text/cmd, text/coffeescript, text/css, text/csv, text/csv-schema, text/directory, text/dns, text/ecmascript, text/encaprtp, text/enriched, text/fwdred, text/grammar-ref-list, text/html, text/jade, text/javascript, text/jcr-cnd, text/jsx, text/less, text/markdown, text/mathml, text/mizar, text/n3, text/parameters, text/parityfec, text/plain, text/provenance-notation, text/prs.fallenstein.rst, text/prs.lines.tag, text/prs.prop.logic, text/raptorfec, text/red, text/rfc822-headers, text/richtext, text/rtf, text/rtp-enc-aescm128, text/rtploopback, text/rtx, text/sgml, text/shex, text/slim, text/strings, text/stylus, text/t140, text/tab-separated-values, text/troff, text/turtle, text/ulpfec, text/uri-list, text/vcard, text/vnd.a, text/vnd.abc, text/vnd.ascii-art, text/vnd.curl, text/vnd.curl.dcurl, text/vnd.curl.mcurl, text/vnd.curl.scurl, text/vnd.debian.copyright, text/vnd.dmclientscript, text/vnd.dvb.subtitle, text/vnd.esmertec.theme-descriptor, text/vnd.fly, text/vnd.fmi.flexstor, text/vnd.gml, text/vnd.graphviz, text/vnd.hgl, text/vnd.in3d.3dml, text/vnd.in3d.spot, text/vnd.iptc.newsml, text/vnd.iptc.nitf, text/vnd.latex-z, text/vnd.motorola.reflex, text/vnd.ms-mediapackage, text/vnd.net2phone.commcenter.command, text/vnd.radisys.msml-basic-layout, text/vnd.si.uricatalogue, text/vnd.sun.j2me.app-descriptor, text/vnd.trolltech.linguist, text/vnd.wap.si, text/vnd.wap.sl, text/vnd.wap.wml, text/vnd.wap.wmlscript, text/vtt, text/x-asm, text/x-c, text/x-component, text/x-fortran, text/x-gwt-rpc, text/x-handlebars-template, text/x-java-source, text/x-jquery-tmpl, text/x-lua, text/x-markdown, text/x-nfo, text/x-opml, text/x-org, text/x-pascal, text/x-processing, text/x-sass, text/x-scss, text/x-setext, text/x-sfv, text/x-suse-ymp, text/x-uuencode, text/x-vcalendar, text/x-vcard, text/xml, text/xml-external-parsed-entity, text/yaml, video/1d-interleaved-parityfec, video/3gpp, video/3gpp-tt, video/3gpp2, video/bmpeg, video/bt656, video/celb, video/dv, video/encaprtp, video/h261, video/h263, video/h263-1998, video/h263-2000, video/h264, video/h264-rcdo, video/h264-svc, video/h265, video/iso.segment, video/jpeg, video/jpeg2000, video/jpm, video/mj2, video/mp1s, video/mp2p, video/mp2t, video/mp4, video/mp4v-es, video/mpeg, video/mpeg4-generic, video/mpv, video/nv, video/ogg, video/parityfec, video/pointer, video/quicktime, video/raptorfec, video/raw, video/rtp-enc-aescm128, video/rtploopback, video/rtx, video/smpte291, video/smpte292m, video/ulpfec, video/vc1, video/vc2, video/vnd.cctv, video/vnd.dece.hd, video/vnd.dece.mobile, video/vnd.dece.mp4, video/vnd.dece.pd, video/vnd.dece.sd, video/vnd.dece.video, video/vnd.directv.mpeg, video/vnd.directv.mpeg-tts, video/vnd.dlna.mpeg-tts, video/vnd.dvb.file, video/vnd.fvt, video/vnd.hns.video, video/vnd.iptvforum.1dparityfec-1010, video/vnd.iptvforum.1dparityfec-2005, video/vnd.iptvforum.2dparityfec-1010, video/vnd.iptvforum.2dparityfec-2005, video/vnd.iptvforum.ttsavc, video/vnd.iptvforum.ttsmpeg2, video/vnd.motorola.video, video/vnd.motorola.videop, video/vnd.mpegurl, video/vnd.ms-playready.media.pyv, video/vnd.nokia.interleaved-multimedia, video/vnd.nokia.mp4vr, video/vnd.nokia.videovoip, video/vnd.objectvideo, video/vnd.radgamettools.bink, video/vnd.radgamettools.smacker, video/vnd.sealed.mpeg1, video/vnd.sealed.mpeg4, video/vnd.sealed.swf, video/vnd.sealedmedia.softseal.mov, video/vnd.uvvu.mp4, video/vnd.vivo, video/vp8, video/webm, video/x-f4v, video/x-fli, video/x-flv, video/x-m4v, video/x-matroska, video/x-mng, video/x-ms-asf, video/x-ms-vob, video/x-ms-wm, video/x-ms-wmv, video/x-ms-wmx, video/x-ms-wvx, video/x-msvideo, video/x-sgi-movie, video/x-smv, x-conference/x-cooltalk, x-shader/x-fragment, x-shader/x-vertex, default */
        /***/ function(module) {
          module.exports = {
            'application/1d-interleaved-parityfec': { source: 'iana' },
            'application/3gpdash-qoe-report+xml': {
              source: 'iana',
              compressible: true
            },
            'application/3gpp-ims+xml': { source: 'iana', compressible: true },
            'application/a2l': { source: 'iana' },
            'application/activemessage': { source: 'iana' },
            'application/activity+json': { source: 'iana', compressible: true },
            'application/alto-costmap+json': {
              source: 'iana',
              compressible: true
            },
            'application/alto-costmapfilter+json': {
              source: 'iana',
              compressible: true
            },
            'application/alto-directory+json': {
              source: 'iana',
              compressible: true
            },
            'application/alto-endpointcost+json': {
              source: 'iana',
              compressible: true
            },
            'application/alto-endpointcostparams+json': {
              source: 'iana',
              compressible: true
            },
            'application/alto-endpointprop+json': {
              source: 'iana',
              compressible: true
            },
            'application/alto-endpointpropparams+json': {
              source: 'iana',
              compressible: true
            },
            'application/alto-error+json': {
              source: 'iana',
              compressible: true
            },
            'application/alto-networkmap+json': {
              source: 'iana',
              compressible: true
            },
            'application/alto-networkmapfilter+json': {
              source: 'iana',
              compressible: true
            },
            'application/aml': { source: 'iana' },
            'application/andrew-inset': { source: 'iana', extensions: ['ez'] },
            'application/applefile': { source: 'iana' },
            'application/applixware': { source: 'apache', extensions: ['aw'] },
            'application/atf': { source: 'iana' },
            'application/atfx': { source: 'iana' },
            'application/atom+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['atom']
            },
            'application/atomcat+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['atomcat']
            },
            'application/atomdeleted+xml': {
              source: 'iana',
              compressible: true
            },
            'application/atomicmail': { source: 'iana' },
            'application/atomsvc+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['atomsvc']
            },
            'application/atxml': { source: 'iana' },
            'application/auth-policy+xml': {
              source: 'iana',
              compressible: true
            },
            'application/bacnet-xdd+zip': {
              source: 'iana',
              compressible: false
            },
            'application/batch-smtp': { source: 'iana' },
            'application/bdoc': { compressible: false, extensions: ['bdoc'] },
            'application/beep+xml': { source: 'iana', compressible: true },
            'application/calendar+json': { source: 'iana', compressible: true },
            'application/calendar+xml': { source: 'iana', compressible: true },
            'application/call-completion': { source: 'iana' },
            'application/cals-1840': { source: 'iana' },
            'application/cbor': { source: 'iana' },
            'application/cccex': { source: 'iana' },
            'application/ccmp+xml': { source: 'iana', compressible: true },
            'application/ccxml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['ccxml']
            },
            'application/cdfx+xml': { source: 'iana', compressible: true },
            'application/cdmi-capability': {
              source: 'iana',
              extensions: ['cdmia']
            },
            'application/cdmi-container': {
              source: 'iana',
              extensions: ['cdmic']
            },
            'application/cdmi-domain': {
              source: 'iana',
              extensions: ['cdmid']
            },
            'application/cdmi-object': {
              source: 'iana',
              extensions: ['cdmio']
            },
            'application/cdmi-queue': { source: 'iana', extensions: ['cdmiq'] },
            'application/cdni': { source: 'iana' },
            'application/cea': { source: 'iana' },
            'application/cea-2018+xml': { source: 'iana', compressible: true },
            'application/cellml+xml': { source: 'iana', compressible: true },
            'application/cfw': { source: 'iana' },
            'application/clue_info+xml': { source: 'iana', compressible: true },
            'application/cms': { source: 'iana' },
            'application/cnrp+xml': { source: 'iana', compressible: true },
            'application/coap-group+json': {
              source: 'iana',
              compressible: true
            },
            'application/coap-payload': { source: 'iana' },
            'application/commonground': { source: 'iana' },
            'application/conference-info+xml': {
              source: 'iana',
              compressible: true
            },
            'application/cose': { source: 'iana' },
            'application/cose-key': { source: 'iana' },
            'application/cose-key-set': { source: 'iana' },
            'application/cpl+xml': { source: 'iana', compressible: true },
            'application/csrattrs': { source: 'iana' },
            'application/csta+xml': { source: 'iana', compressible: true },
            'application/cstadata+xml': { source: 'iana', compressible: true },
            'application/csvm+json': { source: 'iana', compressible: true },
            'application/cu-seeme': { source: 'apache', extensions: ['cu'] },
            'application/cwt': { source: 'iana' },
            'application/cybercash': { source: 'iana' },
            'application/dart': { compressible: true },
            'application/dash+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['mpd']
            },
            'application/dashdelta': { source: 'iana' },
            'application/davmount+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['davmount']
            },
            'application/dca-rft': { source: 'iana' },
            'application/dcd': { source: 'iana' },
            'application/dec-dx': { source: 'iana' },
            'application/dialog-info+xml': {
              source: 'iana',
              compressible: true
            },
            'application/dicom': { source: 'iana' },
            'application/dicom+json': { source: 'iana', compressible: true },
            'application/dicom+xml': { source: 'iana', compressible: true },
            'application/dii': { source: 'iana' },
            'application/dit': { source: 'iana' },
            'application/dns': { source: 'iana' },
            'application/dns+json': { source: 'iana', compressible: true },
            'application/dns-message': { source: 'iana' },
            'application/docbook+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['dbk']
            },
            'application/dskpp+xml': { source: 'iana', compressible: true },
            'application/dssc+der': { source: 'iana', extensions: ['dssc'] },
            'application/dssc+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xdssc']
            },
            'application/dvcs': { source: 'iana' },
            'application/ecmascript': {
              source: 'iana',
              compressible: true,
              extensions: ['ecma', 'es']
            },
            'application/edi-consent': { source: 'iana' },
            'application/edi-x12': { source: 'iana', compressible: false },
            'application/edifact': { source: 'iana', compressible: false },
            'application/efi': { source: 'iana' },
            'application/emergencycalldata.comment+xml': {
              source: 'iana',
              compressible: true
            },
            'application/emergencycalldata.control+xml': {
              source: 'iana',
              compressible: true
            },
            'application/emergencycalldata.deviceinfo+xml': {
              source: 'iana',
              compressible: true
            },
            'application/emergencycalldata.ecall.msd': { source: 'iana' },
            'application/emergencycalldata.providerinfo+xml': {
              source: 'iana',
              compressible: true
            },
            'application/emergencycalldata.serviceinfo+xml': {
              source: 'iana',
              compressible: true
            },
            'application/emergencycalldata.subscriberinfo+xml': {
              source: 'iana',
              compressible: true
            },
            'application/emergencycalldata.veds+xml': {
              source: 'iana',
              compressible: true
            },
            'application/emma+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['emma']
            },
            'application/emotionml+xml': { source: 'iana', compressible: true },
            'application/encaprtp': { source: 'iana' },
            'application/epp+xml': { source: 'iana', compressible: true },
            'application/epub+zip': {
              source: 'iana',
              compressible: false,
              extensions: ['epub']
            },
            'application/eshop': { source: 'iana' },
            'application/exi': { source: 'iana', extensions: ['exi'] },
            'application/fastinfoset': { source: 'iana' },
            'application/fastsoap': { source: 'iana' },
            'application/fdt+xml': { source: 'iana', compressible: true },
            'application/fhir+json': { source: 'iana', compressible: true },
            'application/fhir+xml': { source: 'iana', compressible: true },
            'application/fido.trusted-apps+json': { compressible: true },
            'application/fits': { source: 'iana' },
            'application/font-sfnt': { source: 'iana' },
            'application/font-tdpfr': { source: 'iana', extensions: ['pfr'] },
            'application/font-woff': { source: 'iana', compressible: false },
            'application/framework-attributes+xml': {
              source: 'iana',
              compressible: true
            },
            'application/geo+json': {
              source: 'iana',
              compressible: true,
              extensions: ['geojson']
            },
            'application/geo+json-seq': { source: 'iana' },
            'application/geopackage+sqlite3': { source: 'iana' },
            'application/geoxacml+xml': { source: 'iana', compressible: true },
            'application/gltf-buffer': { source: 'iana' },
            'application/gml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['gml']
            },
            'application/gpx+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['gpx']
            },
            'application/gxf': { source: 'apache', extensions: ['gxf'] },
            'application/gzip': {
              source: 'iana',
              compressible: false,
              extensions: ['gz']
            },
            'application/h224': { source: 'iana' },
            'application/held+xml': { source: 'iana', compressible: true },
            'application/hjson': { extensions: ['hjson'] },
            'application/http': { source: 'iana' },
            'application/hyperstudio': { source: 'iana', extensions: ['stk'] },
            'application/ibe-key-request+xml': {
              source: 'iana',
              compressible: true
            },
            'application/ibe-pkg-reply+xml': {
              source: 'iana',
              compressible: true
            },
            'application/ibe-pp-data': { source: 'iana' },
            'application/iges': { source: 'iana' },
            'application/im-iscomposing+xml': {
              source: 'iana',
              compressible: true
            },
            'application/index': { source: 'iana' },
            'application/index.cmd': { source: 'iana' },
            'application/index.obj': { source: 'iana' },
            'application/index.response': { source: 'iana' },
            'application/index.vnd': { source: 'iana' },
            'application/inkml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['ink', 'inkml']
            },
            'application/iotp': { source: 'iana' },
            'application/ipfix': { source: 'iana', extensions: ['ipfix'] },
            'application/ipp': { source: 'iana' },
            'application/isup': { source: 'iana' },
            'application/its+xml': { source: 'iana', compressible: true },
            'application/java-archive': {
              source: 'apache',
              compressible: false,
              extensions: ['jar', 'war', 'ear']
            },
            'application/java-serialized-object': {
              source: 'apache',
              compressible: false,
              extensions: ['ser']
            },
            'application/java-vm': {
              source: 'apache',
              compressible: false,
              extensions: ['class']
            },
            'application/javascript': {
              source: 'iana',
              charset: 'UTF-8',
              compressible: true,
              extensions: ['js', 'mjs']
            },
            'application/jf2feed+json': { source: 'iana', compressible: true },
            'application/jose': { source: 'iana' },
            'application/jose+json': { source: 'iana', compressible: true },
            'application/jrd+json': { source: 'iana', compressible: true },
            'application/json': {
              source: 'iana',
              charset: 'UTF-8',
              compressible: true,
              extensions: ['json', 'map']
            },
            'application/json-patch+json': {
              source: 'iana',
              compressible: true
            },
            'application/json-seq': { source: 'iana' },
            'application/json5': { extensions: ['json5'] },
            'application/jsonml+json': {
              source: 'apache',
              compressible: true,
              extensions: ['jsonml']
            },
            'application/jwk+json': { source: 'iana', compressible: true },
            'application/jwk-set+json': { source: 'iana', compressible: true },
            'application/jwt': { source: 'iana' },
            'application/kpml-request+xml': {
              source: 'iana',
              compressible: true
            },
            'application/kpml-response+xml': {
              source: 'iana',
              compressible: true
            },
            'application/ld+json': {
              source: 'iana',
              compressible: true,
              extensions: ['jsonld']
            },
            'application/lgr+xml': { source: 'iana', compressible: true },
            'application/link-format': { source: 'iana' },
            'application/load-control+xml': {
              source: 'iana',
              compressible: true
            },
            'application/lost+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['lostxml']
            },
            'application/lostsync+xml': { source: 'iana', compressible: true },
            'application/lxf': { source: 'iana' },
            'application/mac-binhex40': { source: 'iana', extensions: ['hqx'] },
            'application/mac-compactpro': {
              source: 'apache',
              extensions: ['cpt']
            },
            'application/macwriteii': { source: 'iana' },
            'application/mads+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['mads']
            },
            'application/manifest+json': {
              charset: 'UTF-8',
              compressible: true,
              extensions: ['webmanifest']
            },
            'application/marc': { source: 'iana', extensions: ['mrc'] },
            'application/marcxml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['mrcx']
            },
            'application/mathematica': {
              source: 'iana',
              extensions: ['ma', 'nb', 'mb']
            },
            'application/mathml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['mathml']
            },
            'application/mathml-content+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mathml-presentation+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-associated-procedure-description+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-deregister+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-envelope+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-msk+xml': { source: 'iana', compressible: true },
            'application/mbms-msk-response+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-protection-description+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-reception-report+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-register+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-register-response+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-schedule+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbms-user-service-description+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mbox': { source: 'iana', extensions: ['mbox'] },
            'application/media-policy-dataset+xml': {
              source: 'iana',
              compressible: true
            },
            'application/media_control+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mediaservercontrol+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['mscml']
            },
            'application/merge-patch+json': {
              source: 'iana',
              compressible: true
            },
            'application/metalink+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['metalink']
            },
            'application/metalink4+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['meta4']
            },
            'application/mets+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['mets']
            },
            'application/mf4': { source: 'iana' },
            'application/mikey': { source: 'iana' },
            'application/mmt-usd+xml': { source: 'iana', compressible: true },
            'application/mods+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['mods']
            },
            'application/moss-keys': { source: 'iana' },
            'application/moss-signature': { source: 'iana' },
            'application/mosskey-data': { source: 'iana' },
            'application/mosskey-request': { source: 'iana' },
            'application/mp21': { source: 'iana', extensions: ['m21', 'mp21'] },
            'application/mp4': { source: 'iana', extensions: ['mp4s', 'm4p'] },
            'application/mpeg4-generic': { source: 'iana' },
            'application/mpeg4-iod': { source: 'iana' },
            'application/mpeg4-iod-xmt': { source: 'iana' },
            'application/mrb-consumer+xml': {
              source: 'iana',
              compressible: true
            },
            'application/mrb-publish+xml': {
              source: 'iana',
              compressible: true
            },
            'application/msc-ivr+xml': { source: 'iana', compressible: true },
            'application/msc-mixer+xml': { source: 'iana', compressible: true },
            'application/msword': {
              source: 'iana',
              compressible: false,
              extensions: ['doc', 'dot']
            },
            'application/mud+json': { source: 'iana', compressible: true },
            'application/mxf': { source: 'iana', extensions: ['mxf'] },
            'application/n-quads': { source: 'iana' },
            'application/n-triples': { source: 'iana' },
            'application/nasdata': { source: 'iana' },
            'application/news-checkgroups': { source: 'iana' },
            'application/news-groupinfo': { source: 'iana' },
            'application/news-transmission': { source: 'iana' },
            'application/nlsml+xml': { source: 'iana', compressible: true },
            'application/node': { source: 'iana' },
            'application/nss': { source: 'iana' },
            'application/ocsp-request': { source: 'iana' },
            'application/ocsp-response': { source: 'iana' },
            'application/octet-stream': {
              source: 'iana',
              compressible: false,
              extensions: [
                'bin',
                'dms',
                'lrf',
                'mar',
                'so',
                'dist',
                'distz',
                'pkg',
                'bpk',
                'dump',
                'elc',
                'deploy',
                'exe',
                'dll',
                'deb',
                'dmg',
                'iso',
                'img',
                'msi',
                'msp',
                'msm',
                'buffer'
              ]
            },
            'application/oda': { source: 'iana', extensions: ['oda'] },
            'application/odx': { source: 'iana' },
            'application/oebps-package+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['opf']
            },
            'application/ogg': {
              source: 'iana',
              compressible: false,
              extensions: ['ogx']
            },
            'application/omdoc+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['omdoc']
            },
            'application/onenote': {
              source: 'apache',
              extensions: ['onetoc', 'onetoc2', 'onetmp', 'onepkg']
            },
            'application/oxps': { source: 'iana', extensions: ['oxps'] },
            'application/p2p-overlay+xml': {
              source: 'iana',
              compressible: true
            },
            'application/parityfec': { source: 'iana' },
            'application/passport': { source: 'iana' },
            'application/patch-ops-error+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xer']
            },
            'application/pdf': {
              source: 'iana',
              compressible: false,
              extensions: ['pdf']
            },
            'application/pdx': { source: 'iana' },
            'application/pgp-encrypted': {
              source: 'iana',
              compressible: false,
              extensions: ['pgp']
            },
            'application/pgp-keys': { source: 'iana' },
            'application/pgp-signature': {
              source: 'iana',
              extensions: ['asc', 'sig']
            },
            'application/pics-rules': { source: 'apache', extensions: ['prf'] },
            'application/pidf+xml': { source: 'iana', compressible: true },
            'application/pidf-diff+xml': { source: 'iana', compressible: true },
            'application/pkcs10': { source: 'iana', extensions: ['p10'] },
            'application/pkcs12': { source: 'iana' },
            'application/pkcs7-mime': {
              source: 'iana',
              extensions: ['p7m', 'p7c']
            },
            'application/pkcs7-signature': {
              source: 'iana',
              extensions: ['p7s']
            },
            'application/pkcs8': { source: 'iana', extensions: ['p8'] },
            'application/pkcs8-encrypted': { source: 'iana' },
            'application/pkix-attr-cert': {
              source: 'iana',
              extensions: ['ac']
            },
            'application/pkix-cert': { source: 'iana', extensions: ['cer'] },
            'application/pkix-crl': { source: 'iana', extensions: ['crl'] },
            'application/pkix-pkipath': {
              source: 'iana',
              extensions: ['pkipath']
            },
            'application/pkixcmp': { source: 'iana', extensions: ['pki'] },
            'application/pls+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['pls']
            },
            'application/poc-settings+xml': {
              source: 'iana',
              compressible: true
            },
            'application/postscript': {
              source: 'iana',
              compressible: true,
              extensions: ['ai', 'eps', 'ps']
            },
            'application/ppsp-tracker+json': {
              source: 'iana',
              compressible: true
            },
            'application/problem+json': { source: 'iana', compressible: true },
            'application/problem+xml': { source: 'iana', compressible: true },
            'application/provenance+xml': {
              source: 'iana',
              compressible: true
            },
            'application/prs.alvestrand.titrax-sheet': { source: 'iana' },
            'application/prs.cww': { source: 'iana', extensions: ['cww'] },
            'application/prs.hpub+zip': { source: 'iana', compressible: false },
            'application/prs.nprend': { source: 'iana' },
            'application/prs.plucker': { source: 'iana' },
            'application/prs.rdf-xml-crypt': { source: 'iana' },
            'application/prs.xsf+xml': { source: 'iana', compressible: true },
            'application/pskc+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['pskcxml']
            },
            'application/qsig': { source: 'iana' },
            'application/raml+yaml': {
              compressible: true,
              extensions: ['raml']
            },
            'application/raptorfec': { source: 'iana' },
            'application/rdap+json': { source: 'iana', compressible: true },
            'application/rdf+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['rdf', 'owl']
            },
            'application/reginfo+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['rif']
            },
            'application/relax-ng-compact-syntax': {
              source: 'iana',
              extensions: ['rnc']
            },
            'application/remote-printing': { source: 'iana' },
            'application/reputon+json': { source: 'iana', compressible: true },
            'application/resource-lists+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['rl']
            },
            'application/resource-lists-diff+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['rld']
            },
            'application/rfc+xml': { source: 'iana', compressible: true },
            'application/riscos': { source: 'iana' },
            'application/rlmi+xml': { source: 'iana', compressible: true },
            'application/rls-services+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['rs']
            },
            'application/route-apd+xml': { source: 'iana', compressible: true },
            'application/route-s-tsid+xml': {
              source: 'iana',
              compressible: true
            },
            'application/route-usd+xml': { source: 'iana', compressible: true },
            'application/rpki-ghostbusters': {
              source: 'iana',
              extensions: ['gbr']
            },
            'application/rpki-manifest': {
              source: 'iana',
              extensions: ['mft']
            },
            'application/rpki-publication': { source: 'iana' },
            'application/rpki-roa': { source: 'iana', extensions: ['roa'] },
            'application/rpki-updown': { source: 'iana' },
            'application/rsd+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['rsd']
            },
            'application/rss+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['rss']
            },
            'application/rtf': {
              source: 'iana',
              compressible: true,
              extensions: ['rtf']
            },
            'application/rtploopback': { source: 'iana' },
            'application/rtx': { source: 'iana' },
            'application/samlassertion+xml': {
              source: 'iana',
              compressible: true
            },
            'application/samlmetadata+xml': {
              source: 'iana',
              compressible: true
            },
            'application/sbml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['sbml']
            },
            'application/scaip+xml': { source: 'iana', compressible: true },
            'application/scim+json': { source: 'iana', compressible: true },
            'application/scvp-cv-request': {
              source: 'iana',
              extensions: ['scq']
            },
            'application/scvp-cv-response': {
              source: 'iana',
              extensions: ['scs']
            },
            'application/scvp-vp-request': {
              source: 'iana',
              extensions: ['spq']
            },
            'application/scvp-vp-response': {
              source: 'iana',
              extensions: ['spp']
            },
            'application/sdp': { source: 'iana', extensions: ['sdp'] },
            'application/secevent+jwt': { source: 'iana' },
            'application/senml+cbor': { source: 'iana' },
            'application/senml+json': { source: 'iana', compressible: true },
            'application/senml+xml': { source: 'iana', compressible: true },
            'application/senml-exi': { source: 'iana' },
            'application/sensml+cbor': { source: 'iana' },
            'application/sensml+json': { source: 'iana', compressible: true },
            'application/sensml+xml': { source: 'iana', compressible: true },
            'application/sensml-exi': { source: 'iana' },
            'application/sep+xml': { source: 'iana', compressible: true },
            'application/sep-exi': { source: 'iana' },
            'application/session-info': { source: 'iana' },
            'application/set-payment': { source: 'iana' },
            'application/set-payment-initiation': {
              source: 'iana',
              extensions: ['setpay']
            },
            'application/set-registration': { source: 'iana' },
            'application/set-registration-initiation': {
              source: 'iana',
              extensions: ['setreg']
            },
            'application/sgml': { source: 'iana' },
            'application/sgml-open-catalog': { source: 'iana' },
            'application/shf+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['shf']
            },
            'application/sieve': { source: 'iana' },
            'application/simple-filter+xml': {
              source: 'iana',
              compressible: true
            },
            'application/simple-message-summary': { source: 'iana' },
            'application/simplesymbolcontainer': { source: 'iana' },
            'application/slate': { source: 'iana' },
            'application/smil': { source: 'iana' },
            'application/smil+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['smi', 'smil']
            },
            'application/smpte336m': { source: 'iana' },
            'application/soap+fastinfoset': { source: 'iana' },
            'application/soap+xml': { source: 'iana', compressible: true },
            'application/sparql-query': { source: 'iana', extensions: ['rq'] },
            'application/sparql-results+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['srx']
            },
            'application/spirits-event+xml': {
              source: 'iana',
              compressible: true
            },
            'application/sql': { source: 'iana' },
            'application/srgs': { source: 'iana', extensions: ['gram'] },
            'application/srgs+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['grxml']
            },
            'application/sru+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['sru']
            },
            'application/ssdl+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['ssdl']
            },
            'application/ssml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['ssml']
            },
            'application/stix+json': { source: 'iana', compressible: true },
            'application/tamp-apex-update': { source: 'iana' },
            'application/tamp-apex-update-confirm': { source: 'iana' },
            'application/tamp-community-update': { source: 'iana' },
            'application/tamp-community-update-confirm': { source: 'iana' },
            'application/tamp-error': { source: 'iana' },
            'application/tamp-sequence-adjust': { source: 'iana' },
            'application/tamp-sequence-adjust-confirm': { source: 'iana' },
            'application/tamp-status-query': { source: 'iana' },
            'application/tamp-status-response': { source: 'iana' },
            'application/tamp-update': { source: 'iana' },
            'application/tamp-update-confirm': { source: 'iana' },
            'application/tar': { compressible: true },
            'application/taxii+json': { source: 'iana', compressible: true },
            'application/tei+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['tei', 'teicorpus']
            },
            'application/thraud+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['tfi']
            },
            'application/timestamp-query': { source: 'iana' },
            'application/timestamp-reply': { source: 'iana' },
            'application/timestamped-data': {
              source: 'iana',
              extensions: ['tsd']
            },
            'application/tlsrpt+gzip': { source: 'iana' },
            'application/tlsrpt+json': { source: 'iana', compressible: true },
            'application/tnauthlist': { source: 'iana' },
            'application/trickle-ice-sdpfrag': { source: 'iana' },
            'application/trig': { source: 'iana' },
            'application/ttml+xml': { source: 'iana', compressible: true },
            'application/tve-trigger': { source: 'iana' },
            'application/ulpfec': { source: 'iana' },
            'application/urc-grpsheet+xml': {
              source: 'iana',
              compressible: true
            },
            'application/urc-ressheet+xml': {
              source: 'iana',
              compressible: true
            },
            'application/urc-targetdesc+xml': {
              source: 'iana',
              compressible: true
            },
            'application/urc-uisocketdesc+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vcard+json': { source: 'iana', compressible: true },
            'application/vcard+xml': { source: 'iana', compressible: true },
            'application/vemmi': { source: 'iana' },
            'application/vividence.scriptfile': { source: 'apache' },
            'application/vnd.1000minds.decision-model+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp-prose+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp-prose-pc3ch+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp-v2x-local-service-information': {
              source: 'iana'
            },
            'application/vnd.3gpp.access-transfer-events+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.bsf+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.gmop+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.mc-signalling-ear': { source: 'iana' },
            'application/vnd.3gpp.mcdata-payload': { source: 'iana' },
            'application/vnd.3gpp.mcdata-signalling': { source: 'iana' },
            'application/vnd.3gpp.mcptt-affiliation-command+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.mcptt-floor-request+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.mcptt-info+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.mcptt-location-info+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.mcptt-mbms-usage-info+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.mcptt-signed+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.mid-call+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.pic-bw-large': {
              source: 'iana',
              extensions: ['plb']
            },
            'application/vnd.3gpp.pic-bw-small': {
              source: 'iana',
              extensions: ['psb']
            },
            'application/vnd.3gpp.pic-bw-var': {
              source: 'iana',
              extensions: ['pvb']
            },
            'application/vnd.3gpp.sms': { source: 'iana' },
            'application/vnd.3gpp.sms+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.srvcc-ext+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.srvcc-info+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.state-and-event-info+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp.ussd+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp2.bcmcsinfo+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.3gpp2.sms': { source: 'iana' },
            'application/vnd.3gpp2.tcap': {
              source: 'iana',
              extensions: ['tcap']
            },
            'application/vnd.3lightssoftware.imagescal': { source: 'iana' },
            'application/vnd.3m.post-it-notes': {
              source: 'iana',
              extensions: ['pwn']
            },
            'application/vnd.accpac.simply.aso': {
              source: 'iana',
              extensions: ['aso']
            },
            'application/vnd.accpac.simply.imp': {
              source: 'iana',
              extensions: ['imp']
            },
            'application/vnd.acucobol': { source: 'iana', extensions: ['acu'] },
            'application/vnd.acucorp': {
              source: 'iana',
              extensions: ['atc', 'acutc']
            },
            'application/vnd.adobe.air-application-installer-package+zip': {
              source: 'apache',
              compressible: false,
              extensions: ['air']
            },
            'application/vnd.adobe.flash.movie': { source: 'iana' },
            'application/vnd.adobe.formscentral.fcdt': {
              source: 'iana',
              extensions: ['fcdt']
            },
            'application/vnd.adobe.fxp': {
              source: 'iana',
              extensions: ['fxp', 'fxpl']
            },
            'application/vnd.adobe.partial-upload': { source: 'iana' },
            'application/vnd.adobe.xdp+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xdp']
            },
            'application/vnd.adobe.xfdf': {
              source: 'iana',
              extensions: ['xfdf']
            },
            'application/vnd.aether.imp': { source: 'iana' },
            'application/vnd.afpc.afplinedata': { source: 'iana' },
            'application/vnd.afpc.modca': { source: 'iana' },
            'application/vnd.ah-barcode': { source: 'iana' },
            'application/vnd.ahead.space': {
              source: 'iana',
              extensions: ['ahead']
            },
            'application/vnd.airzip.filesecure.azf': {
              source: 'iana',
              extensions: ['azf']
            },
            'application/vnd.airzip.filesecure.azs': {
              source: 'iana',
              extensions: ['azs']
            },
            'application/vnd.amadeus+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.amazon.ebook': {
              source: 'apache',
              extensions: ['azw']
            },
            'application/vnd.amazon.mobi8-ebook': { source: 'iana' },
            'application/vnd.americandynamics.acc': {
              source: 'iana',
              extensions: ['acc']
            },
            'application/vnd.amiga.ami': {
              source: 'iana',
              extensions: ['ami']
            },
            'application/vnd.amundsen.maze+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.android.package-archive': {
              source: 'apache',
              compressible: false,
              extensions: ['apk']
            },
            'application/vnd.anki': { source: 'iana' },
            'application/vnd.anser-web-certificate-issue-initiation': {
              source: 'iana',
              extensions: ['cii']
            },
            'application/vnd.anser-web-funds-transfer-initiation': {
              source: 'apache',
              extensions: ['fti']
            },
            'application/vnd.antix.game-component': {
              source: 'iana',
              extensions: ['atx']
            },
            'application/vnd.apache.thrift.binary': { source: 'iana' },
            'application/vnd.apache.thrift.compact': { source: 'iana' },
            'application/vnd.apache.thrift.json': { source: 'iana' },
            'application/vnd.api+json': { source: 'iana', compressible: true },
            'application/vnd.apothekende.reservation+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.apple.installer+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['mpkg']
            },
            'application/vnd.apple.keynote': {
              source: 'iana',
              extensions: ['keynote']
            },
            'application/vnd.apple.mpegurl': {
              source: 'iana',
              extensions: ['m3u8']
            },
            'application/vnd.apple.numbers': {
              source: 'iana',
              extensions: ['numbers']
            },
            'application/vnd.apple.pages': {
              source: 'iana',
              extensions: ['pages']
            },
            'application/vnd.apple.pkpass': {
              compressible: false,
              extensions: ['pkpass']
            },
            'application/vnd.arastra.swi': { source: 'iana' },
            'application/vnd.aristanetworks.swi': {
              source: 'iana',
              extensions: ['swi']
            },
            'application/vnd.artisan+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.artsquare': { source: 'iana' },
            'application/vnd.astraea-software.iota': {
              source: 'iana',
              extensions: ['iota']
            },
            'application/vnd.audiograph': {
              source: 'iana',
              extensions: ['aep']
            },
            'application/vnd.autopackage': { source: 'iana' },
            'application/vnd.avalon+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.avistar+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.balsamiq.bmml+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.balsamiq.bmpr': { source: 'iana' },
            'application/vnd.banana-accounting': { source: 'iana' },
            'application/vnd.bbf.usp.msg': { source: 'iana' },
            'application/vnd.bbf.usp.msg+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.bekitzur-stech+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.bint.med-content': { source: 'iana' },
            'application/vnd.biopax.rdf+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.blink-idb-value-wrapper': { source: 'iana' },
            'application/vnd.blueice.multipass': {
              source: 'iana',
              extensions: ['mpm']
            },
            'application/vnd.bluetooth.ep.oob': { source: 'iana' },
            'application/vnd.bluetooth.le.oob': { source: 'iana' },
            'application/vnd.bmi': { source: 'iana', extensions: ['bmi'] },
            'application/vnd.businessobjects': {
              source: 'iana',
              extensions: ['rep']
            },
            'application/vnd.byu.uapi+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.cab-jscript': { source: 'iana' },
            'application/vnd.canon-cpdl': { source: 'iana' },
            'application/vnd.canon-lips': { source: 'iana' },
            'application/vnd.capasystems-pg+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.cendio.thinlinc.clientconf': { source: 'iana' },
            'application/vnd.century-systems.tcp_stream': { source: 'iana' },
            'application/vnd.chemdraw+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['cdxml']
            },
            'application/vnd.chess-pgn': { source: 'iana' },
            'application/vnd.chipnuts.karaoke-mmd': {
              source: 'iana',
              extensions: ['mmd']
            },
            'application/vnd.cinderella': {
              source: 'iana',
              extensions: ['cdy']
            },
            'application/vnd.cirpack.isdn-ext': { source: 'iana' },
            'application/vnd.citationstyles.style+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['csl']
            },
            'application/vnd.claymore': { source: 'iana', extensions: ['cla'] },
            'application/vnd.cloanto.rp9': {
              source: 'iana',
              extensions: ['rp9']
            },
            'application/vnd.clonk.c4group': {
              source: 'iana',
              extensions: ['c4g', 'c4d', 'c4f', 'c4p', 'c4u']
            },
            'application/vnd.cluetrust.cartomobile-config': {
              source: 'iana',
              extensions: ['c11amc']
            },
            'application/vnd.cluetrust.cartomobile-config-pkg': {
              source: 'iana',
              extensions: ['c11amz']
            },
            'application/vnd.coffeescript': { source: 'iana' },
            'application/vnd.collabio.xodocuments.document': { source: 'iana' },
            'application/vnd.collabio.xodocuments.document-template': {
              source: 'iana'
            },
            'application/vnd.collabio.xodocuments.presentation': {
              source: 'iana'
            },
            'application/vnd.collabio.xodocuments.presentation-template': {
              source: 'iana'
            },
            'application/vnd.collabio.xodocuments.spreadsheet': {
              source: 'iana'
            },
            'application/vnd.collabio.xodocuments.spreadsheet-template': {
              source: 'iana'
            },
            'application/vnd.collection+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.collection.doc+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.collection.next+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.comicbook+zip': {
              source: 'iana',
              compressible: false
            },
            'application/vnd.comicbook-rar': { source: 'iana' },
            'application/vnd.commerce-battelle': { source: 'iana' },
            'application/vnd.commonspace': {
              source: 'iana',
              extensions: ['csp']
            },
            'application/vnd.contact.cmsg': {
              source: 'iana',
              extensions: ['cdbcmsg']
            },
            'application/vnd.coreos.ignition+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.cosmocaller': {
              source: 'iana',
              extensions: ['cmc']
            },
            'application/vnd.crick.clicker': {
              source: 'iana',
              extensions: ['clkx']
            },
            'application/vnd.crick.clicker.keyboard': {
              source: 'iana',
              extensions: ['clkk']
            },
            'application/vnd.crick.clicker.palette': {
              source: 'iana',
              extensions: ['clkp']
            },
            'application/vnd.crick.clicker.template': {
              source: 'iana',
              extensions: ['clkt']
            },
            'application/vnd.crick.clicker.wordbank': {
              source: 'iana',
              extensions: ['clkw']
            },
            'application/vnd.criticaltools.wbs+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['wbs']
            },
            'application/vnd.ctc-posml': {
              source: 'iana',
              extensions: ['pml']
            },
            'application/vnd.ctct.ws+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.cups-pdf': { source: 'iana' },
            'application/vnd.cups-postscript': { source: 'iana' },
            'application/vnd.cups-ppd': { source: 'iana', extensions: ['ppd'] },
            'application/vnd.cups-raster': { source: 'iana' },
            'application/vnd.cups-raw': { source: 'iana' },
            'application/vnd.curl': { source: 'iana' },
            'application/vnd.curl.car': {
              source: 'apache',
              extensions: ['car']
            },
            'application/vnd.curl.pcurl': {
              source: 'apache',
              extensions: ['pcurl']
            },
            'application/vnd.cyan.dean.root+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.cybank': { source: 'iana' },
            'application/vnd.d2l.coursepackage1p0+zip': {
              source: 'iana',
              compressible: false
            },
            'application/vnd.dart': {
              source: 'iana',
              compressible: true,
              extensions: ['dart']
            },
            'application/vnd.data-vision.rdz': {
              source: 'iana',
              extensions: ['rdz']
            },
            'application/vnd.datapackage+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dataresource+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.debian.binary-package': { source: 'iana' },
            'application/vnd.dece.data': {
              source: 'iana',
              extensions: ['uvf', 'uvvf', 'uvd', 'uvvd']
            },
            'application/vnd.dece.ttml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['uvt', 'uvvt']
            },
            'application/vnd.dece.unspecified': {
              source: 'iana',
              extensions: ['uvx', 'uvvx']
            },
            'application/vnd.dece.zip': {
              source: 'iana',
              extensions: ['uvz', 'uvvz']
            },
            'application/vnd.denovo.fcselayout-link': {
              source: 'iana',
              extensions: ['fe_launch']
            },
            'application/vnd.desmume.movie': { source: 'iana' },
            'application/vnd.dir-bi.plate-dl-nosuffix': { source: 'iana' },
            'application/vnd.dm.delegation+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dna': { source: 'iana', extensions: ['dna'] },
            'application/vnd.document+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dolby.mlp': {
              source: 'apache',
              extensions: ['mlp']
            },
            'application/vnd.dolby.mobile.1': { source: 'iana' },
            'application/vnd.dolby.mobile.2': { source: 'iana' },
            'application/vnd.doremir.scorecloud-binary-document': {
              source: 'iana'
            },
            'application/vnd.dpgraph': { source: 'iana', extensions: ['dpg'] },
            'application/vnd.dreamfactory': {
              source: 'iana',
              extensions: ['dfac']
            },
            'application/vnd.drive+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ds-keypoint': {
              source: 'apache',
              extensions: ['kpxx']
            },
            'application/vnd.dtg.local': { source: 'iana' },
            'application/vnd.dtg.local.flash': { source: 'iana' },
            'application/vnd.dtg.local.html': { source: 'iana' },
            'application/vnd.dvb.ait': { source: 'iana', extensions: ['ait'] },
            'application/vnd.dvb.dvbj': { source: 'iana' },
            'application/vnd.dvb.esgcontainer': { source: 'iana' },
            'application/vnd.dvb.ipdcdftnotifaccess': { source: 'iana' },
            'application/vnd.dvb.ipdcesgaccess': { source: 'iana' },
            'application/vnd.dvb.ipdcesgaccess2': { source: 'iana' },
            'application/vnd.dvb.ipdcesgpdd': { source: 'iana' },
            'application/vnd.dvb.ipdcroaming': { source: 'iana' },
            'application/vnd.dvb.iptv.alfec-base': { source: 'iana' },
            'application/vnd.dvb.iptv.alfec-enhancement': { source: 'iana' },
            'application/vnd.dvb.notif-aggregate-root+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dvb.notif-container+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dvb.notif-generic+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dvb.notif-ia-msglist+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dvb.notif-ia-registration-request+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dvb.notif-ia-registration-response+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dvb.notif-init+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.dvb.pfr': { source: 'iana' },
            'application/vnd.dvb.service': {
              source: 'iana',
              extensions: ['svc']
            },
            'application/vnd.dxr': { source: 'iana' },
            'application/vnd.dynageo': { source: 'iana', extensions: ['geo'] },
            'application/vnd.dzr': { source: 'iana' },
            'application/vnd.easykaraoke.cdgdownload': { source: 'iana' },
            'application/vnd.ecdis-update': { source: 'iana' },
            'application/vnd.ecip.rlp': { source: 'iana' },
            'application/vnd.ecowin.chart': {
              source: 'iana',
              extensions: ['mag']
            },
            'application/vnd.ecowin.filerequest': { source: 'iana' },
            'application/vnd.ecowin.fileupdate': { source: 'iana' },
            'application/vnd.ecowin.series': { source: 'iana' },
            'application/vnd.ecowin.seriesrequest': { source: 'iana' },
            'application/vnd.ecowin.seriesupdate': { source: 'iana' },
            'application/vnd.efi.img': { source: 'iana' },
            'application/vnd.efi.iso': { source: 'iana' },
            'application/vnd.emclient.accessrequest+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.enliven': { source: 'iana', extensions: ['nml'] },
            'application/vnd.enphase.envoy': { source: 'iana' },
            'application/vnd.eprints.data+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.epson.esf': {
              source: 'iana',
              extensions: ['esf']
            },
            'application/vnd.epson.msf': {
              source: 'iana',
              extensions: ['msf']
            },
            'application/vnd.epson.quickanime': {
              source: 'iana',
              extensions: ['qam']
            },
            'application/vnd.epson.salt': {
              source: 'iana',
              extensions: ['slt']
            },
            'application/vnd.epson.ssf': {
              source: 'iana',
              extensions: ['ssf']
            },
            'application/vnd.ericsson.quickcall': { source: 'iana' },
            'application/vnd.espass-espass+zip': {
              source: 'iana',
              compressible: false
            },
            'application/vnd.eszigno3+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['es3', 'et3']
            },
            'application/vnd.etsi.aoc+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.asic-e+zip': {
              source: 'iana',
              compressible: false
            },
            'application/vnd.etsi.asic-s+zip': {
              source: 'iana',
              compressible: false
            },
            'application/vnd.etsi.cug+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.iptvcommand+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.iptvdiscovery+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.iptvprofile+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.iptvsad-bc+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.iptvsad-cod+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.iptvsad-npvr+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.iptvservice+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.iptvsync+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.iptvueprofile+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.mcid+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.mheg5': { source: 'iana' },
            'application/vnd.etsi.overload-control-policy-dataset+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.pstn+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.sci+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.simservs+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.timestamp-token': { source: 'iana' },
            'application/vnd.etsi.tsl+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.etsi.tsl.der': { source: 'iana' },
            'application/vnd.eudora.data': { source: 'iana' },
            'application/vnd.evolv.ecig.profile': { source: 'iana' },
            'application/vnd.evolv.ecig.settings': { source: 'iana' },
            'application/vnd.evolv.ecig.theme': { source: 'iana' },
            'application/vnd.exstream-empower+zip': {
              source: 'iana',
              compressible: false
            },
            'application/vnd.ezpix-album': {
              source: 'iana',
              extensions: ['ez2']
            },
            'application/vnd.ezpix-package': {
              source: 'iana',
              extensions: ['ez3']
            },
            'application/vnd.f-secure.mobile': { source: 'iana' },
            'application/vnd.fastcopy-disk-image': { source: 'iana' },
            'application/vnd.fdf': { source: 'iana', extensions: ['fdf'] },
            'application/vnd.fdsn.mseed': {
              source: 'iana',
              extensions: ['mseed']
            },
            'application/vnd.fdsn.seed': {
              source: 'iana',
              extensions: ['seed', 'dataless']
            },
            'application/vnd.ffsns': { source: 'iana' },
            'application/vnd.filmit.zfc': { source: 'iana' },
            'application/vnd.fints': { source: 'iana' },
            'application/vnd.firemonkeys.cloudcell': { source: 'iana' },
            'application/vnd.flographit': {
              source: 'iana',
              extensions: ['gph']
            },
            'application/vnd.fluxtime.clip': {
              source: 'iana',
              extensions: ['ftc']
            },
            'application/vnd.font-fontforge-sfd': { source: 'iana' },
            'application/vnd.framemaker': {
              source: 'iana',
              extensions: ['fm', 'frame', 'maker', 'book']
            },
            'application/vnd.frogans.fnc': {
              source: 'iana',
              extensions: ['fnc']
            },
            'application/vnd.frogans.ltf': {
              source: 'iana',
              extensions: ['ltf']
            },
            'application/vnd.fsc.weblaunch': {
              source: 'iana',
              extensions: ['fsc']
            },
            'application/vnd.fujitsu.oasys': {
              source: 'iana',
              extensions: ['oas']
            },
            'application/vnd.fujitsu.oasys2': {
              source: 'iana',
              extensions: ['oa2']
            },
            'application/vnd.fujitsu.oasys3': {
              source: 'iana',
              extensions: ['oa3']
            },
            'application/vnd.fujitsu.oasysgp': {
              source: 'iana',
              extensions: ['fg5']
            },
            'application/vnd.fujitsu.oasysprs': {
              source: 'iana',
              extensions: ['bh2']
            },
            'application/vnd.fujixerox.art-ex': { source: 'iana' },
            'application/vnd.fujixerox.art4': { source: 'iana' },
            'application/vnd.fujixerox.ddd': {
              source: 'iana',
              extensions: ['ddd']
            },
            'application/vnd.fujixerox.docuworks': {
              source: 'iana',
              extensions: ['xdw']
            },
            'application/vnd.fujixerox.docuworks.binder': {
              source: 'iana',
              extensions: ['xbd']
            },
            'application/vnd.fujixerox.docuworks.container': { source: 'iana' },
            'application/vnd.fujixerox.hbpl': { source: 'iana' },
            'application/vnd.fut-misnet': { source: 'iana' },
            'application/vnd.futoin+cbor': { source: 'iana' },
            'application/vnd.futoin+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.fuzzysheet': {
              source: 'iana',
              extensions: ['fzs']
            },
            'application/vnd.genomatix.tuxedo': {
              source: 'iana',
              extensions: ['txd']
            },
            'application/vnd.geo+json': { source: 'iana', compressible: true },
            'application/vnd.geocube+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.geogebra.file': {
              source: 'iana',
              extensions: ['ggb']
            },
            'application/vnd.geogebra.tool': {
              source: 'iana',
              extensions: ['ggt']
            },
            'application/vnd.geometry-explorer': {
              source: 'iana',
              extensions: ['gex', 'gre']
            },
            'application/vnd.geonext': { source: 'iana', extensions: ['gxt'] },
            'application/vnd.geoplan': { source: 'iana', extensions: ['g2w'] },
            'application/vnd.geospace': { source: 'iana', extensions: ['g3w'] },
            'application/vnd.gerber': { source: 'iana' },
            'application/vnd.globalplatform.card-content-mgt': {
              source: 'iana'
            },
            'application/vnd.globalplatform.card-content-mgt-response': {
              source: 'iana'
            },
            'application/vnd.gmx': { source: 'iana', extensions: ['gmx'] },
            'application/vnd.google-apps.document': {
              compressible: false,
              extensions: ['gdoc']
            },
            'application/vnd.google-apps.presentation': {
              compressible: false,
              extensions: ['gslides']
            },
            'application/vnd.google-apps.spreadsheet': {
              compressible: false,
              extensions: ['gsheet']
            },
            'application/vnd.google-earth.kml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['kml']
            },
            'application/vnd.google-earth.kmz': {
              source: 'iana',
              compressible: false,
              extensions: ['kmz']
            },
            'application/vnd.gov.sk.e-form+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.gov.sk.e-form+zip': {
              source: 'iana',
              compressible: false
            },
            'application/vnd.gov.sk.xmldatacontainer+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.grafeq': {
              source: 'iana',
              extensions: ['gqf', 'gqs']
            },
            'application/vnd.gridmp': { source: 'iana' },
            'application/vnd.groove-account': {
              source: 'iana',
              extensions: ['gac']
            },
            'application/vnd.groove-help': {
              source: 'iana',
              extensions: ['ghf']
            },
            'application/vnd.groove-identity-message': {
              source: 'iana',
              extensions: ['gim']
            },
            'application/vnd.groove-injector': {
              source: 'iana',
              extensions: ['grv']
            },
            'application/vnd.groove-tool-message': {
              source: 'iana',
              extensions: ['gtm']
            },
            'application/vnd.groove-tool-template': {
              source: 'iana',
              extensions: ['tpl']
            },
            'application/vnd.groove-vcard': {
              source: 'iana',
              extensions: ['vcg']
            },
            'application/vnd.hal+json': { source: 'iana', compressible: true },
            'application/vnd.hal+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['hal']
            },
            'application/vnd.handheld-entertainment+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['zmm']
            },
            'application/vnd.hbci': { source: 'iana', extensions: ['hbci'] },
            'application/vnd.hc+json': { source: 'iana', compressible: true },
            'application/vnd.hcl-bireports': { source: 'iana' },
            'application/vnd.hdt': { source: 'iana' },
            'application/vnd.heroku+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.hhe.lesson-player': {
              source: 'iana',
              extensions: ['les']
            },
            'application/vnd.hp-hpgl': { source: 'iana', extensions: ['hpgl'] },
            'application/vnd.hp-hpid': { source: 'iana', extensions: ['hpid'] },
            'application/vnd.hp-hps': { source: 'iana', extensions: ['hps'] },
            'application/vnd.hp-jlyt': { source: 'iana', extensions: ['jlt'] },
            'application/vnd.hp-pcl': { source: 'iana', extensions: ['pcl'] },
            'application/vnd.hp-pclxl': {
              source: 'iana',
              extensions: ['pclxl']
            },
            'application/vnd.httphone': { source: 'iana' },
            'application/vnd.hydrostatix.sof-data': {
              source: 'iana',
              extensions: ['sfd-hdstx']
            },
            'application/vnd.hyper+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.hyper-item+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.hyperdrive+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.hzn-3d-crossword': { source: 'iana' },
            'application/vnd.ibm.afplinedata': { source: 'iana' },
            'application/vnd.ibm.electronic-media': { source: 'iana' },
            'application/vnd.ibm.minipay': {
              source: 'iana',
              extensions: ['mpy']
            },
            'application/vnd.ibm.modcap': {
              source: 'iana',
              extensions: ['afp', 'listafp', 'list3820']
            },
            'application/vnd.ibm.rights-management': {
              source: 'iana',
              extensions: ['irm']
            },
            'application/vnd.ibm.secure-container': {
              source: 'iana',
              extensions: ['sc']
            },
            'application/vnd.iccprofile': {
              source: 'iana',
              extensions: ['icc', 'icm']
            },
            'application/vnd.ieee.1905': { source: 'iana' },
            'application/vnd.igloader': { source: 'iana', extensions: ['igl'] },
            'application/vnd.imagemeter.folder+zip': {
              source: 'iana',
              compressible: false
            },
            'application/vnd.imagemeter.image+zip': {
              source: 'iana',
              compressible: false
            },
            'application/vnd.immervision-ivp': {
              source: 'iana',
              extensions: ['ivp']
            },
            'application/vnd.immervision-ivu': {
              source: 'iana',
              extensions: ['ivu']
            },
            'application/vnd.ims.imsccv1p1': { source: 'iana' },
            'application/vnd.ims.imsccv1p2': { source: 'iana' },
            'application/vnd.ims.imsccv1p3': { source: 'iana' },
            'application/vnd.ims.lis.v2.result+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ims.lti.v2.toolconsumerprofile+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ims.lti.v2.toolproxy+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ims.lti.v2.toolproxy.id+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ims.lti.v2.toolsettings+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ims.lti.v2.toolsettings.simple+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.informedcontrol.rms+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.informix-visionary': { source: 'iana' },
            'application/vnd.infotech.project': { source: 'iana' },
            'application/vnd.infotech.project+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.innopath.wamp.notification': { source: 'iana' },
            'application/vnd.insors.igm': {
              source: 'iana',
              extensions: ['igm']
            },
            'application/vnd.intercon.formnet': {
              source: 'iana',
              extensions: ['xpw', 'xpx']
            },
            'application/vnd.intergeo': { source: 'iana', extensions: ['i2g'] },
            'application/vnd.intertrust.digibox': { source: 'iana' },
            'application/vnd.intertrust.nncp': { source: 'iana' },
            'application/vnd.intu.qbo': { source: 'iana', extensions: ['qbo'] },
            'application/vnd.intu.qfx': { source: 'iana', extensions: ['qfx'] },
            'application/vnd.iptc.g2.catalogitem+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.iptc.g2.conceptitem+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.iptc.g2.knowledgeitem+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.iptc.g2.newsitem+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.iptc.g2.newsmessage+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.iptc.g2.packageitem+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.iptc.g2.planningitem+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ipunplugged.rcprofile': {
              source: 'iana',
              extensions: ['rcprofile']
            },
            'application/vnd.irepository.package+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['irp']
            },
            'application/vnd.is-xpr': { source: 'iana', extensions: ['xpr'] },
            'application/vnd.isac.fcs': { source: 'iana', extensions: ['fcs'] },
            'application/vnd.jam': { source: 'iana', extensions: ['jam'] },
            'application/vnd.japannet-directory-service': { source: 'iana' },
            'application/vnd.japannet-jpnstore-wakeup': { source: 'iana' },
            'application/vnd.japannet-payment-wakeup': { source: 'iana' },
            'application/vnd.japannet-registration': { source: 'iana' },
            'application/vnd.japannet-registration-wakeup': { source: 'iana' },
            'application/vnd.japannet-setstore-wakeup': { source: 'iana' },
            'application/vnd.japannet-verification': { source: 'iana' },
            'application/vnd.japannet-verification-wakeup': { source: 'iana' },
            'application/vnd.jcp.javame.midlet-rms': {
              source: 'iana',
              extensions: ['rms']
            },
            'application/vnd.jisp': { source: 'iana', extensions: ['jisp'] },
            'application/vnd.joost.joda-archive': {
              source: 'iana',
              extensions: ['joda']
            },
            'application/vnd.jsk.isdn-ngn': { source: 'iana' },
            'application/vnd.kahootz': {
              source: 'iana',
              extensions: ['ktz', 'ktr']
            },
            'application/vnd.kde.karbon': {
              source: 'iana',
              extensions: ['karbon']
            },
            'application/vnd.kde.kchart': {
              source: 'iana',
              extensions: ['chrt']
            },
            'application/vnd.kde.kformula': {
              source: 'iana',
              extensions: ['kfo']
            },
            'application/vnd.kde.kivio': {
              source: 'iana',
              extensions: ['flw']
            },
            'application/vnd.kde.kontour': {
              source: 'iana',
              extensions: ['kon']
            },
            'application/vnd.kde.kpresenter': {
              source: 'iana',
              extensions: ['kpr', 'kpt']
            },
            'application/vnd.kde.kspread': {
              source: 'iana',
              extensions: ['ksp']
            },
            'application/vnd.kde.kword': {
              source: 'iana',
              extensions: ['kwd', 'kwt']
            },
            'application/vnd.kenameaapp': {
              source: 'iana',
              extensions: ['htke']
            },
            'application/vnd.kidspiration': {
              source: 'iana',
              extensions: ['kia']
            },
            'application/vnd.kinar': {
              source: 'iana',
              extensions: ['kne', 'knp']
            },
            'application/vnd.koan': {
              source: 'iana',
              extensions: ['skp', 'skd', 'skt', 'skm']
            },
            'application/vnd.kodak-descriptor': {
              source: 'iana',
              extensions: ['sse']
            },
            'application/vnd.las.las+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.las.las+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['lasxml']
            },
            'application/vnd.leap+json': { source: 'iana', compressible: true },
            'application/vnd.liberty-request+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.llamagraphics.life-balance.desktop': {
              source: 'iana',
              extensions: ['lbd']
            },
            'application/vnd.llamagraphics.life-balance.exchange+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['lbe']
            },
            'application/vnd.lotus-1-2-3': {
              source: 'iana',
              extensions: ['123']
            },
            'application/vnd.lotus-approach': {
              source: 'iana',
              extensions: ['apr']
            },
            'application/vnd.lotus-freelance': {
              source: 'iana',
              extensions: ['pre']
            },
            'application/vnd.lotus-notes': {
              source: 'iana',
              extensions: ['nsf']
            },
            'application/vnd.lotus-organizer': {
              source: 'iana',
              extensions: ['org']
            },
            'application/vnd.lotus-screencam': {
              source: 'iana',
              extensions: ['scm']
            },
            'application/vnd.lotus-wordpro': {
              source: 'iana',
              extensions: ['lwp']
            },
            'application/vnd.macports.portpkg': {
              source: 'iana',
              extensions: ['portpkg']
            },
            'application/vnd.mapbox-vector-tile': { source: 'iana' },
            'application/vnd.marlin.drm.actiontoken+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.marlin.drm.conftoken+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.marlin.drm.license+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.marlin.drm.mdcf': { source: 'iana' },
            'application/vnd.mason+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.maxmind.maxmind-db': { source: 'iana' },
            'application/vnd.mcd': { source: 'iana', extensions: ['mcd'] },
            'application/vnd.medcalcdata': {
              source: 'iana',
              extensions: ['mc1']
            },
            'application/vnd.mediastation.cdkey': {
              source: 'iana',
              extensions: ['cdkey']
            },
            'application/vnd.meridian-slingshot': { source: 'iana' },
            'application/vnd.mfer': { source: 'iana', extensions: ['mwf'] },
            'application/vnd.mfmp': { source: 'iana', extensions: ['mfm'] },
            'application/vnd.micro+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.micrografx.flo': {
              source: 'iana',
              extensions: ['flo']
            },
            'application/vnd.micrografx.igx': {
              source: 'iana',
              extensions: ['igx']
            },
            'application/vnd.microsoft.portable-executable': { source: 'iana' },
            'application/vnd.microsoft.windows.thumbnail-cache': {
              source: 'iana'
            },
            'application/vnd.miele+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.mif': { source: 'iana', extensions: ['mif'] },
            'application/vnd.minisoft-hp3000-save': { source: 'iana' },
            'application/vnd.mitsubishi.misty-guard.trustweb': {
              source: 'iana'
            },
            'application/vnd.mobius.daf': {
              source: 'iana',
              extensions: ['daf']
            },
            'application/vnd.mobius.dis': {
              source: 'iana',
              extensions: ['dis']
            },
            'application/vnd.mobius.mbk': {
              source: 'iana',
              extensions: ['mbk']
            },
            'application/vnd.mobius.mqy': {
              source: 'iana',
              extensions: ['mqy']
            },
            'application/vnd.mobius.msl': {
              source: 'iana',
              extensions: ['msl']
            },
            'application/vnd.mobius.plc': {
              source: 'iana',
              extensions: ['plc']
            },
            'application/vnd.mobius.txf': {
              source: 'iana',
              extensions: ['txf']
            },
            'application/vnd.mophun.application': {
              source: 'iana',
              extensions: ['mpn']
            },
            'application/vnd.mophun.certificate': {
              source: 'iana',
              extensions: ['mpc']
            },
            'application/vnd.motorola.flexsuite': { source: 'iana' },
            'application/vnd.motorola.flexsuite.adsi': { source: 'iana' },
            'application/vnd.motorola.flexsuite.fis': { source: 'iana' },
            'application/vnd.motorola.flexsuite.gotap': { source: 'iana' },
            'application/vnd.motorola.flexsuite.kmr': { source: 'iana' },
            'application/vnd.motorola.flexsuite.ttc': { source: 'iana' },
            'application/vnd.motorola.flexsuite.wem': { source: 'iana' },
            'application/vnd.motorola.iprm': { source: 'iana' },
            'application/vnd.mozilla.xul+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xul']
            },
            'application/vnd.ms-3mfdocument': { source: 'iana' },
            'application/vnd.ms-artgalry': {
              source: 'iana',
              extensions: ['cil']
            },
            'application/vnd.ms-asf': { source: 'iana' },
            'application/vnd.ms-cab-compressed': {
              source: 'iana',
              extensions: ['cab']
            },
            'application/vnd.ms-color.iccprofile': { source: 'apache' },
            'application/vnd.ms-excel': {
              source: 'iana',
              compressible: false,
              extensions: ['xls', 'xlm', 'xla', 'xlc', 'xlt', 'xlw']
            },
            'application/vnd.ms-excel.addin.macroenabled.12': {
              source: 'iana',
              extensions: ['xlam']
            },
            'application/vnd.ms-excel.sheet.binary.macroenabled.12': {
              source: 'iana',
              extensions: ['xlsb']
            },
            'application/vnd.ms-excel.sheet.macroenabled.12': {
              source: 'iana',
              extensions: ['xlsm']
            },
            'application/vnd.ms-excel.template.macroenabled.12': {
              source: 'iana',
              extensions: ['xltm']
            },
            'application/vnd.ms-fontobject': {
              source: 'iana',
              compressible: true,
              extensions: ['eot']
            },
            'application/vnd.ms-htmlhelp': {
              source: 'iana',
              extensions: ['chm']
            },
            'application/vnd.ms-ims': { source: 'iana', extensions: ['ims'] },
            'application/vnd.ms-lrm': { source: 'iana', extensions: ['lrm'] },
            'application/vnd.ms-office.activex+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ms-officetheme': {
              source: 'iana',
              extensions: ['thmx']
            },
            'application/vnd.ms-opentype': {
              source: 'apache',
              compressible: true
            },
            'application/vnd.ms-outlook': {
              compressible: false,
              extensions: ['msg']
            },
            'application/vnd.ms-package.obfuscated-opentype': {
              source: 'apache'
            },
            'application/vnd.ms-pki.seccat': {
              source: 'apache',
              extensions: ['cat']
            },
            'application/vnd.ms-pki.stl': {
              source: 'apache',
              extensions: ['stl']
            },
            'application/vnd.ms-playready.initiator+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ms-powerpoint': {
              source: 'iana',
              compressible: false,
              extensions: ['ppt', 'pps', 'pot']
            },
            'application/vnd.ms-powerpoint.addin.macroenabled.12': {
              source: 'iana',
              extensions: ['ppam']
            },
            'application/vnd.ms-powerpoint.presentation.macroenabled.12': {
              source: 'iana',
              extensions: ['pptm']
            },
            'application/vnd.ms-powerpoint.slide.macroenabled.12': {
              source: 'iana',
              extensions: ['sldm']
            },
            'application/vnd.ms-powerpoint.slideshow.macroenabled.12': {
              source: 'iana',
              extensions: ['ppsm']
            },
            'application/vnd.ms-powerpoint.template.macroenabled.12': {
              source: 'iana',
              extensions: ['potm']
            },
            'application/vnd.ms-printdevicecapabilities+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ms-printing.printticket+xml': {
              source: 'apache',
              compressible: true
            },
            'application/vnd.ms-printschematicket+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.ms-project': {
              source: 'iana',
              extensions: ['mpp', 'mpt']
            },
            'application/vnd.ms-tnef': { source: 'iana' },
            'application/vnd.ms-windows.devicepairing': { source: 'iana' },
            'application/vnd.ms-windows.nwprinting.oob': { source: 'iana' },
            'application/vnd.ms-windows.printerpairing': { source: 'iana' },
            'application/vnd.ms-windows.wsd.oob': { source: 'iana' },
            'application/vnd.ms-wmdrm.lic-chlg-req': { source: 'iana' },
            'application/vnd.ms-wmdrm.lic-resp': { source: 'iana' },
            'application/vnd.ms-wmdrm.meter-chlg-req': { source: 'iana' },
            'application/vnd.ms-wmdrm.meter-resp': { source: 'iana' },
            'application/vnd.ms-word.document.macroenabled.12': {
              source: 'iana',
              extensions: ['docm']
            },
            'application/vnd.ms-word.template.macroenabled.12': {
              source: 'iana',
              extensions: ['dotm']
            },
            'application/vnd.ms-works': {
              source: 'iana',
              extensions: ['wps', 'wks', 'wcm', 'wdb']
            },
            'application/vnd.ms-wpl': { source: 'iana', extensions: ['wpl'] },
            'application/vnd.ms-xpsdocument': {
              source: 'iana',
              compressible: false,
              extensions: ['xps']
            },
            'application/vnd.msa-disk-image': { source: 'iana' },
            'application/vnd.mseq': { source: 'iana', extensions: ['mseq'] },
            'application/vnd.msign': { source: 'iana' },
            'application/vnd.multiad.creator': { source: 'iana' },
            'application/vnd.multiad.creator.cif': { source: 'iana' },
            'application/vnd.music-niff': { source: 'iana' },
            'application/vnd.musician': { source: 'iana', extensions: ['mus'] },
            'application/vnd.muvee.style': {
              source: 'iana',
              extensions: ['msty']
            },
            'application/vnd.mynfc': { source: 'iana', extensions: ['taglet'] },
            'application/vnd.ncd.control': { source: 'iana' },
            'application/vnd.ncd.reference': { source: 'iana' },
            'application/vnd.nearst.inv+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.nervana': { source: 'iana' },
            'application/vnd.netfpx': { source: 'iana' },
            'application/vnd.neurolanguage.nlu': {
              source: 'iana',
              extensions: ['nlu']
            },
            'application/vnd.nimn': { source: 'iana' },
            'application/vnd.nintendo.nitro.rom': { source: 'iana' },
            'application/vnd.nintendo.snes.rom': { source: 'iana' },
            'application/vnd.nitf': {
              source: 'iana',
              extensions: ['ntf', 'nitf']
            },
            'application/vnd.noblenet-directory': {
              source: 'iana',
              extensions: ['nnd']
            },
            'application/vnd.noblenet-sealer': {
              source: 'iana',
              extensions: ['nns']
            },
            'application/vnd.noblenet-web': {
              source: 'iana',
              extensions: ['nnw']
            },
            'application/vnd.nokia.catalogs': { source: 'iana' },
            'application/vnd.nokia.conml+wbxml': { source: 'iana' },
            'application/vnd.nokia.conml+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.nokia.iptv.config+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.nokia.isds-radio-presets': { source: 'iana' },
            'application/vnd.nokia.landmark+wbxml': { source: 'iana' },
            'application/vnd.nokia.landmark+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.nokia.landmarkcollection+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.nokia.n-gage.ac+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.nokia.n-gage.data': {
              source: 'iana',
              extensions: ['ngdat']
            },
            'application/vnd.nokia.n-gage.symbian.install': {
              source: 'iana',
              extensions: ['n-gage']
            },
            'application/vnd.nokia.ncd': { source: 'iana' },
            'application/vnd.nokia.pcd+wbxml': { source: 'iana' },
            'application/vnd.nokia.pcd+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.nokia.radio-preset': {
              source: 'iana',
              extensions: ['rpst']
            },
            'application/vnd.nokia.radio-presets': {
              source: 'iana',
              extensions: ['rpss']
            },
            'application/vnd.novadigm.edm': {
              source: 'iana',
              extensions: ['edm']
            },
            'application/vnd.novadigm.edx': {
              source: 'iana',
              extensions: ['edx']
            },
            'application/vnd.novadigm.ext': {
              source: 'iana',
              extensions: ['ext']
            },
            'application/vnd.ntt-local.content-share': { source: 'iana' },
            'application/vnd.ntt-local.file-transfer': { source: 'iana' },
            'application/vnd.ntt-local.ogw_remote-access': { source: 'iana' },
            'application/vnd.ntt-local.sip-ta_remote': { source: 'iana' },
            'application/vnd.ntt-local.sip-ta_tcp_stream': { source: 'iana' },
            'application/vnd.oasis.opendocument.chart': {
              source: 'iana',
              extensions: ['odc']
            },
            'application/vnd.oasis.opendocument.chart-template': {
              source: 'iana',
              extensions: ['otc']
            },
            'application/vnd.oasis.opendocument.database': {
              source: 'iana',
              extensions: ['odb']
            },
            'application/vnd.oasis.opendocument.formula': {
              source: 'iana',
              extensions: ['odf']
            },
            'application/vnd.oasis.opendocument.formula-template': {
              source: 'iana',
              extensions: ['odft']
            },
            'application/vnd.oasis.opendocument.graphics': {
              source: 'iana',
              compressible: false,
              extensions: ['odg']
            },
            'application/vnd.oasis.opendocument.graphics-template': {
              source: 'iana',
              extensions: ['otg']
            },
            'application/vnd.oasis.opendocument.image': {
              source: 'iana',
              extensions: ['odi']
            },
            'application/vnd.oasis.opendocument.image-template': {
              source: 'iana',
              extensions: ['oti']
            },
            'application/vnd.oasis.opendocument.presentation': {
              source: 'iana',
              compressible: false,
              extensions: ['odp']
            },
            'application/vnd.oasis.opendocument.presentation-template': {
              source: 'iana',
              extensions: ['otp']
            },
            'application/vnd.oasis.opendocument.spreadsheet': {
              source: 'iana',
              compressible: false,
              extensions: ['ods']
            },
            'application/vnd.oasis.opendocument.spreadsheet-template': {
              source: 'iana',
              extensions: ['ots']
            },
            'application/vnd.oasis.opendocument.text': {
              source: 'iana',
              compressible: false,
              extensions: ['odt']
            },
            'application/vnd.oasis.opendocument.text-master': {
              source: 'iana',
              extensions: ['odm']
            },
            'application/vnd.oasis.opendocument.text-template': {
              source: 'iana',
              extensions: ['ott']
            },
            'application/vnd.oasis.opendocument.text-web': {
              source: 'iana',
              extensions: ['oth']
            },
            'application/vnd.obn': { source: 'iana' },
            'application/vnd.ocf+cbor': { source: 'iana' },
            'application/vnd.oftn.l10n+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oipf.contentaccessdownload+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oipf.contentaccessstreaming+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oipf.cspg-hexbinary': { source: 'iana' },
            'application/vnd.oipf.dae.svg+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oipf.dae.xhtml+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oipf.mippvcontrolmessage+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oipf.pae.gem': { source: 'iana' },
            'application/vnd.oipf.spdiscovery+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oipf.spdlist+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oipf.ueprofile+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oipf.userprofile+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.olpc-sugar': {
              source: 'iana',
              extensions: ['xo']
            },
            'application/vnd.oma-scws-config': { source: 'iana' },
            'application/vnd.oma-scws-http-request': { source: 'iana' },
            'application/vnd.oma-scws-http-response': { source: 'iana' },
            'application/vnd.oma.bcast.associated-procedure-parameter+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.bcast.drm-trigger+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.bcast.imd+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.bcast.ltkm': { source: 'iana' },
            'application/vnd.oma.bcast.notification+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.bcast.provisioningtrigger': { source: 'iana' },
            'application/vnd.oma.bcast.sgboot': { source: 'iana' },
            'application/vnd.oma.bcast.sgdd+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.bcast.sgdu': { source: 'iana' },
            'application/vnd.oma.bcast.simple-symbol-container': {
              source: 'iana'
            },
            'application/vnd.oma.bcast.smartcard-trigger+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.bcast.sprov+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.bcast.stkm': { source: 'iana' },
            'application/vnd.oma.cab-address-book+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.cab-feature-handler+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.cab-pcc+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.cab-subs-invite+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.cab-user-prefs+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.dcd': { source: 'iana' },
            'application/vnd.oma.dcdc': { source: 'iana' },
            'application/vnd.oma.dd2+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['dd2']
            },
            'application/vnd.oma.drm.risd+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.group-usage-list+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.lwm2m+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.lwm2m+tlv': { source: 'iana' },
            'application/vnd.oma.pal+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.poc.detailed-progress-report+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.poc.final-report+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.poc.groups+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.poc.invocation-descriptor+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.poc.optimized-progress-report+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.push': { source: 'iana' },
            'application/vnd.oma.scidm.messages+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oma.xcap-directory+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.omads-email+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.omads-file+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.omads-folder+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.omaloc-supl-init': { source: 'iana' },
            'application/vnd.onepager': { source: 'iana' },
            'application/vnd.onepagertamp': { source: 'iana' },
            'application/vnd.onepagertamx': { source: 'iana' },
            'application/vnd.onepagertat': { source: 'iana' },
            'application/vnd.onepagertatp': { source: 'iana' },
            'application/vnd.onepagertatx': { source: 'iana' },
            'application/vnd.openblox.game+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openblox.game-binary': { source: 'iana' },
            'application/vnd.openeye.oeb': { source: 'iana' },
            'application/vnd.openofficeorg.extension': {
              source: 'apache',
              extensions: ['oxt']
            },
            'application/vnd.openstreetmap.data+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.custom-properties+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.customxmlproperties+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.drawing+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.drawingml.chart+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.extended-properties+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.comments+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.presentation': {
              source: 'iana',
              compressible: false,
              extensions: ['pptx']
            },
            'application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.presprops+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.slide': {
              source: 'iana',
              extensions: ['sldx']
            },
            'application/vnd.openxmlformats-officedocument.presentationml.slide+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.slideshow': {
              source: 'iana',
              extensions: ['ppsx']
            },
            'application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.tags+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.template': {
              source: 'iana',
              extensions: ['potx']
            },
            'application/vnd.openxmlformats-officedocument.presentationml.template.main+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {
              source: 'iana',
              compressible: false,
              extensions: ['xlsx']
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.template': {
              source: 'iana',
              extensions: ['xltx']
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.theme+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.themeoverride+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.vmldrawing': {
              source: 'iana'
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.document': {
              source: 'iana',
              compressible: false,
              extensions: ['docx']
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.template': {
              source: 'iana',
              extensions: ['dotx']
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-package.core-properties+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.openxmlformats-package.relationships+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oracle.resource+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.orange.indata': { source: 'iana' },
            'application/vnd.osa.netdeploy': { source: 'iana' },
            'application/vnd.osgeo.mapguide.package': {
              source: 'iana',
              extensions: ['mgp']
            },
            'application/vnd.osgi.bundle': { source: 'iana' },
            'application/vnd.osgi.dp': { source: 'iana', extensions: ['dp'] },
            'application/vnd.osgi.subsystem': {
              source: 'iana',
              extensions: ['esa']
            },
            'application/vnd.otps.ct-kip+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.oxli.countgraph': { source: 'iana' },
            'application/vnd.pagerduty+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.palm': {
              source: 'iana',
              extensions: ['pdb', 'pqa', 'oprc']
            },
            'application/vnd.panoply': { source: 'iana' },
            'application/vnd.paos.xml': { source: 'iana' },
            'application/vnd.patentdive': { source: 'iana' },
            'application/vnd.pawaafile': {
              source: 'iana',
              extensions: ['paw']
            },
            'application/vnd.pcos': { source: 'iana' },
            'application/vnd.pg.format': {
              source: 'iana',
              extensions: ['str']
            },
            'application/vnd.pg.osasli': {
              source: 'iana',
              extensions: ['ei6']
            },
            'application/vnd.piaccess.application-licence': { source: 'iana' },
            'application/vnd.picsel': { source: 'iana', extensions: ['efif'] },
            'application/vnd.pmi.widget': {
              source: 'iana',
              extensions: ['wg']
            },
            'application/vnd.poc.group-advertisement+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.pocketlearn': {
              source: 'iana',
              extensions: ['plf']
            },
            'application/vnd.powerbuilder6': {
              source: 'iana',
              extensions: ['pbd']
            },
            'application/vnd.powerbuilder6-s': { source: 'iana' },
            'application/vnd.powerbuilder7': { source: 'iana' },
            'application/vnd.powerbuilder7-s': { source: 'iana' },
            'application/vnd.powerbuilder75': { source: 'iana' },
            'application/vnd.powerbuilder75-s': { source: 'iana' },
            'application/vnd.preminet': { source: 'iana' },
            'application/vnd.previewsystems.box': {
              source: 'iana',
              extensions: ['box']
            },
            'application/vnd.proteus.magazine': {
              source: 'iana',
              extensions: ['mgz']
            },
            'application/vnd.psfs': { source: 'iana' },
            'application/vnd.publishare-delta-tree': {
              source: 'iana',
              extensions: ['qps']
            },
            'application/vnd.pvi.ptid1': {
              source: 'iana',
              extensions: ['ptid']
            },
            'application/vnd.pwg-multiplexed': { source: 'iana' },
            'application/vnd.pwg-xhtml-print+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.qualcomm.brew-app-res': { source: 'iana' },
            'application/vnd.quarantainenet': { source: 'iana' },
            'application/vnd.quark.quarkxpress': {
              source: 'iana',
              extensions: ['qxd', 'qxt', 'qwd', 'qwt', 'qxl', 'qxb']
            },
            'application/vnd.quobject-quoxdocument': { source: 'iana' },
            'application/vnd.radisys.moml+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-audit+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-audit-conf+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-audit-conn+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-audit-dialog+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-audit-stream+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-conf+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-dialog+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-dialog-base+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-dialog-fax-detect+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-dialog-fax-sendrecv+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-dialog-group+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-dialog-speech+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.radisys.msml-dialog-transform+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.rainstor.data': { source: 'iana' },
            'application/vnd.rapid': { source: 'iana' },
            'application/vnd.rar': { source: 'iana' },
            'application/vnd.realvnc.bed': {
              source: 'iana',
              extensions: ['bed']
            },
            'application/vnd.recordare.musicxml': {
              source: 'iana',
              extensions: ['mxl']
            },
            'application/vnd.recordare.musicxml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['musicxml']
            },
            'application/vnd.renlearn.rlprint': { source: 'iana' },
            'application/vnd.restful+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.rig.cryptonote': {
              source: 'iana',
              extensions: ['cryptonote']
            },
            'application/vnd.rim.cod': {
              source: 'apache',
              extensions: ['cod']
            },
            'application/vnd.rn-realmedia': {
              source: 'apache',
              extensions: ['rm']
            },
            'application/vnd.rn-realmedia-vbr': {
              source: 'apache',
              extensions: ['rmvb']
            },
            'application/vnd.route66.link66+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['link66']
            },
            'application/vnd.rs-274x': { source: 'iana' },
            'application/vnd.ruckus.download': { source: 'iana' },
            'application/vnd.s3sms': { source: 'iana' },
            'application/vnd.sailingtracker.track': {
              source: 'iana',
              extensions: ['st']
            },
            'application/vnd.sbm.cid': { source: 'iana' },
            'application/vnd.sbm.mid2': { source: 'iana' },
            'application/vnd.scribus': { source: 'iana' },
            'application/vnd.sealed.3df': { source: 'iana' },
            'application/vnd.sealed.csf': { source: 'iana' },
            'application/vnd.sealed.doc': { source: 'iana' },
            'application/vnd.sealed.eml': { source: 'iana' },
            'application/vnd.sealed.mht': { source: 'iana' },
            'application/vnd.sealed.net': { source: 'iana' },
            'application/vnd.sealed.ppt': { source: 'iana' },
            'application/vnd.sealed.tiff': { source: 'iana' },
            'application/vnd.sealed.xls': { source: 'iana' },
            'application/vnd.sealedmedia.softseal.html': { source: 'iana' },
            'application/vnd.sealedmedia.softseal.pdf': { source: 'iana' },
            'application/vnd.seemail': { source: 'iana', extensions: ['see'] },
            'application/vnd.sema': { source: 'iana', extensions: ['sema'] },
            'application/vnd.semd': { source: 'iana', extensions: ['semd'] },
            'application/vnd.semf': { source: 'iana', extensions: ['semf'] },
            'application/vnd.shana.informed.formdata': {
              source: 'iana',
              extensions: ['ifm']
            },
            'application/vnd.shana.informed.formtemplate': {
              source: 'iana',
              extensions: ['itp']
            },
            'application/vnd.shana.informed.interchange': {
              source: 'iana',
              extensions: ['iif']
            },
            'application/vnd.shana.informed.package': {
              source: 'iana',
              extensions: ['ipk']
            },
            'application/vnd.shootproof+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.sigrok.session': { source: 'iana' },
            'application/vnd.simtech-mindmapper': {
              source: 'iana',
              extensions: ['twd', 'twds']
            },
            'application/vnd.siren+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.smaf': { source: 'iana', extensions: ['mmf'] },
            'application/vnd.smart.notebook': { source: 'iana' },
            'application/vnd.smart.teacher': {
              source: 'iana',
              extensions: ['teacher']
            },
            'application/vnd.software602.filler.form+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.software602.filler.form-xml-zip': {
              source: 'iana'
            },
            'application/vnd.solent.sdkm+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['sdkm', 'sdkd']
            },
            'application/vnd.spotfire.dxp': {
              source: 'iana',
              extensions: ['dxp']
            },
            'application/vnd.spotfire.sfs': {
              source: 'iana',
              extensions: ['sfs']
            },
            'application/vnd.sqlite3': { source: 'iana' },
            'application/vnd.sss-cod': { source: 'iana' },
            'application/vnd.sss-dtf': { source: 'iana' },
            'application/vnd.sss-ntf': { source: 'iana' },
            'application/vnd.stardivision.calc': {
              source: 'apache',
              extensions: ['sdc']
            },
            'application/vnd.stardivision.draw': {
              source: 'apache',
              extensions: ['sda']
            },
            'application/vnd.stardivision.impress': {
              source: 'apache',
              extensions: ['sdd']
            },
            'application/vnd.stardivision.math': {
              source: 'apache',
              extensions: ['smf']
            },
            'application/vnd.stardivision.writer': {
              source: 'apache',
              extensions: ['sdw', 'vor']
            },
            'application/vnd.stardivision.writer-global': {
              source: 'apache',
              extensions: ['sgl']
            },
            'application/vnd.stepmania.package': {
              source: 'iana',
              extensions: ['smzip']
            },
            'application/vnd.stepmania.stepchart': {
              source: 'iana',
              extensions: ['sm']
            },
            'application/vnd.street-stream': { source: 'iana' },
            'application/vnd.sun.wadl+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['wadl']
            },
            'application/vnd.sun.xml.calc': {
              source: 'apache',
              extensions: ['sxc']
            },
            'application/vnd.sun.xml.calc.template': {
              source: 'apache',
              extensions: ['stc']
            },
            'application/vnd.sun.xml.draw': {
              source: 'apache',
              extensions: ['sxd']
            },
            'application/vnd.sun.xml.draw.template': {
              source: 'apache',
              extensions: ['std']
            },
            'application/vnd.sun.xml.impress': {
              source: 'apache',
              extensions: ['sxi']
            },
            'application/vnd.sun.xml.impress.template': {
              source: 'apache',
              extensions: ['sti']
            },
            'application/vnd.sun.xml.math': {
              source: 'apache',
              extensions: ['sxm']
            },
            'application/vnd.sun.xml.writer': {
              source: 'apache',
              extensions: ['sxw']
            },
            'application/vnd.sun.xml.writer.global': {
              source: 'apache',
              extensions: ['sxg']
            },
            'application/vnd.sun.xml.writer.template': {
              source: 'apache',
              extensions: ['stw']
            },
            'application/vnd.sus-calendar': {
              source: 'iana',
              extensions: ['sus', 'susp']
            },
            'application/vnd.svd': { source: 'iana', extensions: ['svd'] },
            'application/vnd.swiftview-ics': { source: 'iana' },
            'application/vnd.symbian.install': {
              source: 'apache',
              extensions: ['sis', 'sisx']
            },
            'application/vnd.syncml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xsm']
            },
            'application/vnd.syncml.dm+wbxml': {
              source: 'iana',
              extensions: ['bdm']
            },
            'application/vnd.syncml.dm+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xdm']
            },
            'application/vnd.syncml.dm.notification': { source: 'iana' },
            'application/vnd.syncml.dmddf+wbxml': { source: 'iana' },
            'application/vnd.syncml.dmddf+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.syncml.dmtnds+wbxml': { source: 'iana' },
            'application/vnd.syncml.dmtnds+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.syncml.ds.notification': { source: 'iana' },
            'application/vnd.tableschema+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.tao.intent-module-archive': {
              source: 'iana',
              extensions: ['tao']
            },
            'application/vnd.tcpdump.pcap': {
              source: 'iana',
              extensions: ['pcap', 'cap', 'dmp']
            },
            'application/vnd.think-cell.ppttc+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.tmd.mediaflex.api+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.tml': { source: 'iana' },
            'application/vnd.tmobile-livetv': {
              source: 'iana',
              extensions: ['tmo']
            },
            'application/vnd.tri.onesource': { source: 'iana' },
            'application/vnd.trid.tpt': { source: 'iana', extensions: ['tpt'] },
            'application/vnd.triscape.mxs': {
              source: 'iana',
              extensions: ['mxs']
            },
            'application/vnd.trueapp': { source: 'iana', extensions: ['tra'] },
            'application/vnd.truedoc': { source: 'iana' },
            'application/vnd.ubisoft.webplayer': { source: 'iana' },
            'application/vnd.ufdl': {
              source: 'iana',
              extensions: ['ufd', 'ufdl']
            },
            'application/vnd.uiq.theme': {
              source: 'iana',
              extensions: ['utz']
            },
            'application/vnd.umajin': { source: 'iana', extensions: ['umj'] },
            'application/vnd.unity': {
              source: 'iana',
              extensions: ['unityweb']
            },
            'application/vnd.uoml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['uoml']
            },
            'application/vnd.uplanet.alert': { source: 'iana' },
            'application/vnd.uplanet.alert-wbxml': { source: 'iana' },
            'application/vnd.uplanet.bearer-choice': { source: 'iana' },
            'application/vnd.uplanet.bearer-choice-wbxml': { source: 'iana' },
            'application/vnd.uplanet.cacheop': { source: 'iana' },
            'application/vnd.uplanet.cacheop-wbxml': { source: 'iana' },
            'application/vnd.uplanet.channel': { source: 'iana' },
            'application/vnd.uplanet.channel-wbxml': { source: 'iana' },
            'application/vnd.uplanet.list': { source: 'iana' },
            'application/vnd.uplanet.list-wbxml': { source: 'iana' },
            'application/vnd.uplanet.listcmd': { source: 'iana' },
            'application/vnd.uplanet.listcmd-wbxml': { source: 'iana' },
            'application/vnd.uplanet.signal': { source: 'iana' },
            'application/vnd.uri-map': { source: 'iana' },
            'application/vnd.valve.source.material': { source: 'iana' },
            'application/vnd.vcx': { source: 'iana', extensions: ['vcx'] },
            'application/vnd.vd-study': { source: 'iana' },
            'application/vnd.vectorworks': { source: 'iana' },
            'application/vnd.vel+json': { source: 'iana', compressible: true },
            'application/vnd.verimatrix.vcas': { source: 'iana' },
            'application/vnd.vidsoft.vidconference': { source: 'iana' },
            'application/vnd.visio': {
              source: 'iana',
              extensions: ['vsd', 'vst', 'vss', 'vsw']
            },
            'application/vnd.visionary': {
              source: 'iana',
              extensions: ['vis']
            },
            'application/vnd.vividence.scriptfile': { source: 'iana' },
            'application/vnd.vsf': { source: 'iana', extensions: ['vsf'] },
            'application/vnd.wap.sic': { source: 'iana' },
            'application/vnd.wap.slc': { source: 'iana' },
            'application/vnd.wap.wbxml': {
              source: 'iana',
              extensions: ['wbxml']
            },
            'application/vnd.wap.wmlc': {
              source: 'iana',
              extensions: ['wmlc']
            },
            'application/vnd.wap.wmlscriptc': {
              source: 'iana',
              extensions: ['wmlsc']
            },
            'application/vnd.webturbo': { source: 'iana', extensions: ['wtb'] },
            'application/vnd.wfa.p2p': { source: 'iana' },
            'application/vnd.wfa.wsc': { source: 'iana' },
            'application/vnd.windows.devicepairing': { source: 'iana' },
            'application/vnd.wmc': { source: 'iana' },
            'application/vnd.wmf.bootstrap': { source: 'iana' },
            'application/vnd.wolfram.mathematica': { source: 'iana' },
            'application/vnd.wolfram.mathematica.package': { source: 'iana' },
            'application/vnd.wolfram.player': {
              source: 'iana',
              extensions: ['nbp']
            },
            'application/vnd.wordperfect': {
              source: 'iana',
              extensions: ['wpd']
            },
            'application/vnd.wqd': { source: 'iana', extensions: ['wqd'] },
            'application/vnd.wrq-hp3000-labelled': { source: 'iana' },
            'application/vnd.wt.stf': { source: 'iana', extensions: ['stf'] },
            'application/vnd.wv.csp+wbxml': { source: 'iana' },
            'application/vnd.wv.csp+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.wv.ssp+xml': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.xacml+json': {
              source: 'iana',
              compressible: true
            },
            'application/vnd.xara': { source: 'iana', extensions: ['xar'] },
            'application/vnd.xfdl': { source: 'iana', extensions: ['xfdl'] },
            'application/vnd.xfdl.webform': { source: 'iana' },
            'application/vnd.xmi+xml': { source: 'iana', compressible: true },
            'application/vnd.xmpie.cpkg': { source: 'iana' },
            'application/vnd.xmpie.dpkg': { source: 'iana' },
            'application/vnd.xmpie.plan': { source: 'iana' },
            'application/vnd.xmpie.ppkg': { source: 'iana' },
            'application/vnd.xmpie.xlim': { source: 'iana' },
            'application/vnd.yamaha.hv-dic': {
              source: 'iana',
              extensions: ['hvd']
            },
            'application/vnd.yamaha.hv-script': {
              source: 'iana',
              extensions: ['hvs']
            },
            'application/vnd.yamaha.hv-voice': {
              source: 'iana',
              extensions: ['hvp']
            },
            'application/vnd.yamaha.openscoreformat': {
              source: 'iana',
              extensions: ['osf']
            },
            'application/vnd.yamaha.openscoreformat.osfpvg+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['osfpvg']
            },
            'application/vnd.yamaha.remote-setup': { source: 'iana' },
            'application/vnd.yamaha.smaf-audio': {
              source: 'iana',
              extensions: ['saf']
            },
            'application/vnd.yamaha.smaf-phrase': {
              source: 'iana',
              extensions: ['spf']
            },
            'application/vnd.yamaha.through-ngn': { source: 'iana' },
            'application/vnd.yamaha.tunnel-udpencap': { source: 'iana' },
            'application/vnd.yaoweme': { source: 'iana' },
            'application/vnd.yellowriver-custom-menu': {
              source: 'iana',
              extensions: ['cmp']
            },
            'application/vnd.youtube.yt': { source: 'iana' },
            'application/vnd.zul': {
              source: 'iana',
              extensions: ['zir', 'zirz']
            },
            'application/vnd.zzazz.deck+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['zaz']
            },
            'application/voicexml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['vxml']
            },
            'application/voucher-cms+json': {
              source: 'iana',
              compressible: true
            },
            'application/vq-rtcpxr': { source: 'iana' },
            'application/wasm': { compressible: true, extensions: ['wasm'] },
            'application/watcherinfo+xml': {
              source: 'iana',
              compressible: true
            },
            'application/webpush-options+json': {
              source: 'iana',
              compressible: true
            },
            'application/whoispp-query': { source: 'iana' },
            'application/whoispp-response': { source: 'iana' },
            'application/widget': { source: 'iana', extensions: ['wgt'] },
            'application/winhlp': { source: 'apache', extensions: ['hlp'] },
            'application/wita': { source: 'iana' },
            'application/wordperfect5.1': { source: 'iana' },
            'application/wsdl+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['wsdl']
            },
            'application/wspolicy+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['wspolicy']
            },
            'application/x-7z-compressed': {
              source: 'apache',
              compressible: false,
              extensions: ['7z']
            },
            'application/x-abiword': { source: 'apache', extensions: ['abw'] },
            'application/x-ace-compressed': {
              source: 'apache',
              extensions: ['ace']
            },
            'application/x-amf': { source: 'apache' },
            'application/x-apple-diskimage': {
              source: 'apache',
              extensions: ['dmg']
            },
            'application/x-arj': { compressible: false, extensions: ['arj'] },
            'application/x-authorware-bin': {
              source: 'apache',
              extensions: ['aab', 'x32', 'u32', 'vox']
            },
            'application/x-authorware-map': {
              source: 'apache',
              extensions: ['aam']
            },
            'application/x-authorware-seg': {
              source: 'apache',
              extensions: ['aas']
            },
            'application/x-bcpio': { source: 'apache', extensions: ['bcpio'] },
            'application/x-bdoc': { compressible: false, extensions: ['bdoc'] },
            'application/x-bittorrent': {
              source: 'apache',
              extensions: ['torrent']
            },
            'application/x-blorb': {
              source: 'apache',
              extensions: ['blb', 'blorb']
            },
            'application/x-bzip': {
              source: 'apache',
              compressible: false,
              extensions: ['bz']
            },
            'application/x-bzip2': {
              source: 'apache',
              compressible: false,
              extensions: ['bz2', 'boz']
            },
            'application/x-cbr': {
              source: 'apache',
              extensions: ['cbr', 'cba', 'cbt', 'cbz', 'cb7']
            },
            'application/x-cdlink': { source: 'apache', extensions: ['vcd'] },
            'application/x-cfs-compressed': {
              source: 'apache',
              extensions: ['cfs']
            },
            'application/x-chat': { source: 'apache', extensions: ['chat'] },
            'application/x-chess-pgn': {
              source: 'apache',
              extensions: ['pgn']
            },
            'application/x-chrome-extension': { extensions: ['crx'] },
            'application/x-cocoa': { source: 'nginx', extensions: ['cco'] },
            'application/x-compress': { source: 'apache' },
            'application/x-conference': {
              source: 'apache',
              extensions: ['nsc']
            },
            'application/x-cpio': { source: 'apache', extensions: ['cpio'] },
            'application/x-csh': { source: 'apache', extensions: ['csh'] },
            'application/x-deb': { compressible: false },
            'application/x-debian-package': {
              source: 'apache',
              extensions: ['deb', 'udeb']
            },
            'application/x-dgc-compressed': {
              source: 'apache',
              extensions: ['dgc']
            },
            'application/x-director': {
              source: 'apache',
              extensions: [
                'dir',
                'dcr',
                'dxr',
                'cst',
                'cct',
                'cxt',
                'w3d',
                'fgd',
                'swa'
              ]
            },
            'application/x-doom': { source: 'apache', extensions: ['wad'] },
            'application/x-dtbncx+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['ncx']
            },
            'application/x-dtbook+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['dtb']
            },
            'application/x-dtbresource+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['res']
            },
            'application/x-dvi': {
              source: 'apache',
              compressible: false,
              extensions: ['dvi']
            },
            'application/x-envoy': { source: 'apache', extensions: ['evy'] },
            'application/x-eva': { source: 'apache', extensions: ['eva'] },
            'application/x-font-bdf': { source: 'apache', extensions: ['bdf'] },
            'application/x-font-dos': { source: 'apache' },
            'application/x-font-framemaker': { source: 'apache' },
            'application/x-font-ghostscript': {
              source: 'apache',
              extensions: ['gsf']
            },
            'application/x-font-libgrx': { source: 'apache' },
            'application/x-font-linux-psf': {
              source: 'apache',
              extensions: ['psf']
            },
            'application/x-font-pcf': { source: 'apache', extensions: ['pcf'] },
            'application/x-font-snf': { source: 'apache', extensions: ['snf'] },
            'application/x-font-speedo': { source: 'apache' },
            'application/x-font-sunos-news': { source: 'apache' },
            'application/x-font-type1': {
              source: 'apache',
              extensions: ['pfa', 'pfb', 'pfm', 'afm']
            },
            'application/x-font-vfont': { source: 'apache' },
            'application/x-freearc': { source: 'apache', extensions: ['arc'] },
            'application/x-futuresplash': {
              source: 'apache',
              extensions: ['spl']
            },
            'application/x-gca-compressed': {
              source: 'apache',
              extensions: ['gca']
            },
            'application/x-glulx': { source: 'apache', extensions: ['ulx'] },
            'application/x-gnumeric': {
              source: 'apache',
              extensions: ['gnumeric']
            },
            'application/x-gramps-xml': {
              source: 'apache',
              extensions: ['gramps']
            },
            'application/x-gtar': { source: 'apache', extensions: ['gtar'] },
            'application/x-gzip': { source: 'apache' },
            'application/x-hdf': { source: 'apache', extensions: ['hdf'] },
            'application/x-httpd-php': {
              compressible: true,
              extensions: ['php']
            },
            'application/x-install-instructions': {
              source: 'apache',
              extensions: ['install']
            },
            'application/x-iso9660-image': {
              source: 'apache',
              extensions: ['iso']
            },
            'application/x-java-archive-diff': {
              source: 'nginx',
              extensions: ['jardiff']
            },
            'application/x-java-jnlp-file': {
              source: 'apache',
              compressible: false,
              extensions: ['jnlp']
            },
            'application/x-javascript': { compressible: true },
            'application/x-latex': {
              source: 'apache',
              compressible: false,
              extensions: ['latex']
            },
            'application/x-lua-bytecode': { extensions: ['luac'] },
            'application/x-lzh-compressed': {
              source: 'apache',
              extensions: ['lzh', 'lha']
            },
            'application/x-makeself': { source: 'nginx', extensions: ['run'] },
            'application/x-mie': { source: 'apache', extensions: ['mie'] },
            'application/x-mobipocket-ebook': {
              source: 'apache',
              extensions: ['prc', 'mobi']
            },
            'application/x-mpegurl': { compressible: false },
            'application/x-ms-application': {
              source: 'apache',
              extensions: ['application']
            },
            'application/x-ms-shortcut': {
              source: 'apache',
              extensions: ['lnk']
            },
            'application/x-ms-wmd': { source: 'apache', extensions: ['wmd'] },
            'application/x-ms-wmz': { source: 'apache', extensions: ['wmz'] },
            'application/x-ms-xbap': { source: 'apache', extensions: ['xbap'] },
            'application/x-msaccess': { source: 'apache', extensions: ['mdb'] },
            'application/x-msbinder': { source: 'apache', extensions: ['obd'] },
            'application/x-mscardfile': {
              source: 'apache',
              extensions: ['crd']
            },
            'application/x-msclip': { source: 'apache', extensions: ['clp'] },
            'application/x-msdos-program': { extensions: ['exe'] },
            'application/x-msdownload': {
              source: 'apache',
              extensions: ['exe', 'dll', 'com', 'bat', 'msi']
            },
            'application/x-msmediaview': {
              source: 'apache',
              extensions: ['mvb', 'm13', 'm14']
            },
            'application/x-msmetafile': {
              source: 'apache',
              extensions: ['wmf', 'wmz', 'emf', 'emz']
            },
            'application/x-msmoney': { source: 'apache', extensions: ['mny'] },
            'application/x-mspublisher': {
              source: 'apache',
              extensions: ['pub']
            },
            'application/x-msschedule': {
              source: 'apache',
              extensions: ['scd']
            },
            'application/x-msterminal': {
              source: 'apache',
              extensions: ['trm']
            },
            'application/x-mswrite': { source: 'apache', extensions: ['wri'] },
            'application/x-netcdf': {
              source: 'apache',
              extensions: ['nc', 'cdf']
            },
            'application/x-ns-proxy-autoconfig': {
              compressible: true,
              extensions: ['pac']
            },
            'application/x-nzb': { source: 'apache', extensions: ['nzb'] },
            'application/x-perl': { source: 'nginx', extensions: ['pl', 'pm'] },
            'application/x-pilot': {
              source: 'nginx',
              extensions: ['prc', 'pdb']
            },
            'application/x-pkcs12': {
              source: 'apache',
              compressible: false,
              extensions: ['p12', 'pfx']
            },
            'application/x-pkcs7-certificates': {
              source: 'apache',
              extensions: ['p7b', 'spc']
            },
            'application/x-pkcs7-certreqresp': {
              source: 'apache',
              extensions: ['p7r']
            },
            'application/x-rar-compressed': {
              source: 'apache',
              compressible: false,
              extensions: ['rar']
            },
            'application/x-redhat-package-manager': {
              source: 'nginx',
              extensions: ['rpm']
            },
            'application/x-research-info-systems': {
              source: 'apache',
              extensions: ['ris']
            },
            'application/x-sea': { source: 'nginx', extensions: ['sea'] },
            'application/x-sh': {
              source: 'apache',
              compressible: true,
              extensions: ['sh']
            },
            'application/x-shar': { source: 'apache', extensions: ['shar'] },
            'application/x-shockwave-flash': {
              source: 'apache',
              compressible: false,
              extensions: ['swf']
            },
            'application/x-silverlight-app': {
              source: 'apache',
              extensions: ['xap']
            },
            'application/x-sql': { source: 'apache', extensions: ['sql'] },
            'application/x-stuffit': {
              source: 'apache',
              compressible: false,
              extensions: ['sit']
            },
            'application/x-stuffitx': {
              source: 'apache',
              extensions: ['sitx']
            },
            'application/x-subrip': { source: 'apache', extensions: ['srt'] },
            'application/x-sv4cpio': {
              source: 'apache',
              extensions: ['sv4cpio']
            },
            'application/x-sv4crc': {
              source: 'apache',
              extensions: ['sv4crc']
            },
            'application/x-t3vm-image': {
              source: 'apache',
              extensions: ['t3']
            },
            'application/x-tads': { source: 'apache', extensions: ['gam'] },
            'application/x-tar': {
              source: 'apache',
              compressible: true,
              extensions: ['tar']
            },
            'application/x-tcl': {
              source: 'apache',
              extensions: ['tcl', 'tk']
            },
            'application/x-tex': { source: 'apache', extensions: ['tex'] },
            'application/x-tex-tfm': { source: 'apache', extensions: ['tfm'] },
            'application/x-texinfo': {
              source: 'apache',
              extensions: ['texinfo', 'texi']
            },
            'application/x-tgif': { source: 'apache', extensions: ['obj'] },
            'application/x-ustar': { source: 'apache', extensions: ['ustar'] },
            'application/x-virtualbox-hdd': {
              compressible: true,
              extensions: ['hdd']
            },
            'application/x-virtualbox-ova': {
              compressible: true,
              extensions: ['ova']
            },
            'application/x-virtualbox-ovf': {
              compressible: true,
              extensions: ['ovf']
            },
            'application/x-virtualbox-vbox': {
              compressible: true,
              extensions: ['vbox']
            },
            'application/x-virtualbox-vbox-extpack': {
              compressible: false,
              extensions: ['vbox-extpack']
            },
            'application/x-virtualbox-vdi': {
              compressible: true,
              extensions: ['vdi']
            },
            'application/x-virtualbox-vhd': {
              compressible: true,
              extensions: ['vhd']
            },
            'application/x-virtualbox-vmdk': {
              compressible: true,
              extensions: ['vmdk']
            },
            'application/x-wais-source': {
              source: 'apache',
              extensions: ['src']
            },
            'application/x-web-app-manifest+json': {
              compressible: true,
              extensions: ['webapp']
            },
            'application/x-www-form-urlencoded': {
              source: 'iana',
              compressible: true
            },
            'application/x-x509-ca-cert': {
              source: 'apache',
              extensions: ['der', 'crt', 'pem']
            },
            'application/x-xfig': { source: 'apache', extensions: ['fig'] },
            'application/x-xliff+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['xlf']
            },
            'application/x-xpinstall': {
              source: 'apache',
              compressible: false,
              extensions: ['xpi']
            },
            'application/x-xz': { source: 'apache', extensions: ['xz'] },
            'application/x-zmachine': {
              source: 'apache',
              extensions: ['z1', 'z2', 'z3', 'z4', 'z5', 'z6', 'z7', 'z8']
            },
            'application/x400-bp': { source: 'iana' },
            'application/xacml+xml': { source: 'iana', compressible: true },
            'application/xaml+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['xaml']
            },
            'application/xcap-att+xml': { source: 'iana', compressible: true },
            'application/xcap-caps+xml': { source: 'iana', compressible: true },
            'application/xcap-diff+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xdf']
            },
            'application/xcap-el+xml': { source: 'iana', compressible: true },
            'application/xcap-error+xml': {
              source: 'iana',
              compressible: true
            },
            'application/xcap-ns+xml': { source: 'iana', compressible: true },
            'application/xcon-conference-info+xml': {
              source: 'iana',
              compressible: true
            },
            'application/xcon-conference-info-diff+xml': {
              source: 'iana',
              compressible: true
            },
            'application/xenc+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xenc']
            },
            'application/xhtml+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xhtml', 'xht']
            },
            'application/xhtml-voice+xml': {
              source: 'apache',
              compressible: true
            },
            'application/xliff+xml': { source: 'iana', compressible: true },
            'application/xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xml', 'xsl', 'xsd', 'rng']
            },
            'application/xml-dtd': {
              source: 'iana',
              compressible: true,
              extensions: ['dtd']
            },
            'application/xml-external-parsed-entity': { source: 'iana' },
            'application/xml-patch+xml': { source: 'iana', compressible: true },
            'application/xmpp+xml': { source: 'iana', compressible: true },
            'application/xop+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xop']
            },
            'application/xproc+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['xpl']
            },
            'application/xslt+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xslt']
            },
            'application/xspf+xml': {
              source: 'apache',
              compressible: true,
              extensions: ['xspf']
            },
            'application/xv+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['mxml', 'xhvml', 'xvml', 'xvm']
            },
            'application/yang': { source: 'iana', extensions: ['yang'] },
            'application/yang-data+json': {
              source: 'iana',
              compressible: true
            },
            'application/yang-data+xml': { source: 'iana', compressible: true },
            'application/yang-patch+json': {
              source: 'iana',
              compressible: true
            },
            'application/yang-patch+xml': {
              source: 'iana',
              compressible: true
            },
            'application/yin+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['yin']
            },
            'application/zip': {
              source: 'iana',
              compressible: false,
              extensions: ['zip']
            },
            'application/zlib': { source: 'iana' },
            'application/zstd': { source: 'iana' },
            'audio/1d-interleaved-parityfec': { source: 'iana' },
            'audio/32kadpcm': { source: 'iana' },
            'audio/3gpp': {
              source: 'iana',
              compressible: false,
              extensions: ['3gpp']
            },
            'audio/3gpp2': { source: 'iana' },
            'audio/aac': { source: 'iana' },
            'audio/ac3': { source: 'iana' },
            'audio/adpcm': { source: 'apache', extensions: ['adp'] },
            'audio/amr': { source: 'iana' },
            'audio/amr-wb': { source: 'iana' },
            'audio/amr-wb+': { source: 'iana' },
            'audio/aptx': { source: 'iana' },
            'audio/asc': { source: 'iana' },
            'audio/atrac-advanced-lossless': { source: 'iana' },
            'audio/atrac-x': { source: 'iana' },
            'audio/atrac3': { source: 'iana' },
            'audio/basic': {
              source: 'iana',
              compressible: false,
              extensions: ['au', 'snd']
            },
            'audio/bv16': { source: 'iana' },
            'audio/bv32': { source: 'iana' },
            'audio/clearmode': { source: 'iana' },
            'audio/cn': { source: 'iana' },
            'audio/dat12': { source: 'iana' },
            'audio/dls': { source: 'iana' },
            'audio/dsr-es201108': { source: 'iana' },
            'audio/dsr-es202050': { source: 'iana' },
            'audio/dsr-es202211': { source: 'iana' },
            'audio/dsr-es202212': { source: 'iana' },
            'audio/dv': { source: 'iana' },
            'audio/dvi4': { source: 'iana' },
            'audio/eac3': { source: 'iana' },
            'audio/encaprtp': { source: 'iana' },
            'audio/evrc': { source: 'iana' },
            'audio/evrc-qcp': { source: 'iana' },
            'audio/evrc0': { source: 'iana' },
            'audio/evrc1': { source: 'iana' },
            'audio/evrcb': { source: 'iana' },
            'audio/evrcb0': { source: 'iana' },
            'audio/evrcb1': { source: 'iana' },
            'audio/evrcnw': { source: 'iana' },
            'audio/evrcnw0': { source: 'iana' },
            'audio/evrcnw1': { source: 'iana' },
            'audio/evrcwb': { source: 'iana' },
            'audio/evrcwb0': { source: 'iana' },
            'audio/evrcwb1': { source: 'iana' },
            'audio/evs': { source: 'iana' },
            'audio/fwdred': { source: 'iana' },
            'audio/g711-0': { source: 'iana' },
            'audio/g719': { source: 'iana' },
            'audio/g722': { source: 'iana' },
            'audio/g7221': { source: 'iana' },
            'audio/g723': { source: 'iana' },
            'audio/g726-16': { source: 'iana' },
            'audio/g726-24': { source: 'iana' },
            'audio/g726-32': { source: 'iana' },
            'audio/g726-40': { source: 'iana' },
            'audio/g728': { source: 'iana' },
            'audio/g729': { source: 'iana' },
            'audio/g7291': { source: 'iana' },
            'audio/g729d': { source: 'iana' },
            'audio/g729e': { source: 'iana' },
            'audio/gsm': { source: 'iana' },
            'audio/gsm-efr': { source: 'iana' },
            'audio/gsm-hr-08': { source: 'iana' },
            'audio/ilbc': { source: 'iana' },
            'audio/ip-mr_v2.5': { source: 'iana' },
            'audio/isac': { source: 'apache' },
            'audio/l16': { source: 'iana' },
            'audio/l20': { source: 'iana' },
            'audio/l24': { source: 'iana', compressible: false },
            'audio/l8': { source: 'iana' },
            'audio/lpc': { source: 'iana' },
            'audio/melp': { source: 'iana' },
            'audio/melp1200': { source: 'iana' },
            'audio/melp2400': { source: 'iana' },
            'audio/melp600': { source: 'iana' },
            'audio/midi': {
              source: 'apache',
              extensions: ['mid', 'midi', 'kar', 'rmi']
            },
            'audio/mobile-xmf': { source: 'iana' },
            'audio/mp3': { compressible: false, extensions: ['mp3'] },
            'audio/mp4': {
              source: 'iana',
              compressible: false,
              extensions: ['m4a', 'mp4a']
            },
            'audio/mp4a-latm': { source: 'iana' },
            'audio/mpa': { source: 'iana' },
            'audio/mpa-robust': { source: 'iana' },
            'audio/mpeg': {
              source: 'iana',
              compressible: false,
              extensions: ['mpga', 'mp2', 'mp2a', 'mp3', 'm2a', 'm3a']
            },
            'audio/mpeg4-generic': { source: 'iana' },
            'audio/musepack': { source: 'apache' },
            'audio/ogg': {
              source: 'iana',
              compressible: false,
              extensions: ['oga', 'ogg', 'spx']
            },
            'audio/opus': { source: 'iana' },
            'audio/parityfec': { source: 'iana' },
            'audio/pcma': { source: 'iana' },
            'audio/pcma-wb': { source: 'iana' },
            'audio/pcmu': { source: 'iana' },
            'audio/pcmu-wb': { source: 'iana' },
            'audio/prs.sid': { source: 'iana' },
            'audio/qcelp': { source: 'iana' },
            'audio/raptorfec': { source: 'iana' },
            'audio/red': { source: 'iana' },
            'audio/rtp-enc-aescm128': { source: 'iana' },
            'audio/rtp-midi': { source: 'iana' },
            'audio/rtploopback': { source: 'iana' },
            'audio/rtx': { source: 'iana' },
            'audio/s3m': { source: 'apache', extensions: ['s3m'] },
            'audio/silk': { source: 'apache', extensions: ['sil'] },
            'audio/smv': { source: 'iana' },
            'audio/smv-qcp': { source: 'iana' },
            'audio/smv0': { source: 'iana' },
            'audio/sp-midi': { source: 'iana' },
            'audio/speex': { source: 'iana' },
            'audio/t140c': { source: 'iana' },
            'audio/t38': { source: 'iana' },
            'audio/telephone-event': { source: 'iana' },
            'audio/tone': { source: 'iana' },
            'audio/uemclip': { source: 'iana' },
            'audio/ulpfec': { source: 'iana' },
            'audio/usac': { source: 'iana' },
            'audio/vdvi': { source: 'iana' },
            'audio/vmr-wb': { source: 'iana' },
            'audio/vnd.3gpp.iufp': { source: 'iana' },
            'audio/vnd.4sb': { source: 'iana' },
            'audio/vnd.audiokoz': { source: 'iana' },
            'audio/vnd.celp': { source: 'iana' },
            'audio/vnd.cisco.nse': { source: 'iana' },
            'audio/vnd.cmles.radio-events': { source: 'iana' },
            'audio/vnd.cns.anp1': { source: 'iana' },
            'audio/vnd.cns.inf1': { source: 'iana' },
            'audio/vnd.dece.audio': {
              source: 'iana',
              extensions: ['uva', 'uvva']
            },
            'audio/vnd.digital-winds': { source: 'iana', extensions: ['eol'] },
            'audio/vnd.dlna.adts': { source: 'iana' },
            'audio/vnd.dolby.heaac.1': { source: 'iana' },
            'audio/vnd.dolby.heaac.2': { source: 'iana' },
            'audio/vnd.dolby.mlp': { source: 'iana' },
            'audio/vnd.dolby.mps': { source: 'iana' },
            'audio/vnd.dolby.pl2': { source: 'iana' },
            'audio/vnd.dolby.pl2x': { source: 'iana' },
            'audio/vnd.dolby.pl2z': { source: 'iana' },
            'audio/vnd.dolby.pulse.1': { source: 'iana' },
            'audio/vnd.dra': { source: 'iana', extensions: ['dra'] },
            'audio/vnd.dts': { source: 'iana', extensions: ['dts'] },
            'audio/vnd.dts.hd': { source: 'iana', extensions: ['dtshd'] },
            'audio/vnd.dvb.file': { source: 'iana' },
            'audio/vnd.everad.plj': { source: 'iana' },
            'audio/vnd.hns.audio': { source: 'iana' },
            'audio/vnd.lucent.voice': { source: 'iana', extensions: ['lvp'] },
            'audio/vnd.ms-playready.media.pya': {
              source: 'iana',
              extensions: ['pya']
            },
            'audio/vnd.nokia.mobile-xmf': { source: 'iana' },
            'audio/vnd.nortel.vbk': { source: 'iana' },
            'audio/vnd.nuera.ecelp4800': {
              source: 'iana',
              extensions: ['ecelp4800']
            },
            'audio/vnd.nuera.ecelp7470': {
              source: 'iana',
              extensions: ['ecelp7470']
            },
            'audio/vnd.nuera.ecelp9600': {
              source: 'iana',
              extensions: ['ecelp9600']
            },
            'audio/vnd.octel.sbc': { source: 'iana' },
            'audio/vnd.presonus.multitrack': { source: 'iana' },
            'audio/vnd.qcelp': { source: 'iana' },
            'audio/vnd.rhetorex.32kadpcm': { source: 'iana' },
            'audio/vnd.rip': { source: 'iana', extensions: ['rip'] },
            'audio/vnd.rn-realaudio': { compressible: false },
            'audio/vnd.sealedmedia.softseal.mpeg': { source: 'iana' },
            'audio/vnd.vmx.cvsd': { source: 'iana' },
            'audio/vnd.wave': { compressible: false },
            'audio/vorbis': { source: 'iana', compressible: false },
            'audio/vorbis-config': { source: 'iana' },
            'audio/wav': { compressible: false, extensions: ['wav'] },
            'audio/wave': { compressible: false, extensions: ['wav'] },
            'audio/webm': {
              source: 'apache',
              compressible: false,
              extensions: ['weba']
            },
            'audio/x-aac': {
              source: 'apache',
              compressible: false,
              extensions: ['aac']
            },
            'audio/x-aiff': {
              source: 'apache',
              extensions: ['aif', 'aiff', 'aifc']
            },
            'audio/x-caf': {
              source: 'apache',
              compressible: false,
              extensions: ['caf']
            },
            'audio/x-flac': { source: 'apache', extensions: ['flac'] },
            'audio/x-m4a': { source: 'nginx', extensions: ['m4a'] },
            'audio/x-matroska': { source: 'apache', extensions: ['mka'] },
            'audio/x-mpegurl': { source: 'apache', extensions: ['m3u'] },
            'audio/x-ms-wax': { source: 'apache', extensions: ['wax'] },
            'audio/x-ms-wma': { source: 'apache', extensions: ['wma'] },
            'audio/x-pn-realaudio': {
              source: 'apache',
              extensions: ['ram', 'ra']
            },
            'audio/x-pn-realaudio-plugin': {
              source: 'apache',
              extensions: ['rmp']
            },
            'audio/x-realaudio': { source: 'nginx', extensions: ['ra'] },
            'audio/x-tta': { source: 'apache' },
            'audio/x-wav': { source: 'apache', extensions: ['wav'] },
            'audio/xm': { source: 'apache', extensions: ['xm'] },
            'chemical/x-cdx': { source: 'apache', extensions: ['cdx'] },
            'chemical/x-cif': { source: 'apache', extensions: ['cif'] },
            'chemical/x-cmdf': { source: 'apache', extensions: ['cmdf'] },
            'chemical/x-cml': { source: 'apache', extensions: ['cml'] },
            'chemical/x-csml': { source: 'apache', extensions: ['csml'] },
            'chemical/x-pdb': { source: 'apache' },
            'chemical/x-xyz': { source: 'apache', extensions: ['xyz'] },
            'font/collection': { source: 'iana', extensions: ['ttc'] },
            'font/otf': {
              source: 'iana',
              compressible: true,
              extensions: ['otf']
            },
            'font/sfnt': { source: 'iana' },
            'font/ttf': { source: 'iana', extensions: ['ttf'] },
            'font/woff': { source: 'iana', extensions: ['woff'] },
            'font/woff2': { source: 'iana', extensions: ['woff2'] },
            'image/aces': { source: 'iana', extensions: ['exr'] },
            'image/apng': { compressible: false, extensions: ['apng'] },
            'image/avci': { source: 'iana' },
            'image/avcs': { source: 'iana' },
            'image/bmp': {
              source: 'iana',
              compressible: true,
              extensions: ['bmp']
            },
            'image/cgm': { source: 'iana', extensions: ['cgm'] },
            'image/dicom-rle': { source: 'iana', extensions: ['drle'] },
            'image/emf': { source: 'iana', extensions: ['emf'] },
            'image/fits': { source: 'iana', extensions: ['fits'] },
            'image/g3fax': { source: 'iana', extensions: ['g3'] },
            'image/gif': {
              source: 'iana',
              compressible: false,
              extensions: ['gif']
            },
            'image/heic': { source: 'iana', extensions: ['heic'] },
            'image/heic-sequence': { source: 'iana', extensions: ['heics'] },
            'image/heif': { source: 'iana', extensions: ['heif'] },
            'image/heif-sequence': { source: 'iana', extensions: ['heifs'] },
            'image/ief': { source: 'iana', extensions: ['ief'] },
            'image/jls': { source: 'iana', extensions: ['jls'] },
            'image/jp2': {
              source: 'iana',
              compressible: false,
              extensions: ['jp2', 'jpg2']
            },
            'image/jpeg': {
              source: 'iana',
              compressible: false,
              extensions: ['jpeg', 'jpg', 'jpe']
            },
            'image/jpm': {
              source: 'iana',
              compressible: false,
              extensions: ['jpm']
            },
            'image/jpx': {
              source: 'iana',
              compressible: false,
              extensions: ['jpx', 'jpf']
            },
            'image/ktx': { source: 'iana', extensions: ['ktx'] },
            'image/naplps': { source: 'iana' },
            'image/pjpeg': { compressible: false },
            'image/png': {
              source: 'iana',
              compressible: false,
              extensions: ['png']
            },
            'image/prs.btif': { source: 'iana', extensions: ['btif'] },
            'image/prs.pti': { source: 'iana', extensions: ['pti'] },
            'image/pwg-raster': { source: 'iana' },
            'image/sgi': { source: 'apache', extensions: ['sgi'] },
            'image/svg+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['svg', 'svgz']
            },
            'image/t38': { source: 'iana', extensions: ['t38'] },
            'image/tiff': {
              source: 'iana',
              compressible: false,
              extensions: ['tif', 'tiff']
            },
            'image/tiff-fx': { source: 'iana', extensions: ['tfx'] },
            'image/vnd.adobe.photoshop': {
              source: 'iana',
              compressible: true,
              extensions: ['psd']
            },
            'image/vnd.airzip.accelerator.azv': {
              source: 'iana',
              extensions: ['azv']
            },
            'image/vnd.cns.inf2': { source: 'iana' },
            'image/vnd.dece.graphic': {
              source: 'iana',
              extensions: ['uvi', 'uvvi', 'uvg', 'uvvg']
            },
            'image/vnd.djvu': { source: 'iana', extensions: ['djvu', 'djv'] },
            'image/vnd.dvb.subtitle': { source: 'iana', extensions: ['sub'] },
            'image/vnd.dwg': { source: 'iana', extensions: ['dwg'] },
            'image/vnd.dxf': { source: 'iana', extensions: ['dxf'] },
            'image/vnd.fastbidsheet': { source: 'iana', extensions: ['fbs'] },
            'image/vnd.fpx': { source: 'iana', extensions: ['fpx'] },
            'image/vnd.fst': { source: 'iana', extensions: ['fst'] },
            'image/vnd.fujixerox.edmics-mmr': {
              source: 'iana',
              extensions: ['mmr']
            },
            'image/vnd.fujixerox.edmics-rlc': {
              source: 'iana',
              extensions: ['rlc']
            },
            'image/vnd.globalgraphics.pgb': { source: 'iana' },
            'image/vnd.microsoft.icon': { source: 'iana', extensions: ['ico'] },
            'image/vnd.mix': { source: 'iana' },
            'image/vnd.mozilla.apng': { source: 'iana' },
            'image/vnd.ms-modi': { source: 'iana', extensions: ['mdi'] },
            'image/vnd.ms-photo': { source: 'apache', extensions: ['wdp'] },
            'image/vnd.net-fpx': { source: 'iana', extensions: ['npx'] },
            'image/vnd.radiance': { source: 'iana' },
            'image/vnd.sealed.png': { source: 'iana' },
            'image/vnd.sealedmedia.softseal.gif': { source: 'iana' },
            'image/vnd.sealedmedia.softseal.jpg': { source: 'iana' },
            'image/vnd.svf': { source: 'iana' },
            'image/vnd.tencent.tap': { source: 'iana', extensions: ['tap'] },
            'image/vnd.valve.source.texture': {
              source: 'iana',
              extensions: ['vtf']
            },
            'image/vnd.wap.wbmp': { source: 'iana', extensions: ['wbmp'] },
            'image/vnd.xiff': { source: 'iana', extensions: ['xif'] },
            'image/vnd.zbrush.pcx': { source: 'iana', extensions: ['pcx'] },
            'image/webp': { source: 'apache', extensions: ['webp'] },
            'image/wmf': { source: 'iana', extensions: ['wmf'] },
            'image/x-3ds': { source: 'apache', extensions: ['3ds'] },
            'image/x-cmu-raster': { source: 'apache', extensions: ['ras'] },
            'image/x-cmx': { source: 'apache', extensions: ['cmx'] },
            'image/x-freehand': {
              source: 'apache',
              extensions: ['fh', 'fhc', 'fh4', 'fh5', 'fh7']
            },
            'image/x-icon': {
              source: 'apache',
              compressible: true,
              extensions: ['ico']
            },
            'image/x-jng': { source: 'nginx', extensions: ['jng'] },
            'image/x-mrsid-image': { source: 'apache', extensions: ['sid'] },
            'image/x-ms-bmp': {
              source: 'nginx',
              compressible: true,
              extensions: ['bmp']
            },
            'image/x-pcx': { source: 'apache', extensions: ['pcx'] },
            'image/x-pict': { source: 'apache', extensions: ['pic', 'pct'] },
            'image/x-portable-anymap': {
              source: 'apache',
              extensions: ['pnm']
            },
            'image/x-portable-bitmap': {
              source: 'apache',
              extensions: ['pbm']
            },
            'image/x-portable-graymap': {
              source: 'apache',
              extensions: ['pgm']
            },
            'image/x-portable-pixmap': {
              source: 'apache',
              extensions: ['ppm']
            },
            'image/x-rgb': { source: 'apache', extensions: ['rgb'] },
            'image/x-tga': { source: 'apache', extensions: ['tga'] },
            'image/x-xbitmap': { source: 'apache', extensions: ['xbm'] },
            'image/x-xcf': { compressible: false },
            'image/x-xpixmap': { source: 'apache', extensions: ['xpm'] },
            'image/x-xwindowdump': { source: 'apache', extensions: ['xwd'] },
            'message/cpim': { source: 'iana' },
            'message/delivery-status': { source: 'iana' },
            'message/disposition-notification': {
              source: 'iana',
              extensions: ['disposition-notification']
            },
            'message/external-body': { source: 'iana' },
            'message/feedback-report': { source: 'iana' },
            'message/global': { source: 'iana', extensions: ['u8msg'] },
            'message/global-delivery-status': {
              source: 'iana',
              extensions: ['u8dsn']
            },
            'message/global-disposition-notification': {
              source: 'iana',
              extensions: ['u8mdn']
            },
            'message/global-headers': { source: 'iana', extensions: ['u8hdr'] },
            'message/http': { source: 'iana', compressible: false },
            'message/imdn+xml': { source: 'iana', compressible: true },
            'message/news': { source: 'iana' },
            'message/partial': { source: 'iana', compressible: false },
            'message/rfc822': {
              source: 'iana',
              compressible: true,
              extensions: ['eml', 'mime']
            },
            'message/s-http': { source: 'iana' },
            'message/sip': { source: 'iana' },
            'message/sipfrag': { source: 'iana' },
            'message/tracking-status': { source: 'iana' },
            'message/vnd.si.simp': { source: 'iana' },
            'message/vnd.wfa.wsc': { source: 'iana', extensions: ['wsc'] },
            'model/3mf': { source: 'iana' },
            'model/gltf+json': {
              source: 'iana',
              compressible: true,
              extensions: ['gltf']
            },
            'model/gltf-binary': {
              source: 'iana',
              compressible: true,
              extensions: ['glb']
            },
            'model/iges': {
              source: 'iana',
              compressible: false,
              extensions: ['igs', 'iges']
            },
            'model/mesh': {
              source: 'iana',
              compressible: false,
              extensions: ['msh', 'mesh', 'silo']
            },
            'model/stl': { source: 'iana' },
            'model/vnd.collada+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['dae']
            },
            'model/vnd.dwf': { source: 'iana', extensions: ['dwf'] },
            'model/vnd.flatland.3dml': { source: 'iana' },
            'model/vnd.gdl': { source: 'iana', extensions: ['gdl'] },
            'model/vnd.gs-gdl': { source: 'apache' },
            'model/vnd.gs.gdl': { source: 'iana' },
            'model/vnd.gtw': { source: 'iana', extensions: ['gtw'] },
            'model/vnd.moml+xml': { source: 'iana', compressible: true },
            'model/vnd.mts': { source: 'iana', extensions: ['mts'] },
            'model/vnd.opengex': { source: 'iana' },
            'model/vnd.parasolid.transmit.binary': { source: 'iana' },
            'model/vnd.parasolid.transmit.text': { source: 'iana' },
            'model/vnd.rosette.annotated-data-model': { source: 'iana' },
            'model/vnd.usdz+zip': { source: 'iana', compressible: false },
            'model/vnd.valve.source.compiled-map': { source: 'iana' },
            'model/vnd.vtu': { source: 'iana', extensions: ['vtu'] },
            'model/vrml': {
              source: 'iana',
              compressible: false,
              extensions: ['wrl', 'vrml']
            },
            'model/x3d+binary': {
              source: 'apache',
              compressible: false,
              extensions: ['x3db', 'x3dbz']
            },
            'model/x3d+fastinfoset': { source: 'iana' },
            'model/x3d+vrml': {
              source: 'apache',
              compressible: false,
              extensions: ['x3dv', 'x3dvz']
            },
            'model/x3d+xml': {
              source: 'iana',
              compressible: true,
              extensions: ['x3d', 'x3dz']
            },
            'model/x3d-vrml': { source: 'iana' },
            'multipart/alternative': { source: 'iana', compressible: false },
            'multipart/appledouble': { source: 'iana' },
            'multipart/byteranges': { source: 'iana' },
            'multipart/digest': { source: 'iana' },
            'multipart/encrypted': { source: 'iana', compressible: false },
            'multipart/form-data': { source: 'iana', compressible: false },
            'multipart/header-set': { source: 'iana' },
            'multipart/mixed': { source: 'iana', compressible: false },
            'multipart/multilingual': { source: 'iana' },
            'multipart/parallel': { source: 'iana' },
            'multipart/related': { source: 'iana', compressible: false },
            'multipart/report': { source: 'iana' },
            'multipart/signed': { source: 'iana', compressible: false },
            'multipart/vnd.bint.med-plus': { source: 'iana' },
            'multipart/voice-message': { source: 'iana' },
            'multipart/x-mixed-replace': { source: 'iana' },
            'text/1d-interleaved-parityfec': { source: 'iana' },
            'text/cache-manifest': {
              source: 'iana',
              compressible: true,
              extensions: ['appcache', 'manifest']
            },
            'text/calendar': { source: 'iana', extensions: ['ics', 'ifb'] },
            'text/calender': { compressible: true },
            'text/cmd': { compressible: true },
            'text/coffeescript': { extensions: ['coffee', 'litcoffee'] },
            'text/css': {
              source: 'iana',
              charset: 'UTF-8',
              compressible: true,
              extensions: ['css']
            },
            'text/csv': {
              source: 'iana',
              compressible: true,
              extensions: ['csv']
            },
            'text/csv-schema': { source: 'iana' },
            'text/directory': { source: 'iana' },
            'text/dns': { source: 'iana' },
            'text/ecmascript': { source: 'iana' },
            'text/encaprtp': { source: 'iana' },
            'text/enriched': { source: 'iana' },
            'text/fwdred': { source: 'iana' },
            'text/grammar-ref-list': { source: 'iana' },
            'text/html': {
              source: 'iana',
              compressible: true,
              extensions: ['html', 'htm', 'shtml']
            },
            'text/jade': { extensions: ['jade'] },
            'text/javascript': { source: 'iana', compressible: true },
            'text/jcr-cnd': { source: 'iana' },
            'text/jsx': { compressible: true, extensions: ['jsx'] },
            'text/less': { extensions: ['less'] },
            'text/markdown': {
              source: 'iana',
              compressible: true,
              extensions: ['markdown', 'md']
            },
            'text/mathml': { source: 'nginx', extensions: ['mml'] },
            'text/mizar': { source: 'iana' },
            'text/n3': {
              source: 'iana',
              compressible: true,
              extensions: ['n3']
            },
            'text/parameters': { source: 'iana' },
            'text/parityfec': { source: 'iana' },
            'text/plain': {
              source: 'iana',
              compressible: true,
              extensions: [
                'txt',
                'text',
                'conf',
                'def',
                'list',
                'log',
                'in',
                'ini'
              ]
            },
            'text/provenance-notation': { source: 'iana' },
            'text/prs.fallenstein.rst': { source: 'iana' },
            'text/prs.lines.tag': { source: 'iana', extensions: ['dsc'] },
            'text/prs.prop.logic': { source: 'iana' },
            'text/raptorfec': { source: 'iana' },
            'text/red': { source: 'iana' },
            'text/rfc822-headers': { source: 'iana' },
            'text/richtext': {
              source: 'iana',
              compressible: true,
              extensions: ['rtx']
            },
            'text/rtf': {
              source: 'iana',
              compressible: true,
              extensions: ['rtf']
            },
            'text/rtp-enc-aescm128': { source: 'iana' },
            'text/rtploopback': { source: 'iana' },
            'text/rtx': { source: 'iana' },
            'text/sgml': { source: 'iana', extensions: ['sgml', 'sgm'] },
            'text/shex': { extensions: ['shex'] },
            'text/slim': { extensions: ['slim', 'slm'] },
            'text/strings': { source: 'iana' },
            'text/stylus': { extensions: ['stylus', 'styl'] },
            'text/t140': { source: 'iana' },
            'text/tab-separated-values': {
              source: 'iana',
              compressible: true,
              extensions: ['tsv']
            },
            'text/troff': {
              source: 'iana',
              extensions: ['t', 'tr', 'roff', 'man', 'me', 'ms']
            },
            'text/turtle': {
              source: 'iana',
              charset: 'UTF-8',
              extensions: ['ttl']
            },
            'text/ulpfec': { source: 'iana' },
            'text/uri-list': {
              source: 'iana',
              compressible: true,
              extensions: ['uri', 'uris', 'urls']
            },
            'text/vcard': {
              source: 'iana',
              compressible: true,
              extensions: ['vcard']
            },
            'text/vnd.a': { source: 'iana' },
            'text/vnd.abc': { source: 'iana' },
            'text/vnd.ascii-art': { source: 'iana' },
            'text/vnd.curl': { source: 'iana', extensions: ['curl'] },
            'text/vnd.curl.dcurl': { source: 'apache', extensions: ['dcurl'] },
            'text/vnd.curl.mcurl': { source: 'apache', extensions: ['mcurl'] },
            'text/vnd.curl.scurl': { source: 'apache', extensions: ['scurl'] },
            'text/vnd.debian.copyright': { source: 'iana' },
            'text/vnd.dmclientscript': { source: 'iana' },
            'text/vnd.dvb.subtitle': { source: 'iana', extensions: ['sub'] },
            'text/vnd.esmertec.theme-descriptor': { source: 'iana' },
            'text/vnd.fly': { source: 'iana', extensions: ['fly'] },
            'text/vnd.fmi.flexstor': { source: 'iana', extensions: ['flx'] },
            'text/vnd.gml': { source: 'iana' },
            'text/vnd.graphviz': { source: 'iana', extensions: ['gv'] },
            'text/vnd.hgl': { source: 'iana' },
            'text/vnd.in3d.3dml': { source: 'iana', extensions: ['3dml'] },
            'text/vnd.in3d.spot': { source: 'iana', extensions: ['spot'] },
            'text/vnd.iptc.newsml': { source: 'iana' },
            'text/vnd.iptc.nitf': { source: 'iana' },
            'text/vnd.latex-z': { source: 'iana' },
            'text/vnd.motorola.reflex': { source: 'iana' },
            'text/vnd.ms-mediapackage': { source: 'iana' },
            'text/vnd.net2phone.commcenter.command': { source: 'iana' },
            'text/vnd.radisys.msml-basic-layout': { source: 'iana' },
            'text/vnd.si.uricatalogue': { source: 'iana' },
            'text/vnd.sun.j2me.app-descriptor': {
              source: 'iana',
              extensions: ['jad']
            },
            'text/vnd.trolltech.linguist': { source: 'iana' },
            'text/vnd.wap.si': { source: 'iana' },
            'text/vnd.wap.sl': { source: 'iana' },
            'text/vnd.wap.wml': { source: 'iana', extensions: ['wml'] },
            'text/vnd.wap.wmlscript': { source: 'iana', extensions: ['wmls'] },
            'text/vtt': {
              charset: 'UTF-8',
              compressible: true,
              extensions: ['vtt']
            },
            'text/x-asm': { source: 'apache', extensions: ['s', 'asm'] },
            'text/x-c': {
              source: 'apache',
              extensions: ['c', 'cc', 'cxx', 'cpp', 'h', 'hh', 'dic']
            },
            'text/x-component': { source: 'nginx', extensions: ['htc'] },
            'text/x-fortran': {
              source: 'apache',
              extensions: ['f', 'for', 'f77', 'f90']
            },
            'text/x-gwt-rpc': { compressible: true },
            'text/x-handlebars-template': { extensions: ['hbs'] },
            'text/x-java-source': { source: 'apache', extensions: ['java'] },
            'text/x-jquery-tmpl': { compressible: true },
            'text/x-lua': { extensions: ['lua'] },
            'text/x-markdown': { compressible: true, extensions: ['mkd'] },
            'text/x-nfo': { source: 'apache', extensions: ['nfo'] },
            'text/x-opml': { source: 'apache', extensions: ['opml'] },
            'text/x-org': { compressible: true, extensions: ['org'] },
            'text/x-pascal': { source: 'apache', extensions: ['p', 'pas'] },
            'text/x-processing': { compressible: true, extensions: ['pde'] },
            'text/x-sass': { extensions: ['sass'] },
            'text/x-scss': { extensions: ['scss'] },
            'text/x-setext': { source: 'apache', extensions: ['etx'] },
            'text/x-sfv': { source: 'apache', extensions: ['sfv'] },
            'text/x-suse-ymp': { compressible: true, extensions: ['ymp'] },
            'text/x-uuencode': { source: 'apache', extensions: ['uu'] },
            'text/x-vcalendar': { source: 'apache', extensions: ['vcs'] },
            'text/x-vcard': { source: 'apache', extensions: ['vcf'] },
            'text/xml': {
              source: 'iana',
              compressible: true,
              extensions: ['xml']
            },
            'text/xml-external-parsed-entity': { source: 'iana' },
            'text/yaml': { extensions: ['yaml', 'yml'] },
            'video/1d-interleaved-parityfec': { source: 'iana' },
            'video/3gpp': { source: 'iana', extensions: ['3gp', '3gpp'] },
            'video/3gpp-tt': { source: 'iana' },
            'video/3gpp2': { source: 'iana', extensions: ['3g2'] },
            'video/bmpeg': { source: 'iana' },
            'video/bt656': { source: 'iana' },
            'video/celb': { source: 'iana' },
            'video/dv': { source: 'iana' },
            'video/encaprtp': { source: 'iana' },
            'video/h261': { source: 'iana', extensions: ['h261'] },
            'video/h263': { source: 'iana', extensions: ['h263'] },
            'video/h263-1998': { source: 'iana' },
            'video/h263-2000': { source: 'iana' },
            'video/h264': { source: 'iana', extensions: ['h264'] },
            'video/h264-rcdo': { source: 'iana' },
            'video/h264-svc': { source: 'iana' },
            'video/h265': { source: 'iana' },
            'video/iso.segment': { source: 'iana' },
            'video/jpeg': { source: 'iana', extensions: ['jpgv'] },
            'video/jpeg2000': { source: 'iana' },
            'video/jpm': { source: 'apache', extensions: ['jpm', 'jpgm'] },
            'video/mj2': { source: 'iana', extensions: ['mj2', 'mjp2'] },
            'video/mp1s': { source: 'iana' },
            'video/mp2p': { source: 'iana' },
            'video/mp2t': { source: 'iana', extensions: ['ts'] },
            'video/mp4': {
              source: 'iana',
              compressible: false,
              extensions: ['mp4', 'mp4v', 'mpg4']
            },
            'video/mp4v-es': { source: 'iana' },
            'video/mpeg': {
              source: 'iana',
              compressible: false,
              extensions: ['mpeg', 'mpg', 'mpe', 'm1v', 'm2v']
            },
            'video/mpeg4-generic': { source: 'iana' },
            'video/mpv': { source: 'iana' },
            'video/nv': { source: 'iana' },
            'video/ogg': {
              source: 'iana',
              compressible: false,
              extensions: ['ogv']
            },
            'video/parityfec': { source: 'iana' },
            'video/pointer': { source: 'iana' },
            'video/quicktime': {
              source: 'iana',
              compressible: false,
              extensions: ['qt', 'mov']
            },
            'video/raptorfec': { source: 'iana' },
            'video/raw': { source: 'iana' },
            'video/rtp-enc-aescm128': { source: 'iana' },
            'video/rtploopback': { source: 'iana' },
            'video/rtx': { source: 'iana' },
            'video/smpte291': { source: 'iana' },
            'video/smpte292m': { source: 'iana' },
            'video/ulpfec': { source: 'iana' },
            'video/vc1': { source: 'iana' },
            'video/vc2': { source: 'iana' },
            'video/vnd.cctv': { source: 'iana' },
            'video/vnd.dece.hd': {
              source: 'iana',
              extensions: ['uvh', 'uvvh']
            },
            'video/vnd.dece.mobile': {
              source: 'iana',
              extensions: ['uvm', 'uvvm']
            },
            'video/vnd.dece.mp4': { source: 'iana' },
            'video/vnd.dece.pd': {
              source: 'iana',
              extensions: ['uvp', 'uvvp']
            },
            'video/vnd.dece.sd': {
              source: 'iana',
              extensions: ['uvs', 'uvvs']
            },
            'video/vnd.dece.video': {
              source: 'iana',
              extensions: ['uvv', 'uvvv']
            },
            'video/vnd.directv.mpeg': { source: 'iana' },
            'video/vnd.directv.mpeg-tts': { source: 'iana' },
            'video/vnd.dlna.mpeg-tts': { source: 'iana' },
            'video/vnd.dvb.file': { source: 'iana', extensions: ['dvb'] },
            'video/vnd.fvt': { source: 'iana', extensions: ['fvt'] },
            'video/vnd.hns.video': { source: 'iana' },
            'video/vnd.iptvforum.1dparityfec-1010': { source: 'iana' },
            'video/vnd.iptvforum.1dparityfec-2005': { source: 'iana' },
            'video/vnd.iptvforum.2dparityfec-1010': { source: 'iana' },
            'video/vnd.iptvforum.2dparityfec-2005': { source: 'iana' },
            'video/vnd.iptvforum.ttsavc': { source: 'iana' },
            'video/vnd.iptvforum.ttsmpeg2': { source: 'iana' },
            'video/vnd.motorola.video': { source: 'iana' },
            'video/vnd.motorola.videop': { source: 'iana' },
            'video/vnd.mpegurl': { source: 'iana', extensions: ['mxu', 'm4u'] },
            'video/vnd.ms-playready.media.pyv': {
              source: 'iana',
              extensions: ['pyv']
            },
            'video/vnd.nokia.interleaved-multimedia': { source: 'iana' },
            'video/vnd.nokia.mp4vr': { source: 'iana' },
            'video/vnd.nokia.videovoip': { source: 'iana' },
            'video/vnd.objectvideo': { source: 'iana' },
            'video/vnd.radgamettools.bink': { source: 'iana' },
            'video/vnd.radgamettools.smacker': { source: 'iana' },
            'video/vnd.sealed.mpeg1': { source: 'iana' },
            'video/vnd.sealed.mpeg4': { source: 'iana' },
            'video/vnd.sealed.swf': { source: 'iana' },
            'video/vnd.sealedmedia.softseal.mov': { source: 'iana' },
            'video/vnd.uvvu.mp4': {
              source: 'iana',
              extensions: ['uvu', 'uvvu']
            },
            'video/vnd.vivo': { source: 'iana', extensions: ['viv'] },
            'video/vp8': { source: 'iana' },
            'video/webm': {
              source: 'apache',
              compressible: false,
              extensions: ['webm']
            },
            'video/x-f4v': { source: 'apache', extensions: ['f4v'] },
            'video/x-fli': { source: 'apache', extensions: ['fli'] },
            'video/x-flv': {
              source: 'apache',
              compressible: false,
              extensions: ['flv']
            },
            'video/x-m4v': { source: 'apache', extensions: ['m4v'] },
            'video/x-matroska': {
              source: 'apache',
              compressible: false,
              extensions: ['mkv', 'mk3d', 'mks']
            },
            'video/x-mng': { source: 'apache', extensions: ['mng'] },
            'video/x-ms-asf': { source: 'apache', extensions: ['asf', 'asx'] },
            'video/x-ms-vob': { source: 'apache', extensions: ['vob'] },
            'video/x-ms-wm': { source: 'apache', extensions: ['wm'] },
            'video/x-ms-wmv': {
              source: 'apache',
              compressible: false,
              extensions: ['wmv']
            },
            'video/x-ms-wmx': { source: 'apache', extensions: ['wmx'] },
            'video/x-ms-wvx': { source: 'apache', extensions: ['wvx'] },
            'video/x-msvideo': { source: 'apache', extensions: ['avi'] },
            'video/x-sgi-movie': { source: 'apache', extensions: ['movie'] },
            'video/x-smv': { source: 'apache', extensions: ['smv'] },
            'x-conference/x-cooltalk': {
              source: 'apache',
              extensions: ['ice']
            },
            'x-shader/x-fragment': { compressible: true },
            'x-shader/x-vertex': { compressible: true }
          }

          /***/
        },

      /***/ '../../node_modules/mime-db/index.js':
        /*!***********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/mime-db/index.js ***!
  \***********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /*!
           * mime-db
           * Copyright(c) 2014 Jonathan Ong
           * MIT Licensed
           */

          /**
           * Module exports.
           */

          module.exports = __webpack_require__(
            /*! ./db.json */ '../../node_modules/mime-db/db.json'
          )

          /***/
        },

      /***/ '../../node_modules/mime-types/index.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/mime-types/index.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * mime-types
           * Copyright(c) 2014 Jonathan Ong
           * Copyright(c) 2015 Douglas Christopher Wilson
           * MIT Licensed
           */

          /**
           * Module dependencies.
           * @private
           */

          var db = __webpack_require__(
            /*! mime-db */ '../../node_modules/mime-db/index.js'
          )
          var extname = __webpack_require__(/*! path */ 'path').extname

          /**
           * Module variables.
           * @private
           */

          var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/
          var TEXT_TYPE_REGEXP = /^text\//i

          /**
           * Module exports.
           * @public
           */

          exports.charset = charset
          exports.charsets = { lookup: charset }
          exports.contentType = contentType
          exports.extension = extension
          exports.extensions = Object.create(null)
          exports.lookup = lookup
          exports.types = Object.create(null)

          // Populate the extensions/types maps
          populateMaps(exports.extensions, exports.types)

          /**
           * Get the default charset for a MIME type.
           *
           * @param {string} type
           * @return {boolean|string}
           */

          function charset(type) {
            if (!type || typeof type !== 'string') {
              return false
            }

            // TODO: use media-typer
            var match = EXTRACT_TYPE_REGEXP.exec(type)
            var mime = match && db[match[1].toLowerCase()]

            if (mime && mime.charset) {
              return mime.charset
            }

            // default text/* to utf-8
            if (match && TEXT_TYPE_REGEXP.test(match[1])) {
              return 'UTF-8'
            }

            return false
          }

          /**
           * Create a full Content-Type header given a MIME type or extension.
           *
           * @param {string} str
           * @return {boolean|string}
           */

          function contentType(str) {
            // TODO: should this even be in this module?
            if (!str || typeof str !== 'string') {
              return false
            }

            var mime = str.indexOf('/') === -1 ? exports.lookup(str) : str

            if (!mime) {
              return false
            }

            // TODO: use content-type or other module
            if (mime.indexOf('charset') === -1) {
              var charset = exports.charset(mime)
              if (charset) mime += '; charset=' + charset.toLowerCase()
            }

            return mime
          }

          /**
           * Get the default extension for a MIME type.
           *
           * @param {string} type
           * @return {boolean|string}
           */

          function extension(type) {
            if (!type || typeof type !== 'string') {
              return false
            }

            // TODO: use media-typer
            var match = EXTRACT_TYPE_REGEXP.exec(type)

            // get extensions
            var exts = match && exports.extensions[match[1].toLowerCase()]

            if (!exts || !exts.length) {
              return false
            }

            return exts[0]
          }

          /**
           * Lookup the MIME type for a file path/extension.
           *
           * @param {string} path
           * @return {boolean|string}
           */

          function lookup(path) {
            if (!path || typeof path !== 'string') {
              return false
            }

            // get the extension ("ext" or ".ext" or full path)
            var extension = extname('x.' + path)
              .toLowerCase()
              .substr(1)

            if (!extension) {
              return false
            }

            return exports.types[extension] || false
          }

          /**
           * Populate the extensions and types maps.
           * @private
           */

          function populateMaps(extensions, types) {
            // source preference (least -> most)
            var preference = ['nginx', 'apache', undefined, 'iana']

            Object.keys(db).forEach(function forEachMimeType(type) {
              var mime = db[type]
              var exts = mime.extensions

              if (!exts || !exts.length) {
                return
              }

              // mime -> extensions
              extensions[type] = exts

              // extension -> mime
              for (var i = 0; i < exts.length; i++) {
                var extension = exts[i]

                if (types[extension]) {
                  var from = preference.indexOf(db[types[extension]].source)
                  var to = preference.indexOf(mime.source)

                  if (
                    types[extension] !== 'application/octet-stream' &&
                    (from > to ||
                      (from === to &&
                        types[extension].substr(0, 12) === 'application/'))
                  ) {
                    // skip the remapping
                    continue
                  }
                }

                // set the extension -> mime
                types[extension] = type
              }
            })
          }

          /***/
        },

      /***/ '../../node_modules/ms/index.js':
        /*!******************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ms/index.js ***!
  \******************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Helpers.
           */

          var s = 1000
          var m = s * 60
          var h = m * 60
          var d = h * 24
          var y = d * 365.25

          /**
           * Parse or format the given `val`.
           *
           * Options:
           *
           *  - `long` verbose formatting [false]
           *
           * @param {String|Number} val
           * @param {Object} [options]
           * @throws {Error} throw an error if val is not a non-empty string or a number
           * @return {String|Number}
           * @api public
           */

          module.exports = function(val, options) {
            options = options || {}
            var type = typeof val
            if (type === 'string' && val.length > 0) {
              return parse(val)
            } else if (type === 'number' && isNaN(val) === false) {
              return options.long ? fmtLong(val) : fmtShort(val)
            }
            throw new Error(
              'val is not a non-empty string or a valid number. val=' +
                JSON.stringify(val)
            )
          }

          /**
           * Parse the given `str` and return milliseconds.
           *
           * @param {String} str
           * @return {Number}
           * @api private
           */

          function parse(str) {
            str = String(str)
            if (str.length > 100) {
              return
            }
            var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
              str
            )
            if (!match) {
              return
            }
            var n = parseFloat(match[1])
            var type = (match[2] || 'ms').toLowerCase()
            switch (type) {
              case 'years':
              case 'year':
              case 'yrs':
              case 'yr':
              case 'y':
                return n * y
              case 'days':
              case 'day':
              case 'd':
                return n * d
              case 'hours':
              case 'hour':
              case 'hrs':
              case 'hr':
              case 'h':
                return n * h
              case 'minutes':
              case 'minute':
              case 'mins':
              case 'min':
              case 'm':
                return n * m
              case 'seconds':
              case 'second':
              case 'secs':
              case 'sec':
              case 's':
                return n * s
              case 'milliseconds':
              case 'millisecond':
              case 'msecs':
              case 'msec':
              case 'ms':
                return n
              default:
                return undefined
            }
          }

          /**
           * Short format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */

          function fmtShort(ms) {
            if (ms >= d) {
              return Math.round(ms / d) + 'd'
            }
            if (ms >= h) {
              return Math.round(ms / h) + 'h'
            }
            if (ms >= m) {
              return Math.round(ms / m) + 'm'
            }
            if (ms >= s) {
              return Math.round(ms / s) + 's'
            }
            return ms + 'ms'
          }

          /**
           * Long format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */

          function fmtLong(ms) {
            return (
              plural(ms, d, 'day') ||
              plural(ms, h, 'hour') ||
              plural(ms, m, 'minute') ||
              plural(ms, s, 'second') ||
              ms + ' ms'
            )
          }

          /**
           * Pluralization helper.
           */

          function plural(ms, n, name) {
            if (ms < n) {
              return
            }
            if (ms < n * 1.5) {
              return Math.floor(ms / n) + ' ' + name
            }
            return Math.ceil(ms / n) + ' ' + name + 's'
          }

          /***/
        },

      /***/ '../../node_modules/once/once.js':
        /*!*******************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/once/once.js ***!
  \*******************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var wrappy = __webpack_require__(
            /*! wrappy */ '../../node_modules/wrappy/wrappy.js'
          )
          module.exports = wrappy(once)
          module.exports.strict = wrappy(onceStrict)

          once.proto = once(function() {
            Object.defineProperty(Function.prototype, 'once', {
              value: function() {
                return once(this)
              },
              configurable: true
            })

            Object.defineProperty(Function.prototype, 'onceStrict', {
              value: function() {
                return onceStrict(this)
              },
              configurable: true
            })
          })

          function once(fn) {
            var f = function() {
              if (f.called) return f.value
              f.called = true
              return (f.value = fn.apply(this, arguments))
            }
            f.called = false
            return f
          }

          function onceStrict(fn) {
            var f = function() {
              if (f.called) throw new Error(f.onceError)
              f.called = true
              return (f.value = fn.apply(this, arguments))
            }
            var name = fn.name || 'Function wrapped with `once`'
            f.onceError = name + " shouldn't be called more than once"
            f.called = false
            return f
          }

          /***/
        },

      /***/ '../../node_modules/pause-stream/index.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/pause-stream/index.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          //through@2 handles this by default!
          module.exports = __webpack_require__(
            /*! through */ '../../node_modules/through/index.js'
          )

          /***/
        },

      /***/ '../../node_modules/process-nextick-args/index.js':
        /*!************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/process-nextick-args/index.js ***!
  \************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          if (
            !process.version ||
            process.version.indexOf('v0.') === 0 ||
            (process.version.indexOf('v1.') === 0 &&
              process.version.indexOf('v1.8.') !== 0)
          ) {
            module.exports = { nextTick: nextTick }
          } else {
            module.exports = process
          }

          function nextTick(fn, arg1, arg2, arg3) {
            if (typeof fn !== 'function') {
              throw new TypeError('"callback" argument must be a function')
            }
            var len = arguments.length
            var args, i
            switch (len) {
              case 0:
              case 1:
                return process.nextTick(fn)
              case 2:
                return process.nextTick(function afterTickOne() {
                  fn.call(null, arg1)
                })
              case 3:
                return process.nextTick(function afterTickTwo() {
                  fn.call(null, arg1, arg2)
                })
              case 4:
                return process.nextTick(function afterTickThree() {
                  fn.call(null, arg1, arg2, arg3)
                })
              default:
                args = new Array(len - 1)
                i = 0
                while (i < args.length) {
                  args[i++] = arguments[i]
                }
                return process.nextTick(function afterTick() {
                  fn.apply(null, args)
                })
            }
          }

          /***/
        },

      /***/ '../../node_modules/qs/lib/formats.js':
        /*!************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/qs/lib/formats.js ***!
  \************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var replace = String.prototype.replace
          var percentTwenties = /%20/g

          module.exports = {
            default: 'RFC3986',
            formatters: {
              RFC1738: function(value) {
                return replace.call(value, percentTwenties, '+')
              },
              RFC3986: function(value) {
                return value
              }
            },
            RFC1738: 'RFC1738',
            RFC3986: 'RFC3986'
          }

          /***/
        },

      /***/ '../../node_modules/qs/lib/index.js':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/qs/lib/index.js ***!
  \**********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var stringify = __webpack_require__(
            /*! ./stringify */ '../../node_modules/qs/lib/stringify.js'
          )
          var parse = __webpack_require__(
            /*! ./parse */ '../../node_modules/qs/lib/parse.js'
          )
          var formats = __webpack_require__(
            /*! ./formats */ '../../node_modules/qs/lib/formats.js'
          )

          module.exports = {
            formats: formats,
            parse: parse,
            stringify: stringify
          }

          /***/
        },

      /***/ '../../node_modules/qs/lib/parse.js':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/qs/lib/parse.js ***!
  \**********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./utils */ '../../node_modules/qs/lib/utils.js'
          )

          var has = Object.prototype.hasOwnProperty

          var defaults = {
            allowDots: false,
            allowPrototypes: false,
            arrayLimit: 20,
            charset: 'utf-8',
            charsetSentinel: false,
            decoder: utils.decode,
            delimiter: '&',
            depth: 5,
            ignoreQueryPrefix: false,
            interpretNumericEntities: false,
            parameterLimit: 1000,
            parseArrays: true,
            plainObjects: false,
            strictNullHandling: false
          }

          var interpretNumericEntities = function(str) {
            return str.replace(/&#(\d+);/g, function($0, numberStr) {
              return String.fromCharCode(parseInt(numberStr, 10))
            })
          }

          // This is what browsers will submit when the ✓ character occurs in an
          // application/x-www-form-urlencoded body and the encoding of the page containing
          // the form is iso-8859-1, or when the submitted form has an accept-charset
          // attribute of iso-8859-1. Presumably also with other charsets that do not contain
          // the ✓ character, such as us-ascii.
          var isoSentinel = 'utf8=%26%2310003%3B' // encodeURIComponent('&#10003;')

          // These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.
          var charsetSentinel = 'utf8=%E2%9C%93' // encodeURIComponent('✓')

          var parseValues = function parseQueryStringValues(str, options) {
            var obj = {}
            var cleanStr = options.ignoreQueryPrefix
              ? str.replace(/^\?/, '')
              : str
            var limit =
              options.parameterLimit === Infinity
                ? undefined
                : options.parameterLimit
            var parts = cleanStr.split(options.delimiter, limit)
            var skipIndex = -1 // Keep track of where the utf8 sentinel was found
            var i

            var charset = options.charset
            if (options.charsetSentinel) {
              for (i = 0; i < parts.length; ++i) {
                if (parts[i].indexOf('utf8=') === 0) {
                  if (parts[i] === charsetSentinel) {
                    charset = 'utf-8'
                  } else if (parts[i] === isoSentinel) {
                    charset = 'iso-8859-1'
                  }
                  skipIndex = i
                  i = parts.length // The eslint settings do not allow break;
                }
              }
            }

            for (i = 0; i < parts.length; ++i) {
              if (i === skipIndex) {
                continue
              }
              var part = parts[i]

              var bracketEqualsPos = part.indexOf(']=')
              var pos =
                bracketEqualsPos === -1
                  ? part.indexOf('=')
                  : bracketEqualsPos + 1

              var key, val
              if (pos === -1) {
                key = options.decoder(part, defaults.decoder, charset)
                val = options.strictNullHandling ? null : ''
              } else {
                key = options.decoder(
                  part.slice(0, pos),
                  defaults.decoder,
                  charset
                )
                val = options.decoder(
                  part.slice(pos + 1),
                  defaults.decoder,
                  charset
                )
              }

              if (
                val &&
                options.interpretNumericEntities &&
                charset === 'iso-8859-1'
              ) {
                val = interpretNumericEntities(val)
              }
              if (has.call(obj, key)) {
                obj[key] = utils.combine(obj[key], val)
              } else {
                obj[key] = val
              }
            }

            return obj
          }

          var parseObject = function(chain, val, options) {
            var leaf = val

            for (var i = chain.length - 1; i >= 0; --i) {
              var obj
              var root = chain[i]

              if (root === '[]' && options.parseArrays) {
                obj = [].concat(leaf)
              } else {
                obj = options.plainObjects ? Object.create(null) : {}
                var cleanRoot =
                  root.charAt(0) === '[' && root.charAt(root.length - 1) === ']'
                    ? root.slice(1, -1)
                    : root
                var index = parseInt(cleanRoot, 10)
                if (!options.parseArrays && cleanRoot === '') {
                  obj = { 0: leaf }
                } else if (
                  !isNaN(index) &&
                  root !== cleanRoot &&
                  String(index) === cleanRoot &&
                  index >= 0 &&
                  (options.parseArrays && index <= options.arrayLimit)
                ) {
                  obj = []
                  obj[index] = leaf
                } else {
                  obj[cleanRoot] = leaf
                }
              }

              leaf = obj
            }

            return leaf
          }

          var parseKeys = function parseQueryStringKeys(
            givenKey,
            val,
            options
          ) {
            if (!givenKey) {
              return
            }

            // Transform dot notation to bracket notation
            var key = options.allowDots
              ? givenKey.replace(/\.([^.[]+)/g, '[$1]')
              : givenKey

            // The regex chunks

            var brackets = /(\[[^[\]]*])/
            var child = /(\[[^[\]]*])/g

            // Get the parent

            var segment = brackets.exec(key)
            var parent = segment ? key.slice(0, segment.index) : key

            // Stash the parent if it exists

            var keys = []
            if (parent) {
              // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
              if (!options.plainObjects && has.call(Object.prototype, parent)) {
                if (!options.allowPrototypes) {
                  return
                }
              }

              keys.push(parent)
            }

            // Loop through children appending to the array until we hit depth

            var i = 0
            while ((segment = child.exec(key)) !== null && i < options.depth) {
              i += 1
              if (
                !options.plainObjects &&
                has.call(Object.prototype, segment[1].slice(1, -1))
              ) {
                if (!options.allowPrototypes) {
                  return
                }
              }
              keys.push(segment[1])
            }

            // If there's a remainder, just add whatever is left

            if (segment) {
              keys.push('[' + key.slice(segment.index) + ']')
            }

            return parseObject(keys, val, options)
          }

          module.exports = function(str, opts) {
            var options = opts ? utils.assign({}, opts) : {}

            if (
              options.decoder !== null &&
              options.decoder !== undefined &&
              typeof options.decoder !== 'function'
            ) {
              throw new TypeError('Decoder has to be a function.')
            }

            options.ignoreQueryPrefix = options.ignoreQueryPrefix === true
            options.delimiter =
              typeof options.delimiter === 'string' ||
              utils.isRegExp(options.delimiter)
                ? options.delimiter
                : defaults.delimiter
            options.depth =
              typeof options.depth === 'number' ? options.depth : defaults.depth
            options.arrayLimit =
              typeof options.arrayLimit === 'number'
                ? options.arrayLimit
                : defaults.arrayLimit
            options.parseArrays = options.parseArrays !== false
            options.decoder =
              typeof options.decoder === 'function'
                ? options.decoder
                : defaults.decoder
            options.allowDots =
              typeof options.allowDots === 'undefined'
                ? defaults.allowDots
                : !!options.allowDots
            options.plainObjects =
              typeof options.plainObjects === 'boolean'
                ? options.plainObjects
                : defaults.plainObjects
            options.allowPrototypes =
              typeof options.allowPrototypes === 'boolean'
                ? options.allowPrototypes
                : defaults.allowPrototypes
            options.parameterLimit =
              typeof options.parameterLimit === 'number'
                ? options.parameterLimit
                : defaults.parameterLimit
            options.strictNullHandling =
              typeof options.strictNullHandling === 'boolean'
                ? options.strictNullHandling
                : defaults.strictNullHandling

            if (
              typeof options.charset !== 'undefined' &&
              options.charset !== 'utf-8' &&
              options.charset !== 'iso-8859-1'
            ) {
              throw new Error(
                'The charset option must be either utf-8, iso-8859-1, or undefined'
              )
            }
            if (typeof options.charset === 'undefined') {
              options.charset = defaults.charset
            }

            if (str === '' || str === null || typeof str === 'undefined') {
              return options.plainObjects ? Object.create(null) : {}
            }

            var tempObj =
              typeof str === 'string' ? parseValues(str, options) : str
            var obj = options.plainObjects ? Object.create(null) : {}

            // Iterate over the keys and setup the new object

            var keys = Object.keys(tempObj)
            for (var i = 0; i < keys.length; ++i) {
              var key = keys[i]
              var newObj = parseKeys(key, tempObj[key], options)
              obj = utils.merge(obj, newObj, options)
            }

            return utils.compact(obj)
          }

          /***/
        },

      /***/ '../../node_modules/qs/lib/stringify.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/qs/lib/stringify.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var utils = __webpack_require__(
            /*! ./utils */ '../../node_modules/qs/lib/utils.js'
          )
          var formats = __webpack_require__(
            /*! ./formats */ '../../node_modules/qs/lib/formats.js'
          )

          var arrayPrefixGenerators = {
            brackets: function brackets(prefix) {
              // eslint-disable-line func-name-matching
              return prefix + '[]'
            },
            indices: function indices(prefix, key) {
              // eslint-disable-line func-name-matching
              return prefix + '[' + key + ']'
            },
            repeat: function repeat(prefix) {
              // eslint-disable-line func-name-matching
              return prefix
            }
          }

          var isArray = Array.isArray
          var push = Array.prototype.push
          var pushToArray = function(arr, valueOrArray) {
            push.apply(
              arr,
              isArray(valueOrArray) ? valueOrArray : [valueOrArray]
            )
          }

          var toISO = Date.prototype.toISOString

          var defaults = {
            addQueryPrefix: false,
            allowDots: false,
            charset: 'utf-8',
            charsetSentinel: false,
            delimiter: '&',
            encode: true,
            encoder: utils.encode,
            encodeValuesOnly: false,
            // deprecated
            indices: false,
            serializeDate: function serializeDate(date) {
              // eslint-disable-line func-name-matching
              return toISO.call(date)
            },
            skipNulls: false,
            strictNullHandling: false
          }

          var stringify = function stringify( // eslint-disable-line func-name-matching
            object,
            prefix,
            generateArrayPrefix,
            strictNullHandling,
            skipNulls,
            encoder,
            filter,
            sort,
            allowDots,
            serializeDate,
            formatter,
            encodeValuesOnly,
            charset
          ) {
            var obj = object
            if (typeof filter === 'function') {
              obj = filter(prefix, obj)
            } else if (obj instanceof Date) {
              obj = serializeDate(obj)
            }

            if (obj === null) {
              if (strictNullHandling) {
                return encoder && !encodeValuesOnly
                  ? encoder(prefix, defaults.encoder, charset)
                  : prefix
              }

              obj = ''
            }

            if (
              typeof obj === 'string' ||
              typeof obj === 'number' ||
              typeof obj === 'boolean' ||
              utils.isBuffer(obj)
            ) {
              if (encoder) {
                var keyValue = encodeValuesOnly
                  ? prefix
                  : encoder(prefix, defaults.encoder, charset)
                return [
                  formatter(keyValue) +
                    '=' +
                    formatter(encoder(obj, defaults.encoder, charset))
                ]
              }
              return [formatter(prefix) + '=' + formatter(String(obj))]
            }

            var values = []

            if (typeof obj === 'undefined') {
              return values
            }

            var objKeys
            if (Array.isArray(filter)) {
              objKeys = filter
            } else {
              var keys = Object.keys(obj)
              objKeys = sort ? keys.sort(sort) : keys
            }

            for (var i = 0; i < objKeys.length; ++i) {
              var key = objKeys[i]

              if (skipNulls && obj[key] === null) {
                continue
              }

              if (Array.isArray(obj)) {
                pushToArray(
                  values,
                  stringify(
                    obj[key],
                    generateArrayPrefix(prefix, key),
                    generateArrayPrefix,
                    strictNullHandling,
                    skipNulls,
                    encoder,
                    filter,
                    sort,
                    allowDots,
                    serializeDate,
                    formatter,
                    encodeValuesOnly,
                    charset
                  )
                )
              } else {
                pushToArray(
                  values,
                  stringify(
                    obj[key],
                    prefix + (allowDots ? '.' + key : '[' + key + ']'),
                    generateArrayPrefix,
                    strictNullHandling,
                    skipNulls,
                    encoder,
                    filter,
                    sort,
                    allowDots,
                    serializeDate,
                    formatter,
                    encodeValuesOnly,
                    charset
                  )
                )
              }
            }

            return values
          }

          module.exports = function(object, opts) {
            var obj = object
            var options = opts ? utils.assign({}, opts) : {}

            if (
              options.encoder !== null &&
              options.encoder !== undefined &&
              typeof options.encoder !== 'function'
            ) {
              throw new TypeError('Encoder has to be a function.')
            }

            var delimiter =
              typeof options.delimiter === 'undefined'
                ? defaults.delimiter
                : options.delimiter
            var strictNullHandling =
              typeof options.strictNullHandling === 'boolean'
                ? options.strictNullHandling
                : defaults.strictNullHandling
            var skipNulls =
              typeof options.skipNulls === 'boolean'
                ? options.skipNulls
                : defaults.skipNulls
            var encode =
              typeof options.encode === 'boolean'
                ? options.encode
                : defaults.encode
            var encoder =
              typeof options.encoder === 'function'
                ? options.encoder
                : defaults.encoder
            var sort = typeof options.sort === 'function' ? options.sort : null
            var allowDots =
              typeof options.allowDots === 'undefined'
                ? defaults.allowDots
                : !!options.allowDots
            var serializeDate =
              typeof options.serializeDate === 'function'
                ? options.serializeDate
                : defaults.serializeDate
            var encodeValuesOnly =
              typeof options.encodeValuesOnly === 'boolean'
                ? options.encodeValuesOnly
                : defaults.encodeValuesOnly
            var charset = options.charset || defaults.charset
            if (
              typeof options.charset !== 'undefined' &&
              options.charset !== 'utf-8' &&
              options.charset !== 'iso-8859-1'
            ) {
              throw new Error(
                'The charset option must be either utf-8, iso-8859-1, or undefined'
              )
            }

            if (typeof options.format === 'undefined') {
              options.format = formats['default']
            } else if (
              !Object.prototype.hasOwnProperty.call(
                formats.formatters,
                options.format
              )
            ) {
              throw new TypeError('Unknown format option provided.')
            }
            var formatter = formats.formatters[options.format]
            var objKeys
            var filter

            if (typeof options.filter === 'function') {
              filter = options.filter
              obj = filter('', obj)
            } else if (Array.isArray(options.filter)) {
              filter = options.filter
              objKeys = filter
            }

            var keys = []

            if (typeof obj !== 'object' || obj === null) {
              return ''
            }

            var arrayFormat
            if (options.arrayFormat in arrayPrefixGenerators) {
              arrayFormat = options.arrayFormat
            } else if ('indices' in options) {
              arrayFormat = options.indices ? 'indices' : 'repeat'
            } else {
              arrayFormat = 'indices'
            }

            var generateArrayPrefix = arrayPrefixGenerators[arrayFormat]

            if (!objKeys) {
              objKeys = Object.keys(obj)
            }

            if (sort) {
              objKeys.sort(sort)
            }

            for (var i = 0; i < objKeys.length; ++i) {
              var key = objKeys[i]

              if (skipNulls && obj[key] === null) {
                continue
              }
              pushToArray(
                keys,
                stringify(
                  obj[key],
                  key,
                  generateArrayPrefix,
                  strictNullHandling,
                  skipNulls,
                  encode ? encoder : null,
                  filter,
                  sort,
                  allowDots,
                  serializeDate,
                  formatter,
                  encodeValuesOnly,
                  charset
                )
              )
            }

            var joined = keys.join(delimiter)
            var prefix = options.addQueryPrefix === true ? '?' : ''

            if (options.charsetSentinel) {
              if (charset === 'iso-8859-1') {
                // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
                prefix += 'utf8=%26%2310003%3B&'
              } else {
                // encodeURIComponent('✓')
                prefix += 'utf8=%E2%9C%93&'
              }
            }

            return joined.length > 0 ? prefix + joined : ''
          }

          /***/
        },

      /***/ '../../node_modules/qs/lib/utils.js':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/qs/lib/utils.js ***!
  \**********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var has = Object.prototype.hasOwnProperty

          var hexTable = (function() {
            var array = []
            for (var i = 0; i < 256; ++i) {
              array.push(
                '%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase()
              )
            }

            return array
          })()

          var compactQueue = function compactQueue(queue) {
            while (queue.length > 1) {
              var item = queue.pop()
              var obj = item.obj[item.prop]

              if (Array.isArray(obj)) {
                var compacted = []

                for (var j = 0; j < obj.length; ++j) {
                  if (typeof obj[j] !== 'undefined') {
                    compacted.push(obj[j])
                  }
                }

                item.obj[item.prop] = compacted
              }
            }
          }

          var arrayToObject = function arrayToObject(source, options) {
            var obj = options && options.plainObjects ? Object.create(null) : {}
            for (var i = 0; i < source.length; ++i) {
              if (typeof source[i] !== 'undefined') {
                obj[i] = source[i]
              }
            }

            return obj
          }

          var merge = function merge(target, source, options) {
            if (!source) {
              return target
            }

            if (typeof source !== 'object') {
              if (Array.isArray(target)) {
                target.push(source)
              } else if (typeof target === 'object') {
                if (
                  (options &&
                    (options.plainObjects || options.allowPrototypes)) ||
                  !has.call(Object.prototype, source)
                ) {
                  target[source] = true
                }
              } else {
                return [target, source]
              }

              return target
            }

            if (typeof target !== 'object') {
              return [target].concat(source)
            }

            var mergeTarget = target
            if (Array.isArray(target) && !Array.isArray(source)) {
              mergeTarget = arrayToObject(target, options)
            }

            if (Array.isArray(target) && Array.isArray(source)) {
              source.forEach(function(item, i) {
                if (has.call(target, i)) {
                  if (target[i] && typeof target[i] === 'object') {
                    target[i] = merge(target[i], item, options)
                  } else {
                    target.push(item)
                  }
                } else {
                  target[i] = item
                }
              })
              return target
            }

            return Object.keys(source).reduce(function(acc, key) {
              var value = source[key]

              if (has.call(acc, key)) {
                acc[key] = merge(acc[key], value, options)
              } else {
                acc[key] = value
              }
              return acc
            }, mergeTarget)
          }

          var assign = function assignSingleSource(target, source) {
            return Object.keys(source).reduce(function(acc, key) {
              acc[key] = source[key]
              return acc
            }, target)
          }

          var decode = function(str, decoder, charset) {
            var strWithoutPlus = str.replace(/\+/g, ' ')
            if (charset === 'iso-8859-1') {
              // unescape never throws, no try...catch needed:
              return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape)
            }
            // utf-8
            try {
              return decodeURIComponent(strWithoutPlus)
            } catch (e) {
              return strWithoutPlus
            }
          }

          var encode = function encode(str, defaultEncoder, charset) {
            // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
            // It has been adapted here for stricter adherence to RFC 3986
            if (str.length === 0) {
              return str
            }

            var string = typeof str === 'string' ? str : String(str)

            if (charset === 'iso-8859-1') {
              return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
                return '%26%23' + parseInt($0.slice(2), 16) + '%3B'
              })
            }

            var out = ''
            for (var i = 0; i < string.length; ++i) {
              var c = string.charCodeAt(i)

              if (
                c === 0x2d || // -
                c === 0x2e || // .
                c === 0x5f || // _
                c === 0x7e || // ~
                (c >= 0x30 && c <= 0x39) || // 0-9
                (c >= 0x41 && c <= 0x5a) || // a-z
                (c >= 0x61 && c <= 0x7a) // A-Z
              ) {
                out += string.charAt(i)
                continue
              }

              if (c < 0x80) {
                out = out + hexTable[c]
                continue
              }

              if (c < 0x800) {
                out =
                  out +
                  (hexTable[0xc0 | (c >> 6)] + hexTable[0x80 | (c & 0x3f)])
                continue
              }

              if (c < 0xd800 || c >= 0xe000) {
                out =
                  out +
                  (hexTable[0xe0 | (c >> 12)] +
                    hexTable[0x80 | ((c >> 6) & 0x3f)] +
                    hexTable[0x80 | (c & 0x3f)])
                continue
              }

              i += 1
              c =
                0x10000 + (((c & 0x3ff) << 10) | (string.charCodeAt(i) & 0x3ff))
              out +=
                hexTable[0xf0 | (c >> 18)] +
                hexTable[0x80 | ((c >> 12) & 0x3f)] +
                hexTable[0x80 | ((c >> 6) & 0x3f)] +
                hexTable[0x80 | (c & 0x3f)]
            }

            return out
          }

          var compact = function compact(value) {
            var queue = [{ obj: { o: value }, prop: 'o' }]
            var refs = []

            for (var i = 0; i < queue.length; ++i) {
              var item = queue[i]
              var obj = item.obj[item.prop]

              var keys = Object.keys(obj)
              for (var j = 0; j < keys.length; ++j) {
                var key = keys[j]
                var val = obj[key]
                if (
                  typeof val === 'object' &&
                  val !== null &&
                  refs.indexOf(val) === -1
                ) {
                  queue.push({ obj: obj, prop: key })
                  refs.push(val)
                }
              }
            }

            compactQueue(queue)

            return value
          }

          var isRegExp = function isRegExp(obj) {
            return Object.prototype.toString.call(obj) === '[object RegExp]'
          }

          var isBuffer = function isBuffer(obj) {
            if (obj === null || typeof obj === 'undefined') {
              return false
            }

            return !!(
              obj.constructor &&
              obj.constructor.isBuffer &&
              obj.constructor.isBuffer(obj)
            )
          }

          var combine = function combine(a, b) {
            return [].concat(a, b)
          }

          module.exports = {
            arrayToObject: arrayToObject,
            assign: assign,
            combine: combine,
            compact: compact,
            decode: decode,
            encode: encode,
            isBuffer: isBuffer,
            isRegExp: isRegExp,
            merge: merge
          }

          /***/
        },

      /***/ '../../node_modules/readable-stream/lib/_stream_duplex.js':
        /*!********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // a duplex stream is just a stream that is both readable and writable.
          // Since JS doesn't have multiple prototypal inheritance, this class
          // prototypally inherits from Readable, and then parasitically from
          // Writable.

          /*<replacement>*/

          var pna = __webpack_require__(
            /*! process-nextick-args */ '../../node_modules/process-nextick-args/index.js'
          )
          /*</replacement>*/

          /*<replacement>*/
          var objectKeys =
            Object.keys ||
            function(obj) {
              var keys = []
              for (var key in obj) {
                keys.push(key)
              }
              return keys
            }
          /*</replacement>*/

          module.exports = Duplex

          /*<replacement>*/
          var util = __webpack_require__(
            /*! core-util-is */ '../../node_modules/core-util-is/lib/util.js'
          )
          util.inherits = __webpack_require__(
            /*! inherits */ '../../node_modules/inherits/inherits.js'
          )
          /*</replacement>*/

          var Readable = __webpack_require__(
            /*! ./_stream_readable */ '../../node_modules/readable-stream/lib/_stream_readable.js'
          )
          var Writable = __webpack_require__(
            /*! ./_stream_writable */ '../../node_modules/readable-stream/lib/_stream_writable.js'
          )

          util.inherits(Duplex, Readable)

          {
            // avoid scope creep, the keys array can then be collected
            var keys = objectKeys(Writable.prototype)
            for (var v = 0; v < keys.length; v++) {
              var method = keys[v]
              if (!Duplex.prototype[method])
                Duplex.prototype[method] = Writable.prototype[method]
            }
          }

          function Duplex(options) {
            if (!(this instanceof Duplex)) return new Duplex(options)

            Readable.call(this, options)
            Writable.call(this, options)

            if (options && options.readable === false) this.readable = false

            if (options && options.writable === false) this.writable = false

            this.allowHalfOpen = true
            if (options && options.allowHalfOpen === false)
              this.allowHalfOpen = false

            this.once('end', onend)
          }

          Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function() {
              return this._writableState.highWaterMark
            }
          })

          // the no-half-open enforcer
          function onend() {
            // if we allow half-open state, or if the writable side ended,
            // then we're ok.
            if (this.allowHalfOpen || this._writableState.ended) return

            // no more data can be written.
            // But allow more writes to happen in this tick.
            pna.nextTick(onEndNT, this)
          }

          function onEndNT(self) {
            self.end()
          }

          Object.defineProperty(Duplex.prototype, 'destroyed', {
            get: function() {
              if (
                this._readableState === undefined ||
                this._writableState === undefined
              ) {
                return false
              }
              return (
                this._readableState.destroyed && this._writableState.destroyed
              )
            },
            set: function(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (
                this._readableState === undefined ||
                this._writableState === undefined
              ) {
                return
              }

              // backward compatibility, the user is explicitly
              // managing destroyed
              this._readableState.destroyed = value
              this._writableState.destroyed = value
            }
          })

          Duplex.prototype._destroy = function(err, cb) {
            this.push(null)
            this.end()

            pna.nextTick(cb, err)
          }

          /***/
        },

      /***/ '../../node_modules/readable-stream/lib/_stream_passthrough.js':
        /*!*************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // a passthrough stream.
          // basically just the most minimal sort of Transform stream.
          // Every written chunk gets output as-is.

          module.exports = PassThrough

          var Transform = __webpack_require__(
            /*! ./_stream_transform */ '../../node_modules/readable-stream/lib/_stream_transform.js'
          )

          /*<replacement>*/
          var util = __webpack_require__(
            /*! core-util-is */ '../../node_modules/core-util-is/lib/util.js'
          )
          util.inherits = __webpack_require__(
            /*! inherits */ '../../node_modules/inherits/inherits.js'
          )
          /*</replacement>*/

          util.inherits(PassThrough, Transform)

          function PassThrough(options) {
            if (!(this instanceof PassThrough)) return new PassThrough(options)

            Transform.call(this, options)
          }

          PassThrough.prototype._transform = function(chunk, encoding, cb) {
            cb(null, chunk)
          }

          /***/
        },

      /***/ '../../node_modules/readable-stream/lib/_stream_readable.js':
        /*!**********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/lib/_stream_readable.js ***!
  \**********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          /*<replacement>*/

          var pna = __webpack_require__(
            /*! process-nextick-args */ '../../node_modules/process-nextick-args/index.js'
          )
          /*</replacement>*/

          module.exports = Readable

          /*<replacement>*/
          var isArray = __webpack_require__(
            /*! isarray */ '../../node_modules/isarray/index.js'
          )
          /*</replacement>*/

          /*<replacement>*/
          var Duplex
          /*</replacement>*/

          Readable.ReadableState = ReadableState

          /*<replacement>*/
          var EE = __webpack_require__(/*! events */ 'events').EventEmitter

          var EElistenerCount = function(emitter, type) {
            return emitter.listeners(type).length
          }
          /*</replacement>*/

          /*<replacement>*/
          var Stream = __webpack_require__(
            /*! ./internal/streams/stream */ '../../node_modules/readable-stream/lib/internal/streams/stream.js'
          )
          /*</replacement>*/

          /*<replacement>*/

          var Buffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          ).Buffer
          var OurUint8Array = global.Uint8Array || function() {}
          function _uint8ArrayToBuffer(chunk) {
            return Buffer.from(chunk)
          }
          function _isUint8Array(obj) {
            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array
          }

          /*</replacement>*/

          /*<replacement>*/
          var util = __webpack_require__(
            /*! core-util-is */ '../../node_modules/core-util-is/lib/util.js'
          )
          util.inherits = __webpack_require__(
            /*! inherits */ '../../node_modules/inherits/inherits.js'
          )
          /*</replacement>*/

          /*<replacement>*/
          var debugUtil = __webpack_require__(/*! util */ 'util')
          var debug = void 0
          if (debugUtil && debugUtil.debuglog) {
            debug = debugUtil.debuglog('stream')
          } else {
            debug = function() {}
          }
          /*</replacement>*/

          var BufferList = __webpack_require__(
            /*! ./internal/streams/BufferList */ '../../node_modules/readable-stream/lib/internal/streams/BufferList.js'
          )
          var destroyImpl = __webpack_require__(
            /*! ./internal/streams/destroy */ '../../node_modules/readable-stream/lib/internal/streams/destroy.js'
          )
          var StringDecoder

          util.inherits(Readable, Stream)

          var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume']

          function prependListener(emitter, event, fn) {
            // Sadly this is not cacheable as some libraries bundle their own
            // event emitter implementation with them.
            if (typeof emitter.prependListener === 'function')
              return emitter.prependListener(event, fn)

            // This is a hack to make sure that our error handler is attached before any
            // userland ones.  NEVER DO THIS. This is here only because this code needs
            // to continue to work with older versions of Node.js that do not include
            // the prependListener() method. The goal is to eventually remove this hack.
            if (!emitter._events || !emitter._events[event])
              emitter.on(event, fn)
            else if (isArray(emitter._events[event]))
              emitter._events[event].unshift(fn)
            else emitter._events[event] = [fn, emitter._events[event]]
          }

          function ReadableState(options, stream) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../../node_modules/readable-stream/lib/_stream_duplex.js'
              )

            options = options || {}

            // Duplex streams are both readable and writable, but share
            // the same options object.
            // However, some cases require setting options to different
            // values for the readable and the writable sides of the duplex stream.
            // These options can be provided separately as readableXXX and writableXXX.
            var isDuplex = stream instanceof Duplex

            // object stream flag. Used to make read(n) ignore n and to
            // make all the buffer merging and length checks go away
            this.objectMode = !!options.objectMode

            if (isDuplex)
              this.objectMode = this.objectMode || !!options.readableObjectMode

            // the point at which it stops calling _read() to fill the buffer
            // Note: 0 is a valid value, means "don't call _read preemptively ever"
            var hwm = options.highWaterMark
            var readableHwm = options.readableHighWaterMark
            var defaultHwm = this.objectMode ? 16 : 16 * 1024

            if (hwm || hwm === 0) this.highWaterMark = hwm
            else if (isDuplex && (readableHwm || readableHwm === 0))
              this.highWaterMark = readableHwm
            else this.highWaterMark = defaultHwm

            // cast to ints.
            this.highWaterMark = Math.floor(this.highWaterMark)

            // A linked list is used to store data chunks instead of an array because the
            // linked list can remove elements from the beginning faster than
            // array.shift()
            this.buffer = new BufferList()
            this.length = 0
            this.pipes = null
            this.pipesCount = 0
            this.flowing = null
            this.ended = false
            this.endEmitted = false
            this.reading = false

            // a flag to be able to tell if the event 'readable'/'data' is emitted
            // immediately, or on a later tick.  We set this to true at first, because
            // any actions that shouldn't happen until "later" should generally also
            // not happen before the first read call.
            this.sync = true

            // whenever we return null, then we set a flag to say
            // that we're awaiting a 'readable' event emission.
            this.needReadable = false
            this.emittedReadable = false
            this.readableListening = false
            this.resumeScheduled = false

            // has it been destroyed
            this.destroyed = false

            // Crypto is kind of old and crusty.  Historically, its default string
            // encoding is 'binary' so we have to make this configurable.
            // Everything else in the universe uses 'utf8', though.
            this.defaultEncoding = options.defaultEncoding || 'utf8'

            // the number of writers that are awaiting a drain event in .pipe()s
            this.awaitDrain = 0

            // if true, a maybeReadMore has been scheduled
            this.readingMore = false

            this.decoder = null
            this.encoding = null
            if (options.encoding) {
              if (!StringDecoder)
                StringDecoder = __webpack_require__(
                  /*! string_decoder/ */ '../../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js'
                ).StringDecoder
              this.decoder = new StringDecoder(options.encoding)
              this.encoding = options.encoding
            }
          }

          function Readable(options) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../../node_modules/readable-stream/lib/_stream_duplex.js'
              )

            if (!(this instanceof Readable)) return new Readable(options)

            this._readableState = new ReadableState(options, this)

            // legacy
            this.readable = true

            if (options) {
              if (typeof options.read === 'function') this._read = options.read

              if (typeof options.destroy === 'function')
                this._destroy = options.destroy
            }

            Stream.call(this)
          }

          Object.defineProperty(Readable.prototype, 'destroyed', {
            get: function() {
              if (this._readableState === undefined) {
                return false
              }
              return this._readableState.destroyed
            },
            set: function(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (!this._readableState) {
                return
              }

              // backward compatibility, the user is explicitly
              // managing destroyed
              this._readableState.destroyed = value
            }
          })

          Readable.prototype.destroy = destroyImpl.destroy
          Readable.prototype._undestroy = destroyImpl.undestroy
          Readable.prototype._destroy = function(err, cb) {
            this.push(null)
            cb(err)
          }

          // Manually shove something into the read() buffer.
          // This returns true if the highWaterMark has not been hit yet,
          // similar to how Writable.write() returns true if you should
          // write() some more.
          Readable.prototype.push = function(chunk, encoding) {
            var state = this._readableState
            var skipChunkCheck

            if (!state.objectMode) {
              if (typeof chunk === 'string') {
                encoding = encoding || state.defaultEncoding
                if (encoding !== state.encoding) {
                  chunk = Buffer.from(chunk, encoding)
                  encoding = ''
                }
                skipChunkCheck = true
              }
            } else {
              skipChunkCheck = true
            }

            return readableAddChunk(
              this,
              chunk,
              encoding,
              false,
              skipChunkCheck
            )
          }

          // Unshift should *always* be something directly out of read()
          Readable.prototype.unshift = function(chunk) {
            return readableAddChunk(this, chunk, null, true, false)
          }

          function readableAddChunk(
            stream,
            chunk,
            encoding,
            addToFront,
            skipChunkCheck
          ) {
            var state = stream._readableState
            if (chunk === null) {
              state.reading = false
              onEofChunk(stream, state)
            } else {
              var er
              if (!skipChunkCheck) er = chunkInvalid(state, chunk)
              if (er) {
                stream.emit('error', er)
              } else if (state.objectMode || (chunk && chunk.length > 0)) {
                if (
                  typeof chunk !== 'string' &&
                  !state.objectMode &&
                  Object.getPrototypeOf(chunk) !== Buffer.prototype
                ) {
                  chunk = _uint8ArrayToBuffer(chunk)
                }

                if (addToFront) {
                  if (state.endEmitted)
                    stream.emit(
                      'error',
                      new Error('stream.unshift() after end event')
                    )
                  else addChunk(stream, state, chunk, true)
                } else if (state.ended) {
                  stream.emit('error', new Error('stream.push() after EOF'))
                } else {
                  state.reading = false
                  if (state.decoder && !encoding) {
                    chunk = state.decoder.write(chunk)
                    if (state.objectMode || chunk.length !== 0)
                      addChunk(stream, state, chunk, false)
                    else maybeReadMore(stream, state)
                  } else {
                    addChunk(stream, state, chunk, false)
                  }
                }
              } else if (!addToFront) {
                state.reading = false
              }
            }

            return needMoreData(state)
          }

          function addChunk(stream, state, chunk, addToFront) {
            if (state.flowing && state.length === 0 && !state.sync) {
              stream.emit('data', chunk)
              stream.read(0)
            } else {
              // update the buffer info.
              state.length += state.objectMode ? 1 : chunk.length
              if (addToFront) state.buffer.unshift(chunk)
              else state.buffer.push(chunk)

              if (state.needReadable) emitReadable(stream)
            }
            maybeReadMore(stream, state)
          }

          function chunkInvalid(state, chunk) {
            var er
            if (
              !_isUint8Array(chunk) &&
              typeof chunk !== 'string' &&
              chunk !== undefined &&
              !state.objectMode
            ) {
              er = new TypeError('Invalid non-string/buffer chunk')
            }
            return er
          }

          // if it's past the high water mark, we can push in some more.
          // Also, if we have no data yet, we can stand some
          // more bytes.  This is to work around cases where hwm=0,
          // such as the repl.  Also, if the push() triggered a
          // readable event, and the user called read(largeNumber) such that
          // needReadable was set, then we ought to push more, so that another
          // 'readable' event will be triggered.
          function needMoreData(state) {
            return (
              !state.ended &&
              (state.needReadable ||
                state.length < state.highWaterMark ||
                state.length === 0)
            )
          }

          Readable.prototype.isPaused = function() {
            return this._readableState.flowing === false
          }

          // backwards compatibility.
          Readable.prototype.setEncoding = function(enc) {
            if (!StringDecoder)
              StringDecoder = __webpack_require__(
                /*! string_decoder/ */ '../../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js'
              ).StringDecoder
            this._readableState.decoder = new StringDecoder(enc)
            this._readableState.encoding = enc
            return this
          }

          // Don't raise the hwm > 8MB
          var MAX_HWM = 0x800000
          function computeNewHighWaterMark(n) {
            if (n >= MAX_HWM) {
              n = MAX_HWM
            } else {
              // Get the next highest power of 2 to prevent increasing hwm excessively in
              // tiny amounts
              n--
              n |= n >>> 1
              n |= n >>> 2
              n |= n >>> 4
              n |= n >>> 8
              n |= n >>> 16
              n++
            }
            return n
          }

          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function howMuchToRead(n, state) {
            if (n <= 0 || (state.length === 0 && state.ended)) return 0
            if (state.objectMode) return 1
            if (n !== n) {
              // Only flow one buffer at a time
              if (state.flowing && state.length)
                return state.buffer.head.data.length
              else return state.length
            }
            // If we're asking for more than the current hwm, then raise the hwm.
            if (n > state.highWaterMark)
              state.highWaterMark = computeNewHighWaterMark(n)
            if (n <= state.length) return n
            // Don't have enough
            if (!state.ended) {
              state.needReadable = true
              return 0
            }
            return state.length
          }

          // you can override either this method, or the async _read(n) below.
          Readable.prototype.read = function(n) {
            debug('read', n)
            n = parseInt(n, 10)
            var state = this._readableState
            var nOrig = n

            if (n !== 0) state.emittedReadable = false

            // if we're doing read(0) to trigger a readable event, but we
            // already have a bunch of data in the buffer, then just trigger
            // the 'readable' event and move on.
            if (
              n === 0 &&
              state.needReadable &&
              (state.length >= state.highWaterMark || state.ended)
            ) {
              debug('read: emitReadable', state.length, state.ended)
              if (state.length === 0 && state.ended) endReadable(this)
              else emitReadable(this)
              return null
            }

            n = howMuchToRead(n, state)

            // if we've ended, and we're now clear, then finish it up.
            if (n === 0 && state.ended) {
              if (state.length === 0) endReadable(this)
              return null
            }

            // All the actual chunk generation logic needs to be
            // *below* the call to _read.  The reason is that in certain
            // synthetic stream cases, such as passthrough streams, _read
            // may be a completely synchronous operation which may change
            // the state of the read buffer, providing enough data when
            // before there was *not* enough.
            //
            // So, the steps are:
            // 1. Figure out what the state of things will be after we do
            // a read from the buffer.
            //
            // 2. If that resulting state will trigger a _read, then call _read.
            // Note that this may be asynchronous, or synchronous.  Yes, it is
            // deeply ugly to write APIs this way, but that still doesn't mean
            // that the Readable class should behave improperly, as streams are
            // designed to be sync/async agnostic.
            // Take note if the _read call is sync or async (ie, if the read call
            // has returned yet), so that we know whether or not it's safe to emit
            // 'readable' etc.
            //
            // 3. Actually pull the requested chunks out of the buffer and return.

            // if we need a readable event, then we need to do some reading.
            var doRead = state.needReadable
            debug('need readable', doRead)

            // if we currently have less than the highWaterMark, then also read some
            if (state.length === 0 || state.length - n < state.highWaterMark) {
              doRead = true
              debug('length less than watermark', doRead)
            }

            // however, if we've ended, then there's no point, and if we're already
            // reading, then it's unnecessary.
            if (state.ended || state.reading) {
              doRead = false
              debug('reading or ended', doRead)
            } else if (doRead) {
              debug('do read')
              state.reading = true
              state.sync = true
              // if the length is currently zero, then we *need* a readable event.
              if (state.length === 0) state.needReadable = true
              // call internal read method
              this._read(state.highWaterMark)
              state.sync = false
              // If _read pushed data synchronously, then `reading` will be false,
              // and we need to re-evaluate how much data we can return to the user.
              if (!state.reading) n = howMuchToRead(nOrig, state)
            }

            var ret
            if (n > 0) ret = fromList(n, state)
            else ret = null

            if (ret === null) {
              state.needReadable = true
              n = 0
            } else {
              state.length -= n
            }

            if (state.length === 0) {
              // If we have nothing in the buffer, then we want to know
              // as soon as we *do* get something into the buffer.
              if (!state.ended) state.needReadable = true

              // If we tried to read() past the EOF, then emit end on the next tick.
              if (nOrig !== n && state.ended) endReadable(this)
            }

            if (ret !== null) this.emit('data', ret)

            return ret
          }

          function onEofChunk(stream, state) {
            if (state.ended) return
            if (state.decoder) {
              var chunk = state.decoder.end()
              if (chunk && chunk.length) {
                state.buffer.push(chunk)
                state.length += state.objectMode ? 1 : chunk.length
              }
            }
            state.ended = true

            // emit 'readable' now to make sure it gets picked up.
            emitReadable(stream)
          }

          // Don't emit readable right away in sync mode, because this can trigger
          // another read() call => stack overflow.  This way, it might trigger
          // a nextTick recursion warning, but that's not so bad.
          function emitReadable(stream) {
            var state = stream._readableState
            state.needReadable = false
            if (!state.emittedReadable) {
              debug('emitReadable', state.flowing)
              state.emittedReadable = true
              if (state.sync) pna.nextTick(emitReadable_, stream)
              else emitReadable_(stream)
            }
          }

          function emitReadable_(stream) {
            debug('emit readable')
            stream.emit('readable')
            flow(stream)
          }

          // at this point, the user has presumably seen the 'readable' event,
          // and called read() to consume some data.  that may have triggered
          // in turn another _read(n) call, in which case reading = true if
          // it's in progress.
          // However, if we're not ended, or reading, and the length < hwm,
          // then go ahead and try to read some more preemptively.
          function maybeReadMore(stream, state) {
            if (!state.readingMore) {
              state.readingMore = true
              pna.nextTick(maybeReadMore_, stream, state)
            }
          }

          function maybeReadMore_(stream, state) {
            var len = state.length
            while (
              !state.reading &&
              !state.flowing &&
              !state.ended &&
              state.length < state.highWaterMark
            ) {
              debug('maybeReadMore read 0')
              stream.read(0)
              if (len === state.length)
                // didn't get any data, stop spinning.
                break
              else len = state.length
            }
            state.readingMore = false
          }

          // abstract method.  to be overridden in specific implementation classes.
          // call cb(er, data) where data is <= n in length.
          // for virtual (non-string, non-buffer) streams, "length" is somewhat
          // arbitrary, and perhaps not very meaningful.
          Readable.prototype._read = function(n) {
            this.emit('error', new Error('_read() is not implemented'))
          }

          Readable.prototype.pipe = function(dest, pipeOpts) {
            var src = this
            var state = this._readableState

            switch (state.pipesCount) {
              case 0:
                state.pipes = dest
                break
              case 1:
                state.pipes = [state.pipes, dest]
                break
              default:
                state.pipes.push(dest)
                break
            }
            state.pipesCount += 1
            debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts)

            var doEnd =
              (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr

            var endFn = doEnd ? onend : unpipe
            if (state.endEmitted) pna.nextTick(endFn)
            else src.once('end', endFn)

            dest.on('unpipe', onunpipe)
            function onunpipe(readable, unpipeInfo) {
              debug('onunpipe')
              if (readable === src) {
                if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                  unpipeInfo.hasUnpiped = true
                  cleanup()
                }
              }
            }

            function onend() {
              debug('onend')
              dest.end()
            }

            // when the dest drains, it reduces the awaitDrain counter
            // on the source.  This would be more elegant with a .once()
            // handler in flow(), but adding and removing repeatedly is
            // too slow.
            var ondrain = pipeOnDrain(src)
            dest.on('drain', ondrain)

            var cleanedUp = false
            function cleanup() {
              debug('cleanup')
              // cleanup event handlers once the pipe is broken
              dest.removeListener('close', onclose)
              dest.removeListener('finish', onfinish)
              dest.removeListener('drain', ondrain)
              dest.removeListener('error', onerror)
              dest.removeListener('unpipe', onunpipe)
              src.removeListener('end', onend)
              src.removeListener('end', unpipe)
              src.removeListener('data', ondata)

              cleanedUp = true

              // if the reader is waiting for a drain event from this
              // specific writer, then it would cause it to never start
              // flowing again.
              // So, if this is awaiting a drain, then we just call it now.
              // If we don't know, then assume that we are waiting for one.
              if (
                state.awaitDrain &&
                (!dest._writableState || dest._writableState.needDrain)
              )
                ondrain()
            }

            // If the user pushes more data while we're writing to dest then we'll end up
            // in ondata again. However, we only want to increase awaitDrain once because
            // dest will only emit one 'drain' event for the multiple writes.
            // => Introduce a guard on increasing awaitDrain.
            var increasedAwaitDrain = false
            src.on('data', ondata)
            function ondata(chunk) {
              debug('ondata')
              increasedAwaitDrain = false
              var ret = dest.write(chunk)
              if (false === ret && !increasedAwaitDrain) {
                // If the user unpiped during `dest.write()`, it is possible
                // to get stuck in a permanently paused state if that write
                // also returned false.
                // => Check whether `dest` is still a piping destination.
                if (
                  ((state.pipesCount === 1 && state.pipes === dest) ||
                    (state.pipesCount > 1 &&
                      indexOf(state.pipes, dest) !== -1)) &&
                  !cleanedUp
                ) {
                  debug(
                    'false write response, pause',
                    src._readableState.awaitDrain
                  )
                  src._readableState.awaitDrain++
                  increasedAwaitDrain = true
                }
                src.pause()
              }
            }

            // if the dest has an error, then stop piping into it.
            // however, don't suppress the throwing behavior for this.
            function onerror(er) {
              debug('onerror', er)
              unpipe()
              dest.removeListener('error', onerror)
              if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er)
            }

            // Make sure our error handler is attached before userland ones.
            prependListener(dest, 'error', onerror)

            // Both close and finish should trigger unpipe, but only once.
            function onclose() {
              dest.removeListener('finish', onfinish)
              unpipe()
            }
            dest.once('close', onclose)
            function onfinish() {
              debug('onfinish')
              dest.removeListener('close', onclose)
              unpipe()
            }
            dest.once('finish', onfinish)

            function unpipe() {
              debug('unpipe')
              src.unpipe(dest)
            }

            // tell the dest that it's being piped to
            dest.emit('pipe', src)

            // start the flow if it hasn't been started already.
            if (!state.flowing) {
              debug('pipe resume')
              src.resume()
            }

            return dest
          }

          function pipeOnDrain(src) {
            return function() {
              var state = src._readableState
              debug('pipeOnDrain', state.awaitDrain)
              if (state.awaitDrain) state.awaitDrain--
              if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
                state.flowing = true
                flow(src)
              }
            }
          }

          Readable.prototype.unpipe = function(dest) {
            var state = this._readableState
            var unpipeInfo = { hasUnpiped: false }

            // if we're not piping anywhere, then do nothing.
            if (state.pipesCount === 0) return this

            // just one destination.  most common case.
            if (state.pipesCount === 1) {
              // passed in one, but it's not the right one.
              if (dest && dest !== state.pipes) return this

              if (!dest) dest = state.pipes

              // got a match.
              state.pipes = null
              state.pipesCount = 0
              state.flowing = false
              if (dest) dest.emit('unpipe', this, unpipeInfo)
              return this
            }

            // slow case. multiple pipe destinations.

            if (!dest) {
              // remove all.
              var dests = state.pipes
              var len = state.pipesCount
              state.pipes = null
              state.pipesCount = 0
              state.flowing = false

              for (var i = 0; i < len; i++) {
                dests[i].emit('unpipe', this, unpipeInfo)
              }
              return this
            }

            // try to find the right one.
            var index = indexOf(state.pipes, dest)
            if (index === -1) return this

            state.pipes.splice(index, 1)
            state.pipesCount -= 1
            if (state.pipesCount === 1) state.pipes = state.pipes[0]

            dest.emit('unpipe', this, unpipeInfo)

            return this
          }

          // set up data events if they are asked for
          // Ensure readable listeners eventually get something
          Readable.prototype.on = function(ev, fn) {
            var res = Stream.prototype.on.call(this, ev, fn)

            if (ev === 'data') {
              // Start flowing on next tick if stream isn't explicitly paused
              if (this._readableState.flowing !== false) this.resume()
            } else if (ev === 'readable') {
              var state = this._readableState
              if (!state.endEmitted && !state.readableListening) {
                state.readableListening = state.needReadable = true
                state.emittedReadable = false
                if (!state.reading) {
                  pna.nextTick(nReadingNextTick, this)
                } else if (state.length) {
                  emitReadable(this)
                }
              }
            }

            return res
          }
          Readable.prototype.addListener = Readable.prototype.on

          function nReadingNextTick(self) {
            debug('readable nexttick read 0')
            self.read(0)
          }

          // pause() and resume() are remnants of the legacy readable stream API
          // If the user uses them, then switch into old mode.
          Readable.prototype.resume = function() {
            var state = this._readableState
            if (!state.flowing) {
              debug('resume')
              state.flowing = true
              resume(this, state)
            }
            return this
          }

          function resume(stream, state) {
            if (!state.resumeScheduled) {
              state.resumeScheduled = true
              pna.nextTick(resume_, stream, state)
            }
          }

          function resume_(stream, state) {
            if (!state.reading) {
              debug('resume read 0')
              stream.read(0)
            }

            state.resumeScheduled = false
            state.awaitDrain = 0
            stream.emit('resume')
            flow(stream)
            if (state.flowing && !state.reading) stream.read(0)
          }

          Readable.prototype.pause = function() {
            debug('call pause flowing=%j', this._readableState.flowing)
            if (false !== this._readableState.flowing) {
              debug('pause')
              this._readableState.flowing = false
              this.emit('pause')
            }
            return this
          }

          function flow(stream) {
            var state = stream._readableState
            debug('flow', state.flowing)
            while (state.flowing && stream.read() !== null) {}
          }

          // wrap an old-style stream as the async data source.
          // This is *not* part of the readable stream interface.
          // It is an ugly unfortunate mess of history.
          Readable.prototype.wrap = function(stream) {
            var _this = this

            var state = this._readableState
            var paused = false

            stream.on('end', function() {
              debug('wrapped end')
              if (state.decoder && !state.ended) {
                var chunk = state.decoder.end()
                if (chunk && chunk.length) _this.push(chunk)
              }

              _this.push(null)
            })

            stream.on('data', function(chunk) {
              debug('wrapped data')
              if (state.decoder) chunk = state.decoder.write(chunk)

              // don't skip over falsy values in objectMode
              if (state.objectMode && (chunk === null || chunk === undefined))
                return
              else if (!state.objectMode && (!chunk || !chunk.length)) return

              var ret = _this.push(chunk)
              if (!ret) {
                paused = true
                stream.pause()
              }
            })

            // proxy all the other methods.
            // important when wrapping filters and duplexes.
            for (var i in stream) {
              if (this[i] === undefined && typeof stream[i] === 'function') {
                this[i] = (function(method) {
                  return function() {
                    return stream[method].apply(stream, arguments)
                  }
                })(i)
              }
            }

            // proxy certain important events.
            for (var n = 0; n < kProxyEvents.length; n++) {
              stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]))
            }

            // when we try to consume some more bytes, simply unpause the
            // underlying stream.
            this._read = function(n) {
              debug('wrapped _read', n)
              if (paused) {
                paused = false
                stream.resume()
              }
            }

            return this
          }

          Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function() {
              return this._readableState.highWaterMark
            }
          })

          // exposed for testing purposes only.
          Readable._fromList = fromList

          // Pluck off n bytes from an array of buffers.
          // Length is the combined lengths of all the buffers in the list.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function fromList(n, state) {
            // nothing buffered
            if (state.length === 0) return null

            var ret
            if (state.objectMode) ret = state.buffer.shift()
            else if (!n || n >= state.length) {
              // read it all, truncate the list
              if (state.decoder) ret = state.buffer.join('')
              else if (state.buffer.length === 1) ret = state.buffer.head.data
              else ret = state.buffer.concat(state.length)
              state.buffer.clear()
            } else {
              // read part of list
              ret = fromListPartial(n, state.buffer, state.decoder)
            }

            return ret
          }

          // Extracts only enough buffered data to satisfy the amount requested.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function fromListPartial(n, list, hasStrings) {
            var ret
            if (n < list.head.data.length) {
              // slice is the same for buffers and strings
              ret = list.head.data.slice(0, n)
              list.head.data = list.head.data.slice(n)
            } else if (n === list.head.data.length) {
              // first chunk is a perfect match
              ret = list.shift()
            } else {
              // result spans more than one buffer
              ret = hasStrings
                ? copyFromBufferString(n, list)
                : copyFromBuffer(n, list)
            }
            return ret
          }

          // Copies a specified amount of characters from the list of buffered data
          // chunks.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function copyFromBufferString(n, list) {
            var p = list.head
            var c = 1
            var ret = p.data
            n -= ret.length
            while ((p = p.next)) {
              var str = p.data
              var nb = n > str.length ? str.length : n
              if (nb === str.length) ret += str
              else ret += str.slice(0, n)
              n -= nb
              if (n === 0) {
                if (nb === str.length) {
                  ++c
                  if (p.next) list.head = p.next
                  else list.head = list.tail = null
                } else {
                  list.head = p
                  p.data = str.slice(nb)
                }
                break
              }
              ++c
            }
            list.length -= c
            return ret
          }

          // Copies a specified amount of bytes from the list of buffered data chunks.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function copyFromBuffer(n, list) {
            var ret = Buffer.allocUnsafe(n)
            var p = list.head
            var c = 1
            p.data.copy(ret)
            n -= p.data.length
            while ((p = p.next)) {
              var buf = p.data
              var nb = n > buf.length ? buf.length : n
              buf.copy(ret, ret.length - n, 0, nb)
              n -= nb
              if (n === 0) {
                if (nb === buf.length) {
                  ++c
                  if (p.next) list.head = p.next
                  else list.head = list.tail = null
                } else {
                  list.head = p
                  p.data = buf.slice(nb)
                }
                break
              }
              ++c
            }
            list.length -= c
            return ret
          }

          function endReadable(stream) {
            var state = stream._readableState

            // If we get here before consuming all the bytes, then that is a
            // bug in node.  Should never happen.
            if (state.length > 0)
              throw new Error('"endReadable()" called on non-empty stream')

            if (!state.endEmitted) {
              state.ended = true
              pna.nextTick(endReadableNT, state, stream)
            }
          }

          function endReadableNT(state, stream) {
            // Check that we didn't get one last unshift.
            if (!state.endEmitted && state.length === 0) {
              state.endEmitted = true
              stream.readable = false
              stream.emit('end')
            }
          }

          function indexOf(xs, x) {
            for (var i = 0, l = xs.length; i < l; i++) {
              if (xs[i] === x) return i
            }
            return -1
          }

          /***/
        },

      /***/ '../../node_modules/readable-stream/lib/_stream_transform.js':
        /*!***********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/lib/_stream_transform.js ***!
  \***********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // a transform stream is a readable/writable stream where you do
          // something with the data.  Sometimes it's called a "filter",
          // but that's not a great name for it, since that implies a thing where
          // some bits pass through, and others are simply ignored.  (That would
          // be a valid example of a transform, of course.)
          //
          // While the output is causally related to the input, it's not a
          // necessarily symmetric or synchronous transformation.  For example,
          // a zlib stream might take multiple plain-text writes(), and then
          // emit a single compressed chunk some time in the future.
          //
          // Here's how this works:
          //
          // The Transform stream has all the aspects of the readable and writable
          // stream classes.  When you write(chunk), that calls _write(chunk,cb)
          // internally, and returns false if there's a lot of pending writes
          // buffered up.  When you call read(), that calls _read(n) until
          // there's enough pending readable data buffered up.
          //
          // In a transform stream, the written data is placed in a buffer.  When
          // _read(n) is called, it transforms the queued up data, calling the
          // buffered _write cb's as it consumes chunks.  If consuming a single
          // written chunk would result in multiple output chunks, then the first
          // outputted bit calls the readcb, and subsequent chunks just go into
          // the read buffer, and will cause it to emit 'readable' if necessary.
          //
          // This way, back-pressure is actually determined by the reading side,
          // since _read has to be called to start processing a new chunk.  However,
          // a pathological inflate type of transform can cause excessive buffering
          // here.  For example, imagine a stream where every byte of input is
          // interpreted as an integer from 0-255, and then results in that many
          // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
          // 1kb of data being output.  In this case, you could write a very small
          // amount of input, and end up with a very large amount of output.  In
          // such a pathological inflating mechanism, there'd be no way to tell
          // the system to stop doing the transform.  A single 4MB write could
          // cause the system to run out of memory.
          //
          // However, even in such a pathological case, only a single written chunk
          // would be consumed, and then the rest would wait (un-transformed) until
          // the results of the previous transformed chunk were consumed.

          module.exports = Transform

          var Duplex = __webpack_require__(
            /*! ./_stream_duplex */ '../../node_modules/readable-stream/lib/_stream_duplex.js'
          )

          /*<replacement>*/
          var util = __webpack_require__(
            /*! core-util-is */ '../../node_modules/core-util-is/lib/util.js'
          )
          util.inherits = __webpack_require__(
            /*! inherits */ '../../node_modules/inherits/inherits.js'
          )
          /*</replacement>*/

          util.inherits(Transform, Duplex)

          function afterTransform(er, data) {
            var ts = this._transformState
            ts.transforming = false

            var cb = ts.writecb

            if (!cb) {
              return this.emit(
                'error',
                new Error('write callback called multiple times')
              )
            }

            ts.writechunk = null
            ts.writecb = null

            if (data != null)
              // single equals check for both `null` and `undefined`
              this.push(data)

            cb(er)

            var rs = this._readableState
            rs.reading = false
            if (rs.needReadable || rs.length < rs.highWaterMark) {
              this._read(rs.highWaterMark)
            }
          }

          function Transform(options) {
            if (!(this instanceof Transform)) return new Transform(options)

            Duplex.call(this, options)

            this._transformState = {
              afterTransform: afterTransform.bind(this),
              needTransform: false,
              transforming: false,
              writecb: null,
              writechunk: null,
              writeencoding: null
            }

            // start out asking for a readable event once data is transformed.
            this._readableState.needReadable = true

            // we have implemented the _read method, and done the other things
            // that Readable wants before the first _read call, so unset the
            // sync guard flag.
            this._readableState.sync = false

            if (options) {
              if (typeof options.transform === 'function')
                this._transform = options.transform

              if (typeof options.flush === 'function')
                this._flush = options.flush
            }

            // When the writable side finishes, then flush out anything remaining.
            this.on('prefinish', prefinish)
          }

          function prefinish() {
            var _this = this

            if (typeof this._flush === 'function') {
              this._flush(function(er, data) {
                done(_this, er, data)
              })
            } else {
              done(this, null, null)
            }
          }

          Transform.prototype.push = function(chunk, encoding) {
            this._transformState.needTransform = false
            return Duplex.prototype.push.call(this, chunk, encoding)
          }

          // This is the part where you do stuff!
          // override this function in implementation classes.
          // 'chunk' is an input chunk.
          //
          // Call `push(newChunk)` to pass along transformed output
          // to the readable side.  You may call 'push' zero or more times.
          //
          // Call `cb(err)` when you are done with this chunk.  If you pass
          // an error, then that'll put the hurt on the whole operation.  If you
          // never call cb(), then you'll never get another chunk.
          Transform.prototype._transform = function(chunk, encoding, cb) {
            throw new Error('_transform() is not implemented')
          }

          Transform.prototype._write = function(chunk, encoding, cb) {
            var ts = this._transformState
            ts.writecb = cb
            ts.writechunk = chunk
            ts.writeencoding = encoding
            if (!ts.transforming) {
              var rs = this._readableState
              if (
                ts.needTransform ||
                rs.needReadable ||
                rs.length < rs.highWaterMark
              )
                this._read(rs.highWaterMark)
            }
          }

          // Doesn't matter what the args are here.
          // _transform does all the work.
          // That we got here means that the readable side wants more data.
          Transform.prototype._read = function(n) {
            var ts = this._transformState

            if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
              ts.transforming = true
              this._transform(
                ts.writechunk,
                ts.writeencoding,
                ts.afterTransform
              )
            } else {
              // mark that we need a transform, so that any data that comes in
              // will get processed, now that we've asked for it.
              ts.needTransform = true
            }
          }

          Transform.prototype._destroy = function(err, cb) {
            var _this2 = this

            Duplex.prototype._destroy.call(this, err, function(err2) {
              cb(err2)
              _this2.emit('close')
            })
          }

          function done(stream, er, data) {
            if (er) return stream.emit('error', er)

            if (data != null)
              // single equals check for both `null` and `undefined`
              stream.push(data)

            // if there's nothing in the write buffer, then that means
            // that nothing more will ever be provided
            if (stream._writableState.length)
              throw new Error('Calling transform done when ws.length != 0')

            if (stream._transformState.transforming)
              throw new Error('Calling transform done when still transforming')

            return stream.push(null)
          }

          /***/
        },

      /***/ '../../node_modules/readable-stream/lib/_stream_writable.js':
        /*!**********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/lib/_stream_writable.js ***!
  \**********************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // A bit simpler than readable streams.
          // Implement an async ._write(chunk, encoding, cb), and it'll handle all
          // the drain event emission and buffering.

          /*<replacement>*/

          var pna = __webpack_require__(
            /*! process-nextick-args */ '../../node_modules/process-nextick-args/index.js'
          )
          /*</replacement>*/

          module.exports = Writable

          /* <replacement> */
          function WriteReq(chunk, encoding, cb) {
            this.chunk = chunk
            this.encoding = encoding
            this.callback = cb
            this.next = null
          }

          // It seems a linked list but it is not
          // there will be only 2 of these for each stream
          function CorkedRequest(state) {
            var _this = this

            this.next = null
            this.entry = null
            this.finish = function() {
              onCorkedFinish(_this, state)
            }
          }
          /* </replacement> */

          /*<replacement>*/
          var asyncWrite =
            !process.browser &&
            ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1
              ? setImmediate
              : pna.nextTick
          /*</replacement>*/

          /*<replacement>*/
          var Duplex
          /*</replacement>*/

          Writable.WritableState = WritableState

          /*<replacement>*/
          var util = __webpack_require__(
            /*! core-util-is */ '../../node_modules/core-util-is/lib/util.js'
          )
          util.inherits = __webpack_require__(
            /*! inherits */ '../../node_modules/inherits/inherits.js'
          )
          /*</replacement>*/

          /*<replacement>*/
          var internalUtil = {
            deprecate: __webpack_require__(
              /*! util-deprecate */ '../../node_modules/util-deprecate/node.js'
            )
          }
          /*</replacement>*/

          /*<replacement>*/
          var Stream = __webpack_require__(
            /*! ./internal/streams/stream */ '../../node_modules/readable-stream/lib/internal/streams/stream.js'
          )
          /*</replacement>*/

          /*<replacement>*/

          var Buffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          ).Buffer
          var OurUint8Array = global.Uint8Array || function() {}
          function _uint8ArrayToBuffer(chunk) {
            return Buffer.from(chunk)
          }
          function _isUint8Array(obj) {
            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array
          }

          /*</replacement>*/

          var destroyImpl = __webpack_require__(
            /*! ./internal/streams/destroy */ '../../node_modules/readable-stream/lib/internal/streams/destroy.js'
          )

          util.inherits(Writable, Stream)

          function nop() {}

          function WritableState(options, stream) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../../node_modules/readable-stream/lib/_stream_duplex.js'
              )

            options = options || {}

            // Duplex streams are both readable and writable, but share
            // the same options object.
            // However, some cases require setting options to different
            // values for the readable and the writable sides of the duplex stream.
            // These options can be provided separately as readableXXX and writableXXX.
            var isDuplex = stream instanceof Duplex

            // object stream flag to indicate whether or not this stream
            // contains buffers or objects.
            this.objectMode = !!options.objectMode

            if (isDuplex)
              this.objectMode = this.objectMode || !!options.writableObjectMode

            // the point at which write() starts returning false
            // Note: 0 is a valid value, means that we always return false if
            // the entire buffer is not flushed immediately on write()
            var hwm = options.highWaterMark
            var writableHwm = options.writableHighWaterMark
            var defaultHwm = this.objectMode ? 16 : 16 * 1024

            if (hwm || hwm === 0) this.highWaterMark = hwm
            else if (isDuplex && (writableHwm || writableHwm === 0))
              this.highWaterMark = writableHwm
            else this.highWaterMark = defaultHwm

            // cast to ints.
            this.highWaterMark = Math.floor(this.highWaterMark)

            // if _final has been called
            this.finalCalled = false

            // drain event flag.
            this.needDrain = false
            // at the start of calling end()
            this.ending = false
            // when end() has been called, and returned
            this.ended = false
            // when 'finish' is emitted
            this.finished = false

            // has it been destroyed
            this.destroyed = false

            // should we decode strings into buffers before passing to _write?
            // this is here so that some node-core streams can optimize string
            // handling at a lower level.
            var noDecode = options.decodeStrings === false
            this.decodeStrings = !noDecode

            // Crypto is kind of old and crusty.  Historically, its default string
            // encoding is 'binary' so we have to make this configurable.
            // Everything else in the universe uses 'utf8', though.
            this.defaultEncoding = options.defaultEncoding || 'utf8'

            // not an actual buffer we keep track of, but a measurement
            // of how much we're waiting to get pushed to some underlying
            // socket or file.
            this.length = 0

            // a flag to see when we're in the middle of a write.
            this.writing = false

            // when true all writes will be buffered until .uncork() call
            this.corked = 0

            // a flag to be able to tell if the onwrite cb is called immediately,
            // or on a later tick.  We set this to true at first, because any
            // actions that shouldn't happen until "later" should generally also
            // not happen before the first write call.
            this.sync = true

            // a flag to know if we're processing previously buffered items, which
            // may call the _write() callback in the same tick, so that we don't
            // end up in an overlapped onwrite situation.
            this.bufferProcessing = false

            // the callback that's passed to _write(chunk,cb)
            this.onwrite = function(er) {
              onwrite(stream, er)
            }

            // the callback that the user supplies to write(chunk,encoding,cb)
            this.writecb = null

            // the amount that is being written when _write is called.
            this.writelen = 0

            this.bufferedRequest = null
            this.lastBufferedRequest = null

            // number of pending user-supplied write callbacks
            // this must be 0 before 'finish' can be emitted
            this.pendingcb = 0

            // emit prefinish if the only thing we're waiting for is _write cbs
            // This is relevant for synchronous Transform streams
            this.prefinished = false

            // True if the error was already emitted and should not be thrown again
            this.errorEmitted = false

            // count buffered requests
            this.bufferedRequestCount = 0

            // allocate the first CorkedRequest, there is always
            // one allocated and free to use, and we maintain at most two
            this.corkedRequestsFree = new CorkedRequest(this)
          }

          WritableState.prototype.getBuffer = function getBuffer() {
            var current = this.bufferedRequest
            var out = []
            while (current) {
              out.push(current)
              current = current.next
            }
            return out
          }

          ;(function() {
            try {
              Object.defineProperty(WritableState.prototype, 'buffer', {
                get: internalUtil.deprecate(
                  function() {
                    return this.getBuffer()
                  },
                  '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +
                    'instead.',
                  'DEP0003'
                )
              })
            } catch (_) {}
          })()

          // Test _writableState for inheritance to account for Duplex streams,
          // whose prototype chain only points to Readable.
          var realHasInstance
          if (
            typeof Symbol === 'function' &&
            Symbol.hasInstance &&
            typeof Function.prototype[Symbol.hasInstance] === 'function'
          ) {
            realHasInstance = Function.prototype[Symbol.hasInstance]
            Object.defineProperty(Writable, Symbol.hasInstance, {
              value: function(object) {
                if (realHasInstance.call(this, object)) return true
                if (this !== Writable) return false

                return object && object._writableState instanceof WritableState
              }
            })
          } else {
            realHasInstance = function(object) {
              return object instanceof this
            }
          }

          function Writable(options) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../../node_modules/readable-stream/lib/_stream_duplex.js'
              )

            // Writable ctor is applied to Duplexes, too.
            // `realHasInstance` is necessary because using plain `instanceof`
            // would return false, as no `_writableState` property is attached.

            // Trying to use the custom `instanceof` for Writable here will also break the
            // Node.js LazyTransform implementation, which has a non-trivial getter for
            // `_writableState` that would lead to infinite recursion.
            if (
              !realHasInstance.call(Writable, this) &&
              !(this instanceof Duplex)
            ) {
              return new Writable(options)
            }

            this._writableState = new WritableState(options, this)

            // legacy.
            this.writable = true

            if (options) {
              if (typeof options.write === 'function')
                this._write = options.write

              if (typeof options.writev === 'function')
                this._writev = options.writev

              if (typeof options.destroy === 'function')
                this._destroy = options.destroy

              if (typeof options.final === 'function')
                this._final = options.final
            }

            Stream.call(this)
          }

          // Otherwise people can pipe Writable streams, which is just wrong.
          Writable.prototype.pipe = function() {
            this.emit('error', new Error('Cannot pipe, not readable'))
          }

          function writeAfterEnd(stream, cb) {
            var er = new Error('write after end')
            // TODO: defer error events consistently everywhere, not just the cb
            stream.emit('error', er)
            pna.nextTick(cb, er)
          }

          // Checks that a user-supplied chunk is valid, especially for the particular
          // mode the stream is in. Currently this means that `null` is never accepted
          // and undefined/non-string values are only allowed in object mode.
          function validChunk(stream, state, chunk, cb) {
            var valid = true
            var er = false

            if (chunk === null) {
              er = new TypeError('May not write null values to stream')
            } else if (
              typeof chunk !== 'string' &&
              chunk !== undefined &&
              !state.objectMode
            ) {
              er = new TypeError('Invalid non-string/buffer chunk')
            }
            if (er) {
              stream.emit('error', er)
              pna.nextTick(cb, er)
              valid = false
            }
            return valid
          }

          Writable.prototype.write = function(chunk, encoding, cb) {
            var state = this._writableState
            var ret = false
            var isBuf = !state.objectMode && _isUint8Array(chunk)

            if (isBuf && !Buffer.isBuffer(chunk)) {
              chunk = _uint8ArrayToBuffer(chunk)
            }

            if (typeof encoding === 'function') {
              cb = encoding
              encoding = null
            }

            if (isBuf) encoding = 'buffer'
            else if (!encoding) encoding = state.defaultEncoding

            if (typeof cb !== 'function') cb = nop

            if (state.ended) writeAfterEnd(this, cb)
            else if (isBuf || validChunk(this, state, chunk, cb)) {
              state.pendingcb++
              ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb)
            }

            return ret
          }

          Writable.prototype.cork = function() {
            var state = this._writableState

            state.corked++
          }

          Writable.prototype.uncork = function() {
            var state = this._writableState

            if (state.corked) {
              state.corked--

              if (
                !state.writing &&
                !state.corked &&
                !state.finished &&
                !state.bufferProcessing &&
                state.bufferedRequest
              )
                clearBuffer(this, state)
            }
          }

          Writable.prototype.setDefaultEncoding = function setDefaultEncoding(
            encoding
          ) {
            // node::ParseEncoding() requires lower case.
            if (typeof encoding === 'string') encoding = encoding.toLowerCase()
            if (
              !(
                [
                  'hex',
                  'utf8',
                  'utf-8',
                  'ascii',
                  'binary',
                  'base64',
                  'ucs2',
                  'ucs-2',
                  'utf16le',
                  'utf-16le',
                  'raw'
                ].indexOf((encoding + '').toLowerCase()) > -1
              )
            )
              throw new TypeError('Unknown encoding: ' + encoding)
            this._writableState.defaultEncoding = encoding
            return this
          }

          function decodeChunk(state, chunk, encoding) {
            if (
              !state.objectMode &&
              state.decodeStrings !== false &&
              typeof chunk === 'string'
            ) {
              chunk = Buffer.from(chunk, encoding)
            }
            return chunk
          }

          Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function() {
              return this._writableState.highWaterMark
            }
          })

          // if we're already writing something, then just put this
          // in the queue, and wait our turn.  Otherwise, call _write
          // If we return false, then we need a drain event, so set that flag.
          function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
            if (!isBuf) {
              var newChunk = decodeChunk(state, chunk, encoding)
              if (chunk !== newChunk) {
                isBuf = true
                encoding = 'buffer'
                chunk = newChunk
              }
            }
            var len = state.objectMode ? 1 : chunk.length

            state.length += len

            var ret = state.length < state.highWaterMark
            // we must ensure that previous needDrain will not be reset to false.
            if (!ret) state.needDrain = true

            if (state.writing || state.corked) {
              var last = state.lastBufferedRequest
              state.lastBufferedRequest = {
                chunk: chunk,
                encoding: encoding,
                isBuf: isBuf,
                callback: cb,
                next: null
              }
              if (last) {
                last.next = state.lastBufferedRequest
              } else {
                state.bufferedRequest = state.lastBufferedRequest
              }
              state.bufferedRequestCount += 1
            } else {
              doWrite(stream, state, false, len, chunk, encoding, cb)
            }

            return ret
          }

          function doWrite(stream, state, writev, len, chunk, encoding, cb) {
            state.writelen = len
            state.writecb = cb
            state.writing = true
            state.sync = true
            if (writev) stream._writev(chunk, state.onwrite)
            else stream._write(chunk, encoding, state.onwrite)
            state.sync = false
          }

          function onwriteError(stream, state, sync, er, cb) {
            --state.pendingcb

            if (sync) {
              // defer the callback if we are being called synchronously
              // to avoid piling up things on the stack
              pna.nextTick(cb, er)
              // this can emit finish, and it will always happen
              // after error
              pna.nextTick(finishMaybe, stream, state)
              stream._writableState.errorEmitted = true
              stream.emit('error', er)
            } else {
              // the caller expect this to happen before if
              // it is async
              cb(er)
              stream._writableState.errorEmitted = true
              stream.emit('error', er)
              // this can emit finish, but finish must
              // always follow error
              finishMaybe(stream, state)
            }
          }

          function onwriteStateUpdate(state) {
            state.writing = false
            state.writecb = null
            state.length -= state.writelen
            state.writelen = 0
          }

          function onwrite(stream, er) {
            var state = stream._writableState
            var sync = state.sync
            var cb = state.writecb

            onwriteStateUpdate(state)

            if (er) onwriteError(stream, state, sync, er, cb)
            else {
              // Check if we're actually ready to finish, but don't emit yet
              var finished = needFinish(state)

              if (
                !finished &&
                !state.corked &&
                !state.bufferProcessing &&
                state.bufferedRequest
              ) {
                clearBuffer(stream, state)
              }

              if (sync) {
                /*<replacement>*/
                asyncWrite(afterWrite, stream, state, finished, cb)
                /*</replacement>*/
              } else {
                afterWrite(stream, state, finished, cb)
              }
            }
          }

          function afterWrite(stream, state, finished, cb) {
            if (!finished) onwriteDrain(stream, state)
            state.pendingcb--
            cb()
            finishMaybe(stream, state)
          }

          // Must force callback to be called on nextTick, so that we don't
          // emit 'drain' before the write() consumer gets the 'false' return
          // value, and has a chance to attach a 'drain' listener.
          function onwriteDrain(stream, state) {
            if (state.length === 0 && state.needDrain) {
              state.needDrain = false
              stream.emit('drain')
            }
          }

          // if there's something in the buffer waiting, then process it
          function clearBuffer(stream, state) {
            state.bufferProcessing = true
            var entry = state.bufferedRequest

            if (stream._writev && entry && entry.next) {
              // Fast case, write everything using _writev()
              var l = state.bufferedRequestCount
              var buffer = new Array(l)
              var holder = state.corkedRequestsFree
              holder.entry = entry

              var count = 0
              var allBuffers = true
              while (entry) {
                buffer[count] = entry
                if (!entry.isBuf) allBuffers = false
                entry = entry.next
                count += 1
              }
              buffer.allBuffers = allBuffers

              doWrite(
                stream,
                state,
                true,
                state.length,
                buffer,
                '',
                holder.finish
              )

              // doWrite is almost always async, defer these to save a bit of time
              // as the hot path ends with doWrite
              state.pendingcb++
              state.lastBufferedRequest = null
              if (holder.next) {
                state.corkedRequestsFree = holder.next
                holder.next = null
              } else {
                state.corkedRequestsFree = new CorkedRequest(state)
              }
              state.bufferedRequestCount = 0
            } else {
              // Slow case, write chunks one-by-one
              while (entry) {
                var chunk = entry.chunk
                var encoding = entry.encoding
                var cb = entry.callback
                var len = state.objectMode ? 1 : chunk.length

                doWrite(stream, state, false, len, chunk, encoding, cb)
                entry = entry.next
                state.bufferedRequestCount--
                // if we didn't call the onwrite immediately, then
                // it means that we need to wait until it does.
                // also, that means that the chunk and cb are currently
                // being processed, so move the buffer counter past them.
                if (state.writing) {
                  break
                }
              }

              if (entry === null) state.lastBufferedRequest = null
            }

            state.bufferedRequest = entry
            state.bufferProcessing = false
          }

          Writable.prototype._write = function(chunk, encoding, cb) {
            cb(new Error('_write() is not implemented'))
          }

          Writable.prototype._writev = null

          Writable.prototype.end = function(chunk, encoding, cb) {
            var state = this._writableState

            if (typeof chunk === 'function') {
              cb = chunk
              chunk = null
              encoding = null
            } else if (typeof encoding === 'function') {
              cb = encoding
              encoding = null
            }

            if (chunk !== null && chunk !== undefined)
              this.write(chunk, encoding)

            // .end() fully uncorks
            if (state.corked) {
              state.corked = 1
              this.uncork()
            }

            // ignore unnecessary end() calls.
            if (!state.ending && !state.finished) endWritable(this, state, cb)
          }

          function needFinish(state) {
            return (
              state.ending &&
              state.length === 0 &&
              state.bufferedRequest === null &&
              !state.finished &&
              !state.writing
            )
          }
          function callFinal(stream, state) {
            stream._final(function(err) {
              state.pendingcb--
              if (err) {
                stream.emit('error', err)
              }
              state.prefinished = true
              stream.emit('prefinish')
              finishMaybe(stream, state)
            })
          }
          function prefinish(stream, state) {
            if (!state.prefinished && !state.finalCalled) {
              if (typeof stream._final === 'function') {
                state.pendingcb++
                state.finalCalled = true
                pna.nextTick(callFinal, stream, state)
              } else {
                state.prefinished = true
                stream.emit('prefinish')
              }
            }
          }

          function finishMaybe(stream, state) {
            var need = needFinish(state)
            if (need) {
              prefinish(stream, state)
              if (state.pendingcb === 0) {
                state.finished = true
                stream.emit('finish')
              }
            }
            return need
          }

          function endWritable(stream, state, cb) {
            state.ending = true
            finishMaybe(stream, state)
            if (cb) {
              if (state.finished) pna.nextTick(cb)
              else stream.once('finish', cb)
            }
            state.ended = true
            stream.writable = false
          }

          function onCorkedFinish(corkReq, state, err) {
            var entry = corkReq.entry
            corkReq.entry = null
            while (entry) {
              var cb = entry.callback
              state.pendingcb--
              cb(err)
              entry = entry.next
            }
            if (state.corkedRequestsFree) {
              state.corkedRequestsFree.next = corkReq
            } else {
              state.corkedRequestsFree = corkReq
            }
          }

          Object.defineProperty(Writable.prototype, 'destroyed', {
            get: function() {
              if (this._writableState === undefined) {
                return false
              }
              return this._writableState.destroyed
            },
            set: function(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (!this._writableState) {
                return
              }

              // backward compatibility, the user is explicitly
              // managing destroyed
              this._writableState.destroyed = value
            }
          })

          Writable.prototype.destroy = destroyImpl.destroy
          Writable.prototype._undestroy = destroyImpl.undestroy
          Writable.prototype._destroy = function(err, cb) {
            this.end()
            cb(err)
          }

          /***/
        },

      /***/ '../../node_modules/readable-stream/lib/internal/streams/BufferList.js':
        /*!*********************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \*********************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function')
            }
          }

          var Buffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          ).Buffer
          var util = __webpack_require__(/*! util */ 'util')

          function copyBuffer(src, target, offset) {
            src.copy(target, offset)
          }

          module.exports = (function() {
            function BufferList() {
              _classCallCheck(this, BufferList)

              this.head = null
              this.tail = null
              this.length = 0
            }

            BufferList.prototype.push = function push(v) {
              var entry = { data: v, next: null }
              if (this.length > 0) this.tail.next = entry
              else this.head = entry
              this.tail = entry
              ++this.length
            }

            BufferList.prototype.unshift = function unshift(v) {
              var entry = { data: v, next: this.head }
              if (this.length === 0) this.tail = entry
              this.head = entry
              ++this.length
            }

            BufferList.prototype.shift = function shift() {
              if (this.length === 0) return
              var ret = this.head.data
              if (this.length === 1) this.head = this.tail = null
              else this.head = this.head.next
              --this.length
              return ret
            }

            BufferList.prototype.clear = function clear() {
              this.head = this.tail = null
              this.length = 0
            }

            BufferList.prototype.join = function join(s) {
              if (this.length === 0) return ''
              var p = this.head
              var ret = '' + p.data
              while ((p = p.next)) {
                ret += s + p.data
              }
              return ret
            }

            BufferList.prototype.concat = function concat(n) {
              if (this.length === 0) return Buffer.alloc(0)
              if (this.length === 1) return this.head.data
              var ret = Buffer.allocUnsafe(n >>> 0)
              var p = this.head
              var i = 0
              while (p) {
                copyBuffer(p.data, ret, i)
                i += p.data.length
                p = p.next
              }
              return ret
            }

            return BufferList
          })()

          if (util && util.inspect && util.inspect.custom) {
            module.exports.prototype[util.inspect.custom] = function() {
              var obj = util.inspect({ length: this.length })
              return this.constructor.name + ' ' + obj
            }
          }

          /***/
        },

      /***/ '../../node_modules/readable-stream/lib/internal/streams/destroy.js':
        /*!******************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \******************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /*<replacement>*/

          var pna = __webpack_require__(
            /*! process-nextick-args */ '../../node_modules/process-nextick-args/index.js'
          )
          /*</replacement>*/

          // undocumented cb() API, needed for core, not for public API
          function destroy(err, cb) {
            var _this = this

            var readableDestroyed =
              this._readableState && this._readableState.destroyed
            var writableDestroyed =
              this._writableState && this._writableState.destroyed

            if (readableDestroyed || writableDestroyed) {
              if (cb) {
                cb(err)
              } else if (
                err &&
                (!this._writableState || !this._writableState.errorEmitted)
              ) {
                pna.nextTick(emitErrorNT, this, err)
              }
              return this
            }

            // we set destroyed to true before firing error callbacks in order
            // to make it re-entrance safe in case destroy() is called within callbacks

            if (this._readableState) {
              this._readableState.destroyed = true
            }

            // if this is a duplex stream mark the writable part as destroyed as well
            if (this._writableState) {
              this._writableState.destroyed = true
            }

            this._destroy(err || null, function(err) {
              if (!cb && err) {
                pna.nextTick(emitErrorNT, _this, err)
                if (_this._writableState) {
                  _this._writableState.errorEmitted = true
                }
              } else if (cb) {
                cb(err)
              }
            })

            return this
          }

          function undestroy() {
            if (this._readableState) {
              this._readableState.destroyed = false
              this._readableState.reading = false
              this._readableState.ended = false
              this._readableState.endEmitted = false
            }

            if (this._writableState) {
              this._writableState.destroyed = false
              this._writableState.ended = false
              this._writableState.ending = false
              this._writableState.finished = false
              this._writableState.errorEmitted = false
            }
          }

          function emitErrorNT(self, err) {
            self.emit('error', err)
          }

          module.exports = {
            destroy: destroy,
            undestroy: undestroy
          }

          /***/
        },

      /***/ '../../node_modules/readable-stream/lib/internal/streams/stream.js':
        /*!*****************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/lib/internal/streams/stream.js ***!
  \*****************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          module.exports = __webpack_require__(/*! stream */ 'stream')

          /***/
        },

      /***/ '../../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js':
        /*!************************************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js ***!
  \************************************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          /*<replacement>*/

          var Buffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          ).Buffer
          /*</replacement>*/

          var isEncoding =
            Buffer.isEncoding ||
            function(encoding) {
              encoding = '' + encoding
              switch (encoding && encoding.toLowerCase()) {
                case 'hex':
                case 'utf8':
                case 'utf-8':
                case 'ascii':
                case 'binary':
                case 'base64':
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                case 'raw':
                  return true
                default:
                  return false
              }
            }

          function _normalizeEncoding(enc) {
            if (!enc) return 'utf8'
            var retried
            while (true) {
              switch (enc) {
                case 'utf8':
                case 'utf-8':
                  return 'utf8'
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return 'utf16le'
                case 'latin1':
                case 'binary':
                  return 'latin1'
                case 'base64':
                case 'ascii':
                case 'hex':
                  return enc
                default:
                  if (retried) return // undefined
                  enc = ('' + enc).toLowerCase()
                  retried = true
              }
            }
          }

          // Do not cache `Buffer.isEncoding` when checking encoding names as some
          // modules monkey-patch it to support additional encodings
          function normalizeEncoding(enc) {
            var nenc = _normalizeEncoding(enc)
            if (
              typeof nenc !== 'string' &&
              (Buffer.isEncoding === isEncoding || !isEncoding(enc))
            )
              throw new Error('Unknown encoding: ' + enc)
            return nenc || enc
          }

          // StringDecoder provides an interface for efficiently splitting a series of
          // buffers into a series of JS strings without breaking apart multi-byte
          // characters.
          exports.StringDecoder = StringDecoder
          function StringDecoder(encoding) {
            this.encoding = normalizeEncoding(encoding)
            var nb
            switch (this.encoding) {
              case 'utf16le':
                this.text = utf16Text
                this.end = utf16End
                nb = 4
                break
              case 'utf8':
                this.fillLast = utf8FillLast
                nb = 4
                break
              case 'base64':
                this.text = base64Text
                this.end = base64End
                nb = 3
                break
              default:
                this.write = simpleWrite
                this.end = simpleEnd
                return
            }
            this.lastNeed = 0
            this.lastTotal = 0
            this.lastChar = Buffer.allocUnsafe(nb)
          }

          StringDecoder.prototype.write = function(buf) {
            if (buf.length === 0) return ''
            var r
            var i
            if (this.lastNeed) {
              r = this.fillLast(buf)
              if (r === undefined) return ''
              i = this.lastNeed
              this.lastNeed = 0
            } else {
              i = 0
            }
            if (i < buf.length)
              return r ? r + this.text(buf, i) : this.text(buf, i)
            return r || ''
          }

          StringDecoder.prototype.end = utf8End

          // Returns only complete characters in a Buffer
          StringDecoder.prototype.text = utf8Text

          // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
          StringDecoder.prototype.fillLast = function(buf) {
            if (this.lastNeed <= buf.length) {
              buf.copy(
                this.lastChar,
                this.lastTotal - this.lastNeed,
                0,
                this.lastNeed
              )
              return this.lastChar.toString(this.encoding, 0, this.lastTotal)
            }
            buf.copy(
              this.lastChar,
              this.lastTotal - this.lastNeed,
              0,
              buf.length
            )
            this.lastNeed -= buf.length
          }

          // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
          // continuation byte. If an invalid byte is detected, -2 is returned.
          function utf8CheckByte(byte) {
            if (byte <= 0x7f) return 0
            else if (byte >> 5 === 0x06) return 2
            else if (byte >> 4 === 0x0e) return 3
            else if (byte >> 3 === 0x1e) return 4
            return byte >> 6 === 0x02 ? -1 : -2
          }

          // Checks at most 3 bytes at the end of a Buffer in order to detect an
          // incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
          // needed to complete the UTF-8 character (if applicable) are returned.
          function utf8CheckIncomplete(self, buf, i) {
            var j = buf.length - 1
            if (j < i) return 0
            var nb = utf8CheckByte(buf[j])
            if (nb >= 0) {
              if (nb > 0) self.lastNeed = nb - 1
              return nb
            }
            if (--j < i || nb === -2) return 0
            nb = utf8CheckByte(buf[j])
            if (nb >= 0) {
              if (nb > 0) self.lastNeed = nb - 2
              return nb
            }
            if (--j < i || nb === -2) return 0
            nb = utf8CheckByte(buf[j])
            if (nb >= 0) {
              if (nb > 0) {
                if (nb === 2) nb = 0
                else self.lastNeed = nb - 3
              }
              return nb
            }
            return 0
          }

          // Validates as many continuation bytes for a multi-byte UTF-8 character as
          // needed or are available. If we see a non-continuation byte where we expect
          // one, we "replace" the validated continuation bytes we've seen so far with
          // a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
          // behavior. The continuation byte check is included three times in the case
          // where all of the continuation bytes for a character exist in the same buffer.
          // It is also done this way as a slight performance increase instead of using a
          // loop.
          function utf8CheckExtraBytes(self, buf, p) {
            if ((buf[0] & 0xc0) !== 0x80) {
              self.lastNeed = 0
              return '\ufffd'
            }
            if (self.lastNeed > 1 && buf.length > 1) {
              if ((buf[1] & 0xc0) !== 0x80) {
                self.lastNeed = 1
                return '\ufffd'
              }
              if (self.lastNeed > 2 && buf.length > 2) {
                if ((buf[2] & 0xc0) !== 0x80) {
                  self.lastNeed = 2
                  return '\ufffd'
                }
              }
            }
          }

          // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
          function utf8FillLast(buf) {
            var p = this.lastTotal - this.lastNeed
            var r = utf8CheckExtraBytes(this, buf, p)
            if (r !== undefined) return r
            if (this.lastNeed <= buf.length) {
              buf.copy(this.lastChar, p, 0, this.lastNeed)
              return this.lastChar.toString(this.encoding, 0, this.lastTotal)
            }
            buf.copy(this.lastChar, p, 0, buf.length)
            this.lastNeed -= buf.length
          }

          // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
          // partial character, the character's bytes are buffered until the required
          // number of bytes are available.
          function utf8Text(buf, i) {
            var total = utf8CheckIncomplete(this, buf, i)
            if (!this.lastNeed) return buf.toString('utf8', i)
            this.lastTotal = total
            var end = buf.length - (total - this.lastNeed)
            buf.copy(this.lastChar, 0, end)
            return buf.toString('utf8', i, end)
          }

          // For UTF-8, a replacement character is added when ending on a partial
          // character.
          function utf8End(buf) {
            var r = buf && buf.length ? this.write(buf) : ''
            if (this.lastNeed) return r + '\ufffd'
            return r
          }

          // UTF-16LE typically needs two bytes per character, but even if we have an even
          // number of bytes available, we need to check if we end on a leading/high
          // surrogate. In that case, we need to wait for the next two bytes in order to
          // decode the last character properly.
          function utf16Text(buf, i) {
            if ((buf.length - i) % 2 === 0) {
              var r = buf.toString('utf16le', i)
              if (r) {
                var c = r.charCodeAt(r.length - 1)
                if (c >= 0xd800 && c <= 0xdbff) {
                  this.lastNeed = 2
                  this.lastTotal = 4
                  this.lastChar[0] = buf[buf.length - 2]
                  this.lastChar[1] = buf[buf.length - 1]
                  return r.slice(0, -1)
                }
              }
              return r
            }
            this.lastNeed = 1
            this.lastTotal = 2
            this.lastChar[0] = buf[buf.length - 1]
            return buf.toString('utf16le', i, buf.length - 1)
          }

          // For UTF-16LE we do not explicitly append special replacement characters if we
          // end on a partial character, we simply let v8 handle that.
          function utf16End(buf) {
            var r = buf && buf.length ? this.write(buf) : ''
            if (this.lastNeed) {
              var end = this.lastTotal - this.lastNeed
              return r + this.lastChar.toString('utf16le', 0, end)
            }
            return r
          }

          function base64Text(buf, i) {
            var n = (buf.length - i) % 3
            if (n === 0) return buf.toString('base64', i)
            this.lastNeed = 3 - n
            this.lastTotal = 3
            if (n === 1) {
              this.lastChar[0] = buf[buf.length - 1]
            } else {
              this.lastChar[0] = buf[buf.length - 2]
              this.lastChar[1] = buf[buf.length - 1]
            }
            return buf.toString('base64', i, buf.length - n)
          }

          function base64End(buf) {
            var r = buf && buf.length ? this.write(buf) : ''
            if (this.lastNeed)
              return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed)
            return r
          }

          // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
          function simpleWrite(buf) {
            return buf.toString(this.encoding)
          }

          function simpleEnd(buf) {
            return buf && buf.length ? this.write(buf) : ''
          }

          /***/
        },

      /***/ '../../node_modules/readable-stream/readable.js':
        /*!**********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/readable-stream/readable.js ***!
  \**********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Stream = __webpack_require__(/*! stream */ 'stream')
          if (process.env.READABLE_STREAM === 'disable' && Stream) {
            module.exports = Stream
            exports = module.exports = Stream.Readable
            exports.Readable = Stream.Readable
            exports.Writable = Stream.Writable
            exports.Duplex = Stream.Duplex
            exports.Transform = Stream.Transform
            exports.PassThrough = Stream.PassThrough
            exports.Stream = Stream
          } else {
            exports = module.exports = __webpack_require__(
              /*! ./lib/_stream_readable.js */ '../../node_modules/readable-stream/lib/_stream_readable.js'
            )
            exports.Stream = Stream || exports
            exports.Readable = exports
            exports.Writable = __webpack_require__(
              /*! ./lib/_stream_writable.js */ '../../node_modules/readable-stream/lib/_stream_writable.js'
            )
            exports.Duplex = __webpack_require__(
              /*! ./lib/_stream_duplex.js */ '../../node_modules/readable-stream/lib/_stream_duplex.js'
            )
            exports.Transform = __webpack_require__(
              /*! ./lib/_stream_transform.js */ '../../node_modules/readable-stream/lib/_stream_transform.js'
            )
            exports.PassThrough = __webpack_require__(
              /*! ./lib/_stream_passthrough.js */ '../../node_modules/readable-stream/lib/_stream_passthrough.js'
            )
          }

          /***/
        },

      /***/ '../../node_modules/safe-buffer/index.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/safe-buffer/index.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /* eslint-disable node/no-deprecated-api */
          var buffer = __webpack_require__(/*! buffer */ 'buffer')
          var Buffer = buffer.Buffer

          // alternative to using Object.keys for old browsers
          function copyProps(src, dst) {
            for (var key in src) {
              dst[key] = src[key]
            }
          }
          if (
            Buffer.from &&
            Buffer.alloc &&
            Buffer.allocUnsafe &&
            Buffer.allocUnsafeSlow
          ) {
            module.exports = buffer
          } else {
            // Copy properties from require('buffer')
            copyProps(buffer, exports)
            exports.Buffer = SafeBuffer
          }

          function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length)
          }

          // Copy static methods from Buffer
          copyProps(Buffer, SafeBuffer)

          SafeBuffer.from = function(arg, encodingOrOffset, length) {
            if (typeof arg === 'number') {
              throw new TypeError('Argument must not be a number')
            }
            return Buffer(arg, encodingOrOffset, length)
          }

          SafeBuffer.alloc = function(size, fill, encoding) {
            if (typeof size !== 'number') {
              throw new TypeError('Argument must be a number')
            }
            var buf = Buffer(size)
            if (fill !== undefined) {
              if (typeof encoding === 'string') {
                buf.fill(fill, encoding)
              } else {
                buf.fill(fill)
              }
            } else {
              buf.fill(0)
            }
            return buf
          }

          SafeBuffer.allocUnsafe = function(size) {
            if (typeof size !== 'number') {
              throw new TypeError('Argument must be a number')
            }
            return Buffer(size)
          }

          SafeBuffer.allocUnsafeSlow = function(size) {
            if (typeof size !== 'number') {
              throw new TypeError('Argument must be a number')
            }
            return buffer.SlowBuffer(size)
          }

          /***/
        },

      /***/ '../../node_modules/split/index.js':
        /*!*********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/split/index.js ***!
  \*********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          //filter will reemit the data if cb(err,pass) pass is truthy

          // reduce is more tricky
          // maybe we want to group the reductions or emit progress updates occasionally
          // the most basic reduce just emits one 'data' event after it has recieved 'end'

          var through = __webpack_require__(
            /*! through */ '../../node_modules/through/index.js'
          )
          var Decoder = __webpack_require__(
            /*! string_decoder */ 'string_decoder'
          ).StringDecoder

          module.exports = split

          //TODO pass in a function to map across the lines.

          function split(matcher, mapper, options) {
            var decoder = new Decoder()
            var soFar = ''
            var maxLength = options && options.maxLength
            var trailing = options && options.trailing === false ? false : true
            if ('function' === typeof matcher)
              (mapper = matcher), (matcher = null)
            if (!matcher) matcher = /\r?\n/

            function emit(stream, piece) {
              if (mapper) {
                try {
                  piece = mapper(piece)
                } catch (err) {
                  return stream.emit('error', err)
                }
                if ('undefined' !== typeof piece) stream.queue(piece)
              } else stream.queue(piece)
            }

            function next(stream, buffer) {
              var pieces = ((soFar != null ? soFar : '') + buffer).split(
                matcher
              )
              soFar = pieces.pop()

              if (maxLength && soFar.length > maxLength)
                return stream.emit('error', new Error('maximum buffer reached'))

              for (var i = 0; i < pieces.length; i++) {
                var piece = pieces[i]
                emit(stream, piece)
              }
            }

            return through(
              function(b) {
                next(this, decoder.write(b))
              },
              function() {
                if (decoder.end) next(this, decoder.end())
                if (trailing && soFar != null) emit(this, soFar)
                this.queue(null)
              }
            )
          }

          /***/
        },

      /***/ '../../node_modules/stream-combiner/index.js':
        /*!*******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/stream-combiner/index.js ***!
  \*******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var duplexer = __webpack_require__(
            /*! duplexer */ '../../node_modules/duplexer/index.js'
          )
          var through = __webpack_require__(
            /*! through */ '../../node_modules/through/index.js'
          )

          module.exports = function() {
            var streams

            if (arguments.length == 1 && Array.isArray(arguments[0])) {
              streams = arguments[0]
            } else {
              streams = [].slice.call(arguments)
            }

            if (streams.length == 0) return through()
            else if (streams.length == 1) return streams[0]

            var first = streams[0],
              last = streams[streams.length - 1],
              thepipe = duplexer(first, last)

            //pipe all the streams together

            function recurse(streams) {
              if (streams.length < 2) return
              streams[0].pipe(streams[1])
              recurse(streams.slice(1))
            }

            recurse(streams)

            function onerror() {
              var args = [].slice.call(arguments)
              args.unshift('error')
              thepipe.emit.apply(thepipe, args)
            }

            //es.duplex already reemits the error from the first and last stream.
            //add a listener for the inner streams in the pipeline.
            for (var i = 1; i < streams.length - 1; i++)
              streams[i].on('error', onerror)

            return thepipe
          }

          /***/
        },

      /***/ '../../node_modules/stream-shift/index.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/stream-shift/index.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = shift

          function shift(stream) {
            var rs = stream._readableState
            if (!rs) return null
            return rs.objectMode
              ? stream.read()
              : stream.read(getStateLength(rs))
          }

          function getStateLength(state) {
            if (state.buffer.length) {
              // Since node 6.3.0 state.buffer is a BufferList not an array
              if (state.buffer.head) {
                return state.buffer.head.data.length
              }

              return state.buffer[0].length
            }

            return state.length
          }

          /***/
        },

      /***/ '../../node_modules/striptags/src/striptags.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/striptags/src/striptags.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          var __WEBPACK_AMD_DEFINE_RESULT__

          ;(function(global) {
            // minimal symbol polyfill for IE11 and others
            if (typeof Symbol !== 'function') {
              var Symbol = function(name) {
                return name
              }

              Symbol.nonNative = true
            }

            const STATE_PLAINTEXT = Symbol('plaintext')
            const STATE_HTML = Symbol('html')
            const STATE_COMMENT = Symbol('comment')

            const ALLOWED_TAGS_REGEX = /<(\w*)>/g
            const NORMALIZE_TAG_REGEX = /<\/?([^\s\/>]+)/

            function striptags(html, allowable_tags, tag_replacement) {
              html = html || ''
              allowable_tags = allowable_tags || []
              tag_replacement = tag_replacement || ''

              let context = init_context(allowable_tags, tag_replacement)

              return striptags_internal(html, context)
            }

            function init_striptags_stream(allowable_tags, tag_replacement) {
              allowable_tags = allowable_tags || []
              tag_replacement = tag_replacement || ''

              let context = init_context(allowable_tags, tag_replacement)

              return function striptags_stream(html) {
                return striptags_internal(html || '', context)
              }
            }

            striptags.init_streaming_mode = init_striptags_stream

            function init_context(allowable_tags, tag_replacement) {
              allowable_tags = parse_allowable_tags(allowable_tags)

              return {
                allowable_tags: allowable_tags,
                tag_replacement: tag_replacement,

                state: STATE_PLAINTEXT,
                tag_buffer: '',
                depth: 0,
                in_quote_char: ''
              }
            }

            function striptags_internal(html, context) {
              let allowable_tags = context.allowable_tags
              let tag_replacement = context.tag_replacement

              let state = context.state
              let tag_buffer = context.tag_buffer
              let depth = context.depth
              let in_quote_char = context.in_quote_char
              let output = ''

              for (let idx = 0, length = html.length; idx < length; idx++) {
                let char = html[idx]

                if (state === STATE_PLAINTEXT) {
                  switch (char) {
                    case '<':
                      state = STATE_HTML
                      tag_buffer += char
                      break

                    default:
                      output += char
                      break
                  }
                } else if (state === STATE_HTML) {
                  switch (char) {
                    case '<':
                      // ignore '<' if inside a quote
                      if (in_quote_char) {
                        break
                      }

                      // we're seeing a nested '<'
                      depth++
                      break

                    case '>':
                      // ignore '>' if inside a quote
                      if (in_quote_char) {
                        break
                      }

                      // something like this is happening: '<<>>'
                      if (depth) {
                        depth--

                        break
                      }

                      // this is closing the tag in tag_buffer
                      in_quote_char = ''
                      state = STATE_PLAINTEXT
                      tag_buffer += '>'

                      if (allowable_tags.has(normalize_tag(tag_buffer))) {
                        output += tag_buffer
                      } else {
                        output += tag_replacement
                      }

                      tag_buffer = ''
                      break

                    case '"':
                    case "'":
                      // catch both single and double quotes

                      if (char === in_quote_char) {
                        in_quote_char = ''
                      } else {
                        in_quote_char = in_quote_char || char
                      }

                      tag_buffer += char
                      break

                    case '-':
                      if (tag_buffer === '<!-') {
                        state = STATE_COMMENT
                      }

                      tag_buffer += char
                      break

                    case ' ':
                    case '\n':
                      if (tag_buffer === '<') {
                        state = STATE_PLAINTEXT
                        output += '< '
                        tag_buffer = ''

                        break
                      }

                      tag_buffer += char
                      break

                    default:
                      tag_buffer += char
                      break
                  }
                } else if (state === STATE_COMMENT) {
                  switch (char) {
                    case '>':
                      if (tag_buffer.slice(-2) == '--') {
                        // close the comment
                        state = STATE_PLAINTEXT
                      }

                      tag_buffer = ''
                      break

                    default:
                      tag_buffer += char
                      break
                  }
                }
              }

              // save the context for future iterations
              context.state = state
              context.tag_buffer = tag_buffer
              context.depth = depth
              context.in_quote_char = in_quote_char

              return output
            }

            function parse_allowable_tags(allowable_tags) {
              let tag_set = new Set()

              if (typeof allowable_tags === 'string') {
                let match

                while ((match = ALLOWED_TAGS_REGEX.exec(allowable_tags))) {
                  tag_set.add(match[1])
                }
              } else if (
                !Symbol.nonNative &&
                typeof allowable_tags[Symbol.iterator] === 'function'
              ) {
                tag_set = new Set(allowable_tags)
              } else if (typeof allowable_tags.forEach === 'function') {
                // IE11 compatible
                allowable_tags.forEach(tag_set.add, tag_set)
              }

              return tag_set
            }

            function normalize_tag(tag_buffer) {
              let match = NORMALIZE_TAG_REGEX.exec(tag_buffer)

              return match ? match[1].toLowerCase() : null
            }

            if (true) {
              // AMD
              !((__WEBPACK_AMD_DEFINE_RESULT__ = function module_factory() {
                return striptags
              }.call(exports, __webpack_require__, exports, module)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
            } else {
            }
          })(this)

          /***/
        },

      /***/ '../../node_modules/superagent-throttle/dist/index.js':
        /*!****************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent-throttle/dist/index.js ***!
  \****************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var _events = __webpack_require__(/*! events */ 'events')

          var _events2 = _interopRequireDefault(_events)

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj }
          }

          /**
           * ## default options
           */
          let defaults = {
            // start unpaused ?
            active: true,
            // requests per `ratePer` ms
            rate: 40,
            // ms per `rate` requests
            ratePer: 40000,
            // max concurrent requests
            concurrent: 20
          }

          /**
           * ## Throttle
           * The throttle object.
           *
           * @class
           * @param {object} options - key value options
           */
          class Throttle extends _events2.default {
            constructor(options) {
              super()
              // instance properties
              this._options({
                _requestTimes: [0],
                _current: 0,
                _buffer: [],
                _serials: {},
                _timeout: false
              })
              this._options(defaults)
              this._options(options)
            }

            /**
             * ## _options
             * updates options on instance
             *
             * @method
             * @param {Object} options - key value object
             * @returns null
             */
            _options(options) {
              for (let property in options) {
                if (options.hasOwnProperty(property)) {
                  this[property] = options[property]
                }
              }
            }

            /**
             * ## options
             * thin wrapper for _options
             *
             *  * calls `this.cycle()`
             *  * adds alternate syntax
             *
             * alternate syntax:
             * throttle.options('active', true)
             * throttle.options({active: true})
             *
             * @method
             * @param {Object} options - either key value object or keyname
             * @param {Mixed} [value] - value for key
             * @returns null
             */
            options(options, value) {
              if (typeof options === 'string' && value) {
                options = { options: value }
              }
              this._options(options)
              this.cycle()
            }

            /**
             * ## next
             * checks whether instance has available capacity and calls throttle.send()
             *
             * @returns {Boolean}
             */
            next() {
              let throttle = this
              // make requestTimes `throttle.rate` long. Oldest request will be 0th index
              throttle._requestTimes = throttle._requestTimes.slice(
                throttle.rate * -1
              )

              if (
                // paused
                !throttle.active ||
                // at concurrency limit
                throttle._current >= throttle.concurrent ||
                // less than `ratePer`
                throttle._isRateBound() ||
                // something waiting in the throttle
                !throttle._buffer.length
              ) {
                return false
              }
              let idx = throttle._buffer.findIndex(request => {
                return !request.serial || !throttle._serials[request.serial]
              })
              if (idx === -1) {
                throttle._isSerialBound = true
                return false
              }
              throttle.send(throttle._buffer.splice(idx, 1)[0])
              return true
            }

            /**
             * ## serial
             * updates throttle.\_serials and throttle.\_isRateBound
             *
             * serial subthrottles allow some requests to be serialised, whilst maintaining
             * their place in the queue. The _serials structure keeps track of what serial
             * queues are waiting for a response.
             *
             * ```
             * throttle._serials = {
             *   'example.com/end/point': true,
             *   'example.com/another': false
             * }
             * ```
             *
             * @param {Request} request superagent request
             * @param {Boolean} state new state for serial
             */
            serial(request, state) {
              let serials = this._serials
              let throttle = this
              if (request.serial === false) {
                return
              }
              if (state === undefined) {
                return serials[request.serial]
              }
              if (state === false) {
                throttle._isSerialBound = false
              }
              serials[request.serial] = state
            }

            /**
             * ## _isRateBound
             * returns true if throttle is bound by rate
             *
             * @returns {Boolean}
             */
            _isRateBound() {
              let throttle = this
              return (
                Date.now() - throttle._requestTimes[0] < throttle.ratePer &&
                throttle._buffer.length > 0
              )
            }

            /**
             * ## cycle
             * an iterator of sorts. Should be called when
             *
             *  - something added to throttle (check if it can be sent immediately)
             *  - `ratePer` ms have elapsed since nth last call where n is `rate` (may have
             *    available rate)
             *  - some request has ended (may have available concurrency)
             *
             * @param {Request} request the superagent request
             * @returns null
             */
            cycle(request) {
              let throttle = this
              if (request) {
                throttle._buffer.push(request)
              }
              clearTimeout(throttle._timeout)

              // fire requests
              // throttle.next will return false if there's no capacity or throttle is
              // drained
              while (throttle.next()) {}

              // if bound by rate, set timeout to reassess later.
              if (throttle._isRateBound()) {
                let timeout
                // defined rate
                timeout = throttle.ratePer
                // less ms elapsed since oldest request
                timeout -= Date.now() - throttle._requestTimes[0]
                // plus 1 ms to ensure you don't fire a request exactly ratePer ms later
                timeout += 1
                throttle._timeout = setTimeout(function() {
                  throttle.cycle()
                }, timeout)
              }
            }

            /**
             * ## send
             *
             * sends a queued request.
             *
             * @param {Request} request superagent request
             * @returns null
             */
            send(request) {
              let throttle = this
              throttle.serial(request, true)

              // declare callback within this enclosure, for access to throttle & request
              function cleanup(err, response) {
                throttle._current -= 1
                if (err && _events2.default.listenerCount(throttle, 'error')) {
                  throttle.emit('error', response)
                }
                throttle.emit('received', request)

                if (!throttle._buffer.length && !throttle._current) {
                  throttle.emit('drained')
                }
                throttle.serial(request, false)
                throttle.cycle()
                // original `callback` was stored at `request._maskedCallback`
                request._maskedCallback(err, response)
              }

              // original `request.end` was stored at `request._maskedEnd`
              request._maskedEnd(cleanup)
              throttle._requestTimes.push(Date.now())
              throttle._current += 1
              this.emit('sent', request)
            }

            /**
             * ## plugin
             *
             * `superagent` `use` function should refer to this plugin method a la
             * `.use(throttle.plugin())`
             *
             * mask the original `.end` and store the callback passed in
             *
             * @method
             * @param {string} serial any string is ok, it's just a namespace
             * @returns null
             */
            plugin(serial) {
              let throttle = this
              // let patch = function(request) {
              return request => {
                request.throttle = throttle
                request.serial = serial || false
                // replace request.end
                request._maskedEnd = request.end
                request.end = function(callback) {
                  // store callback as superagent does
                  request._maskedCallback = callback || function() {}
                  // place this request in the queue
                  request.throttle.cycle(request)
                  return request
                }
                return request
              }
            }
          }

          module.exports = Throttle

          /***/
        },

      /***/ '../../node_modules/superagent/lib/agent-base.js':
        /*!***********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/agent-base.js ***!
  \***********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          function Agent() {
            this._defaults = []
          }

          ;[
            'use',
            'on',
            'once',
            'set',
            'query',
            'type',
            'accept',
            'auth',
            'withCredentials',
            'sortQuery',
            'retry',
            'ok',
            'redirects',
            'timeout',
            'buffer',
            'serialize',
            'parse',
            'ca',
            'key',
            'pfx',
            'cert'
          ].forEach(function(fn) {
            /** Default setting for all requests from this agent */
            Agent.prototype[fn] = function(/*varargs*/) {
              this._defaults.push({ fn: fn, arguments: arguments })
              return this
            }
          })

          Agent.prototype._setDefaults = function(req) {
            this._defaults.forEach(function(def) {
              req[def.fn].apply(req, def.arguments)
            })
          }

          module.exports = Agent

          /***/
        },

      /***/ '../../node_modules/superagent/lib/is-object.js':
        /*!**********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/is-object.js ***!
  \**********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Check if `obj` is an object.
           *
           * @param {Object} obj
           * @return {Boolean}
           * @api private
           */

          function isObject(obj) {
            return null !== obj && 'object' === typeof obj
          }

          module.exports = isObject

          /***/
        },

      /***/ '../../node_modules/superagent/lib/node/agent.js':
        /*!***********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/node/agent.js ***!
  \***********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Module dependencies.
           */

          const CookieJar = __webpack_require__(
            /*! cookiejar */ '../../node_modules/cookiejar/cookiejar.js'
          ).CookieJar
          const CookieAccess = __webpack_require__(
            /*! cookiejar */ '../../node_modules/cookiejar/cookiejar.js'
          ).CookieAccessInfo
          const parse = __webpack_require__(/*! url */ 'url').parse
          const request = __webpack_require__(
            /*! ../.. */ '../../node_modules/superagent/lib/node/index.js'
          )
          const AgentBase = __webpack_require__(
            /*! ../agent-base */ '../../node_modules/superagent/lib/agent-base.js'
          )
          let methods = __webpack_require__(
            /*! methods */ '../../node_modules/methods/index.js'
          )

          /**
           * Expose `Agent`.
           */

          module.exports = Agent

          /**
           * Initialize a new `Agent`.
           *
           * @api public
           */

          function Agent(options) {
            if (!(this instanceof Agent)) {
              return new Agent(options)
            }
            AgentBase.call(this)
            this.jar = new CookieJar()

            if (options) {
              if (options.ca) {
                this.ca(options.ca)
              }
              if (options.key) {
                this.key(options.key)
              }
              if (options.pfx) {
                this.pfx(options.pfx)
              }
              if (options.cert) {
                this.cert(options.cert)
              }
            }
          }

          Agent.prototype = Object.create(AgentBase.prototype)

          /**
           * Save the cookies in the given `res` to
           * the agent's cookie jar for persistence.
           *
           * @param {Response} res
           * @api private
           */

          Agent.prototype._saveCookies = function(res) {
            const cookies = res.headers['set-cookie']
            if (cookies) this.jar.setCookies(cookies)
          }

          /**
           * Attach cookies when available to the given `req`.
           *
           * @param {Request} req
           * @api private
           */

          Agent.prototype._attachCookies = function(req) {
            const url = parse(req.url)
            const access = CookieAccess(
              url.hostname,
              url.pathname,
              'https:' == url.protocol
            )
            const cookies = this.jar.getCookies(access).toValueString()
            req.cookies = cookies
          }

          methods.forEach(name => {
            const method = name.toUpperCase()
            Agent.prototype[name] = function(url, fn) {
              const req = new request.Request(method, url)

              req.on('response', this._saveCookies.bind(this))
              req.on('redirect', this._saveCookies.bind(this))
              req.on('redirect', this._attachCookies.bind(this, req))
              this._attachCookies(req)
              this._setDefaults(req)

              if (fn) {
                req.end(fn)
              }
              return req
            }
          })

          Agent.prototype.del = Agent.prototype['delete']

          /***/
        },

      /***/ '../../node_modules/superagent/lib/node/index.js':
        /*!***********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/node/index.js ***!
  \***********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Module dependencies.
           */

          const debug = __webpack_require__(
            /*! debug */ '../../node_modules/superagent/node_modules/debug/src/index.js'
          )('superagent')
          const formidable = __webpack_require__(
            /*! formidable */ '../../node_modules/formidable/lib/index.js'
          )
          const FormData = __webpack_require__(
            /*! form-data */ '../../node_modules/form-data/lib/form_data.js'
          )
          const Response = __webpack_require__(
            /*! ./response */ '../../node_modules/superagent/lib/node/response.js'
          )
          const parse = __webpack_require__(/*! url */ 'url').parse
          const format = __webpack_require__(/*! url */ 'url').format
          const resolve = __webpack_require__(/*! url */ 'url').resolve
          let methods = __webpack_require__(
            /*! methods */ '../../node_modules/methods/index.js'
          )
          const Stream = __webpack_require__(/*! stream */ 'stream')
          const utils = __webpack_require__(
            /*! ../utils */ '../../node_modules/superagent/lib/utils.js'
          )
          const unzip = __webpack_require__(
            /*! ./unzip */ '../../node_modules/superagent/lib/node/unzip.js'
          ).unzip
          const extend = __webpack_require__(
            /*! extend */ '../../node_modules/extend/index.js'
          )
          const mime = __webpack_require__(
            /*! mime */ '../../node_modules/superagent/node_modules/mime/mime.js'
          )
          const https = __webpack_require__(/*! https */ 'https')
          const http = __webpack_require__(/*! http */ 'http')
          const fs = __webpack_require__(/*! fs */ 'fs')
          const qs = __webpack_require__(
            /*! qs */ '../../node_modules/qs/lib/index.js'
          )
          const zlib = __webpack_require__(/*! zlib */ 'zlib')
          const util = __webpack_require__(/*! util */ 'util')
          const pkg = __webpack_require__(
            /*! ../../package.json */ '../../node_modules/superagent/package.json'
          )
          const RequestBase = __webpack_require__(
            /*! ../request-base */ '../../node_modules/superagent/lib/request-base.js'
          )
          const CookieJar = __webpack_require__(
            /*! cookiejar */ '../../node_modules/cookiejar/cookiejar.js'
          )

          function request(method, url) {
            // callback
            if ('function' == typeof url) {
              return new exports.Request('GET', method).end(url)
            }

            // url first
            if (1 == arguments.length) {
              return new exports.Request('GET', method)
            }

            return new exports.Request(method, url)
          }
          exports = module.exports = request

          /**
           * Expose `Request`.
           */

          exports.Request = Request

          /**
           * Expose the agent function
           */

          exports.agent = __webpack_require__(
            /*! ./agent */ '../../node_modules/superagent/lib/node/agent.js'
          )

          /**
           * Noop.
           */

          function noop() {}

          /**
           * Expose `Response`.
           */

          exports.Response = Response

          /**
           * Define "form" mime type.
           */

          mime.define(
            {
              'application/x-www-form-urlencoded': [
                'form',
                'urlencoded',
                'form-data'
              ]
            },
            true
          )

          /**
           * Protocol map.
           */

          exports.protocols = {
            'http:': http,
            'https:': https
          }

          /**
           * Default serialization map.
           *
           *     superagent.serialize['application/xml'] = function(obj){
           *       return 'generated xml here';
           *     };
           *
           */

          exports.serialize = {
            'application/x-www-form-urlencoded': qs.stringify,
            'application/json': JSON.stringify
          }

          /**
           * Default parsers.
           *
           *     superagent.parse['application/xml'] = function(res, fn){
           *       fn(null, res);
           *     };
           *
           */

          exports.parse = __webpack_require__(
            /*! ./parsers */ '../../node_modules/superagent/lib/node/parsers/index.js'
          )

          /**
           * Initialize internal header tracking properties on a request instance.
           *
           * @param {Object} req the instance
           * @api private
           */
          function _initHeaders(req) {
            const ua = `node-superagent/${pkg.version}`
            req._header = {
              // coerces header names to lowercase
              'user-agent': ua
            }
            req.header = {
              // preserves header name case
              'User-Agent': ua
            }
          }

          /**
           * Initialize a new `Request` with the given `method` and `url`.
           *
           * @param {String} method
           * @param {String|Object} url
           * @api public
           */

          function Request(method, url) {
            Stream.call(this)
            if ('string' != typeof url) url = format(url)
            this._agent = false
            this._formData = null
            this.method = method
            this.url = url
            _initHeaders(this)
            this.writable = true
            this._redirects = 0
            this.redirects(method === 'HEAD' ? 0 : 5)
            this.cookies = ''
            this.qs = {}
            this._query = []
            this.qsRaw = this._query // Unused, for backwards compatibility only
            this._redirectList = []
            this._streamRequest = false
            this.once('end', this.clearTimeout.bind(this))
          }

          /**
           * Inherit from `Stream` (which inherits from `EventEmitter`).
           * Mixin `RequestBase`.
           */
          util.inherits(Request, Stream)
          RequestBase(Request.prototype)

          /**
           * Queue the given `file` as an attachment to the specified `field`,
           * with optional `options` (or filename).
           *
           * ``` js
           * request.post('http://localhost/upload')
           *   .attach('field', Buffer.from('<b>Hello world</b>'), 'hello.html')
           *   .end(callback);
           * ```
           *
           * A filename may also be used:
           *
           * ``` js
           * request.post('http://localhost/upload')
           *   .attach('files', 'image.jpg')
           *   .end(callback);
           * ```
           *
           * @param {String} field
           * @param {String|fs.ReadStream|Buffer} file
           * @param {String|Object} options
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.attach = function(field, file, options) {
            if (file) {
              if (this._data) {
                throw Error("superagent can't mix .send() and .attach()")
              }

              let o = options || {}
              if ('string' == typeof options) {
                o = { filename: options }
              }

              if ('string' == typeof file) {
                if (!o.filename) o.filename = file
                debug('creating `fs.ReadStream` instance for file: %s', file)
                file = fs.createReadStream(file)
              } else if (!o.filename && file.path) {
                o.filename = file.path
              }

              this._getFormData().append(field, file, o)
            }
            return this
          }

          Request.prototype._getFormData = function() {
            if (!this._formData) {
              this._formData = new FormData()
              this._formData.on('error', err => {
                this.emit('error', err)
                this.abort()
              })
            }
            return this._formData
          }

          /**
           * Gets/sets the `Agent` to use for this HTTP request. The default (if this
           * function is not called) is to opt out of connection pooling (`agent: false`).
           *
           * @param {http.Agent} agent
           * @return {http.Agent}
           * @api public
           */

          Request.prototype.agent = function(agent) {
            if (!arguments.length) return this._agent
            this._agent = agent
            return this
          }

          /**
           * Set _Content-Type_ response header passed through `mime.lookup()`.
           *
           * Examples:
           *
           *      request.post('/')
           *        .type('xml')
           *        .send(xmlstring)
           *        .end(callback);
           *
           *      request.post('/')
           *        .type('json')
           *        .send(jsonstring)
           *        .end(callback);
           *
           *      request.post('/')
           *        .type('application/json')
           *        .send(jsonstring)
           *        .end(callback);
           *
           * @param {String} type
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.type = function(type) {
            return this.set(
              'Content-Type',
              ~type.indexOf('/') ? type : mime.lookup(type)
            )
          }

          /**
           * Set _Accept_ response header passed through `mime.lookup()`.
           *
           * Examples:
           *
           *      superagent.types.json = 'application/json';
           *
           *      request.get('/agent')
           *        .accept('json')
           *        .end(callback);
           *
           *      request.get('/agent')
           *        .accept('application/json')
           *        .end(callback);
           *
           * @param {String} accept
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.accept = function(type) {
            return this.set(
              'Accept',
              ~type.indexOf('/') ? type : mime.lookup(type)
            )
          }

          /**
           * Add query-string `val`.
           *
           * Examples:
           *
           *   request.get('/shoes')
           *     .query('size=10')
           *     .query({ color: 'blue' })
           *
           * @param {Object|String} val
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.query = function(val) {
            if ('string' == typeof val) {
              this._query.push(val)
            } else {
              extend(this.qs, val)
            }
            return this
          }

          /**
           * Write raw `data` / `encoding` to the socket.
           *
           * @param {Buffer|String} data
           * @param {String} encoding
           * @return {Boolean}
           * @api public
           */

          Request.prototype.write = function(data, encoding) {
            const req = this.request()
            if (!this._streamRequest) {
              this._streamRequest = true
            }
            return req.write(data, encoding)
          }

          /**
           * Pipe the request body to `stream`.
           *
           * @param {Stream} stream
           * @param {Object} options
           * @return {Stream}
           * @api public
           */

          Request.prototype.pipe = function(stream, options) {
            this.piped = true // HACK...
            this.buffer(false)
            this.end()
            return this._pipeContinue(stream, options)
          }

          Request.prototype._pipeContinue = function(stream, options) {
            this.req.once('response', res => {
              // redirect
              const redirect = isRedirect(res.statusCode)
              if (redirect && this._redirects++ != this._maxRedirects) {
                return this._redirect(res)._pipeContinue(stream, options)
              }

              this.res = res
              this._emitResponse()
              if (this._aborted) return

              if (this._shouldUnzip(res)) {
                const unzipObj = zlib.createUnzip()
                unzipObj.on('error', err => {
                  if (err && err.code === 'Z_BUF_ERROR') {
                    // unexpected end of file is ignored by browsers and curl
                    stream.emit('end')
                    return
                  }
                  stream.emit('error', err)
                })
                res.pipe(unzipObj).pipe(
                  stream,
                  options
                )
              } else {
                res.pipe(
                  stream,
                  options
                )
              }
              res.once('end', () => {
                this.emit('end')
              })
            })
            return stream
          }

          /**
           * Enable / disable buffering.
           *
           * @return {Boolean} [val]
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.buffer = function(val) {
            this._buffer = false !== val
            return this
          }

          /**
           * Redirect to `url
           *
           * @param {IncomingMessage} res
           * @return {Request} for chaining
           * @api private
           */

          Request.prototype._redirect = function(res) {
            let url = res.headers.location
            if (!url) {
              return this.callback(
                new Error('No location header for redirect'),
                res
              )
            }

            debug('redirect %s -> %s', this.url, url)

            // location
            url = resolve(this.url, url)

            // ensure the response is being consumed
            // this is required for Node v0.10+
            res.resume()

            let headers = this.req._headers

            const changesOrigin = parse(url).host !== parse(this.url).host

            // implementation of 302 following defacto standard
            if (res.statusCode == 301 || res.statusCode == 302) {
              // strip Content-* related fields
              // in case of POST etc
              headers = utils.cleanHeader(this.req._headers, changesOrigin)

              // force GET
              this.method = 'HEAD' == this.method ? 'HEAD' : 'GET'

              // clear data
              this._data = null
            }
            // 303 is always GET
            if (res.statusCode == 303) {
              // strip Content-* related fields
              // in case of POST etc
              headers = utils.cleanHeader(this.req._headers, changesOrigin)

              // force method
              this.method = 'GET'

              // clear data
              this._data = null
            }
            // 307 preserves method
            // 308 preserves method
            delete headers.host

            delete this.req
            delete this._formData

            // remove all add header except User-Agent
            _initHeaders(this)

            // redirect
            this._endCalled = false
            this.url = url
            this.qs = {}
            this._query.length = 0
            this.set(headers)
            this.emit('redirect', res)
            this._redirectList.push(this.url)
            this.end(this._callback)
            return this
          }

          /**
           * Set Authorization field value with `user` and `pass`.
           *
           * Examples:
           *
           *   .auth('tobi', 'learnboost')
           *   .auth('tobi:learnboost')
           *   .auth('tobi')
           *   .auth(accessToken, { type: 'bearer' })
           *
           * @param {String} user
           * @param {String} [pass]
           * @param {Object} [options] options with authorization type 'basic' or 'bearer' ('basic' is default)
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.auth = function(user, pass, options) {
            if (1 === arguments.length) pass = ''
            if (typeof pass === 'object' && pass !== null) {
              // pass is optional and can be replaced with options
              options = pass
              pass = ''
            }
            if (!options) {
              options = { type: 'basic' }
            }

            var encoder = function(string) {
              return new Buffer(string).toString('base64')
            }

            return this._auth(user, pass, options, encoder)
          }

          /**
           * Set the certificate authority option for https request.
           *
           * @param {Buffer | Array} cert
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.ca = function(cert) {
            this._ca = cert
            return this
          }

          /**
           * Set the client certificate key option for https request.
           *
           * @param {Buffer | String} cert
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.key = function(cert) {
            this._key = cert
            return this
          }

          /**
           * Set the key, certificate, and CA certs of the client in PFX or PKCS12 format.
           *
           * @param {Buffer | String} cert
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.pfx = function(cert) {
            if (typeof cert === 'object' && !Buffer.isBuffer(cert)) {
              this._pfx = cert.pfx
              this._passphrase = cert.passphrase
            } else {
              this._pfx = cert
            }
            return this
          }

          /**
           * Set the client certificate option for https request.
           *
           * @param {Buffer | String} cert
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype.cert = function(cert) {
            this._cert = cert
            return this
          }

          /**
           * Return an http[s] request.
           *
           * @return {OutgoingMessage}
           * @api private
           */

          Request.prototype.request = function() {
            if (this.req) return this.req

            const options = {}

            try {
              const query = qs.stringify(this.qs, {
                indices: false,
                strictNullHandling: true
              })
              if (query) {
                this.qs = {}
                this._query.push(query)
              }
              this._finalizeQueryString()
            } catch (e) {
              return this.emit('error', e)
            }

            let url = this.url
            const retries = this._retries

            // default to http://
            if (0 != url.indexOf('http')) url = `http://${url}`
            url = parse(url)

            // support unix sockets
            if (/^https?\+unix:/.test(url.protocol) === true) {
              // get the protocol
              url.protocol = `${url.protocol.split('+')[0]}:`

              // get the socket, path
              const unixParts = url.path.match(/^([^/]+)(.+)$/)
              options.socketPath = unixParts[1].replace(/%2F/g, '/')
              url.path = unixParts[2]
            }

            // options
            options.method = this.method
            options.port = url.port
            options.path = url.path
            options.host = url.hostname
            options.ca = this._ca
            options.key = this._key
            options.pfx = this._pfx
            options.cert = this._cert
            options.passphrase = this._passphrase
            options.agent = this._agent

            // initiate request
            const mod = exports.protocols[url.protocol]

            // request
            const req = (this.req = mod.request(options))

            // set tcp no delay
            req.setNoDelay(true)

            if ('HEAD' != options.method) {
              req.setHeader('Accept-Encoding', 'gzip, deflate')
            }
            this.protocol = url.protocol
            this.host = url.host

            // expose events
            req.once('drain', () => {
              this.emit('drain')
            })

            req.once('error', err => {
              // flag abortion here for out timeouts
              // because node will emit a faux-error "socket hang up"
              // when request is aborted before a connection is made
              if (this._aborted) return
              // if not the same, we are in the **old** (cancelled) request,
              // so need to continue (same as for above)
              if (this._retries !== retries) return
              // if we've received a response then we don't want to let
              // an error in the request blow up the response
              if (this.response) return
              this.callback(err)
            })

            // auth
            if (url.auth) {
              const auth = url.auth.split(':')
              this.auth(auth[0], auth[1])
            }
            if (this.username && this.password) {
              this.auth(this.username, this.password)
            }
            for (const key in this.header) {
              if (this.header.hasOwnProperty(key))
                req.setHeader(key, this.header[key])
            }

            // add cookies
            if (this.cookies) {
              if (this.header.hasOwnProperty('cookie')) {
                // merge
                const tmpJar = new CookieJar.CookieJar()
                tmpJar.setCookies(this.header.cookie.split(';'))
                tmpJar.setCookies(this.cookies.split(';'))
                req.setHeader(
                  'Cookie',
                  tmpJar
                    .getCookies(CookieJar.CookieAccessInfo.All)
                    .toValueString()
                )
              } else {
                req.setHeader('Cookie', this.cookies)
              }
            }

            return req
          }

          /**
           * Invoke the callback with `err` and `res`
           * and handle arity check.
           *
           * @param {Error} err
           * @param {Response} res
           * @api private
           */

          Request.prototype.callback = function(err, res) {
            if (this._shouldRetry(err, res)) {
              return this._retry()
            }

            // Avoid the error which is emitted from 'socket hang up' to cause the fn undefined error on JS runtime.
            const fn = this._callback || noop
            this.clearTimeout()
            if (this.called)
              return console.warn('superagent: double callback bug')
            this.called = true

            if (!err) {
              try {
                if (!this._isResponseOK(res)) {
                  let msg = 'Unsuccessful HTTP response'
                  if (res) {
                    msg = http.STATUS_CODES[res.status] || msg
                  }
                  err = new Error(msg)
                  err.status = res ? res.status : undefined
                }
              } catch (new_err) {
                err = new_err
              }
            }
            // It's important that the callback is called outside try/catch
            // to avoid double callback
            if (!err) {
              return fn(null, res)
            }

            err.response = res
            if (this._maxRetries) err.retries = this._retries - 1

            // only emit error event if there is a listener
            // otherwise we assume the callback to `.end()` will get the error
            if (err && this.listeners('error').length > 0) {
              this.emit('error', err)
            }

            fn(err, res)
          }

          /**
           * Check if `obj` is a host object,
           *
           * @param {Object} obj
           * @return {Boolean}
           * @api private
           */
          Request.prototype._isHost = function _isHost(obj) {
            return (
              Buffer.isBuffer(obj) ||
              obj instanceof Stream ||
              obj instanceof FormData
            )
          }

          /**
           * Initiate request, invoking callback `fn(err, res)`
           * with an instanceof `Response`.
           *
           * @param {Function} fn
           * @return {Request} for chaining
           * @api public
           */

          Request.prototype._emitResponse = function(body, files) {
            const response = new Response(this)
            this.response = response
            response.redirects = this._redirectList
            if (undefined !== body) {
              response.body = body
            }
            response.files = files
            this.emit('response', response)
            return response
          }

          Request.prototype.end = function(fn) {
            this.request()
            debug('%s %s', this.method, this.url)

            if (this._endCalled) {
              console.warn(
                'Warning: .end() was called twice. This is not supported in superagent'
              )
            }
            this._endCalled = true

            // store callback
            this._callback = fn || noop

            return this._end()
          }

          Request.prototype._end = function() {
            let data = this._data
            const req = this.req
            let buffer = this._buffer
            const method = this.method

            this._setTimeouts()

            // body
            if ('HEAD' != method && !req._headerSent) {
              // serialize stuff
              if ('string' != typeof data) {
                let contentType = req.getHeader('Content-Type')
                // Parse out just the content type from the header (ignore the charset)
                if (contentType) contentType = contentType.split(';')[0]
                let serialize = exports.serialize[contentType]
                if (!serialize && isJSON(contentType)) {
                  serialize = exports.serialize['application/json']
                }
                if (serialize) data = serialize(data)
              }

              // content-length
              if (data && !req.getHeader('Content-Length')) {
                req.setHeader(
                  'Content-Length',
                  Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)
                )
              }
            }

            // response
            req.once('response', res => {
              debug('%s %s -> %s', this.method, this.url, res.statusCode)

              if (this._responseTimeoutTimer) {
                clearTimeout(this._responseTimeoutTimer)
              }

              if (this.piped) {
                return
              }

              const max = this._maxRedirects
              const mime =
                utils.type(res.headers['content-type'] || '') || 'text/plain'
              const type = mime.split('/')[0]
              const multipart = 'multipart' == type
              const redirect = isRedirect(res.statusCode)
              let parser = this._parser
              const responseType = this._responseType

              this.res = res

              // redirect
              if (redirect && this._redirects++ != max) {
                return this._redirect(res)
              }

              if ('HEAD' == this.method) {
                this.emit('end')
                this.callback(null, this._emitResponse())
                return
              }

              // zlib support
              if (this._shouldUnzip(res)) {
                unzip(req, res)
              }

              if (!parser) {
                if (responseType) {
                  parser = exports.parse.image // It's actually a generic Buffer
                  buffer = true
                } else if (multipart) {
                  const form = new formidable.IncomingForm()
                  parser = form.parse.bind(form)
                  buffer = true
                } else if (isImageOrVideo(mime)) {
                  parser = exports.parse.image
                  buffer = true // For backwards-compatibility buffering default is ad-hoc MIME-dependent
                } else if (exports.parse[mime]) {
                  parser = exports.parse[mime]
                } else if ('text' == type) {
                  parser = exports.parse.text
                  buffer = buffer !== false

                  // everyone wants their own white-labeled json
                } else if (isJSON(mime)) {
                  parser = exports.parse['application/json']
                  buffer = buffer !== false
                } else if (buffer) {
                  parser = exports.parse.text
                }
              }

              // by default only buffer text/*, json and messed up thing from hell
              if ((undefined === buffer && isText(mime)) || isJSON(mime)) {
                buffer = true
              }

              let parserHandlesEnd = false
              if (buffer) {
                // Protectiona against zip bombs and other nuisance
                let responseBytesLeft = this._maxResponseSize || 200000000
                res.on('data', buf => {
                  responseBytesLeft -= buf.byteLength || buf.length
                  if (responseBytesLeft < 0) {
                    // This will propagate through error event
                    const err = Error('Maximum response size reached')
                    err.code = 'ETOOLARGE'
                    // Parsers aren't required to observe error event,
                    // so would incorrectly report success
                    parserHandlesEnd = false
                    // Will emit error event
                    res.destroy(err)
                  }
                })
              }

              if (parser) {
                try {
                  // Unbuffered parsers are supposed to emit response early,
                  // which is weird BTW, because response.body won't be there.
                  parserHandlesEnd = buffer

                  parser(res, (err, obj, files) => {
                    if (this.timedout) {
                      // Timeout has already handled all callbacks
                      return
                    }

                    // Intentional (non-timeout) abort is supposed to preserve partial response,
                    // even if it doesn't parse.
                    if (err && !this._aborted) {
                      return this.callback(err)
                    }

                    if (parserHandlesEnd) {
                      this.emit('end')
                      this.callback(null, this._emitResponse(obj, files))
                    }
                  })
                } catch (err) {
                  this.callback(err)
                  return
                }
              }

              this.res = res

              // unbuffered
              if (!buffer) {
                debug('unbuffered %s %s', this.method, this.url)
                this.callback(null, this._emitResponse())
                if (multipart) return // allow multipart to handle end event
                res.once('end', () => {
                  debug('end %s %s', this.method, this.url)
                  this.emit('end')
                })
                return
              }

              // terminating events
              res.once('error', err => {
                parserHandlesEnd = false
                this.callback(err, null)
              })
              if (!parserHandlesEnd)
                res.once('end', () => {
                  debug('end %s %s', this.method, this.url)
                  // TODO: unless buffering emit earlier to stream
                  this.emit('end')
                  this.callback(null, this._emitResponse())
                })
            })

            this.emit('request', this)

            const getProgressMonitor = () => {
              const lengthComputable = true
              const total = req.getHeader('Content-Length')
              let loaded = 0

              const progress = new Stream.Transform()
              progress._transform = (chunk, encoding, cb) => {
                loaded += chunk.length
                this.emit('progress', {
                  direction: 'upload',
                  lengthComputable,
                  loaded,
                  total
                })
                cb(null, chunk)
              }
              return progress
            }

            const bufferToChunks = buffer => {
              const chunkSize = 16 * 1024 // default highWaterMark value
              const chunking = new Stream.Readable()
              const totalLength = buffer.length
              const remainder = totalLength % chunkSize
              const cutoff = totalLength - remainder

              for (let i = 0; i < cutoff; i += chunkSize) {
                const chunk = buffer.slice(i, i + chunkSize)
                chunking.push(chunk)
              }

              if (remainder > 0) {
                const remainderBuffer = buffer.slice(-remainder)
                chunking.push(remainderBuffer)
              }

              chunking.push(null) // no more data

              return chunking
            }

            // if a FormData instance got created, then we send that as the request body
            const formData = this._formData
            if (formData) {
              // set headers
              const headers = formData.getHeaders()
              for (const i in headers) {
                debug('setting FormData header: "%s: %s"', i, headers[i])
                req.setHeader(i, headers[i])
              }

              // attempt to get "Content-Length" header
              formData.getLength((err, length) => {
                // TODO: Add chunked encoding when no length (if err)

                debug('got FormData Content-Length: %s', length)
                if ('number' == typeof length) {
                  req.setHeader('Content-Length', length)
                }

                formData.pipe(getProgressMonitor()).pipe(req)
              })
            } else if (Buffer.isBuffer(data)) {
              bufferToChunks(data)
                .pipe(getProgressMonitor())
                .pipe(req)
            } else {
              req.end(data)
            }

            return this
          }

          /**
           * Check whether response has a non-0-sized gzip-encoded body
           */
          Request.prototype._shouldUnzip = res => {
            if (res.statusCode === 204 || res.statusCode === 304) {
              // These aren't supposed to have any body
              return false
            }

            // header content is a string, and distinction between 0 and no information is crucial
            if ('0' === res.headers['content-length']) {
              // We know that the body is empty (unfortunately, this check does not cover chunked encoding)
              return false
            }

            // console.log(res);
            return /^\s*(?:deflate|gzip)\s*$/.test(
              res.headers['content-encoding']
            )
          }

          // generate HTTP verb methods
          if (methods.indexOf('del') == -1) {
            // create a copy so we don't cause conflicts with
            // other packages using the methods package and
            // npm 3.x
            methods = methods.slice(0)
            methods.push('del')
          }
          methods.forEach(method => {
            const name = method
            method = 'del' == method ? 'delete' : method

            method = method.toUpperCase()
            request[name] = (url, data, fn) => {
              const req = request(method, url)
              if ('function' == typeof data) (fn = data), (data = null)
              if (data) {
                if (method === 'GET' || method === 'HEAD') {
                  req.query(data)
                } else {
                  req.send(data)
                }
              }
              fn && req.end(fn)
              return req
            }
          })

          /**
           * Check if `mime` is text and should be buffered.
           *
           * @param {String} mime
           * @return {Boolean}
           * @api public
           */

          function isText(mime) {
            const parts = mime.split('/')
            const type = parts[0]
            const subtype = parts[1]

            return 'text' == type || 'x-www-form-urlencoded' == subtype
          }

          function isImageOrVideo(mime) {
            const type = mime.split('/')[0]

            return 'image' == type || 'video' == type
          }

          /**
           * Check if `mime` is json or has +json structured syntax suffix.
           *
           * @param {String} mime
           * @return {Boolean}
           * @api private
           */

          function isJSON(mime) {
            // should match /json or +json
            // but not /json-seq
            return /[\/+]json($|[^-\w])/.test(mime)
          }

          /**
           * Check if we should follow the redirect `code`.
           *
           * @param {Number} code
           * @return {Boolean}
           * @api private
           */

          function isRedirect(code) {
            return ~[301, 302, 303, 305, 307, 308].indexOf(code)
          }

          /***/
        },

      /***/ '../../node_modules/superagent/lib/node/parsers/image.js':
        /*!*******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/node/parsers/image.js ***!
  \*******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          module.exports = (res, fn) => {
            const data = [] // Binary data needs binary storage

            res.on('data', chunk => {
              data.push(chunk)
            })
            res.on('end', () => {
              fn(null, Buffer.concat(data))
            })
          }

          /***/
        },

      /***/ '../../node_modules/superagent/lib/node/parsers/index.js':
        /*!*******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/node/parsers/index.js ***!
  \*******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          exports['application/x-www-form-urlencoded'] = __webpack_require__(
            /*! ./urlencoded */ '../../node_modules/superagent/lib/node/parsers/urlencoded.js'
          )
          exports['application/json'] = __webpack_require__(
            /*! ./json */ '../../node_modules/superagent/lib/node/parsers/json.js'
          )
          exports.text = __webpack_require__(
            /*! ./text */ '../../node_modules/superagent/lib/node/parsers/text.js'
          )

          const binary = __webpack_require__(
            /*! ./image */ '../../node_modules/superagent/lib/node/parsers/image.js'
          )
          exports['application/octet-stream'] = binary
          exports['application/pdf'] = binary
          exports.image = binary

          /***/
        },

      /***/ '../../node_modules/superagent/lib/node/parsers/json.js':
        /*!******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/node/parsers/json.js ***!
  \******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          module.exports = function parseJSON(res, fn) {
            res.text = ''
            res.setEncoding('utf8')
            res.on('data', chunk => {
              res.text += chunk
            })
            res.on('end', () => {
              try {
                var body = res.text && JSON.parse(res.text)
              } catch (e) {
                var err = e
                // issue #675: return the raw response if the response parsing fails
                err.rawResponse = res.text || null
                // issue #876: return the http status code if the response parsing fails
                err.statusCode = res.statusCode
              } finally {
                fn(err, body)
              }
            })
          }

          /***/
        },

      /***/ '../../node_modules/superagent/lib/node/parsers/text.js':
        /*!******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/node/parsers/text.js ***!
  \******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          module.exports = function(res, fn) {
            res.text = ''
            res.setEncoding('utf8')
            res.on('data', chunk => {
              res.text += chunk
            })
            res.on('end', fn)
          }

          /***/
        },

      /***/ '../../node_modules/superagent/lib/node/parsers/urlencoded.js':
        /*!************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/node/parsers/urlencoded.js ***!
  \************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Module dependencies.
           */

          const qs = __webpack_require__(
            /*! qs */ '../../node_modules/qs/lib/index.js'
          )

          module.exports = function(res, fn) {
            res.text = ''
            res.setEncoding('ascii')
            res.on('data', chunk => {
              res.text += chunk
            })
            res.on('end', () => {
              try {
                fn(null, qs.parse(res.text))
              } catch (err) {
                fn(err)
              }
            })
          }

          /***/
        },

      /***/ '../../node_modules/superagent/lib/node/response.js':
        /*!**************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/node/response.js ***!
  \**************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Module dependencies.
           */

          const util = __webpack_require__(/*! util */ 'util')
          const Stream = __webpack_require__(/*! stream */ 'stream')
          const ResponseBase = __webpack_require__(
            /*! ../response-base */ '../../node_modules/superagent/lib/response-base.js'
          )

          /**
           * Expose `Response`.
           */

          module.exports = Response

          /**
           * Initialize a new `Response` with the given `xhr`.
           *
           *  - set flags (.ok, .error, etc)
           *  - parse header
           *
           * @param {Request} req
           * @param {Object} options
           * @constructor
           * @extends {Stream}
           * @implements {ReadableStream}
           * @api private
           */

          function Response(req) {
            Stream.call(this)
            const res = (this.res = req.res)
            this.request = req
            this.req = req.req
            this.text = res.text
            this.body = res.body !== undefined ? res.body : {}
            this.files = res.files || {}
            this.buffered = 'string' == typeof this.text
            this.header = this.headers = res.headers
            this._setStatusProperties(res.statusCode)
            this._setHeaderProperties(this.header)
            this.setEncoding = res.setEncoding.bind(res)
            res.on('data', this.emit.bind(this, 'data'))
            res.on('end', this.emit.bind(this, 'end'))
            res.on('close', this.emit.bind(this, 'close'))
            res.on('error', this.emit.bind(this, 'error'))
          }

          /**
           * Inherit from `Stream`.
           */

          util.inherits(Response, Stream)
          ResponseBase(Response.prototype)

          /**
           * Implements methods of a `ReadableStream`
           */

          Response.prototype.destroy = function(err) {
            this.res.destroy(err)
          }

          /**
           * Pause.
           */

          Response.prototype.pause = function() {
            this.res.pause()
          }

          /**
           * Resume.
           */

          Response.prototype.resume = function() {
            this.res.resume()
          }

          /**
           * Return an `Error` representative of this response.
           *
           * @return {Error}
           * @api public
           */

          Response.prototype.toError = function() {
            const req = this.req
            const method = req.method
            const path = req.path

            const msg = `cannot ${method} ${path} (${this.status})`
            const err = new Error(msg)
            err.status = this.status
            err.text = this.text
            err.method = method
            err.path = path

            return err
          }

          Response.prototype.setStatusProperties = function(status) {
            console.warn(
              'In superagent 2.x setStatusProperties is a private method'
            )
            return this._setStatusProperties(status)
          }

          /**
           * To json.
           *
           * @return {Object}
           * @api public
           */

          Response.prototype.toJSON = function() {
            return {
              req: this.request.toJSON(),
              header: this.header,
              status: this.status,
              text: this.text
            }
          }

          /***/
        },

      /***/ '../../node_modules/superagent/lib/node/unzip.js':
        /*!***********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/node/unzip.js ***!
  \***********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Module dependencies.
           */

          const StringDecoder = __webpack_require__(
            /*! string_decoder */ 'string_decoder'
          ).StringDecoder
          const Stream = __webpack_require__(/*! stream */ 'stream')
          const zlib = __webpack_require__(/*! zlib */ 'zlib')

          /**
           * Buffers response data events and re-emits when they're unzipped.
           *
           * @param {Request} req
           * @param {Response} res
           * @api private
           */

          exports.unzip = (req, res) => {
            const unzip = zlib.createUnzip()
            const stream = new Stream()
            let decoder

            // make node responseOnEnd() happy
            stream.req = req

            unzip.on('error', err => {
              if (err && err.code === 'Z_BUF_ERROR') {
                // unexpected end of file is ignored by browsers and curl
                stream.emit('end')
                return
              }
              stream.emit('error', err)
            })

            // pipe to unzip
            res.pipe(unzip)

            // override `setEncoding` to capture encoding
            res.setEncoding = type => {
              decoder = new StringDecoder(type)
            }

            // decode upon decompressing with captured encoding
            unzip.on('data', buf => {
              if (decoder) {
                const str = decoder.write(buf)
                if (str.length) stream.emit('data', str)
              } else {
                stream.emit('data', buf)
              }
            })

            unzip.on('end', () => {
              stream.emit('end')
            })

            // override `on` to capture data listeners
            const _on = res.on
            res.on = function(type, fn) {
              if ('data' == type || 'end' == type) {
                stream.on(type, fn)
              } else if ('error' == type) {
                stream.on(type, fn)
                _on.call(res, type, fn)
              } else {
                _on.call(res, type, fn)
              }
              return this
            }
          }

          /***/
        },

      /***/ '../../node_modules/superagent/lib/request-base.js':
        /*!*************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/request-base.js ***!
  \*************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Module of mixed-in functions shared between node and client code
           */
          var isObject = __webpack_require__(
            /*! ./is-object */ '../../node_modules/superagent/lib/is-object.js'
          )

          /**
           * Expose `RequestBase`.
           */

          module.exports = RequestBase

          /**
           * Initialize a new `RequestBase`.
           *
           * @api public
           */

          function RequestBase(obj) {
            if (obj) return mixin(obj)
          }

          /**
           * Mixin the prototype properties.
           *
           * @param {Object} obj
           * @return {Object}
           * @api private
           */

          function mixin(obj) {
            for (var key in RequestBase.prototype) {
              obj[key] = RequestBase.prototype[key]
            }
            return obj
          }

          /**
           * Clear previous timeout.
           *
           * @return {Request} for chaining
           * @api public
           */

          RequestBase.prototype.clearTimeout = function _clearTimeout() {
            clearTimeout(this._timer)
            clearTimeout(this._responseTimeoutTimer)
            delete this._timer
            delete this._responseTimeoutTimer
            return this
          }

          /**
           * Override default response body parser
           *
           * This function will be called to convert incoming data into request.body
           *
           * @param {Function}
           * @api public
           */

          RequestBase.prototype.parse = function parse(fn) {
            this._parser = fn
            return this
          }

          /**
           * Set format of binary response body.
           * In browser valid formats are 'blob' and 'arraybuffer',
           * which return Blob and ArrayBuffer, respectively.
           *
           * In Node all values result in Buffer.
           *
           * Examples:
           *
           *      req.get('/')
           *        .responseType('blob')
           *        .end(callback);
           *
           * @param {String} val
           * @return {Request} for chaining
           * @api public
           */

          RequestBase.prototype.responseType = function(val) {
            this._responseType = val
            return this
          }

          /**
           * Override default request body serializer
           *
           * This function will be called to convert data set via .send or .attach into payload to send
           *
           * @param {Function}
           * @api public
           */

          RequestBase.prototype.serialize = function serialize(fn) {
            this._serializer = fn
            return this
          }

          /**
           * Set timeouts.
           *
           * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.
           * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.
           *
           * Value of 0 or false means no timeout.
           *
           * @param {Number|Object} ms or {response, deadline}
           * @return {Request} for chaining
           * @api public
           */

          RequestBase.prototype.timeout = function timeout(options) {
            if (!options || 'object' !== typeof options) {
              this._timeout = options
              this._responseTimeout = 0
              return this
            }

            for (var option in options) {
              switch (option) {
                case 'deadline':
                  this._timeout = options.deadline
                  break
                case 'response':
                  this._responseTimeout = options.response
                  break
                default:
                  console.warn('Unknown timeout option', option)
              }
            }
            return this
          }

          /**
           * Set number of retry attempts on error.
           *
           * Failed requests will be retried 'count' times if timeout or err.code >= 500.
           *
           * @param {Number} count
           * @param {Function} [fn]
           * @return {Request} for chaining
           * @api public
           */

          RequestBase.prototype.retry = function retry(count, fn) {
            // Default to 1 if no count passed or true
            if (arguments.length === 0 || count === true) count = 1
            if (count <= 0) count = 0
            this._maxRetries = count
            this._retries = 0
            this._retryCallback = fn
            return this
          }

          var ERROR_CODES = [
            'ECONNRESET',
            'ETIMEDOUT',
            'EADDRINFO',
            'ESOCKETTIMEDOUT'
          ]

          /**
           * Determine if a request should be retried.
           * (Borrowed from segmentio/superagent-retry)
           *
           * @param {Error} err
           * @param {Response} [res]
           * @returns {Boolean}
           */
          RequestBase.prototype._shouldRetry = function(err, res) {
            if (!this._maxRetries || this._retries++ >= this._maxRetries) {
              return false
            }
            if (this._retryCallback) {
              try {
                var override = this._retryCallback(err, res)
                if (override === true) return true
                if (override === false) return false
                // undefined falls back to defaults
              } catch (e) {
                console.error(e)
              }
            }
            if (res && res.status && res.status >= 500 && res.status != 501)
              return true
            if (err) {
              if (err.code && ~ERROR_CODES.indexOf(err.code)) return true
              // Superagent timeout
              if (err.timeout && err.code == 'ECONNABORTED') return true
              if (err.crossDomain) return true
            }
            return false
          }

          /**
           * Retry request
           *
           * @return {Request} for chaining
           * @api private
           */

          RequestBase.prototype._retry = function() {
            this.clearTimeout()

            // node
            if (this.req) {
              this.req = null
              this.req = this.request()
            }

            this._aborted = false
            this.timedout = false

            return this._end()
          }

          /**
           * Promise support
           *
           * @param {Function} resolve
           * @param {Function} [reject]
           * @return {Request}
           */

          RequestBase.prototype.then = function then(resolve, reject) {
            if (!this._fullfilledPromise) {
              var self = this
              if (this._endCalled) {
                console.warn(
                  'Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises'
                )
              }
              this._fullfilledPromise = new Promise(function(
                innerResolve,
                innerReject
              ) {
                self.end(function(err, res) {
                  if (err) innerReject(err)
                  else innerResolve(res)
                })
              })
            }
            return this._fullfilledPromise.then(resolve, reject)
          }

          RequestBase.prototype['catch'] = function(cb) {
            return this.then(undefined, cb)
          }

          /**
           * Allow for extension
           */

          RequestBase.prototype.use = function use(fn) {
            fn(this)
            return this
          }

          RequestBase.prototype.ok = function(cb) {
            if ('function' !== typeof cb) throw Error('Callback required')
            this._okCallback = cb
            return this
          }

          RequestBase.prototype._isResponseOK = function(res) {
            if (!res) {
              return false
            }

            if (this._okCallback) {
              return this._okCallback(res)
            }

            return res.status >= 200 && res.status < 300
          }

          /**
           * Get request header `field`.
           * Case-insensitive.
           *
           * @param {String} field
           * @return {String}
           * @api public
           */

          RequestBase.prototype.get = function(field) {
            return this._header[field.toLowerCase()]
          }

          /**
           * Get case-insensitive header `field` value.
           * This is a deprecated internal API. Use `.get(field)` instead.
           *
           * (getHeader is no longer used internally by the superagent code base)
           *
           * @param {String} field
           * @return {String}
           * @api private
           * @deprecated
           */

          RequestBase.prototype.getHeader = RequestBase.prototype.get

          /**
           * Set header `field` to `val`, or multiple fields with one object.
           * Case-insensitive.
           *
           * Examples:
           *
           *      req.get('/')
           *        .set('Accept', 'application/json')
           *        .set('X-API-Key', 'foobar')
           *        .end(callback);
           *
           *      req.get('/')
           *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })
           *        .end(callback);
           *
           * @param {String|Object} field
           * @param {String} val
           * @return {Request} for chaining
           * @api public
           */

          RequestBase.prototype.set = function(field, val) {
            if (isObject(field)) {
              for (var key in field) {
                this.set(key, field[key])
              }
              return this
            }
            this._header[field.toLowerCase()] = val
            this.header[field] = val
            return this
          }

          /**
           * Remove header `field`.
           * Case-insensitive.
           *
           * Example:
           *
           *      req.get('/')
           *        .unset('User-Agent')
           *        .end(callback);
           *
           * @param {String} field
           */
          RequestBase.prototype.unset = function(field) {
            delete this._header[field.toLowerCase()]
            delete this.header[field]
            return this
          }

          /**
           * Write the field `name` and `val`, or multiple fields with one object
           * for "multipart/form-data" request bodies.
           *
           * ``` js
           * request.post('/upload')
           *   .field('foo', 'bar')
           *   .end(callback);
           *
           * request.post('/upload')
           *   .field({ foo: 'bar', baz: 'qux' })
           *   .end(callback);
           * ```
           *
           * @param {String|Object} name
           * @param {String|Blob|File|Buffer|fs.ReadStream} val
           * @return {Request} for chaining
           * @api public
           */
          RequestBase.prototype.field = function(name, val) {
            // name should be either a string or an object.
            if (null === name || undefined === name) {
              throw new Error('.field(name, val) name can not be empty')
            }

            if (this._data) {
              console.error(
                ".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"
              )
            }

            if (isObject(name)) {
              for (var key in name) {
                this.field(key, name[key])
              }
              return this
            }

            if (Array.isArray(val)) {
              for (var i in val) {
                this.field(name, val[i])
              }
              return this
            }

            // val should be defined now
            if (null === val || undefined === val) {
              throw new Error('.field(name, val) val can not be empty')
            }
            if ('boolean' === typeof val) {
              val = '' + val
            }
            this._getFormData().append(name, val)
            return this
          }

          /**
           * Abort the request, and clear potential timeout.
           *
           * @return {Request}
           * @api public
           */
          RequestBase.prototype.abort = function() {
            if (this._aborted) {
              return this
            }
            this._aborted = true
            this.xhr && this.xhr.abort() // browser
            this.req && this.req.abort() // node
            this.clearTimeout()
            this.emit('abort')
            return this
          }

          RequestBase.prototype._auth = function(
            user,
            pass,
            options,
            base64Encoder
          ) {
            switch (options.type) {
              case 'basic':
                this.set(
                  'Authorization',
                  'Basic ' + base64Encoder(user + ':' + pass)
                )
                break

              case 'auto':
                this.username = user
                this.password = pass
                break

              case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })
                this.set('Authorization', 'Bearer ' + user)
                break
            }
            return this
          }

          /**
           * Enable transmission of cookies with x-domain requests.
           *
           * Note that for this to work the origin must not be
           * using "Access-Control-Allow-Origin" with a wildcard,
           * and also must set "Access-Control-Allow-Credentials"
           * to "true".
           *
           * @api public
           */

          RequestBase.prototype.withCredentials = function(on) {
            // This is browser-only functionality. Node side is no-op.
            if (on == undefined) on = true
            this._withCredentials = on
            return this
          }

          /**
           * Set the max redirects to `n`. Does noting in browser XHR implementation.
           *
           * @param {Number} n
           * @return {Request} for chaining
           * @api public
           */

          RequestBase.prototype.redirects = function(n) {
            this._maxRedirects = n
            return this
          }

          /**
           * Maximum size of buffered response body, in bytes. Counts uncompressed size.
           * Default 200MB.
           *
           * @param {Number} n
           * @return {Request} for chaining
           */
          RequestBase.prototype.maxResponseSize = function(n) {
            if ('number' !== typeof n) {
              throw TypeError('Invalid argument')
            }
            this._maxResponseSize = n
            return this
          }

          /**
           * Convert to a plain javascript object (not JSON string) of scalar properties.
           * Note as this method is designed to return a useful non-this value,
           * it cannot be chained.
           *
           * @return {Object} describing method, url, and data of this request
           * @api public
           */

          RequestBase.prototype.toJSON = function() {
            return {
              method: this.method,
              url: this.url,
              data: this._data,
              headers: this._header
            }
          }

          /**
           * Send `data` as the request body, defaulting the `.type()` to "json" when
           * an object is given.
           *
           * Examples:
           *
           *       // manual json
           *       request.post('/user')
           *         .type('json')
           *         .send('{"name":"tj"}')
           *         .end(callback)
           *
           *       // auto json
           *       request.post('/user')
           *         .send({ name: 'tj' })
           *         .end(callback)
           *
           *       // manual x-www-form-urlencoded
           *       request.post('/user')
           *         .type('form')
           *         .send('name=tj')
           *         .end(callback)
           *
           *       // auto x-www-form-urlencoded
           *       request.post('/user')
           *         .type('form')
           *         .send({ name: 'tj' })
           *         .end(callback)
           *
           *       // defaults to x-www-form-urlencoded
           *      request.post('/user')
           *        .send('name=tobi')
           *        .send('species=ferret')
           *        .end(callback)
           *
           * @param {String|Object} data
           * @return {Request} for chaining
           * @api public
           */

          RequestBase.prototype.send = function(data) {
            var isObj = isObject(data)
            var type = this._header['content-type']

            if (this._formData) {
              console.error(
                ".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"
              )
            }

            if (isObj && !this._data) {
              if (Array.isArray(data)) {
                this._data = []
              } else if (!this._isHost(data)) {
                this._data = {}
              }
            } else if (data && this._data && this._isHost(this._data)) {
              throw Error("Can't merge these send calls")
            }

            // merge
            if (isObj && isObject(this._data)) {
              for (var key in data) {
                this._data[key] = data[key]
              }
            } else if ('string' == typeof data) {
              // default to x-www-form-urlencoded
              if (!type) this.type('form')
              type = this._header['content-type']
              if ('application/x-www-form-urlencoded' == type) {
                this._data = this._data ? this._data + '&' + data : data
              } else {
                this._data = (this._data || '') + data
              }
            } else {
              this._data = data
            }

            if (!isObj || this._isHost(data)) {
              return this
            }

            // default to json
            if (!type) this.type('json')
            return this
          }

          /**
           * Sort `querystring` by the sort function
           *
           *
           * Examples:
           *
           *       // default order
           *       request.get('/user')
           *         .query('name=Nick')
           *         .query('search=Manny')
           *         .sortQuery()
           *         .end(callback)
           *
           *       // customized sort function
           *       request.get('/user')
           *         .query('name=Nick')
           *         .query('search=Manny')
           *         .sortQuery(function(a, b){
           *           return a.length - b.length;
           *         })
           *         .end(callback)
           *
           *
           * @param {Function} sort
           * @return {Request} for chaining
           * @api public
           */

          RequestBase.prototype.sortQuery = function(sort) {
            // _sort default to true but otherwise can be a function or boolean
            this._sort = typeof sort === 'undefined' ? true : sort
            return this
          }

          /**
           * Compose querystring to append to req.url
           *
           * @api private
           */
          RequestBase.prototype._finalizeQueryString = function() {
            var query = this._query.join('&')
            if (query) {
              this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query
            }
            this._query.length = 0 // Makes the call idempotent

            if (this._sort) {
              var index = this.url.indexOf('?')
              if (index >= 0) {
                var queryArr = this.url.substring(index + 1).split('&')
                if ('function' === typeof this._sort) {
                  queryArr.sort(this._sort)
                } else {
                  queryArr.sort()
                }
                this.url =
                  this.url.substring(0, index) + '?' + queryArr.join('&')
              }
            }
          }

          // For backwards compat only
          RequestBase.prototype._appendQueryString = function() {
            console.trace('Unsupported')
          }

          /**
           * Invoke callback with timeout error.
           *
           * @api private
           */

          RequestBase.prototype._timeoutError = function(
            reason,
            timeout,
            errno
          ) {
            if (this._aborted) {
              return
            }
            var err = new Error(reason + timeout + 'ms exceeded')
            err.timeout = timeout
            err.code = 'ECONNABORTED'
            err.errno = errno
            this.timedout = true
            this.abort()
            this.callback(err)
          }

          RequestBase.prototype._setTimeouts = function() {
            var self = this

            // deadline
            if (this._timeout && !this._timer) {
              this._timer = setTimeout(function() {
                self._timeoutError('Timeout of ', self._timeout, 'ETIME')
              }, this._timeout)
            }
            // response timeout
            if (this._responseTimeout && !this._responseTimeoutTimer) {
              this._responseTimeoutTimer = setTimeout(function() {
                self._timeoutError(
                  'Response timeout of ',
                  self._responseTimeout,
                  'ETIMEDOUT'
                )
              }, this._responseTimeout)
            }
          }

          /***/
        },

      /***/ '../../node_modules/superagent/lib/response-base.js':
        /*!**************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/response-base.js ***!
  \**************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Module dependencies.
           */

          var utils = __webpack_require__(
            /*! ./utils */ '../../node_modules/superagent/lib/utils.js'
          )

          /**
           * Expose `ResponseBase`.
           */

          module.exports = ResponseBase

          /**
           * Initialize a new `ResponseBase`.
           *
           * @api public
           */

          function ResponseBase(obj) {
            if (obj) return mixin(obj)
          }

          /**
           * Mixin the prototype properties.
           *
           * @param {Object} obj
           * @return {Object}
           * @api private
           */

          function mixin(obj) {
            for (var key in ResponseBase.prototype) {
              obj[key] = ResponseBase.prototype[key]
            }
            return obj
          }

          /**
           * Get case-insensitive `field` value.
           *
           * @param {String} field
           * @return {String}
           * @api public
           */

          ResponseBase.prototype.get = function(field) {
            return this.header[field.toLowerCase()]
          }

          /**
           * Set header related properties:
           *
           *   - `.type` the content type without params
           *
           * A response of "Content-Type: text/plain; charset=utf-8"
           * will provide you with a `.type` of "text/plain".
           *
           * @param {Object} header
           * @api private
           */

          ResponseBase.prototype._setHeaderProperties = function(header) {
            // TODO: moar!
            // TODO: make this a util

            // content-type
            var ct = header['content-type'] || ''
            this.type = utils.type(ct)

            // params
            var params = utils.params(ct)
            for (var key in params) this[key] = params[key]

            this.links = {}

            // links
            try {
              if (header.link) {
                this.links = utils.parseLinks(header.link)
              }
            } catch (err) {
              // ignore
            }
          }

          /**
           * Set flags such as `.ok` based on `status`.
           *
           * For example a 2xx response will give you a `.ok` of __true__
           * whereas 5xx will be __false__ and `.error` will be __true__. The
           * `.clientError` and `.serverError` are also available to be more
           * specific, and `.statusType` is the class of error ranging from 1..5
           * sometimes useful for mapping respond colors etc.
           *
           * "sugar" properties are also defined for common cases. Currently providing:
           *
           *   - .noContent
           *   - .badRequest
           *   - .unauthorized
           *   - .notAcceptable
           *   - .notFound
           *
           * @param {Number} status
           * @api private
           */

          ResponseBase.prototype._setStatusProperties = function(status) {
            var type = (status / 100) | 0

            // status / class
            this.status = this.statusCode = status
            this.statusType = type

            // basics
            this.info = 1 == type
            this.ok = 2 == type
            this.redirect = 3 == type
            this.clientError = 4 == type
            this.serverError = 5 == type
            this.error = 4 == type || 5 == type ? this.toError() : false

            // sugar
            this.created = 201 == status
            this.accepted = 202 == status
            this.noContent = 204 == status
            this.badRequest = 400 == status
            this.unauthorized = 401 == status
            this.notAcceptable = 406 == status
            this.forbidden = 403 == status
            this.notFound = 404 == status
            this.unprocessableEntity = 422 == status
          }

          /***/
        },

      /***/ '../../node_modules/superagent/lib/utils.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/lib/utils.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Return the mime type for the given `str`.
           *
           * @param {String} str
           * @return {String}
           * @api private
           */

          exports.type = function(str) {
            return str.split(/ *; */).shift()
          }

          /**
           * Return header field parameters.
           *
           * @param {String} str
           * @return {Object}
           * @api private
           */

          exports.params = function(str) {
            return str.split(/ *; */).reduce(function(obj, str) {
              var parts = str.split(/ *= */)
              var key = parts.shift()
              var val = parts.shift()

              if (key && val) obj[key] = val
              return obj
            }, {})
          }

          /**
           * Parse Link header fields.
           *
           * @param {String} str
           * @return {Object}
           * @api private
           */

          exports.parseLinks = function(str) {
            return str.split(/ *, */).reduce(function(obj, str) {
              var parts = str.split(/ *; */)
              var url = parts[0].slice(1, -1)
              var rel = parts[1].split(/ *= */)[1].slice(1, -1)
              obj[rel] = url
              return obj
            }, {})
          }

          /**
           * Strip content related fields from `header`.
           *
           * @param {Object} header
           * @return {Object} header
           * @api private
           */

          exports.cleanHeader = function(header, changesOrigin) {
            delete header['content-type']
            delete header['content-length']
            delete header['transfer-encoding']
            delete header['host']
            // secuirty
            if (changesOrigin) {
              delete header['authorization']
              delete header['cookie']
            }
            return header
          }

          /***/
        },

      /***/ '../../node_modules/superagent/node_modules/debug/src/browser.js':
        /*!***************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/node_modules/debug/src/browser.js ***!
  \***************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          function _typeof(obj) {
            if (
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
            ) {
              _typeof = function _typeof(obj) {
                return typeof obj
              }
            } else {
              _typeof = function _typeof(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj
              }
            }
            return _typeof(obj)
          }

          /* eslint-env browser */

          /**
           * This is the web browser implementation of `debug()`.
           */
          exports.log = log
          exports.formatArgs = formatArgs
          exports.save = save
          exports.load = load
          exports.useColors = useColors
          exports.storage = localstorage()
          /**
           * Colors.
           */

          exports.colors = [
            '#0000CC',
            '#0000FF',
            '#0033CC',
            '#0033FF',
            '#0066CC',
            '#0066FF',
            '#0099CC',
            '#0099FF',
            '#00CC00',
            '#00CC33',
            '#00CC66',
            '#00CC99',
            '#00CCCC',
            '#00CCFF',
            '#3300CC',
            '#3300FF',
            '#3333CC',
            '#3333FF',
            '#3366CC',
            '#3366FF',
            '#3399CC',
            '#3399FF',
            '#33CC00',
            '#33CC33',
            '#33CC66',
            '#33CC99',
            '#33CCCC',
            '#33CCFF',
            '#6600CC',
            '#6600FF',
            '#6633CC',
            '#6633FF',
            '#66CC00',
            '#66CC33',
            '#9900CC',
            '#9900FF',
            '#9933CC',
            '#9933FF',
            '#99CC00',
            '#99CC33',
            '#CC0000',
            '#CC0033',
            '#CC0066',
            '#CC0099',
            '#CC00CC',
            '#CC00FF',
            '#CC3300',
            '#CC3333',
            '#CC3366',
            '#CC3399',
            '#CC33CC',
            '#CC33FF',
            '#CC6600',
            '#CC6633',
            '#CC9900',
            '#CC9933',
            '#CCCC00',
            '#CCCC33',
            '#FF0000',
            '#FF0033',
            '#FF0066',
            '#FF0099',
            '#FF00CC',
            '#FF00FF',
            '#FF3300',
            '#FF3333',
            '#FF3366',
            '#FF3399',
            '#FF33CC',
            '#FF33FF',
            '#FF6600',
            '#FF6633',
            '#FF9900',
            '#FF9933',
            '#FFCC00',
            '#FFCC33'
          ]
          /**
           * Currently only WebKit-based Web Inspectors, Firefox >= v31,
           * and the Firebug extension (any Firefox version) are known
           * to support "%c" CSS customizations.
           *
           * TODO: add a `localStorage` variable to explicitly enable/disable colors
           */
          // eslint-disable-next-line complexity

          function useColors() {
            // NB: In an Electron preload script, document will be defined but not fully
            // initialized. Since we know we're in Chrome, we'll just detect this case
            // explicitly
            if (
              typeof window !== 'undefined' &&
              window.process &&
              (window.process.type === 'renderer' || window.process.__nwjs)
            ) {
              return true
            } // Internet Explorer and Edge do not support colors.

            if (
              typeof navigator !== 'undefined' &&
              navigator.userAgent &&
              navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
            ) {
              return false
            } // Is webkit? http://stackoverflow.com/a/16459606/376773
            // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632

            return (
              (typeof document !== 'undefined' &&
                document.documentElement &&
                document.documentElement.style &&
                document.documentElement.style.WebkitAppearance) || // Is firebug? http://stackoverflow.com/a/398120/376773
              (typeof window !== 'undefined' &&
                window.console &&
                (window.console.firebug ||
                  (window.console.exception && window.console.table))) || // Is firefox >= v31?
              // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
              (typeof navigator !== 'undefined' &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
                parseInt(RegExp.$1, 10) >= 31) || // Double check webkit in userAgent just in case we are in a worker
              (typeof navigator !== 'undefined' &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
            )
          }
          /**
           * Colorize log arguments if enabled.
           *
           * @api public
           */

          function formatArgs(args) {
            args[0] =
              (this.useColors ? '%c' : '') +
              this.namespace +
              (this.useColors ? ' %c' : ' ') +
              args[0] +
              (this.useColors ? '%c ' : ' ') +
              '+' +
              module.exports.humanize(this.diff)

            if (!this.useColors) {
              return
            }

            var c = 'color: ' + this.color
            args.splice(1, 0, c, 'color: inherit') // The final "%c" is somewhat tricky, because there could be other
            // arguments passed either before or after the %c, so we need to
            // figure out the correct index to insert the CSS into

            var index = 0
            var lastC = 0
            args[0].replace(/%[a-zA-Z%]/g, function(match) {
              if (match === '%%') {
                return
              }

              index++

              if (match === '%c') {
                // We only are interested in the *last* %c
                // (the user may have provided their own)
                lastC = index
              }
            })
            args.splice(lastC, 0, c)
          }
          /**
           * Invokes `console.log()` when available.
           * No-op when `console.log` is not a "function".
           *
           * @api public
           */

          function log() {
            var _console

            // This hackery is required for IE8/9, where
            // the `console.log` function doesn't have 'apply'
            return (
              (typeof console === 'undefined'
                ? 'undefined'
                : _typeof(console)) === 'object' &&
              console.log &&
              (_console = console).log.apply(_console, arguments)
            )
          }
          /**
           * Save `namespaces`.
           *
           * @param {String} namespaces
           * @api private
           */

          function save(namespaces) {
            try {
              if (namespaces) {
                exports.storage.setItem('debug', namespaces)
              } else {
                exports.storage.removeItem('debug')
              }
            } catch (error) {
              // Swallow
              // XXX (@Qix-) should we be logging these?
            }
          }
          /**
           * Load `namespaces`.
           *
           * @return {String} returns the previously persisted debug modes
           * @api private
           */

          function load() {
            var r

            try {
              r = exports.storage.getItem('debug')
            } catch (error) {} // Swallow
            // XXX (@Qix-) should we be logging these?
            // If debug isn't set in LS, and we're in Electron, try to load $DEBUG

            if (!r && typeof process !== 'undefined' && 'env' in process) {
              r = process.env.DEBUG
            }

            return r
          }
          /**
           * Localstorage attempts to return the localstorage.
           *
           * This is necessary because safari throws
           * when a user disables cookies/localstorage
           * and you attempt to access it.
           *
           * @return {LocalStorage}
           * @api private
           */

          function localstorage() {
            try {
              // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
              // The Browser also has localStorage in the global context.
              return localStorage
            } catch (error) {
              // Swallow
              // XXX (@Qix-) should we be logging these?
            }
          }

          module.exports = __webpack_require__(
            /*! ./common */ '../../node_modules/superagent/node_modules/debug/src/common.js'
          )(exports)
          var formatters = module.exports.formatters
          /**
           * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
           */

          formatters.j = function(v) {
            try {
              return JSON.stringify(v)
            } catch (error) {
              return '[UnexpectedJSONParseError]: ' + error.message
            }
          }

          /***/
        },

      /***/ '../../node_modules/superagent/node_modules/debug/src/common.js':
        /*!**************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/node_modules/debug/src/common.js ***!
  \**************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * This is the common logic for both the Node.js and web browser
           * implementations of `debug()`.
           */
          function setup(env) {
            createDebug.debug = createDebug
            createDebug.default = createDebug
            createDebug.coerce = coerce
            createDebug.disable = disable
            createDebug.enable = enable
            createDebug.enabled = enabled
            createDebug.humanize = __webpack_require__(
              /*! ms */ '../../node_modules/superagent/node_modules/ms/index.js'
            )
            Object.keys(env).forEach(function(key) {
              createDebug[key] = env[key]
            })
            /**
             * Active `debug` instances.
             */

            createDebug.instances = []
            /**
             * The currently active debug mode names, and names to skip.
             */

            createDebug.names = []
            createDebug.skips = []
            /**
             * Map of special "%n" handling functions, for the debug "format" argument.
             *
             * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
             */

            createDebug.formatters = {}
            /**
             * Selects a color for a debug namespace
             * @param {String} namespace The namespace string for the for the debug instance to be colored
             * @return {Number|String} An ANSI color code for the given namespace
             * @api private
             */

            function selectColor(namespace) {
              var hash = 0

              for (var i = 0; i < namespace.length; i++) {
                hash = (hash << 5) - hash + namespace.charCodeAt(i)
                hash |= 0 // Convert to 32bit integer
              }

              return createDebug.colors[
                Math.abs(hash) % createDebug.colors.length
              ]
            }

            createDebug.selectColor = selectColor
            /**
             * Create a debugger with the given `namespace`.
             *
             * @param {String} namespace
             * @return {Function}
             * @api public
             */

            function createDebug(namespace) {
              var prevTime

              function debug() {
                // Disabled?
                if (!debug.enabled) {
                  return
                }

                for (
                  var _len = arguments.length, args = new Array(_len), _key = 0;
                  _key < _len;
                  _key++
                ) {
                  args[_key] = arguments[_key]
                }

                var self = debug // Set `diff` timestamp

                var curr = Number(new Date())
                var ms = curr - (prevTime || curr)
                self.diff = ms
                self.prev = prevTime
                self.curr = curr
                prevTime = curr
                args[0] = createDebug.coerce(args[0])

                if (typeof args[0] !== 'string') {
                  // Anything else let's inspect with %O
                  args.unshift('%O')
                } // Apply any `formatters` transformations

                var index = 0
                args[0] = args[0].replace(/%([a-zA-Z%])/g, function(
                  match,
                  format
                ) {
                  // If we encounter an escaped % then don't increase the array index
                  if (match === '%%') {
                    return match
                  }

                  index++
                  var formatter = createDebug.formatters[format]

                  if (typeof formatter === 'function') {
                    var val = args[index]
                    match = formatter.call(self, val) // Now we need to remove `args[index]` since it's inlined in the `format`

                    args.splice(index, 1)
                    index--
                  }

                  return match
                }) // Apply env-specific formatting (colors, etc.)

                createDebug.formatArgs.call(self, args)
                var logFn = self.log || createDebug.log
                logFn.apply(self, args)
              }

              debug.namespace = namespace
              debug.enabled = createDebug.enabled(namespace)
              debug.useColors = createDebug.useColors()
              debug.color = selectColor(namespace)
              debug.destroy = destroy
              debug.extend = extend // Debug.formatArgs = formatArgs;
              // debug.rawLog = rawLog;
              // env-specific initialization logic for debug instances

              if (typeof createDebug.init === 'function') {
                createDebug.init(debug)
              }

              createDebug.instances.push(debug)
              return debug
            }

            function destroy() {
              var index = createDebug.instances.indexOf(this)

              if (index !== -1) {
                createDebug.instances.splice(index, 1)
                return true
              }

              return false
            }

            function extend(namespace, delimiter) {
              return createDebug(
                this.namespace +
                  (typeof delimiter === 'undefined' ? ':' : delimiter) +
                  namespace
              )
            }
            /**
             * Enables a debug mode by namespaces. This can include modes
             * separated by a colon and wildcards.
             *
             * @param {String} namespaces
             * @api public
             */

            function enable(namespaces) {
              createDebug.save(namespaces)
              createDebug.names = []
              createDebug.skips = []
              var i
              var split = (typeof namespaces === 'string'
                ? namespaces
                : ''
              ).split(/[\s,]+/)
              var len = split.length

              for (i = 0; i < len; i++) {
                if (!split[i]) {
                  // ignore empty strings
                  continue
                }

                namespaces = split[i].replace(/\*/g, '.*?')

                if (namespaces[0] === '-') {
                  createDebug.skips.push(
                    new RegExp('^' + namespaces.substr(1) + '$')
                  )
                } else {
                  createDebug.names.push(new RegExp('^' + namespaces + '$'))
                }
              }

              for (i = 0; i < createDebug.instances.length; i++) {
                var instance = createDebug.instances[i]
                instance.enabled = createDebug.enabled(instance.namespace)
              }
            }
            /**
             * Disable debug output.
             *
             * @api public
             */

            function disable() {
              createDebug.enable('')
            }
            /**
             * Returns true if the given mode name is enabled, false otherwise.
             *
             * @param {String} name
             * @return {Boolean}
             * @api public
             */

            function enabled(name) {
              if (name[name.length - 1] === '*') {
                return true
              }

              var i
              var len

              for (i = 0, len = createDebug.skips.length; i < len; i++) {
                if (createDebug.skips[i].test(name)) {
                  return false
                }
              }

              for (i = 0, len = createDebug.names.length; i < len; i++) {
                if (createDebug.names[i].test(name)) {
                  return true
                }
              }

              return false
            }
            /**
             * Coerce `val`.
             *
             * @param {Mixed} val
             * @return {Mixed}
             * @api private
             */

            function coerce(val) {
              if (val instanceof Error) {
                return val.stack || val.message
              }

              return val
            }

            createDebug.enable(createDebug.load())
            return createDebug
          }

          module.exports = setup

          /***/
        },

      /***/ '../../node_modules/superagent/node_modules/debug/src/index.js':
        /*!*************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/node_modules/debug/src/index.js ***!
  \*************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Detect Electron renderer / nwjs process, which is node, but we should
           * treat as a browser.
           */
          if (
            typeof process === 'undefined' ||
            process.type === 'renderer' ||
            process.browser === true ||
            process.__nwjs
          ) {
            module.exports = __webpack_require__(
              /*! ./browser.js */ '../../node_modules/superagent/node_modules/debug/src/browser.js'
            )
          } else {
            module.exports = __webpack_require__(
              /*! ./node.js */ '../../node_modules/superagent/node_modules/debug/src/node.js'
            )
          }

          /***/
        },

      /***/ '../../node_modules/superagent/node_modules/debug/src/node.js':
        /*!************************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/node_modules/debug/src/node.js ***!
  \************************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Module dependencies.
           */
          var tty = __webpack_require__(/*! tty */ 'tty')

          var util = __webpack_require__(/*! util */ 'util')
          /**
           * This is the Node.js implementation of `debug()`.
           */

          exports.init = init
          exports.log = log
          exports.formatArgs = formatArgs
          exports.save = save
          exports.load = load
          exports.useColors = useColors
          /**
           * Colors.
           */

          exports.colors = [6, 2, 3, 4, 5, 1]

          try {
            // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)
            // eslint-disable-next-line import/no-extraneous-dependencies
            var supportsColor = __webpack_require__(
              /*! supports-color */ '../../node_modules/supports-color/index.js'
            )

            if (
              supportsColor &&
              (supportsColor.stderr || supportsColor).level >= 2
            ) {
              exports.colors = [
                20,
                21,
                26,
                27,
                32,
                33,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                56,
                57,
                62,
                63,
                68,
                69,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                92,
                93,
                98,
                99,
                112,
                113,
                128,
                129,
                134,
                135,
                148,
                149,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171,
                172,
                173,
                178,
                179,
                184,
                185,
                196,
                197,
                198,
                199,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                214,
                215,
                220,
                221
              ]
            }
          } catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.

          /**
           * Build up the default `inspectOpts` object from the environment variables.
           *
           *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
           */

          exports.inspectOpts = Object.keys(process.env)
            .filter(function(key) {
              return /^debug_/i.test(key)
            })
            .reduce(function(obj, key) {
              // Camel-case
              var prop = key
                .substring(6)
                .toLowerCase()
                .replace(/_([a-z])/g, function(_, k) {
                  return k.toUpperCase()
                }) // Coerce string value into JS value

              var val = process.env[key]

              if (/^(yes|on|true|enabled)$/i.test(val)) {
                val = true
              } else if (/^(no|off|false|disabled)$/i.test(val)) {
                val = false
              } else if (val === 'null') {
                val = null
              } else {
                val = Number(val)
              }

              obj[prop] = val
              return obj
            }, {})
          /**
           * Is stdout a TTY? Colored output is enabled when `true`.
           */

          function useColors() {
            return 'colors' in exports.inspectOpts
              ? Boolean(exports.inspectOpts.colors)
              : tty.isatty(process.stderr.fd)
          }
          /**
           * Adds ANSI color escape codes if enabled.
           *
           * @api public
           */

          function formatArgs(args) {
            var name = this.namespace,
              useColors = this.useColors

            if (useColors) {
              var c = this.color
              var colorCode = '\x1B[3' + (c < 8 ? c : '8;5;' + c)
              var prefix = '  '
                .concat(colorCode, ';1m')
                .concat(name, ' \x1B[0m')
              args[0] = prefix + args[0].split('\n').join('\n' + prefix)
              args.push(
                colorCode +
                  'm+' +
                  module.exports.humanize(this.diff) +
                  '\x1B[0m'
              )
            } else {
              args[0] = getDate() + name + ' ' + args[0]
            }
          }

          function getDate() {
            if (exports.inspectOpts.hideDate) {
              return ''
            }

            return new Date().toISOString() + ' '
          }
          /**
           * Invokes `util.format()` with the specified arguments and writes to stderr.
           */

          function log() {
            return process.stderr.write(
              util.format.apply(util, arguments) + '\n'
            )
          }
          /**
           * Save `namespaces`.
           *
           * @param {String} namespaces
           * @api private
           */

          function save(namespaces) {
            if (namespaces) {
              process.env.DEBUG = namespaces
            } else {
              // If you set a process.env field to null or undefined, it gets cast to the
              // string 'null' or 'undefined'. Just delete instead.
              delete process.env.DEBUG
            }
          }
          /**
           * Load `namespaces`.
           *
           * @return {String} returns the previously persisted debug modes
           * @api private
           */

          function load() {
            return process.env.DEBUG
          }
          /**
           * Init logic for `debug` instances.
           *
           * Create a new `inspectOpts` object in case `useColors` is set
           * differently for a particular `debug` instance.
           */

          function init(debug) {
            debug.inspectOpts = {}
            var keys = Object.keys(exports.inspectOpts)

            for (var i = 0; i < keys.length; i++) {
              debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]]
            }
          }

          module.exports = __webpack_require__(
            /*! ./common */ '../../node_modules/superagent/node_modules/debug/src/common.js'
          )(exports)
          var formatters = module.exports.formatters
          /**
           * Map %o to `util.inspect()`, all on a single line.
           */

          formatters.o = function(v) {
            this.inspectOpts.colors = this.useColors
            return util.inspect(v, this.inspectOpts).replace(/\s*\n\s*/g, ' ')
          }
          /**
           * Map %O to `util.inspect()`, allowing multiple lines if needed.
           */

          formatters.O = function(v) {
            this.inspectOpts.colors = this.useColors
            return util.inspect(v, this.inspectOpts)
          }

          /***/
        },

      /***/ '../../node_modules/superagent/node_modules/mime/mime.js':
        /*!*******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/node_modules/mime/mime.js ***!
  \*******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var path = __webpack_require__(/*! path */ 'path')
          var fs = __webpack_require__(/*! fs */ 'fs')

          function Mime() {
            // Map of extension -> mime type
            this.types = Object.create(null)

            // Map of mime type -> extension
            this.extensions = Object.create(null)
          }

          /**
           * Define mimetype -> extension mappings.  Each key is a mime-type that maps
           * to an array of extensions associated with the type.  The first extension is
           * used as the default extension for the type.
           *
           * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});
           *
           * @param map (Object) type definitions
           */
          Mime.prototype.define = function(map) {
            for (var type in map) {
              var exts = map[type]
              for (var i = 0; i < exts.length; i++) {
                if (process.env.DEBUG_MIME && this.types[exts[i]]) {
                  console.warn(
                    (this._loading || 'define()').replace(/.*\//, ''),
                    'changes "' +
                      exts[i] +
                      '" extension type from ' +
                      this.types[exts[i]] +
                      ' to ' +
                      type
                  )
                }

                this.types[exts[i]] = type
              }

              // Default extension is the first one we encounter
              if (!this.extensions[type]) {
                this.extensions[type] = exts[0]
              }
            }
          }

          /**
           * Load an Apache2-style ".types" file
           *
           * This may be called multiple times (it's expected).  Where files declare
           * overlapping types/extensions, the last file wins.
           *
           * @param file (String) path of file to load.
           */
          Mime.prototype.load = function(file) {
            this._loading = file
            // Read file and split into lines
            var map = {},
              content = fs.readFileSync(file, 'ascii'),
              lines = content.split(/[\r\n]+/)

            lines.forEach(function(line) {
              // Clean up whitespace/comments, and split into fields
              var fields = line.replace(/\s*#.*|^\s*|\s*$/g, '').split(/\s+/)
              map[fields.shift()] = fields
            })

            this.define(map)

            this._loading = null
          }

          /**
           * Lookup a mime type based on extension
           */
          Mime.prototype.lookup = function(path, fallback) {
            var ext = path.replace(/^.*[\.\/\\]/, '').toLowerCase()

            return this.types[ext] || fallback || this.default_type
          }

          /**
           * Return file extension associated with a mime type
           */
          Mime.prototype.extension = function(mimeType) {
            var type = mimeType
              .match(/^\s*([^;\s]*)(?:;|\s|$)/)[1]
              .toLowerCase()
            return this.extensions[type]
          }

          // Default instance
          var mime = new Mime()

          // Define built-in types
          mime.define(
            __webpack_require__(
              /*! ./types.json */ '../../node_modules/superagent/node_modules/mime/types.json'
            )
          )

          // Default type
          mime.default_type = mime.lookup('bin')

          //
          // Additional API specific to the default instance
          //

          mime.Mime = Mime

          /**
           * Lookup a charset based on mime type.
           */
          mime.charsets = {
            lookup: function(mimeType, fallback) {
              // Assume text types are utf8
              return /^text\/|^application\/(javascript|json)/.test(mimeType)
                ? 'UTF-8'
                : fallback
            }
          }

          module.exports = mime

          /***/
        },

      /***/ '../../node_modules/superagent/node_modules/mime/types.json':
        /*!**********************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/node_modules/mime/types.json ***!
  \**********************************************************************************************/
        /*! exports provided: application/andrew-inset, application/applixware, application/atom+xml, application/atomcat+xml, application/atomsvc+xml, application/bdoc, application/ccxml+xml, application/cdmi-capability, application/cdmi-container, application/cdmi-domain, application/cdmi-object, application/cdmi-queue, application/cu-seeme, application/dash+xml, application/davmount+xml, application/docbook+xml, application/dssc+der, application/dssc+xml, application/ecmascript, application/emma+xml, application/epub+zip, application/exi, application/font-tdpfr, application/font-woff, application/font-woff2, application/geo+json, application/gml+xml, application/gpx+xml, application/gxf, application/gzip, application/hyperstudio, application/inkml+xml, application/ipfix, application/java-archive, application/java-serialized-object, application/java-vm, application/javascript, application/json, application/json5, application/jsonml+json, application/ld+json, application/lost+xml, application/mac-binhex40, application/mac-compactpro, application/mads+xml, application/manifest+json, application/marc, application/marcxml+xml, application/mathematica, application/mathml+xml, application/mbox, application/mediaservercontrol+xml, application/metalink+xml, application/metalink4+xml, application/mets+xml, application/mods+xml, application/mp21, application/mp4, application/msword, application/mxf, application/octet-stream, application/oda, application/oebps-package+xml, application/ogg, application/omdoc+xml, application/onenote, application/oxps, application/patch-ops-error+xml, application/pdf, application/pgp-encrypted, application/pgp-signature, application/pics-rules, application/pkcs10, application/pkcs7-mime, application/pkcs7-signature, application/pkcs8, application/pkix-attr-cert, application/pkix-cert, application/pkix-crl, application/pkix-pkipath, application/pkixcmp, application/pls+xml, application/postscript, application/prs.cww, application/pskc+xml, application/raml+yaml, application/rdf+xml, application/reginfo+xml, application/relax-ng-compact-syntax, application/resource-lists+xml, application/resource-lists-diff+xml, application/rls-services+xml, application/rpki-ghostbusters, application/rpki-manifest, application/rpki-roa, application/rsd+xml, application/rss+xml, application/rtf, application/sbml+xml, application/scvp-cv-request, application/scvp-cv-response, application/scvp-vp-request, application/scvp-vp-response, application/sdp, application/set-payment-initiation, application/set-registration-initiation, application/shf+xml, application/smil+xml, application/sparql-query, application/sparql-results+xml, application/srgs, application/srgs+xml, application/sru+xml, application/ssdl+xml, application/ssml+xml, application/tei+xml, application/thraud+xml, application/timestamped-data, application/vnd.3gpp.pic-bw-large, application/vnd.3gpp.pic-bw-small, application/vnd.3gpp.pic-bw-var, application/vnd.3gpp2.tcap, application/vnd.3m.post-it-notes, application/vnd.accpac.simply.aso, application/vnd.accpac.simply.imp, application/vnd.acucobol, application/vnd.acucorp, application/vnd.adobe.air-application-installer-package+zip, application/vnd.adobe.formscentral.fcdt, application/vnd.adobe.fxp, application/vnd.adobe.xdp+xml, application/vnd.adobe.xfdf, application/vnd.ahead.space, application/vnd.airzip.filesecure.azf, application/vnd.airzip.filesecure.azs, application/vnd.amazon.ebook, application/vnd.americandynamics.acc, application/vnd.amiga.ami, application/vnd.android.package-archive, application/vnd.anser-web-certificate-issue-initiation, application/vnd.anser-web-funds-transfer-initiation, application/vnd.antix.game-component, application/vnd.apple.installer+xml, application/vnd.apple.mpegurl, application/vnd.apple.pkpass, application/vnd.aristanetworks.swi, application/vnd.astraea-software.iota, application/vnd.audiograph, application/vnd.blueice.multipass, application/vnd.bmi, application/vnd.businessobjects, application/vnd.chemdraw+xml, application/vnd.chipnuts.karaoke-mmd, application/vnd.cinderella, application/vnd.claymore, application/vnd.cloanto.rp9, application/vnd.clonk.c4group, application/vnd.cluetrust.cartomobile-config, application/vnd.cluetrust.cartomobile-config-pkg, application/vnd.commonspace, application/vnd.contact.cmsg, application/vnd.cosmocaller, application/vnd.crick.clicker, application/vnd.crick.clicker.keyboard, application/vnd.crick.clicker.palette, application/vnd.crick.clicker.template, application/vnd.crick.clicker.wordbank, application/vnd.criticaltools.wbs+xml, application/vnd.ctc-posml, application/vnd.cups-ppd, application/vnd.curl.car, application/vnd.curl.pcurl, application/vnd.dart, application/vnd.data-vision.rdz, application/vnd.dece.data, application/vnd.dece.ttml+xml, application/vnd.dece.unspecified, application/vnd.dece.zip, application/vnd.denovo.fcselayout-link, application/vnd.dna, application/vnd.dolby.mlp, application/vnd.dpgraph, application/vnd.dreamfactory, application/vnd.ds-keypoint, application/vnd.dvb.ait, application/vnd.dvb.service, application/vnd.dynageo, application/vnd.ecowin.chart, application/vnd.enliven, application/vnd.epson.esf, application/vnd.epson.msf, application/vnd.epson.quickanime, application/vnd.epson.salt, application/vnd.epson.ssf, application/vnd.eszigno3+xml, application/vnd.ezpix-album, application/vnd.ezpix-package, application/vnd.fdf, application/vnd.fdsn.mseed, application/vnd.fdsn.seed, application/vnd.flographit, application/vnd.fluxtime.clip, application/vnd.framemaker, application/vnd.frogans.fnc, application/vnd.frogans.ltf, application/vnd.fsc.weblaunch, application/vnd.fujitsu.oasys, application/vnd.fujitsu.oasys2, application/vnd.fujitsu.oasys3, application/vnd.fujitsu.oasysgp, application/vnd.fujitsu.oasysprs, application/vnd.fujixerox.ddd, application/vnd.fujixerox.docuworks, application/vnd.fujixerox.docuworks.binder, application/vnd.fuzzysheet, application/vnd.genomatix.tuxedo, application/vnd.geogebra.file, application/vnd.geogebra.tool, application/vnd.geometry-explorer, application/vnd.geonext, application/vnd.geoplan, application/vnd.geospace, application/vnd.gmx, application/vnd.google-apps.document, application/vnd.google-apps.presentation, application/vnd.google-apps.spreadsheet, application/vnd.google-earth.kml+xml, application/vnd.google-earth.kmz, application/vnd.grafeq, application/vnd.groove-account, application/vnd.groove-help, application/vnd.groove-identity-message, application/vnd.groove-injector, application/vnd.groove-tool-message, application/vnd.groove-tool-template, application/vnd.groove-vcard, application/vnd.hal+xml, application/vnd.handheld-entertainment+xml, application/vnd.hbci, application/vnd.hhe.lesson-player, application/vnd.hp-hpgl, application/vnd.hp-hpid, application/vnd.hp-hps, application/vnd.hp-jlyt, application/vnd.hp-pcl, application/vnd.hp-pclxl, application/vnd.hydrostatix.sof-data, application/vnd.ibm.minipay, application/vnd.ibm.modcap, application/vnd.ibm.rights-management, application/vnd.ibm.secure-container, application/vnd.iccprofile, application/vnd.igloader, application/vnd.immervision-ivp, application/vnd.immervision-ivu, application/vnd.insors.igm, application/vnd.intercon.formnet, application/vnd.intergeo, application/vnd.intu.qbo, application/vnd.intu.qfx, application/vnd.ipunplugged.rcprofile, application/vnd.irepository.package+xml, application/vnd.is-xpr, application/vnd.isac.fcs, application/vnd.jam, application/vnd.jcp.javame.midlet-rms, application/vnd.jisp, application/vnd.joost.joda-archive, application/vnd.kahootz, application/vnd.kde.karbon, application/vnd.kde.kchart, application/vnd.kde.kformula, application/vnd.kde.kivio, application/vnd.kde.kontour, application/vnd.kde.kpresenter, application/vnd.kde.kspread, application/vnd.kde.kword, application/vnd.kenameaapp, application/vnd.kidspiration, application/vnd.kinar, application/vnd.koan, application/vnd.kodak-descriptor, application/vnd.las.las+xml, application/vnd.llamagraphics.life-balance.desktop, application/vnd.llamagraphics.life-balance.exchange+xml, application/vnd.lotus-1-2-3, application/vnd.lotus-approach, application/vnd.lotus-freelance, application/vnd.lotus-notes, application/vnd.lotus-organizer, application/vnd.lotus-screencam, application/vnd.lotus-wordpro, application/vnd.macports.portpkg, application/vnd.mcd, application/vnd.medcalcdata, application/vnd.mediastation.cdkey, application/vnd.mfer, application/vnd.mfmp, application/vnd.micrografx.flo, application/vnd.micrografx.igx, application/vnd.mif, application/vnd.mobius.daf, application/vnd.mobius.dis, application/vnd.mobius.mbk, application/vnd.mobius.mqy, application/vnd.mobius.msl, application/vnd.mobius.plc, application/vnd.mobius.txf, application/vnd.mophun.application, application/vnd.mophun.certificate, application/vnd.mozilla.xul+xml, application/vnd.ms-artgalry, application/vnd.ms-cab-compressed, application/vnd.ms-excel, application/vnd.ms-excel.addin.macroenabled.12, application/vnd.ms-excel.sheet.binary.macroenabled.12, application/vnd.ms-excel.sheet.macroenabled.12, application/vnd.ms-excel.template.macroenabled.12, application/vnd.ms-fontobject, application/vnd.ms-htmlhelp, application/vnd.ms-ims, application/vnd.ms-lrm, application/vnd.ms-officetheme, application/vnd.ms-outlook, application/vnd.ms-pki.seccat, application/vnd.ms-pki.stl, application/vnd.ms-powerpoint, application/vnd.ms-powerpoint.addin.macroenabled.12, application/vnd.ms-powerpoint.presentation.macroenabled.12, application/vnd.ms-powerpoint.slide.macroenabled.12, application/vnd.ms-powerpoint.slideshow.macroenabled.12, application/vnd.ms-powerpoint.template.macroenabled.12, application/vnd.ms-project, application/vnd.ms-word.document.macroenabled.12, application/vnd.ms-word.template.macroenabled.12, application/vnd.ms-works, application/vnd.ms-wpl, application/vnd.ms-xpsdocument, application/vnd.mseq, application/vnd.musician, application/vnd.muvee.style, application/vnd.mynfc, application/vnd.neurolanguage.nlu, application/vnd.nitf, application/vnd.noblenet-directory, application/vnd.noblenet-sealer, application/vnd.noblenet-web, application/vnd.nokia.n-gage.data, application/vnd.nokia.n-gage.symbian.install, application/vnd.nokia.radio-preset, application/vnd.nokia.radio-presets, application/vnd.novadigm.edm, application/vnd.novadigm.edx, application/vnd.novadigm.ext, application/vnd.oasis.opendocument.chart, application/vnd.oasis.opendocument.chart-template, application/vnd.oasis.opendocument.database, application/vnd.oasis.opendocument.formula, application/vnd.oasis.opendocument.formula-template, application/vnd.oasis.opendocument.graphics, application/vnd.oasis.opendocument.graphics-template, application/vnd.oasis.opendocument.image, application/vnd.oasis.opendocument.image-template, application/vnd.oasis.opendocument.presentation, application/vnd.oasis.opendocument.presentation-template, application/vnd.oasis.opendocument.spreadsheet, application/vnd.oasis.opendocument.spreadsheet-template, application/vnd.oasis.opendocument.text, application/vnd.oasis.opendocument.text-master, application/vnd.oasis.opendocument.text-template, application/vnd.oasis.opendocument.text-web, application/vnd.olpc-sugar, application/vnd.oma.dd2+xml, application/vnd.openofficeorg.extension, application/vnd.openxmlformats-officedocument.presentationml.presentation, application/vnd.openxmlformats-officedocument.presentationml.slide, application/vnd.openxmlformats-officedocument.presentationml.slideshow, application/vnd.openxmlformats-officedocument.presentationml.template, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.openxmlformats-officedocument.spreadsheetml.template, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.wordprocessingml.template, application/vnd.osgeo.mapguide.package, application/vnd.osgi.dp, application/vnd.osgi.subsystem, application/vnd.palm, application/vnd.pawaafile, application/vnd.pg.format, application/vnd.pg.osasli, application/vnd.picsel, application/vnd.pmi.widget, application/vnd.pocketlearn, application/vnd.powerbuilder6, application/vnd.previewsystems.box, application/vnd.proteus.magazine, application/vnd.publishare-delta-tree, application/vnd.pvi.ptid1, application/vnd.quark.quarkxpress, application/vnd.realvnc.bed, application/vnd.recordare.musicxml, application/vnd.recordare.musicxml+xml, application/vnd.rig.cryptonote, application/vnd.rim.cod, application/vnd.rn-realmedia, application/vnd.rn-realmedia-vbr, application/vnd.route66.link66+xml, application/vnd.sailingtracker.track, application/vnd.seemail, application/vnd.sema, application/vnd.semd, application/vnd.semf, application/vnd.shana.informed.formdata, application/vnd.shana.informed.formtemplate, application/vnd.shana.informed.interchange, application/vnd.shana.informed.package, application/vnd.simtech-mindmapper, application/vnd.smaf, application/vnd.smart.teacher, application/vnd.solent.sdkm+xml, application/vnd.spotfire.dxp, application/vnd.spotfire.sfs, application/vnd.stardivision.calc, application/vnd.stardivision.draw, application/vnd.stardivision.impress, application/vnd.stardivision.math, application/vnd.stardivision.writer, application/vnd.stardivision.writer-global, application/vnd.stepmania.package, application/vnd.stepmania.stepchart, application/vnd.sun.wadl+xml, application/vnd.sun.xml.calc, application/vnd.sun.xml.calc.template, application/vnd.sun.xml.draw, application/vnd.sun.xml.draw.template, application/vnd.sun.xml.impress, application/vnd.sun.xml.impress.template, application/vnd.sun.xml.math, application/vnd.sun.xml.writer, application/vnd.sun.xml.writer.global, application/vnd.sun.xml.writer.template, application/vnd.sus-calendar, application/vnd.svd, application/vnd.symbian.install, application/vnd.syncml+xml, application/vnd.syncml.dm+wbxml, application/vnd.syncml.dm+xml, application/vnd.tao.intent-module-archive, application/vnd.tcpdump.pcap, application/vnd.tmobile-livetv, application/vnd.trid.tpt, application/vnd.triscape.mxs, application/vnd.trueapp, application/vnd.ufdl, application/vnd.uiq.theme, application/vnd.umajin, application/vnd.unity, application/vnd.uoml+xml, application/vnd.vcx, application/vnd.visio, application/vnd.visionary, application/vnd.vsf, application/vnd.wap.wbxml, application/vnd.wap.wmlc, application/vnd.wap.wmlscriptc, application/vnd.webturbo, application/vnd.wolfram.player, application/vnd.wordperfect, application/vnd.wqd, application/vnd.wt.stf, application/vnd.xara, application/vnd.xfdl, application/vnd.yamaha.hv-dic, application/vnd.yamaha.hv-script, application/vnd.yamaha.hv-voice, application/vnd.yamaha.openscoreformat, application/vnd.yamaha.openscoreformat.osfpvg+xml, application/vnd.yamaha.smaf-audio, application/vnd.yamaha.smaf-phrase, application/vnd.yellowriver-custom-menu, application/vnd.zul, application/vnd.zzazz.deck+xml, application/voicexml+xml, application/wasm, application/widget, application/winhlp, application/wsdl+xml, application/wspolicy+xml, application/x-7z-compressed, application/x-abiword, application/x-ace-compressed, application/x-apple-diskimage, application/x-arj, application/x-authorware-bin, application/x-authorware-map, application/x-authorware-seg, application/x-bcpio, application/x-bdoc, application/x-bittorrent, application/x-blorb, application/x-bzip, application/x-bzip2, application/x-cbr, application/x-cdlink, application/x-cfs-compressed, application/x-chat, application/x-chess-pgn, application/x-chrome-extension, application/x-cocoa, application/x-conference, application/x-cpio, application/x-csh, application/x-debian-package, application/x-dgc-compressed, application/x-director, application/x-doom, application/x-dtbncx+xml, application/x-dtbook+xml, application/x-dtbresource+xml, application/x-dvi, application/x-envoy, application/x-eva, application/x-font-bdf, application/x-font-ghostscript, application/x-font-linux-psf, application/x-font-pcf, application/x-font-snf, application/x-font-type1, application/x-freearc, application/x-futuresplash, application/x-gca-compressed, application/x-glulx, application/x-gnumeric, application/x-gramps-xml, application/x-gtar, application/x-hdf, application/x-httpd-php, application/x-install-instructions, application/x-iso9660-image, application/x-java-archive-diff, application/x-java-jnlp-file, application/x-latex, application/x-lua-bytecode, application/x-lzh-compressed, application/x-makeself, application/x-mie, application/x-mobipocket-ebook, application/x-ms-application, application/x-ms-shortcut, application/x-ms-wmd, application/x-ms-wmz, application/x-ms-xbap, application/x-msaccess, application/x-msbinder, application/x-mscardfile, application/x-msclip, application/x-msdos-program, application/x-msdownload, application/x-msmediaview, application/x-msmetafile, application/x-msmoney, application/x-mspublisher, application/x-msschedule, application/x-msterminal, application/x-mswrite, application/x-netcdf, application/x-ns-proxy-autoconfig, application/x-nzb, application/x-perl, application/x-pilot, application/x-pkcs12, application/x-pkcs7-certificates, application/x-pkcs7-certreqresp, application/x-rar-compressed, application/x-redhat-package-manager, application/x-research-info-systems, application/x-sea, application/x-sh, application/x-shar, application/x-shockwave-flash, application/x-silverlight-app, application/x-sql, application/x-stuffit, application/x-stuffitx, application/x-subrip, application/x-sv4cpio, application/x-sv4crc, application/x-t3vm-image, application/x-tads, application/x-tar, application/x-tcl, application/x-tex, application/x-tex-tfm, application/x-texinfo, application/x-tgif, application/x-ustar, application/x-virtualbox-hdd, application/x-virtualbox-ova, application/x-virtualbox-ovf, application/x-virtualbox-vbox, application/x-virtualbox-vbox-extpack, application/x-virtualbox-vdi, application/x-virtualbox-vhd, application/x-virtualbox-vmdk, application/x-wais-source, application/x-web-app-manifest+json, application/x-x509-ca-cert, application/x-xfig, application/x-xliff+xml, application/x-xpinstall, application/x-xz, application/x-zmachine, application/xaml+xml, application/xcap-diff+xml, application/xenc+xml, application/xhtml+xml, application/xml, application/xml-dtd, application/xop+xml, application/xproc+xml, application/xslt+xml, application/xspf+xml, application/xv+xml, application/yang, application/yin+xml, application/zip, audio/3gpp, audio/adpcm, audio/basic, audio/midi, audio/mp3, audio/mp4, audio/mpeg, audio/ogg, audio/s3m, audio/silk, audio/vnd.dece.audio, audio/vnd.digital-winds, audio/vnd.dra, audio/vnd.dts, audio/vnd.dts.hd, audio/vnd.lucent.voice, audio/vnd.ms-playready.media.pya, audio/vnd.nuera.ecelp4800, audio/vnd.nuera.ecelp7470, audio/vnd.nuera.ecelp9600, audio/vnd.rip, audio/wav, audio/wave, audio/webm, audio/x-aac, audio/x-aiff, audio/x-caf, audio/x-flac, audio/x-m4a, audio/x-matroska, audio/x-mpegurl, audio/x-ms-wax, audio/x-ms-wma, audio/x-pn-realaudio, audio/x-pn-realaudio-plugin, audio/x-realaudio, audio/x-wav, audio/xm, chemical/x-cdx, chemical/x-cif, chemical/x-cmdf, chemical/x-cml, chemical/x-csml, chemical/x-xyz, font/collection, font/otf, font/ttf, font/woff, font/woff2, image/apng, image/bmp, image/cgm, image/g3fax, image/gif, image/ief, image/jp2, image/jpeg, image/jpm, image/jpx, image/ktx, image/png, image/prs.btif, image/sgi, image/svg+xml, image/tiff, image/vnd.adobe.photoshop, image/vnd.dece.graphic, image/vnd.djvu, image/vnd.dvb.subtitle, image/vnd.dwg, image/vnd.dxf, image/vnd.fastbidsheet, image/vnd.fpx, image/vnd.fst, image/vnd.fujixerox.edmics-mmr, image/vnd.fujixerox.edmics-rlc, image/vnd.ms-modi, image/vnd.ms-photo, image/vnd.net-fpx, image/vnd.wap.wbmp, image/vnd.xiff, image/webp, image/x-3ds, image/x-cmu-raster, image/x-cmx, image/x-freehand, image/x-icon, image/x-jng, image/x-mrsid-image, image/x-ms-bmp, image/x-pcx, image/x-pict, image/x-portable-anymap, image/x-portable-bitmap, image/x-portable-graymap, image/x-portable-pixmap, image/x-rgb, image/x-tga, image/x-xbitmap, image/x-xpixmap, image/x-xwindowdump, message/rfc822, model/gltf+json, model/gltf-binary, model/iges, model/mesh, model/vnd.collada+xml, model/vnd.dwf, model/vnd.gdl, model/vnd.gtw, model/vnd.mts, model/vnd.vtu, model/vrml, model/x3d+binary, model/x3d+vrml, model/x3d+xml, text/cache-manifest, text/calendar, text/coffeescript, text/css, text/csv, text/hjson, text/html, text/jade, text/jsx, text/less, text/markdown, text/mathml, text/n3, text/plain, text/prs.lines.tag, text/richtext, text/rtf, text/sgml, text/slim, text/stylus, text/tab-separated-values, text/troff, text/turtle, text/uri-list, text/vcard, text/vnd.curl, text/vnd.curl.dcurl, text/vnd.curl.mcurl, text/vnd.curl.scurl, text/vnd.dvb.subtitle, text/vnd.fly, text/vnd.fmi.flexstor, text/vnd.graphviz, text/vnd.in3d.3dml, text/vnd.in3d.spot, text/vnd.sun.j2me.app-descriptor, text/vnd.wap.wml, text/vnd.wap.wmlscript, text/vtt, text/x-asm, text/x-c, text/x-component, text/x-fortran, text/x-handlebars-template, text/x-java-source, text/x-lua, text/x-markdown, text/x-nfo, text/x-opml, text/x-org, text/x-pascal, text/x-processing, text/x-sass, text/x-scss, text/x-setext, text/x-sfv, text/x-suse-ymp, text/x-uuencode, text/x-vcalendar, text/x-vcard, text/xml, text/yaml, video/3gpp, video/3gpp2, video/h261, video/h263, video/h264, video/jpeg, video/jpm, video/mj2, video/mp2t, video/mp4, video/mpeg, video/ogg, video/quicktime, video/vnd.dece.hd, video/vnd.dece.mobile, video/vnd.dece.pd, video/vnd.dece.sd, video/vnd.dece.video, video/vnd.dvb.file, video/vnd.fvt, video/vnd.mpegurl, video/vnd.ms-playready.media.pyv, video/vnd.uvvu.mp4, video/vnd.vivo, video/webm, video/x-f4v, video/x-fli, video/x-flv, video/x-m4v, video/x-matroska, video/x-mng, video/x-ms-asf, video/x-ms-vob, video/x-ms-wm, video/x-ms-wmv, video/x-ms-wmx, video/x-ms-wvx, video/x-msvideo, video/x-sgi-movie, video/x-smv, x-conference/x-cooltalk, default */
        /***/ function(module) {
          module.exports = {
            'application/andrew-inset': ['ez'],
            'application/applixware': ['aw'],
            'application/atom+xml': ['atom'],
            'application/atomcat+xml': ['atomcat'],
            'application/atomsvc+xml': ['atomsvc'],
            'application/bdoc': ['bdoc'],
            'application/ccxml+xml': ['ccxml'],
            'application/cdmi-capability': ['cdmia'],
            'application/cdmi-container': ['cdmic'],
            'application/cdmi-domain': ['cdmid'],
            'application/cdmi-object': ['cdmio'],
            'application/cdmi-queue': ['cdmiq'],
            'application/cu-seeme': ['cu'],
            'application/dash+xml': ['mpd'],
            'application/davmount+xml': ['davmount'],
            'application/docbook+xml': ['dbk'],
            'application/dssc+der': ['dssc'],
            'application/dssc+xml': ['xdssc'],
            'application/ecmascript': ['ecma'],
            'application/emma+xml': ['emma'],
            'application/epub+zip': ['epub'],
            'application/exi': ['exi'],
            'application/font-tdpfr': ['pfr'],
            'application/font-woff': [],
            'application/font-woff2': [],
            'application/geo+json': ['geojson'],
            'application/gml+xml': ['gml'],
            'application/gpx+xml': ['gpx'],
            'application/gxf': ['gxf'],
            'application/gzip': ['gz'],
            'application/hyperstudio': ['stk'],
            'application/inkml+xml': ['ink', 'inkml'],
            'application/ipfix': ['ipfix'],
            'application/java-archive': ['jar', 'war', 'ear'],
            'application/java-serialized-object': ['ser'],
            'application/java-vm': ['class'],
            'application/javascript': ['js', 'mjs'],
            'application/json': ['json', 'map'],
            'application/json5': ['json5'],
            'application/jsonml+json': ['jsonml'],
            'application/ld+json': ['jsonld'],
            'application/lost+xml': ['lostxml'],
            'application/mac-binhex40': ['hqx'],
            'application/mac-compactpro': ['cpt'],
            'application/mads+xml': ['mads'],
            'application/manifest+json': ['webmanifest'],
            'application/marc': ['mrc'],
            'application/marcxml+xml': ['mrcx'],
            'application/mathematica': ['ma', 'nb', 'mb'],
            'application/mathml+xml': ['mathml'],
            'application/mbox': ['mbox'],
            'application/mediaservercontrol+xml': ['mscml'],
            'application/metalink+xml': ['metalink'],
            'application/metalink4+xml': ['meta4'],
            'application/mets+xml': ['mets'],
            'application/mods+xml': ['mods'],
            'application/mp21': ['m21', 'mp21'],
            'application/mp4': ['mp4s', 'm4p'],
            'application/msword': ['doc', 'dot'],
            'application/mxf': ['mxf'],
            'application/octet-stream': [
              'bin',
              'dms',
              'lrf',
              'mar',
              'so',
              'dist',
              'distz',
              'pkg',
              'bpk',
              'dump',
              'elc',
              'deploy',
              'exe',
              'dll',
              'deb',
              'dmg',
              'iso',
              'img',
              'msi',
              'msp',
              'msm',
              'buffer'
            ],
            'application/oda': ['oda'],
            'application/oebps-package+xml': ['opf'],
            'application/ogg': ['ogx'],
            'application/omdoc+xml': ['omdoc'],
            'application/onenote': ['onetoc', 'onetoc2', 'onetmp', 'onepkg'],
            'application/oxps': ['oxps'],
            'application/patch-ops-error+xml': ['xer'],
            'application/pdf': ['pdf'],
            'application/pgp-encrypted': ['pgp'],
            'application/pgp-signature': ['asc', 'sig'],
            'application/pics-rules': ['prf'],
            'application/pkcs10': ['p10'],
            'application/pkcs7-mime': ['p7m', 'p7c'],
            'application/pkcs7-signature': ['p7s'],
            'application/pkcs8': ['p8'],
            'application/pkix-attr-cert': ['ac'],
            'application/pkix-cert': ['cer'],
            'application/pkix-crl': ['crl'],
            'application/pkix-pkipath': ['pkipath'],
            'application/pkixcmp': ['pki'],
            'application/pls+xml': ['pls'],
            'application/postscript': ['ai', 'eps', 'ps'],
            'application/prs.cww': ['cww'],
            'application/pskc+xml': ['pskcxml'],
            'application/raml+yaml': ['raml'],
            'application/rdf+xml': ['rdf'],
            'application/reginfo+xml': ['rif'],
            'application/relax-ng-compact-syntax': ['rnc'],
            'application/resource-lists+xml': ['rl'],
            'application/resource-lists-diff+xml': ['rld'],
            'application/rls-services+xml': ['rs'],
            'application/rpki-ghostbusters': ['gbr'],
            'application/rpki-manifest': ['mft'],
            'application/rpki-roa': ['roa'],
            'application/rsd+xml': ['rsd'],
            'application/rss+xml': ['rss'],
            'application/rtf': ['rtf'],
            'application/sbml+xml': ['sbml'],
            'application/scvp-cv-request': ['scq'],
            'application/scvp-cv-response': ['scs'],
            'application/scvp-vp-request': ['spq'],
            'application/scvp-vp-response': ['spp'],
            'application/sdp': ['sdp'],
            'application/set-payment-initiation': ['setpay'],
            'application/set-registration-initiation': ['setreg'],
            'application/shf+xml': ['shf'],
            'application/smil+xml': ['smi', 'smil'],
            'application/sparql-query': ['rq'],
            'application/sparql-results+xml': ['srx'],
            'application/srgs': ['gram'],
            'application/srgs+xml': ['grxml'],
            'application/sru+xml': ['sru'],
            'application/ssdl+xml': ['ssdl'],
            'application/ssml+xml': ['ssml'],
            'application/tei+xml': ['tei', 'teicorpus'],
            'application/thraud+xml': ['tfi'],
            'application/timestamped-data': ['tsd'],
            'application/vnd.3gpp.pic-bw-large': ['plb'],
            'application/vnd.3gpp.pic-bw-small': ['psb'],
            'application/vnd.3gpp.pic-bw-var': ['pvb'],
            'application/vnd.3gpp2.tcap': ['tcap'],
            'application/vnd.3m.post-it-notes': ['pwn'],
            'application/vnd.accpac.simply.aso': ['aso'],
            'application/vnd.accpac.simply.imp': ['imp'],
            'application/vnd.acucobol': ['acu'],
            'application/vnd.acucorp': ['atc', 'acutc'],
            'application/vnd.adobe.air-application-installer-package+zip': [
              'air'
            ],
            'application/vnd.adobe.formscentral.fcdt': ['fcdt'],
            'application/vnd.adobe.fxp': ['fxp', 'fxpl'],
            'application/vnd.adobe.xdp+xml': ['xdp'],
            'application/vnd.adobe.xfdf': ['xfdf'],
            'application/vnd.ahead.space': ['ahead'],
            'application/vnd.airzip.filesecure.azf': ['azf'],
            'application/vnd.airzip.filesecure.azs': ['azs'],
            'application/vnd.amazon.ebook': ['azw'],
            'application/vnd.americandynamics.acc': ['acc'],
            'application/vnd.amiga.ami': ['ami'],
            'application/vnd.android.package-archive': ['apk'],
            'application/vnd.anser-web-certificate-issue-initiation': ['cii'],
            'application/vnd.anser-web-funds-transfer-initiation': ['fti'],
            'application/vnd.antix.game-component': ['atx'],
            'application/vnd.apple.installer+xml': ['mpkg'],
            'application/vnd.apple.mpegurl': ['m3u8'],
            'application/vnd.apple.pkpass': ['pkpass'],
            'application/vnd.aristanetworks.swi': ['swi'],
            'application/vnd.astraea-software.iota': ['iota'],
            'application/vnd.audiograph': ['aep'],
            'application/vnd.blueice.multipass': ['mpm'],
            'application/vnd.bmi': ['bmi'],
            'application/vnd.businessobjects': ['rep'],
            'application/vnd.chemdraw+xml': ['cdxml'],
            'application/vnd.chipnuts.karaoke-mmd': ['mmd'],
            'application/vnd.cinderella': ['cdy'],
            'application/vnd.claymore': ['cla'],
            'application/vnd.cloanto.rp9': ['rp9'],
            'application/vnd.clonk.c4group': [
              'c4g',
              'c4d',
              'c4f',
              'c4p',
              'c4u'
            ],
            'application/vnd.cluetrust.cartomobile-config': ['c11amc'],
            'application/vnd.cluetrust.cartomobile-config-pkg': ['c11amz'],
            'application/vnd.commonspace': ['csp'],
            'application/vnd.contact.cmsg': ['cdbcmsg'],
            'application/vnd.cosmocaller': ['cmc'],
            'application/vnd.crick.clicker': ['clkx'],
            'application/vnd.crick.clicker.keyboard': ['clkk'],
            'application/vnd.crick.clicker.palette': ['clkp'],
            'application/vnd.crick.clicker.template': ['clkt'],
            'application/vnd.crick.clicker.wordbank': ['clkw'],
            'application/vnd.criticaltools.wbs+xml': ['wbs'],
            'application/vnd.ctc-posml': ['pml'],
            'application/vnd.cups-ppd': ['ppd'],
            'application/vnd.curl.car': ['car'],
            'application/vnd.curl.pcurl': ['pcurl'],
            'application/vnd.dart': ['dart'],
            'application/vnd.data-vision.rdz': ['rdz'],
            'application/vnd.dece.data': ['uvf', 'uvvf', 'uvd', 'uvvd'],
            'application/vnd.dece.ttml+xml': ['uvt', 'uvvt'],
            'application/vnd.dece.unspecified': ['uvx', 'uvvx'],
            'application/vnd.dece.zip': ['uvz', 'uvvz'],
            'application/vnd.denovo.fcselayout-link': ['fe_launch'],
            'application/vnd.dna': ['dna'],
            'application/vnd.dolby.mlp': ['mlp'],
            'application/vnd.dpgraph': ['dpg'],
            'application/vnd.dreamfactory': ['dfac'],
            'application/vnd.ds-keypoint': ['kpxx'],
            'application/vnd.dvb.ait': ['ait'],
            'application/vnd.dvb.service': ['svc'],
            'application/vnd.dynageo': ['geo'],
            'application/vnd.ecowin.chart': ['mag'],
            'application/vnd.enliven': ['nml'],
            'application/vnd.epson.esf': ['esf'],
            'application/vnd.epson.msf': ['msf'],
            'application/vnd.epson.quickanime': ['qam'],
            'application/vnd.epson.salt': ['slt'],
            'application/vnd.epson.ssf': ['ssf'],
            'application/vnd.eszigno3+xml': ['es3', 'et3'],
            'application/vnd.ezpix-album': ['ez2'],
            'application/vnd.ezpix-package': ['ez3'],
            'application/vnd.fdf': ['fdf'],
            'application/vnd.fdsn.mseed': ['mseed'],
            'application/vnd.fdsn.seed': ['seed', 'dataless'],
            'application/vnd.flographit': ['gph'],
            'application/vnd.fluxtime.clip': ['ftc'],
            'application/vnd.framemaker': ['fm', 'frame', 'maker', 'book'],
            'application/vnd.frogans.fnc': ['fnc'],
            'application/vnd.frogans.ltf': ['ltf'],
            'application/vnd.fsc.weblaunch': ['fsc'],
            'application/vnd.fujitsu.oasys': ['oas'],
            'application/vnd.fujitsu.oasys2': ['oa2'],
            'application/vnd.fujitsu.oasys3': ['oa3'],
            'application/vnd.fujitsu.oasysgp': ['fg5'],
            'application/vnd.fujitsu.oasysprs': ['bh2'],
            'application/vnd.fujixerox.ddd': ['ddd'],
            'application/vnd.fujixerox.docuworks': ['xdw'],
            'application/vnd.fujixerox.docuworks.binder': ['xbd'],
            'application/vnd.fuzzysheet': ['fzs'],
            'application/vnd.genomatix.tuxedo': ['txd'],
            'application/vnd.geogebra.file': ['ggb'],
            'application/vnd.geogebra.tool': ['ggt'],
            'application/vnd.geometry-explorer': ['gex', 'gre'],
            'application/vnd.geonext': ['gxt'],
            'application/vnd.geoplan': ['g2w'],
            'application/vnd.geospace': ['g3w'],
            'application/vnd.gmx': ['gmx'],
            'application/vnd.google-apps.document': ['gdoc'],
            'application/vnd.google-apps.presentation': ['gslides'],
            'application/vnd.google-apps.spreadsheet': ['gsheet'],
            'application/vnd.google-earth.kml+xml': ['kml'],
            'application/vnd.google-earth.kmz': ['kmz'],
            'application/vnd.grafeq': ['gqf', 'gqs'],
            'application/vnd.groove-account': ['gac'],
            'application/vnd.groove-help': ['ghf'],
            'application/vnd.groove-identity-message': ['gim'],
            'application/vnd.groove-injector': ['grv'],
            'application/vnd.groove-tool-message': ['gtm'],
            'application/vnd.groove-tool-template': ['tpl'],
            'application/vnd.groove-vcard': ['vcg'],
            'application/vnd.hal+xml': ['hal'],
            'application/vnd.handheld-entertainment+xml': ['zmm'],
            'application/vnd.hbci': ['hbci'],
            'application/vnd.hhe.lesson-player': ['les'],
            'application/vnd.hp-hpgl': ['hpgl'],
            'application/vnd.hp-hpid': ['hpid'],
            'application/vnd.hp-hps': ['hps'],
            'application/vnd.hp-jlyt': ['jlt'],
            'application/vnd.hp-pcl': ['pcl'],
            'application/vnd.hp-pclxl': ['pclxl'],
            'application/vnd.hydrostatix.sof-data': ['sfd-hdstx'],
            'application/vnd.ibm.minipay': ['mpy'],
            'application/vnd.ibm.modcap': ['afp', 'listafp', 'list3820'],
            'application/vnd.ibm.rights-management': ['irm'],
            'application/vnd.ibm.secure-container': ['sc'],
            'application/vnd.iccprofile': ['icc', 'icm'],
            'application/vnd.igloader': ['igl'],
            'application/vnd.immervision-ivp': ['ivp'],
            'application/vnd.immervision-ivu': ['ivu'],
            'application/vnd.insors.igm': ['igm'],
            'application/vnd.intercon.formnet': ['xpw', 'xpx'],
            'application/vnd.intergeo': ['i2g'],
            'application/vnd.intu.qbo': ['qbo'],
            'application/vnd.intu.qfx': ['qfx'],
            'application/vnd.ipunplugged.rcprofile': ['rcprofile'],
            'application/vnd.irepository.package+xml': ['irp'],
            'application/vnd.is-xpr': ['xpr'],
            'application/vnd.isac.fcs': ['fcs'],
            'application/vnd.jam': ['jam'],
            'application/vnd.jcp.javame.midlet-rms': ['rms'],
            'application/vnd.jisp': ['jisp'],
            'application/vnd.joost.joda-archive': ['joda'],
            'application/vnd.kahootz': ['ktz', 'ktr'],
            'application/vnd.kde.karbon': ['karbon'],
            'application/vnd.kde.kchart': ['chrt'],
            'application/vnd.kde.kformula': ['kfo'],
            'application/vnd.kde.kivio': ['flw'],
            'application/vnd.kde.kontour': ['kon'],
            'application/vnd.kde.kpresenter': ['kpr', 'kpt'],
            'application/vnd.kde.kspread': ['ksp'],
            'application/vnd.kde.kword': ['kwd', 'kwt'],
            'application/vnd.kenameaapp': ['htke'],
            'application/vnd.kidspiration': ['kia'],
            'application/vnd.kinar': ['kne', 'knp'],
            'application/vnd.koan': ['skp', 'skd', 'skt', 'skm'],
            'application/vnd.kodak-descriptor': ['sse'],
            'application/vnd.las.las+xml': ['lasxml'],
            'application/vnd.llamagraphics.life-balance.desktop': ['lbd'],
            'application/vnd.llamagraphics.life-balance.exchange+xml': ['lbe'],
            'application/vnd.lotus-1-2-3': ['123'],
            'application/vnd.lotus-approach': ['apr'],
            'application/vnd.lotus-freelance': ['pre'],
            'application/vnd.lotus-notes': ['nsf'],
            'application/vnd.lotus-organizer': ['org'],
            'application/vnd.lotus-screencam': ['scm'],
            'application/vnd.lotus-wordpro': ['lwp'],
            'application/vnd.macports.portpkg': ['portpkg'],
            'application/vnd.mcd': ['mcd'],
            'application/vnd.medcalcdata': ['mc1'],
            'application/vnd.mediastation.cdkey': ['cdkey'],
            'application/vnd.mfer': ['mwf'],
            'application/vnd.mfmp': ['mfm'],
            'application/vnd.micrografx.flo': ['flo'],
            'application/vnd.micrografx.igx': ['igx'],
            'application/vnd.mif': ['mif'],
            'application/vnd.mobius.daf': ['daf'],
            'application/vnd.mobius.dis': ['dis'],
            'application/vnd.mobius.mbk': ['mbk'],
            'application/vnd.mobius.mqy': ['mqy'],
            'application/vnd.mobius.msl': ['msl'],
            'application/vnd.mobius.plc': ['plc'],
            'application/vnd.mobius.txf': ['txf'],
            'application/vnd.mophun.application': ['mpn'],
            'application/vnd.mophun.certificate': ['mpc'],
            'application/vnd.mozilla.xul+xml': ['xul'],
            'application/vnd.ms-artgalry': ['cil'],
            'application/vnd.ms-cab-compressed': ['cab'],
            'application/vnd.ms-excel': [
              'xls',
              'xlm',
              'xla',
              'xlc',
              'xlt',
              'xlw'
            ],
            'application/vnd.ms-excel.addin.macroenabled.12': ['xlam'],
            'application/vnd.ms-excel.sheet.binary.macroenabled.12': ['xlsb'],
            'application/vnd.ms-excel.sheet.macroenabled.12': ['xlsm'],
            'application/vnd.ms-excel.template.macroenabled.12': ['xltm'],
            'application/vnd.ms-fontobject': ['eot'],
            'application/vnd.ms-htmlhelp': ['chm'],
            'application/vnd.ms-ims': ['ims'],
            'application/vnd.ms-lrm': ['lrm'],
            'application/vnd.ms-officetheme': ['thmx'],
            'application/vnd.ms-outlook': ['msg'],
            'application/vnd.ms-pki.seccat': ['cat'],
            'application/vnd.ms-pki.stl': ['stl'],
            'application/vnd.ms-powerpoint': ['ppt', 'pps', 'pot'],
            'application/vnd.ms-powerpoint.addin.macroenabled.12': ['ppam'],
            'application/vnd.ms-powerpoint.presentation.macroenabled.12': [
              'pptm'
            ],
            'application/vnd.ms-powerpoint.slide.macroenabled.12': ['sldm'],
            'application/vnd.ms-powerpoint.slideshow.macroenabled.12': ['ppsm'],
            'application/vnd.ms-powerpoint.template.macroenabled.12': ['potm'],
            'application/vnd.ms-project': ['mpp', 'mpt'],
            'application/vnd.ms-word.document.macroenabled.12': ['docm'],
            'application/vnd.ms-word.template.macroenabled.12': ['dotm'],
            'application/vnd.ms-works': ['wps', 'wks', 'wcm', 'wdb'],
            'application/vnd.ms-wpl': ['wpl'],
            'application/vnd.ms-xpsdocument': ['xps'],
            'application/vnd.mseq': ['mseq'],
            'application/vnd.musician': ['mus'],
            'application/vnd.muvee.style': ['msty'],
            'application/vnd.mynfc': ['taglet'],
            'application/vnd.neurolanguage.nlu': ['nlu'],
            'application/vnd.nitf': ['ntf', 'nitf'],
            'application/vnd.noblenet-directory': ['nnd'],
            'application/vnd.noblenet-sealer': ['nns'],
            'application/vnd.noblenet-web': ['nnw'],
            'application/vnd.nokia.n-gage.data': ['ngdat'],
            'application/vnd.nokia.n-gage.symbian.install': ['n-gage'],
            'application/vnd.nokia.radio-preset': ['rpst'],
            'application/vnd.nokia.radio-presets': ['rpss'],
            'application/vnd.novadigm.edm': ['edm'],
            'application/vnd.novadigm.edx': ['edx'],
            'application/vnd.novadigm.ext': ['ext'],
            'application/vnd.oasis.opendocument.chart': ['odc'],
            'application/vnd.oasis.opendocument.chart-template': ['otc'],
            'application/vnd.oasis.opendocument.database': ['odb'],
            'application/vnd.oasis.opendocument.formula': ['odf'],
            'application/vnd.oasis.opendocument.formula-template': ['odft'],
            'application/vnd.oasis.opendocument.graphics': ['odg'],
            'application/vnd.oasis.opendocument.graphics-template': ['otg'],
            'application/vnd.oasis.opendocument.image': ['odi'],
            'application/vnd.oasis.opendocument.image-template': ['oti'],
            'application/vnd.oasis.opendocument.presentation': ['odp'],
            'application/vnd.oasis.opendocument.presentation-template': ['otp'],
            'application/vnd.oasis.opendocument.spreadsheet': ['ods'],
            'application/vnd.oasis.opendocument.spreadsheet-template': ['ots'],
            'application/vnd.oasis.opendocument.text': ['odt'],
            'application/vnd.oasis.opendocument.text-master': ['odm'],
            'application/vnd.oasis.opendocument.text-template': ['ott'],
            'application/vnd.oasis.opendocument.text-web': ['oth'],
            'application/vnd.olpc-sugar': ['xo'],
            'application/vnd.oma.dd2+xml': ['dd2'],
            'application/vnd.openofficeorg.extension': ['oxt'],
            'application/vnd.openxmlformats-officedocument.presentationml.presentation': [
              'pptx'
            ],
            'application/vnd.openxmlformats-officedocument.presentationml.slide': [
              'sldx'
            ],
            'application/vnd.openxmlformats-officedocument.presentationml.slideshow': [
              'ppsx'
            ],
            'application/vnd.openxmlformats-officedocument.presentationml.template': [
              'potx'
            ],
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': [
              'xlsx'
            ],
            'application/vnd.openxmlformats-officedocument.spreadsheetml.template': [
              'xltx'
            ],
            'application/vnd.openxmlformats-officedocument.wordprocessingml.document': [
              'docx'
            ],
            'application/vnd.openxmlformats-officedocument.wordprocessingml.template': [
              'dotx'
            ],
            'application/vnd.osgeo.mapguide.package': ['mgp'],
            'application/vnd.osgi.dp': ['dp'],
            'application/vnd.osgi.subsystem': ['esa'],
            'application/vnd.palm': ['pdb', 'pqa', 'oprc'],
            'application/vnd.pawaafile': ['paw'],
            'application/vnd.pg.format': ['str'],
            'application/vnd.pg.osasli': ['ei6'],
            'application/vnd.picsel': ['efif'],
            'application/vnd.pmi.widget': ['wg'],
            'application/vnd.pocketlearn': ['plf'],
            'application/vnd.powerbuilder6': ['pbd'],
            'application/vnd.previewsystems.box': ['box'],
            'application/vnd.proteus.magazine': ['mgz'],
            'application/vnd.publishare-delta-tree': ['qps'],
            'application/vnd.pvi.ptid1': ['ptid'],
            'application/vnd.quark.quarkxpress': [
              'qxd',
              'qxt',
              'qwd',
              'qwt',
              'qxl',
              'qxb'
            ],
            'application/vnd.realvnc.bed': ['bed'],
            'application/vnd.recordare.musicxml': ['mxl'],
            'application/vnd.recordare.musicxml+xml': ['musicxml'],
            'application/vnd.rig.cryptonote': ['cryptonote'],
            'application/vnd.rim.cod': ['cod'],
            'application/vnd.rn-realmedia': ['rm'],
            'application/vnd.rn-realmedia-vbr': ['rmvb'],
            'application/vnd.route66.link66+xml': ['link66'],
            'application/vnd.sailingtracker.track': ['st'],
            'application/vnd.seemail': ['see'],
            'application/vnd.sema': ['sema'],
            'application/vnd.semd': ['semd'],
            'application/vnd.semf': ['semf'],
            'application/vnd.shana.informed.formdata': ['ifm'],
            'application/vnd.shana.informed.formtemplate': ['itp'],
            'application/vnd.shana.informed.interchange': ['iif'],
            'application/vnd.shana.informed.package': ['ipk'],
            'application/vnd.simtech-mindmapper': ['twd', 'twds'],
            'application/vnd.smaf': ['mmf'],
            'application/vnd.smart.teacher': ['teacher'],
            'application/vnd.solent.sdkm+xml': ['sdkm', 'sdkd'],
            'application/vnd.spotfire.dxp': ['dxp'],
            'application/vnd.spotfire.sfs': ['sfs'],
            'application/vnd.stardivision.calc': ['sdc'],
            'application/vnd.stardivision.draw': ['sda'],
            'application/vnd.stardivision.impress': ['sdd'],
            'application/vnd.stardivision.math': ['smf'],
            'application/vnd.stardivision.writer': ['sdw', 'vor'],
            'application/vnd.stardivision.writer-global': ['sgl'],
            'application/vnd.stepmania.package': ['smzip'],
            'application/vnd.stepmania.stepchart': ['sm'],
            'application/vnd.sun.wadl+xml': ['wadl'],
            'application/vnd.sun.xml.calc': ['sxc'],
            'application/vnd.sun.xml.calc.template': ['stc'],
            'application/vnd.sun.xml.draw': ['sxd'],
            'application/vnd.sun.xml.draw.template': ['std'],
            'application/vnd.sun.xml.impress': ['sxi'],
            'application/vnd.sun.xml.impress.template': ['sti'],
            'application/vnd.sun.xml.math': ['sxm'],
            'application/vnd.sun.xml.writer': ['sxw'],
            'application/vnd.sun.xml.writer.global': ['sxg'],
            'application/vnd.sun.xml.writer.template': ['stw'],
            'application/vnd.sus-calendar': ['sus', 'susp'],
            'application/vnd.svd': ['svd'],
            'application/vnd.symbian.install': ['sis', 'sisx'],
            'application/vnd.syncml+xml': ['xsm'],
            'application/vnd.syncml.dm+wbxml': ['bdm'],
            'application/vnd.syncml.dm+xml': ['xdm'],
            'application/vnd.tao.intent-module-archive': ['tao'],
            'application/vnd.tcpdump.pcap': ['pcap', 'cap', 'dmp'],
            'application/vnd.tmobile-livetv': ['tmo'],
            'application/vnd.trid.tpt': ['tpt'],
            'application/vnd.triscape.mxs': ['mxs'],
            'application/vnd.trueapp': ['tra'],
            'application/vnd.ufdl': ['ufd', 'ufdl'],
            'application/vnd.uiq.theme': ['utz'],
            'application/vnd.umajin': ['umj'],
            'application/vnd.unity': ['unityweb'],
            'application/vnd.uoml+xml': ['uoml'],
            'application/vnd.vcx': ['vcx'],
            'application/vnd.visio': ['vsd', 'vst', 'vss', 'vsw'],
            'application/vnd.visionary': ['vis'],
            'application/vnd.vsf': ['vsf'],
            'application/vnd.wap.wbxml': ['wbxml'],
            'application/vnd.wap.wmlc': ['wmlc'],
            'application/vnd.wap.wmlscriptc': ['wmlsc'],
            'application/vnd.webturbo': ['wtb'],
            'application/vnd.wolfram.player': ['nbp'],
            'application/vnd.wordperfect': ['wpd'],
            'application/vnd.wqd': ['wqd'],
            'application/vnd.wt.stf': ['stf'],
            'application/vnd.xara': ['xar'],
            'application/vnd.xfdl': ['xfdl'],
            'application/vnd.yamaha.hv-dic': ['hvd'],
            'application/vnd.yamaha.hv-script': ['hvs'],
            'application/vnd.yamaha.hv-voice': ['hvp'],
            'application/vnd.yamaha.openscoreformat': ['osf'],
            'application/vnd.yamaha.openscoreformat.osfpvg+xml': ['osfpvg'],
            'application/vnd.yamaha.smaf-audio': ['saf'],
            'application/vnd.yamaha.smaf-phrase': ['spf'],
            'application/vnd.yellowriver-custom-menu': ['cmp'],
            'application/vnd.zul': ['zir', 'zirz'],
            'application/vnd.zzazz.deck+xml': ['zaz'],
            'application/voicexml+xml': ['vxml'],
            'application/wasm': ['wasm'],
            'application/widget': ['wgt'],
            'application/winhlp': ['hlp'],
            'application/wsdl+xml': ['wsdl'],
            'application/wspolicy+xml': ['wspolicy'],
            'application/x-7z-compressed': ['7z'],
            'application/x-abiword': ['abw'],
            'application/x-ace-compressed': ['ace'],
            'application/x-apple-diskimage': [],
            'application/x-arj': ['arj'],
            'application/x-authorware-bin': ['aab', 'x32', 'u32', 'vox'],
            'application/x-authorware-map': ['aam'],
            'application/x-authorware-seg': ['aas'],
            'application/x-bcpio': ['bcpio'],
            'application/x-bdoc': [],
            'application/x-bittorrent': ['torrent'],
            'application/x-blorb': ['blb', 'blorb'],
            'application/x-bzip': ['bz'],
            'application/x-bzip2': ['bz2', 'boz'],
            'application/x-cbr': ['cbr', 'cba', 'cbt', 'cbz', 'cb7'],
            'application/x-cdlink': ['vcd'],
            'application/x-cfs-compressed': ['cfs'],
            'application/x-chat': ['chat'],
            'application/x-chess-pgn': ['pgn'],
            'application/x-chrome-extension': ['crx'],
            'application/x-cocoa': ['cco'],
            'application/x-conference': ['nsc'],
            'application/x-cpio': ['cpio'],
            'application/x-csh': ['csh'],
            'application/x-debian-package': ['udeb'],
            'application/x-dgc-compressed': ['dgc'],
            'application/x-director': [
              'dir',
              'dcr',
              'dxr',
              'cst',
              'cct',
              'cxt',
              'w3d',
              'fgd',
              'swa'
            ],
            'application/x-doom': ['wad'],
            'application/x-dtbncx+xml': ['ncx'],
            'application/x-dtbook+xml': ['dtb'],
            'application/x-dtbresource+xml': ['res'],
            'application/x-dvi': ['dvi'],
            'application/x-envoy': ['evy'],
            'application/x-eva': ['eva'],
            'application/x-font-bdf': ['bdf'],
            'application/x-font-ghostscript': ['gsf'],
            'application/x-font-linux-psf': ['psf'],
            'application/x-font-pcf': ['pcf'],
            'application/x-font-snf': ['snf'],
            'application/x-font-type1': ['pfa', 'pfb', 'pfm', 'afm'],
            'application/x-freearc': ['arc'],
            'application/x-futuresplash': ['spl'],
            'application/x-gca-compressed': ['gca'],
            'application/x-glulx': ['ulx'],
            'application/x-gnumeric': ['gnumeric'],
            'application/x-gramps-xml': ['gramps'],
            'application/x-gtar': ['gtar'],
            'application/x-hdf': ['hdf'],
            'application/x-httpd-php': ['php'],
            'application/x-install-instructions': ['install'],
            'application/x-iso9660-image': [],
            'application/x-java-archive-diff': ['jardiff'],
            'application/x-java-jnlp-file': ['jnlp'],
            'application/x-latex': ['latex'],
            'application/x-lua-bytecode': ['luac'],
            'application/x-lzh-compressed': ['lzh', 'lha'],
            'application/x-makeself': ['run'],
            'application/x-mie': ['mie'],
            'application/x-mobipocket-ebook': ['prc', 'mobi'],
            'application/x-ms-application': ['application'],
            'application/x-ms-shortcut': ['lnk'],
            'application/x-ms-wmd': ['wmd'],
            'application/x-ms-wmz': ['wmz'],
            'application/x-ms-xbap': ['xbap'],
            'application/x-msaccess': ['mdb'],
            'application/x-msbinder': ['obd'],
            'application/x-mscardfile': ['crd'],
            'application/x-msclip': ['clp'],
            'application/x-msdos-program': [],
            'application/x-msdownload': ['com', 'bat'],
            'application/x-msmediaview': ['mvb', 'm13', 'm14'],
            'application/x-msmetafile': ['wmf', 'emf', 'emz'],
            'application/x-msmoney': ['mny'],
            'application/x-mspublisher': ['pub'],
            'application/x-msschedule': ['scd'],
            'application/x-msterminal': ['trm'],
            'application/x-mswrite': ['wri'],
            'application/x-netcdf': ['nc', 'cdf'],
            'application/x-ns-proxy-autoconfig': ['pac'],
            'application/x-nzb': ['nzb'],
            'application/x-perl': ['pl', 'pm'],
            'application/x-pilot': [],
            'application/x-pkcs12': ['p12', 'pfx'],
            'application/x-pkcs7-certificates': ['p7b', 'spc'],
            'application/x-pkcs7-certreqresp': ['p7r'],
            'application/x-rar-compressed': ['rar'],
            'application/x-redhat-package-manager': ['rpm'],
            'application/x-research-info-systems': ['ris'],
            'application/x-sea': ['sea'],
            'application/x-sh': ['sh'],
            'application/x-shar': ['shar'],
            'application/x-shockwave-flash': ['swf'],
            'application/x-silverlight-app': ['xap'],
            'application/x-sql': ['sql'],
            'application/x-stuffit': ['sit'],
            'application/x-stuffitx': ['sitx'],
            'application/x-subrip': ['srt'],
            'application/x-sv4cpio': ['sv4cpio'],
            'application/x-sv4crc': ['sv4crc'],
            'application/x-t3vm-image': ['t3'],
            'application/x-tads': ['gam'],
            'application/x-tar': ['tar'],
            'application/x-tcl': ['tcl', 'tk'],
            'application/x-tex': ['tex'],
            'application/x-tex-tfm': ['tfm'],
            'application/x-texinfo': ['texinfo', 'texi'],
            'application/x-tgif': ['obj'],
            'application/x-ustar': ['ustar'],
            'application/x-virtualbox-hdd': ['hdd'],
            'application/x-virtualbox-ova': ['ova'],
            'application/x-virtualbox-ovf': ['ovf'],
            'application/x-virtualbox-vbox': ['vbox'],
            'application/x-virtualbox-vbox-extpack': ['vbox-extpack'],
            'application/x-virtualbox-vdi': ['vdi'],
            'application/x-virtualbox-vhd': ['vhd'],
            'application/x-virtualbox-vmdk': ['vmdk'],
            'application/x-wais-source': ['src'],
            'application/x-web-app-manifest+json': ['webapp'],
            'application/x-x509-ca-cert': ['der', 'crt', 'pem'],
            'application/x-xfig': ['fig'],
            'application/x-xliff+xml': ['xlf'],
            'application/x-xpinstall': ['xpi'],
            'application/x-xz': ['xz'],
            'application/x-zmachine': [
              'z1',
              'z2',
              'z3',
              'z4',
              'z5',
              'z6',
              'z7',
              'z8'
            ],
            'application/xaml+xml': ['xaml'],
            'application/xcap-diff+xml': ['xdf'],
            'application/xenc+xml': ['xenc'],
            'application/xhtml+xml': ['xhtml', 'xht'],
            'application/xml': ['xml', 'xsl', 'xsd', 'rng'],
            'application/xml-dtd': ['dtd'],
            'application/xop+xml': ['xop'],
            'application/xproc+xml': ['xpl'],
            'application/xslt+xml': ['xslt'],
            'application/xspf+xml': ['xspf'],
            'application/xv+xml': ['mxml', 'xhvml', 'xvml', 'xvm'],
            'application/yang': ['yang'],
            'application/yin+xml': ['yin'],
            'application/zip': ['zip'],
            'audio/3gpp': [],
            'audio/adpcm': ['adp'],
            'audio/basic': ['au', 'snd'],
            'audio/midi': ['mid', 'midi', 'kar', 'rmi'],
            'audio/mp3': [],
            'audio/mp4': ['m4a', 'mp4a'],
            'audio/mpeg': ['mpga', 'mp2', 'mp2a', 'mp3', 'm2a', 'm3a'],
            'audio/ogg': ['oga', 'ogg', 'spx'],
            'audio/s3m': ['s3m'],
            'audio/silk': ['sil'],
            'audio/vnd.dece.audio': ['uva', 'uvva'],
            'audio/vnd.digital-winds': ['eol'],
            'audio/vnd.dra': ['dra'],
            'audio/vnd.dts': ['dts'],
            'audio/vnd.dts.hd': ['dtshd'],
            'audio/vnd.lucent.voice': ['lvp'],
            'audio/vnd.ms-playready.media.pya': ['pya'],
            'audio/vnd.nuera.ecelp4800': ['ecelp4800'],
            'audio/vnd.nuera.ecelp7470': ['ecelp7470'],
            'audio/vnd.nuera.ecelp9600': ['ecelp9600'],
            'audio/vnd.rip': ['rip'],
            'audio/wav': ['wav'],
            'audio/wave': [],
            'audio/webm': ['weba'],
            'audio/x-aac': ['aac'],
            'audio/x-aiff': ['aif', 'aiff', 'aifc'],
            'audio/x-caf': ['caf'],
            'audio/x-flac': ['flac'],
            'audio/x-m4a': [],
            'audio/x-matroska': ['mka'],
            'audio/x-mpegurl': ['m3u'],
            'audio/x-ms-wax': ['wax'],
            'audio/x-ms-wma': ['wma'],
            'audio/x-pn-realaudio': ['ram', 'ra'],
            'audio/x-pn-realaudio-plugin': ['rmp'],
            'audio/x-realaudio': [],
            'audio/x-wav': [],
            'audio/xm': ['xm'],
            'chemical/x-cdx': ['cdx'],
            'chemical/x-cif': ['cif'],
            'chemical/x-cmdf': ['cmdf'],
            'chemical/x-cml': ['cml'],
            'chemical/x-csml': ['csml'],
            'chemical/x-xyz': ['xyz'],
            'font/collection': ['ttc'],
            'font/otf': ['otf'],
            'font/ttf': ['ttf'],
            'font/woff': ['woff'],
            'font/woff2': ['woff2'],
            'image/apng': ['apng'],
            'image/bmp': ['bmp'],
            'image/cgm': ['cgm'],
            'image/g3fax': ['g3'],
            'image/gif': ['gif'],
            'image/ief': ['ief'],
            'image/jp2': ['jp2', 'jpg2'],
            'image/jpeg': ['jpeg', 'jpg', 'jpe'],
            'image/jpm': ['jpm'],
            'image/jpx': ['jpx', 'jpf'],
            'image/ktx': ['ktx'],
            'image/png': ['png'],
            'image/prs.btif': ['btif'],
            'image/sgi': ['sgi'],
            'image/svg+xml': ['svg', 'svgz'],
            'image/tiff': ['tiff', 'tif'],
            'image/vnd.adobe.photoshop': ['psd'],
            'image/vnd.dece.graphic': ['uvi', 'uvvi', 'uvg', 'uvvg'],
            'image/vnd.djvu': ['djvu', 'djv'],
            'image/vnd.dvb.subtitle': [],
            'image/vnd.dwg': ['dwg'],
            'image/vnd.dxf': ['dxf'],
            'image/vnd.fastbidsheet': ['fbs'],
            'image/vnd.fpx': ['fpx'],
            'image/vnd.fst': ['fst'],
            'image/vnd.fujixerox.edmics-mmr': ['mmr'],
            'image/vnd.fujixerox.edmics-rlc': ['rlc'],
            'image/vnd.ms-modi': ['mdi'],
            'image/vnd.ms-photo': ['wdp'],
            'image/vnd.net-fpx': ['npx'],
            'image/vnd.wap.wbmp': ['wbmp'],
            'image/vnd.xiff': ['xif'],
            'image/webp': ['webp'],
            'image/x-3ds': ['3ds'],
            'image/x-cmu-raster': ['ras'],
            'image/x-cmx': ['cmx'],
            'image/x-freehand': ['fh', 'fhc', 'fh4', 'fh5', 'fh7'],
            'image/x-icon': ['ico'],
            'image/x-jng': ['jng'],
            'image/x-mrsid-image': ['sid'],
            'image/x-ms-bmp': [],
            'image/x-pcx': ['pcx'],
            'image/x-pict': ['pic', 'pct'],
            'image/x-portable-anymap': ['pnm'],
            'image/x-portable-bitmap': ['pbm'],
            'image/x-portable-graymap': ['pgm'],
            'image/x-portable-pixmap': ['ppm'],
            'image/x-rgb': ['rgb'],
            'image/x-tga': ['tga'],
            'image/x-xbitmap': ['xbm'],
            'image/x-xpixmap': ['xpm'],
            'image/x-xwindowdump': ['xwd'],
            'message/rfc822': ['eml', 'mime'],
            'model/gltf+json': ['gltf'],
            'model/gltf-binary': ['glb'],
            'model/iges': ['igs', 'iges'],
            'model/mesh': ['msh', 'mesh', 'silo'],
            'model/vnd.collada+xml': ['dae'],
            'model/vnd.dwf': ['dwf'],
            'model/vnd.gdl': ['gdl'],
            'model/vnd.gtw': ['gtw'],
            'model/vnd.mts': ['mts'],
            'model/vnd.vtu': ['vtu'],
            'model/vrml': ['wrl', 'vrml'],
            'model/x3d+binary': ['x3db', 'x3dbz'],
            'model/x3d+vrml': ['x3dv', 'x3dvz'],
            'model/x3d+xml': ['x3d', 'x3dz'],
            'text/cache-manifest': ['appcache', 'manifest'],
            'text/calendar': ['ics', 'ifb'],
            'text/coffeescript': ['coffee', 'litcoffee'],
            'text/css': ['css'],
            'text/csv': ['csv'],
            'text/hjson': ['hjson'],
            'text/html': ['html', 'htm', 'shtml'],
            'text/jade': ['jade'],
            'text/jsx': ['jsx'],
            'text/less': ['less'],
            'text/markdown': ['markdown', 'md'],
            'text/mathml': ['mml'],
            'text/n3': ['n3'],
            'text/plain': [
              'txt',
              'text',
              'conf',
              'def',
              'list',
              'log',
              'in',
              'ini'
            ],
            'text/prs.lines.tag': ['dsc'],
            'text/richtext': ['rtx'],
            'text/rtf': [],
            'text/sgml': ['sgml', 'sgm'],
            'text/slim': ['slim', 'slm'],
            'text/stylus': ['stylus', 'styl'],
            'text/tab-separated-values': ['tsv'],
            'text/troff': ['t', 'tr', 'roff', 'man', 'me', 'ms'],
            'text/turtle': ['ttl'],
            'text/uri-list': ['uri', 'uris', 'urls'],
            'text/vcard': ['vcard'],
            'text/vnd.curl': ['curl'],
            'text/vnd.curl.dcurl': ['dcurl'],
            'text/vnd.curl.mcurl': ['mcurl'],
            'text/vnd.curl.scurl': ['scurl'],
            'text/vnd.dvb.subtitle': ['sub'],
            'text/vnd.fly': ['fly'],
            'text/vnd.fmi.flexstor': ['flx'],
            'text/vnd.graphviz': ['gv'],
            'text/vnd.in3d.3dml': ['3dml'],
            'text/vnd.in3d.spot': ['spot'],
            'text/vnd.sun.j2me.app-descriptor': ['jad'],
            'text/vnd.wap.wml': ['wml'],
            'text/vnd.wap.wmlscript': ['wmls'],
            'text/vtt': ['vtt'],
            'text/x-asm': ['s', 'asm'],
            'text/x-c': ['c', 'cc', 'cxx', 'cpp', 'h', 'hh', 'dic'],
            'text/x-component': ['htc'],
            'text/x-fortran': ['f', 'for', 'f77', 'f90'],
            'text/x-handlebars-template': ['hbs'],
            'text/x-java-source': ['java'],
            'text/x-lua': ['lua'],
            'text/x-markdown': ['mkd'],
            'text/x-nfo': ['nfo'],
            'text/x-opml': ['opml'],
            'text/x-org': [],
            'text/x-pascal': ['p', 'pas'],
            'text/x-processing': ['pde'],
            'text/x-sass': ['sass'],
            'text/x-scss': ['scss'],
            'text/x-setext': ['etx'],
            'text/x-sfv': ['sfv'],
            'text/x-suse-ymp': ['ymp'],
            'text/x-uuencode': ['uu'],
            'text/x-vcalendar': ['vcs'],
            'text/x-vcard': ['vcf'],
            'text/xml': [],
            'text/yaml': ['yaml', 'yml'],
            'video/3gpp': ['3gp', '3gpp'],
            'video/3gpp2': ['3g2'],
            'video/h261': ['h261'],
            'video/h263': ['h263'],
            'video/h264': ['h264'],
            'video/jpeg': ['jpgv'],
            'video/jpm': ['jpgm'],
            'video/mj2': ['mj2', 'mjp2'],
            'video/mp2t': ['ts'],
            'video/mp4': ['mp4', 'mp4v', 'mpg4'],
            'video/mpeg': ['mpeg', 'mpg', 'mpe', 'm1v', 'm2v'],
            'video/ogg': ['ogv'],
            'video/quicktime': ['qt', 'mov'],
            'video/vnd.dece.hd': ['uvh', 'uvvh'],
            'video/vnd.dece.mobile': ['uvm', 'uvvm'],
            'video/vnd.dece.pd': ['uvp', 'uvvp'],
            'video/vnd.dece.sd': ['uvs', 'uvvs'],
            'video/vnd.dece.video': ['uvv', 'uvvv'],
            'video/vnd.dvb.file': ['dvb'],
            'video/vnd.fvt': ['fvt'],
            'video/vnd.mpegurl': ['mxu', 'm4u'],
            'video/vnd.ms-playready.media.pyv': ['pyv'],
            'video/vnd.uvvu.mp4': ['uvu', 'uvvu'],
            'video/vnd.vivo': ['viv'],
            'video/webm': ['webm'],
            'video/x-f4v': ['f4v'],
            'video/x-fli': ['fli'],
            'video/x-flv': ['flv'],
            'video/x-m4v': ['m4v'],
            'video/x-matroska': ['mkv', 'mk3d', 'mks'],
            'video/x-mng': ['mng'],
            'video/x-ms-asf': ['asf', 'asx'],
            'video/x-ms-vob': ['vob'],
            'video/x-ms-wm': ['wm'],
            'video/x-ms-wmv': ['wmv'],
            'video/x-ms-wmx': ['wmx'],
            'video/x-ms-wvx': ['wvx'],
            'video/x-msvideo': ['avi'],
            'video/x-sgi-movie': ['movie'],
            'video/x-smv': ['smv'],
            'x-conference/x-cooltalk': ['ice']
          }

          /***/
        },

      /***/ '../../node_modules/superagent/node_modules/ms/index.js':
        /*!******************************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/node_modules/ms/index.js ***!
  \******************************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * Helpers.
           */

          var s = 1000
          var m = s * 60
          var h = m * 60
          var d = h * 24
          var w = d * 7
          var y = d * 365.25

          /**
           * Parse or format the given `val`.
           *
           * Options:
           *
           *  - `long` verbose formatting [false]
           *
           * @param {String|Number} val
           * @param {Object} [options]
           * @throws {Error} throw an error if val is not a non-empty string or a number
           * @return {String|Number}
           * @api public
           */

          module.exports = function(val, options) {
            options = options || {}
            var type = typeof val
            if (type === 'string' && val.length > 0) {
              return parse(val)
            } else if (type === 'number' && isNaN(val) === false) {
              return options.long ? fmtLong(val) : fmtShort(val)
            }
            throw new Error(
              'val is not a non-empty string or a valid number. val=' +
                JSON.stringify(val)
            )
          }

          /**
           * Parse the given `str` and return milliseconds.
           *
           * @param {String} str
           * @return {Number}
           * @api private
           */

          function parse(str) {
            str = String(str)
            if (str.length > 100) {
              return
            }
            var match = /^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
              str
            )
            if (!match) {
              return
            }
            var n = parseFloat(match[1])
            var type = (match[2] || 'ms').toLowerCase()
            switch (type) {
              case 'years':
              case 'year':
              case 'yrs':
              case 'yr':
              case 'y':
                return n * y
              case 'weeks':
              case 'week':
              case 'w':
                return n * w
              case 'days':
              case 'day':
              case 'd':
                return n * d
              case 'hours':
              case 'hour':
              case 'hrs':
              case 'hr':
              case 'h':
                return n * h
              case 'minutes':
              case 'minute':
              case 'mins':
              case 'min':
              case 'm':
                return n * m
              case 'seconds':
              case 'second':
              case 'secs':
              case 'sec':
              case 's':
                return n * s
              case 'milliseconds':
              case 'millisecond':
              case 'msecs':
              case 'msec':
              case 'ms':
                return n
              default:
                return undefined
            }
          }

          /**
           * Short format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */

          function fmtShort(ms) {
            var msAbs = Math.abs(ms)
            if (msAbs >= d) {
              return Math.round(ms / d) + 'd'
            }
            if (msAbs >= h) {
              return Math.round(ms / h) + 'h'
            }
            if (msAbs >= m) {
              return Math.round(ms / m) + 'm'
            }
            if (msAbs >= s) {
              return Math.round(ms / s) + 's'
            }
            return ms + 'ms'
          }

          /**
           * Long format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */

          function fmtLong(ms) {
            var msAbs = Math.abs(ms)
            if (msAbs >= d) {
              return plural(ms, msAbs, d, 'day')
            }
            if (msAbs >= h) {
              return plural(ms, msAbs, h, 'hour')
            }
            if (msAbs >= m) {
              return plural(ms, msAbs, m, 'minute')
            }
            if (msAbs >= s) {
              return plural(ms, msAbs, s, 'second')
            }
            return ms + ' ms'
          }

          /**
           * Pluralization helper.
           */

          function plural(ms, msAbs, n, name) {
            var isPlural = msAbs >= n * 1.5
            return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '')
          }

          /***/
        },

      /***/ '../../node_modules/superagent/package.json':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/superagent/package.json ***!
  \******************************************************************************/
        /*! exports provided: name, version, description, scripts, keywords, license, author, contributors, repository, dependencies, devDependencies, browser, component, main, engines, default */
        /***/ function(module) {
          module.exports = {
            name: 'superagent',
            version: '3.8.3',
            description:
              'elegant & feature rich browser / node HTTP with a fluent API',
            scripts: { prepare: 'make all', test: 'make test' },
            keywords: ['http', 'ajax', 'request', 'agent'],
            license: 'MIT',
            author: 'TJ Holowaychuk <tj@vision-media.ca>',
            contributors: [
              'Kornel Lesiński <kornel@geekhood.net>',
              'Peter Lyons <pete@peterlyons.com>',
              'Hunter Loftis <hunter@hunterloftis.com>'
            ],
            repository: {
              type: 'git',
              url: 'git://github.com/visionmedia/superagent.git'
            },
            dependencies: {
              'component-emitter': '^1.2.0',
              cookiejar: '^2.1.0',
              debug: '^3.1.0',
              extend: '^3.0.0',
              'form-data': '^2.3.1',
              formidable: '^1.2.0',
              methods: '^1.1.1',
              mime: '^1.4.1',
              qs: '^6.5.1',
              'readable-stream': '^2.3.5'
            },
            devDependencies: {
              Base64: '^1.0.1',
              'basic-auth-connect': '^1.0.0',
              'body-parser': '^1.18.2',
              browserify: '^14.1.0',
              'cookie-parser': '^1.4.3',
              express: '^4.16.3',
              'express-session': '^1.15.6',
              marked: '0.3.12',
              mocha: '^3.5.3',
              multer: '^1.3.0',
              should: '^11.2.0',
              'should-http': '^0.1.1',
              zuul: '^3.11.1'
            },
            browser: {
              './lib/node/index.js': './lib/client.js',
              './test/support/server.js': './test/support/blank.js'
            },
            component: { scripts: { superagent: 'lib/client.js' } },
            main: './lib/node/index.js',
            engines: { node: '>= 4.0' }
          }

          /***/
        },

      /***/ '../../node_modules/supports-color/index.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/supports-color/index.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          const os = __webpack_require__(/*! os */ 'os')
          const hasFlag = __webpack_require__(
            /*! has-flag */ '../../node_modules/has-flag/index.js'
          )

          const env = process.env

          let forceColor
          if (
            hasFlag('no-color') ||
            hasFlag('no-colors') ||
            hasFlag('color=false')
          ) {
            forceColor = false
          } else if (
            hasFlag('color') ||
            hasFlag('colors') ||
            hasFlag('color=true') ||
            hasFlag('color=always')
          ) {
            forceColor = true
          }
          if ('FORCE_COLOR' in env) {
            forceColor =
              env.FORCE_COLOR.length === 0 ||
              parseInt(env.FORCE_COLOR, 10) !== 0
          }

          function translateLevel(level) {
            if (level === 0) {
              return false
            }

            return {
              level,
              hasBasic: true,
              has256: level >= 2,
              has16m: level >= 3
            }
          }

          function supportsColor(stream) {
            if (forceColor === false) {
              return 0
            }

            if (
              hasFlag('color=16m') ||
              hasFlag('color=full') ||
              hasFlag('color=truecolor')
            ) {
              return 3
            }

            if (hasFlag('color=256')) {
              return 2
            }

            if (stream && !stream.isTTY && forceColor !== true) {
              return 0
            }

            const min = forceColor ? 1 : 0

            if (process.platform === 'win32') {
              // Node.js 7.5.0 is the first version of Node.js to include a patch to
              // libuv that enables 256 color output on Windows. Anything earlier and it
              // won't work. However, here we target Node.js 8 at minimum as it is an LTS
              // release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
              // release that supports 256 colors. Windows 10 build 14931 is the first release
              // that supports 16m/TrueColor.
              const osRelease = os.release().split('.')
              if (
                Number(process.versions.node.split('.')[0]) >= 8 &&
                Number(osRelease[0]) >= 10 &&
                Number(osRelease[2]) >= 10586
              ) {
                return Number(osRelease[2]) >= 14931 ? 3 : 2
              }

              return 1
            }

            if ('CI' in env) {
              if (
                ['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(
                  sign => sign in env
                ) ||
                env.CI_NAME === 'codeship'
              ) {
                return 1
              }

              return min
            }

            if ('TEAMCITY_VERSION' in env) {
              return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION)
                ? 1
                : 0
            }

            if (env.COLORTERM === 'truecolor') {
              return 3
            }

            if ('TERM_PROGRAM' in env) {
              const version = parseInt(
                (env.TERM_PROGRAM_VERSION || '').split('.')[0],
                10
              )

              switch (env.TERM_PROGRAM) {
                case 'iTerm.app':
                  return version >= 3 ? 3 : 2
                case 'Apple_Terminal':
                  return 2
                // No default
              }
            }

            if (/-256(color)?$/i.test(env.TERM)) {
              return 2
            }

            if (
              /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(
                env.TERM
              )
            ) {
              return 1
            }

            if ('COLORTERM' in env) {
              return 1
            }

            if (env.TERM === 'dumb') {
              return min
            }

            return min
          }

          function getSupportLevel(stream) {
            const level = supportsColor(stream)
            return translateLevel(level)
          }

          module.exports = {
            supportsColor: getSupportLevel,
            stdout: getSupportLevel(process.stdout),
            stderr: getSupportLevel(process.stderr)
          }

          /***/
        },

      /***/ '../../node_modules/through/index.js':
        /*!***********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/through/index.js ***!
  \***********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var Stream = __webpack_require__(/*! stream */ 'stream')

          // through
          //
          // a stream that does nothing but re-emit the input.
          // useful for aggregating a series of changing but not ending streams into one stream)

          exports = module.exports = through
          through.through = through

          //create a readable writable stream.

          function through(write, end, opts) {
            write =
              write ||
              function(data) {
                this.queue(data)
              }
            end =
              end ||
              function() {
                this.queue(null)
              }

            var ended = false,
              destroyed = false,
              buffer = [],
              _ended = false
            var stream = new Stream()
            stream.readable = stream.writable = true
            stream.paused = false

            //  stream.autoPause   = !(opts && opts.autoPause   === false)
            stream.autoDestroy = !(opts && opts.autoDestroy === false)

            stream.write = function(data) {
              write.call(this, data)
              return !stream.paused
            }

            function drain() {
              while (buffer.length && !stream.paused) {
                var data = buffer.shift()
                if (null === data) return stream.emit('end')
                else stream.emit('data', data)
              }
            }

            stream.queue = stream.push = function(data) {
              //    console.error(ended)
              if (_ended) return stream
              if (data === null) _ended = true
              buffer.push(data)
              drain()
              return stream
            }

            //this will be registered as the first 'end' listener
            //must call destroy next tick, to make sure we're after any
            //stream piped from here.
            //this is only a problem if end is not emitted synchronously.
            //a nicer way to do this is to make sure this is the last listener for 'end'

            stream.on('end', function() {
              stream.readable = false
              if (!stream.writable && stream.autoDestroy)
                process.nextTick(function() {
                  stream.destroy()
                })
            })

            function _end() {
              stream.writable = false
              end.call(stream)
              if (!stream.readable && stream.autoDestroy) stream.destroy()
            }

            stream.end = function(data) {
              if (ended) return
              ended = true
              if (arguments.length) stream.write(data)
              _end() // will emit or queue
              return stream
            }

            stream.destroy = function() {
              if (destroyed) return
              destroyed = true
              ended = true
              buffer.length = 0
              stream.writable = stream.readable = false
              stream.emit('close')
              return stream
            }

            stream.pause = function() {
              if (stream.paused) return
              stream.paused = true
              return stream
            }

            stream.resume = function() {
              if (stream.paused) {
                stream.paused = false
                stream.emit('resume')
              }
              drain()
              //may have become paused again,
              //as drain emits 'data'.
              if (!stream.paused) stream.emit('drain')
              return stream
            }
            return stream
          }

          /***/
        },

      /***/ '../../node_modules/type-component/index.js':
        /*!******************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/type-component/index.js ***!
  \******************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          /**
           * toString ref.
           */

          var toString = Object.prototype.toString

          /**
           * Return the type of `val`.
           *
           * @param {Mixed} val
           * @return {String}
           * @api public
           */

          module.exports = function(val) {
            switch (toString.call(val)) {
              case '[object Function]':
                return 'function'
              case '[object Date]':
                return 'date'
              case '[object RegExp]':
                return 'regexp'
              case '[object Arguments]':
                return 'arguments'
              case '[object Array]':
                return 'array'
            }

            if (val === null) return 'null'
            if (val === undefined) return 'undefined'
            if (val === Object(val)) return 'object'

            return typeof val
          }

          /***/
        },

      /***/ '../../node_modules/ultron/index.js':
        /*!**********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ultron/index.js ***!
  \**********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var has = Object.prototype.hasOwnProperty

          /**
           * An auto incrementing id which we can use to create "unique" Ultron instances
           * so we can track the event emitters that are added through the Ultron
           * interface.
           *
           * @type {Number}
           * @private
           */
          var id = 0

          /**
           * Ultron is high-intelligence robot. It gathers intelligence so it can start improving
           * upon his rudimentary design. It will learn from your EventEmitting patterns
           * and exterminate them.
           *
           * @constructor
           * @param {EventEmitter} ee EventEmitter instance we need to wrap.
           * @api public
           */
          function Ultron(ee) {
            if (!(this instanceof Ultron)) return new Ultron(ee)

            this.id = id++
            this.ee = ee
          }

          /**
           * Register a new EventListener for the given event.
           *
           * @param {String} event Name of the event.
           * @param {Functon} fn Callback function.
           * @param {Mixed} context The context of the function.
           * @returns {Ultron}
           * @api public
           */
          Ultron.prototype.on = function on(event, fn, context) {
            fn.__ultron = this.id
            this.ee.on(event, fn, context)

            return this
          }
          /**
           * Add an EventListener that's only called once.
           *
           * @param {String} event Name of the event.
           * @param {Function} fn Callback function.
           * @param {Mixed} context The context of the function.
           * @returns {Ultron}
           * @api public
           */
          Ultron.prototype.once = function once(event, fn, context) {
            fn.__ultron = this.id
            this.ee.once(event, fn, context)

            return this
          }

          /**
           * Remove the listeners we assigned for the given event.
           *
           * @returns {Ultron}
           * @api public
           */
          Ultron.prototype.remove = function remove() {
            var args = arguments,
              ee = this.ee,
              event

            //
            // When no event names are provided we assume that we need to clear all the
            // events that were assigned through us.
            //
            if (args.length === 1 && 'string' === typeof args[0]) {
              args = args[0].split(/[, ]+/)
            } else if (!args.length) {
              if (ee.eventNames) {
                args = ee.eventNames()
              } else if (ee._events) {
                args = []

                for (event in ee._events) {
                  if (has.call(ee._events, event)) args.push(event)
                }

                if (Object.getOwnPropertySymbols) {
                  args = args.concat(Object.getOwnPropertySymbols(ee._events))
                }
              }
            }

            for (var i = 0; i < args.length; i++) {
              var listeners = ee.listeners(args[i])

              for (var j = 0; j < listeners.length; j++) {
                event = listeners[j]

                //
                // Once listeners have a `listener` property that stores the real listener
                // in the EventEmitter that ships with Node.js.
                //
                if (event.listener) {
                  if (event.listener.__ultron !== this.id) continue
                } else if (event.__ultron !== this.id) {
                  continue
                }

                ee.removeListener(args[i], event)
              }
            }

            return this
          }

          /**
           * Destroy the Ultron instance, remove all listeners and release all references.
           *
           * @returns {Boolean}
           * @api public
           */
          Ultron.prototype.destroy = function destroy() {
            if (!this.ee) return false

            this.remove()
            this.ee = null

            return true
          }

          //
          // Expose the module.
          //
          module.exports = Ultron

          /***/
        },

      /***/ '../../node_modules/util-deprecate/node.js':
        /*!*****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/util-deprecate/node.js ***!
  \*****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          /**
           * For Node.js, simply re-export the core `util.deprecate` function.
           */

          module.exports = __webpack_require__(/*! util */ 'util').deprecate

          /***/
        },

      /***/ '../../node_modules/webpack/buildin/module.js':
        /*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = function(module) {
            if (!module.webpackPolyfill) {
              module.deprecate = function() {}
              module.paths = []
              // module.parent = undefined by default
              if (!module.children) module.children = []
              Object.defineProperty(module, 'loaded', {
                enumerable: true,
                get: function() {
                  return module.l
                }
              })
              Object.defineProperty(module, 'id', {
                enumerable: true,
                get: function() {
                  return module.i
                }
              })
              module.webpackPolyfill = 1
            }
            return module
          }

          /***/
        },

      /***/ '../../node_modules/websocket-stream/index.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/websocket-stream/index.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          var server = __webpack_require__(
            /*! ./server.js */ '../../node_modules/websocket-stream/server.js'
          )

          module.exports = __webpack_require__(
            /*! ./stream.js */ '../../node_modules/websocket-stream/stream.js'
          )
          module.exports.Server = server.Server
          module.exports.createServer = server.createServer

          /***/
        },

      /***/ '../../node_modules/websocket-stream/server.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/websocket-stream/server.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var WebSocketServer = __webpack_require__(
            /*! ws */ '../../node_modules/ws/index.js'
          ).Server
          var stream = __webpack_require__(
            /*! ./stream */ '../../node_modules/websocket-stream/stream.js'
          )

          class Server extends WebSocketServer {
            constructor(opts, cb) {
              super(opts)

              var proxied = false
              this.on('newListener', function(event) {
                if (!proxied && event === 'stream') {
                  proxied = true
                  this.on('connection', function(conn, req) {
                    this.emit('stream', stream(conn, opts), req)
                  })
                }
              })

              if (cb) {
                this.on('stream', cb)
              }
            }
          }

          module.exports.Server = Server
          module.exports.createServer = function(opts, cb) {
            return new Server(opts, cb)
          }

          /***/
        },

      /***/ '../../node_modules/websocket-stream/stream.js':
        /*!*********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/websocket-stream/stream.js ***!
  \*********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          var Transform = __webpack_require__(
            /*! readable-stream */ '../../node_modules/readable-stream/readable.js'
          ).Transform
          var duplexify = __webpack_require__(
            /*! duplexify */ '../../node_modules/duplexify/index.js'
          )
          var WS = __webpack_require__(
            /*! ws */ '../../node_modules/ws/index.js'
          )
          var Buffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          ).Buffer

          module.exports = WebSocketStream

          function buildProxy(options, socketWrite, socketEnd) {
            var proxy = new Transform({
              objectMode: options.objectMode
            })

            proxy._write = socketWrite
            proxy._flush = socketEnd

            return proxy
          }

          function WebSocketStream(target, protocols, options) {
            var stream, socket

            var isBrowser = process.title === 'browser'
            var isNative = !!global.WebSocket
            var socketWrite = isBrowser ? socketWriteBrowser : socketWriteNode

            if (
              protocols &&
              !Array.isArray(protocols) &&
              'object' === typeof protocols
            ) {
              // accept the "options" Object as the 2nd argument
              options = protocols
              protocols = null

              if (
                typeof options.protocol === 'string' ||
                Array.isArray(options.protocol)
              ) {
                protocols = options.protocol
              }
            }

            if (!options) options = {}

            if (options.objectMode === undefined) {
              options.objectMode = !(
                options.binary === true || options.binary === undefined
              )
            }

            var proxy = buildProxy(options, socketWrite, socketEnd)

            if (!options.objectMode) {
              proxy._writev = writev
            }

            // browser only: sets the maximum socket buffer size before throttling
            var bufferSize = options.browserBufferSize || 1024 * 512

            // browser only: how long to wait when throttling
            var bufferTimeout = options.browserBufferTimeout || 1000

            // use existing WebSocket object that was passed in
            if (typeof target === 'object') {
              socket = target
              // otherwise make a new one
            } else {
              // special constructor treatment for native websockets in browsers, see
              // https://github.com/maxogden/websocket-stream/issues/82
              if (isNative && isBrowser) {
                socket = new WS(target, protocols)
              } else {
                socket = new WS(target, protocols, options)
              }

              socket.binaryType = 'arraybuffer'
            }

            // was already open when passed in
            if (socket.readyState === socket.OPEN) {
              stream = proxy
            } else {
              stream = duplexify.obj()
              socket.onopen = onopen
            }

            stream.socket = socket

            socket.onclose = onclose
            socket.onerror = onerror
            socket.onmessage = onmessage

            proxy.on('close', destroy)

            var coerceToBuffer = !options.objectMode

            function socketWriteNode(chunk, enc, next) {
              // avoid errors, this never happens unless
              // destroy() is called
              if (socket.readyState !== socket.OPEN) {
                next()
                return
              }

              if (coerceToBuffer && typeof chunk === 'string') {
                chunk = Buffer.from(chunk, 'utf8')
              }
              socket.send(chunk, next)
            }

            function socketWriteBrowser(chunk, enc, next) {
              if (socket.bufferedAmount > bufferSize) {
                setTimeout(socketWriteBrowser, bufferTimeout, chunk, enc, next)
                return
              }

              if (coerceToBuffer && typeof chunk === 'string') {
                chunk = Buffer.from(chunk, 'utf8')
              }

              try {
                socket.send(chunk)
              } catch (err) {
                return next(err)
              }

              next()
            }

            function socketEnd(done) {
              socket.close()
              done()
            }

            function onopen() {
              stream.setReadable(proxy)
              stream.setWritable(proxy)
              stream.emit('connect')
            }

            function onclose() {
              stream.end()
              stream.destroy()
            }

            function onerror(err) {
              stream.destroy(err)
            }

            function onmessage(event) {
              var data = event.data
              if (data instanceof ArrayBuffer) data = Buffer.from(data)
              else data = Buffer.from(data, 'utf8')
              proxy.push(data)
            }

            function destroy() {
              socket.close()
            }

            // this is to be enabled only if objectMode is false
            function writev(chunks, cb) {
              var buffers = new Array(chunks.length)
              for (var i = 0; i < chunks.length; i++) {
                if (typeof chunks[i].chunk === 'string') {
                  buffers[i] = Buffer.from(chunks[i], 'utf8')
                } else {
                  buffers[i] = chunks[i].chunk
                }
              }

              this._write(Buffer.concat(buffers), 'binary', cb)
            }

            return stream
          }

          /***/
        },

      /***/ '../../node_modules/wrappy/wrappy.js':
        /*!***********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/wrappy/wrappy.js ***!
  \***********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          // Returns a wrapper function that returns a wrapped callback
          // The wrapper function should do some stuff, and return a
          // presumably different callback function.
          // This makes sure that own properties are retained, so that
          // decorations and such are not lost along the way.
          module.exports = wrappy
          function wrappy(fn, cb) {
            if (fn && cb) return wrappy(fn)(cb)

            if (typeof fn !== 'function')
              throw new TypeError('need wrapper function')

            Object.keys(fn).forEach(function(k) {
              wrapper[k] = fn[k]
            })

            return wrapper

            function wrapper() {
              var args = new Array(arguments.length)
              for (var i = 0; i < args.length; i++) {
                args[i] = arguments[i]
              }
              var ret = fn.apply(this, args)
              var cb = args[args.length - 1]
              if (typeof ret === 'function' && ret !== cb) {
                Object.keys(cb).forEach(function(k) {
                  ret[k] = cb[k]
                })
              }
              return ret
            }
          }

          /***/
        },

      /***/ '../../node_modules/ws/index.js':
        /*!******************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/index.js ***!
  \******************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * ws: a node.js websocket client
           * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
           * MIT Licensed
           */

          const WebSocket = __webpack_require__(
            /*! ./lib/WebSocket */ '../../node_modules/ws/lib/WebSocket.js'
          )

          WebSocket.Server = __webpack_require__(
            /*! ./lib/WebSocketServer */ '../../node_modules/ws/lib/WebSocketServer.js'
          )
          WebSocket.Receiver = __webpack_require__(
            /*! ./lib/Receiver */ '../../node_modules/ws/lib/Receiver.js'
          )
          WebSocket.Sender = __webpack_require__(
            /*! ./lib/Sender */ '../../node_modules/ws/lib/Sender.js'
          )

          module.exports = WebSocket

          /***/
        },

      /***/ '../../node_modules/ws/lib/BufferUtil.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/BufferUtil.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * ws: a node.js websocket client
           * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
           * MIT Licensed
           */

          const safeBuffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          )

          const Buffer = safeBuffer.Buffer

          /**
           * Merges an array of buffers into a new buffer.
           *
           * @param {Buffer[]} list The array of buffers to concat
           * @param {Number} totalLength The total length of buffers in the list
           * @return {Buffer} The resulting buffer
           * @public
           */
          const concat = (list, totalLength) => {
            const target = Buffer.allocUnsafe(totalLength)
            var offset = 0

            for (var i = 0; i < list.length; i++) {
              const buf = list[i]
              buf.copy(target, offset)
              offset += buf.length
            }

            return target
          }

          try {
            const bufferUtil = __webpack_require__(
              !(function webpackMissingModule() {
                var e = new Error("Cannot find module 'bufferutil'")
                e.code = 'MODULE_NOT_FOUND'
                throw e
              })()
            )

            module.exports = Object.assign(
              { concat },
              bufferUtil.BufferUtil || bufferUtil
            )
          } catch (e) /* istanbul ignore next */ {
            /**
             * Masks a buffer using the given mask.
             *
             * @param {Buffer} source The buffer to mask
             * @param {Buffer} mask The mask to use
             * @param {Buffer} output The buffer where to store the result
             * @param {Number} offset The offset at which to start writing
             * @param {Number} length The number of bytes to mask.
             * @public
             */
            const mask = (source, mask, output, offset, length) => {
              for (var i = 0; i < length; i++) {
                output[offset + i] = source[i] ^ mask[i & 3]
              }
            }

            /**
             * Unmasks a buffer using the given mask.
             *
             * @param {Buffer} buffer The buffer to unmask
             * @param {Buffer} mask The mask to use
             * @public
             */
            const unmask = (buffer, mask) => {
              // Required until https://github.com/nodejs/node/issues/9006 is resolved.
              const length = buffer.length
              for (var i = 0; i < length; i++) {
                buffer[i] ^= mask[i & 3]
              }
            }

            module.exports = { concat, mask, unmask }
          }

          /***/
        },

      /***/ '../../node_modules/ws/lib/Constants.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/Constants.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          const safeBuffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          )

          const Buffer = safeBuffer.Buffer

          exports.BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments']
          exports.GUID = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'
          exports.EMPTY_BUFFER = Buffer.alloc(0)
          exports.NOOP = () => {}

          /***/
        },

      /***/ '../../node_modules/ws/lib/ErrorCodes.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/ErrorCodes.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * ws: a node.js websocket client
           * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
           * MIT Licensed
           */

          module.exports = {
            isValidErrorCode: function(code) {
              return (
                (code >= 1000 &&
                  code <= 1013 &&
                  code !== 1004 &&
                  code !== 1005 &&
                  code !== 1006) ||
                (code >= 3000 && code <= 4999)
              )
            },
            1000: 'normal',
            1001: 'going away',
            1002: 'protocol error',
            1003: 'unsupported data',
            1004: 'reserved',
            1005: 'reserved for extensions',
            1006: 'reserved for extensions',
            1007: 'inconsistent or invalid data',
            1008: 'policy violation',
            1009: 'message too big',
            1010: 'extension handshake missing',
            1011: 'an unexpected condition prevented the request from being fulfilled',
            1012: 'service restart',
            1013: 'try again later'
          }

          /***/
        },

      /***/ '../../node_modules/ws/lib/EventTarget.js':
        /*!****************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/EventTarget.js ***!
  \****************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          /**
           * Class representing an event.
           *
           * @private
           */
          class Event {
            /**
             * Create a new `Event`.
             *
             * @param {String} type The name of the event
             * @param {Object} target A reference to the target to which the event was dispatched
             */
            constructor(type, target) {
              this.target = target
              this.type = type
            }
          }

          /**
           * Class representing a message event.
           *
           * @extends Event
           * @private
           */
          class MessageEvent extends Event {
            /**
             * Create a new `MessageEvent`.
             *
             * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data
             * @param {WebSocket} target A reference to the target to which the event was dispatched
             */
            constructor(data, target) {
              super('message', target)

              this.data = data
            }
          }

          /**
           * Class representing a close event.
           *
           * @extends Event
           * @private
           */
          class CloseEvent extends Event {
            /**
             * Create a new `CloseEvent`.
             *
             * @param {Number} code The status code explaining why the connection is being closed
             * @param {String} reason A human-readable string explaining why the connection is closing
             * @param {WebSocket} target A reference to the target to which the event was dispatched
             */
            constructor(code, reason, target) {
              super('close', target)

              this.wasClean =
                target._closeFrameReceived && target._closeFrameSent
              this.reason = reason
              this.code = code
            }
          }

          /**
           * Class representing an open event.
           *
           * @extends Event
           * @private
           */
          class OpenEvent extends Event {
            /**
             * Create a new `OpenEvent`.
             *
             * @param {WebSocket} target A reference to the target to which the event was dispatched
             */
            constructor(target) {
              super('open', target)
            }
          }

          /**
           * This provides methods for emulating the `EventTarget` interface. It's not
           * meant to be used directly.
           *
           * @mixin
           */
          const EventTarget = {
            /**
             * Register an event listener.
             *
             * @param {String} method A string representing the event type to listen for
             * @param {Function} listener The listener to add
             * @public
             */
            addEventListener(method, listener) {
              if (typeof listener !== 'function') return

              function onMessage(data) {
                listener.call(this, new MessageEvent(data, this))
              }

              function onClose(code, message) {
                listener.call(this, new CloseEvent(code, message, this))
              }

              function onError(event) {
                event.type = 'error'
                event.target = this
                listener.call(this, event)
              }

              function onOpen() {
                listener.call(this, new OpenEvent(this))
              }

              if (method === 'message') {
                onMessage._listener = listener
                this.on(method, onMessage)
              } else if (method === 'close') {
                onClose._listener = listener
                this.on(method, onClose)
              } else if (method === 'error') {
                onError._listener = listener
                this.on(method, onError)
              } else if (method === 'open') {
                onOpen._listener = listener
                this.on(method, onOpen)
              } else {
                this.on(method, listener)
              }
            },

            /**
             * Remove an event listener.
             *
             * @param {String} method A string representing the event type to remove
             * @param {Function} listener The listener to remove
             * @public
             */
            removeEventListener(method, listener) {
              const listeners = this.listeners(method)

              for (var i = 0; i < listeners.length; i++) {
                if (
                  listeners[i] === listener ||
                  listeners[i]._listener === listener
                ) {
                  this.removeListener(method, listeners[i])
                }
              }
            }
          }

          module.exports = EventTarget

          /***/
        },

      /***/ '../../node_modules/ws/lib/Extensions.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/Extensions.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          //
          // Allowed token characters:
          //
          // '!', '#', '$', '%', '&', ''', '*', '+', '-',
          // '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'
          //
          // tokenChars[32] === 0 // ' '
          // tokenChars[33] === 1 // '!'
          // tokenChars[34] === 0 // '"'
          // ...
          //
          const tokenChars = [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0, // 0 - 15
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0, // 16 - 31
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0, // 32 - 47
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0, // 48 - 63
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1, // 64 - 79
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1, // 80 - 95
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1, // 96 - 111
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0 // 112 - 127
          ]

          /**
           * Adds an offer to the map of extension offers or a parameter to the map of
           * parameters.
           *
           * @param {Object} dest The map of extension offers or parameters
           * @param {String} name The extension or parameter name
           * @param {(Object|Boolean|String)} elem The extension parameters or the
           *     parameter value
           * @private
           */
          function push(dest, name, elem) {
            if (Object.prototype.hasOwnProperty.call(dest, name))
              dest[name].push(elem)
            else dest[name] = [elem]
          }

          /**
           * Parses the `Sec-WebSocket-Extensions` header into an object.
           *
           * @param {String} header The field value of the header
           * @return {Object} The parsed object
           * @public
           */
          function parse(header) {
            const offers = {}

            if (header === undefined || header === '') return offers

            var params = {}
            var mustUnescape = false
            var isEscaping = false
            var inQuotes = false
            var extensionName
            var paramName
            var start = -1
            var end = -1

            for (var i = 0; i < header.length; i++) {
              const code = header.charCodeAt(i)

              if (extensionName === undefined) {
                if (end === -1 && tokenChars[code] === 1) {
                  if (start === -1) start = i
                } else if (
                  code === 0x20 /* ' ' */ ||
                  code === 0x09 /* '\t' */
                ) {
                  if (end === -1 && start !== -1) end = i
                } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {
                  if (start === -1)
                    throw new Error(`unexpected character at index ${i}`)

                  if (end === -1) end = i
                  const name = header.slice(start, end)
                  if (code === 0x2c) {
                    push(offers, name, params)
                    params = {}
                  } else {
                    extensionName = name
                  }

                  start = end = -1
                } else {
                  throw new Error(`unexpected character at index ${i}`)
                }
              } else if (paramName === undefined) {
                if (end === -1 && tokenChars[code] === 1) {
                  if (start === -1) start = i
                } else if (code === 0x20 || code === 0x09) {
                  if (end === -1 && start !== -1) end = i
                } else if (code === 0x3b || code === 0x2c) {
                  if (start === -1)
                    throw new Error(`unexpected character at index ${i}`)

                  if (end === -1) end = i
                  push(params, header.slice(start, end), true)
                  if (code === 0x2c) {
                    push(offers, extensionName, params)
                    params = {}
                    extensionName = undefined
                  }

                  start = end = -1
                } else if (
                  code === 0x3d /* '=' */ &&
                  start !== -1 &&
                  end === -1
                ) {
                  paramName = header.slice(start, i)
                  start = end = -1
                } else {
                  throw new Error(`unexpected character at index ${i}`)
                }
              } else {
                //
                // The value of a quoted-string after unescaping must conform to the
                // token ABNF, so only token characters are valid.
                // Ref: https://tools.ietf.org/html/rfc6455#section-9.1
                //
                if (isEscaping) {
                  if (tokenChars[code] !== 1) {
                    throw new Error(`unexpected character at index ${i}`)
                  }
                  if (start === -1) start = i
                  else if (!mustUnescape) mustUnescape = true
                  isEscaping = false
                } else if (inQuotes) {
                  if (tokenChars[code] === 1) {
                    if (start === -1) start = i
                  } else if (code === 0x22 /* '"' */ && start !== -1) {
                    inQuotes = false
                    end = i
                  } else if (code === 0x5c /* '\' */) {
                    isEscaping = true
                  } else {
                    throw new Error(`unexpected character at index ${i}`)
                  }
                } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {
                  inQuotes = true
                } else if (end === -1 && tokenChars[code] === 1) {
                  if (start === -1) start = i
                } else if (start !== -1 && (code === 0x20 || code === 0x09)) {
                  if (end === -1) end = i
                } else if (code === 0x3b || code === 0x2c) {
                  if (start === -1)
                    throw new Error(`unexpected character at index ${i}`)

                  if (end === -1) end = i
                  var value = header.slice(start, end)
                  if (mustUnescape) {
                    value = value.replace(/\\/g, '')
                    mustUnescape = false
                  }
                  push(params, paramName, value)
                  if (code === 0x2c) {
                    push(offers, extensionName, params)
                    params = {}
                    extensionName = undefined
                  }

                  paramName = undefined
                  start = end = -1
                } else {
                  throw new Error(`unexpected character at index ${i}`)
                }
              }
            }

            if (start === -1 || inQuotes)
              throw new Error('unexpected end of input')

            if (end === -1) end = i
            const token = header.slice(start, end)
            if (extensionName === undefined) {
              push(offers, token, {})
            } else {
              if (paramName === undefined) {
                push(params, token, true)
              } else if (mustUnescape) {
                push(params, paramName, token.replace(/\\/g, ''))
              } else {
                push(params, paramName, token)
              }
              push(offers, extensionName, params)
            }

            return offers
          }

          /**
           * Serializes a parsed `Sec-WebSocket-Extensions` header to a string.
           *
           * @param {Object} value The object to format
           * @return {String} A string representing the given value
           * @public
           */
          function format(value) {
            return Object.keys(value)
              .map(token => {
                var paramsList = value[token]
                if (!Array.isArray(paramsList)) paramsList = [paramsList]
                return paramsList
                  .map(params => {
                    return [token]
                      .concat(
                        Object.keys(params).map(k => {
                          var p = params[k]
                          if (!Array.isArray(p)) p = [p]
                          return p
                            .map(v => (v === true ? k : `${k}=${v}`))
                            .join('; ')
                        })
                      )
                      .join('; ')
                  })
                  .join(', ')
              })
              .join(', ')
          }

          module.exports = { format, parse }

          /***/
        },

      /***/ '../../node_modules/ws/lib/PerMessageDeflate.js':
        /*!**********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/PerMessageDeflate.js ***!
  \**********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          const safeBuffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          )
          const Limiter = __webpack_require__(
            /*! async-limiter */ '../../node_modules/async-limiter/index.js'
          )
          const zlib = __webpack_require__(/*! zlib */ 'zlib')

          const bufferUtil = __webpack_require__(
            /*! ./BufferUtil */ '../../node_modules/ws/lib/BufferUtil.js'
          )

          const Buffer = safeBuffer.Buffer

          const TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff])
          const EMPTY_BLOCK = Buffer.from([0x00])

          const kWriteInProgress = Symbol('write-in-progress')
          const kPendingClose = Symbol('pending-close')
          const kTotalLength = Symbol('total-length')
          const kCallback = Symbol('callback')
          const kBuffers = Symbol('buffers')
          const kError = Symbol('error')
          const kOwner = Symbol('owner')

          //
          // We limit zlib concurrency, which prevents severe memory fragmentation
          // as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913
          // and https://github.com/websockets/ws/issues/1202
          //
          // Intentionally global; it's the global thread pool that's an issue.
          //
          let zlibLimiter

          /**
           * permessage-deflate implementation.
           */
          class PerMessageDeflate {
            /**
             * Creates a PerMessageDeflate instance.
             *
             * @param {Object} options Configuration options
             * @param {Boolean} options.serverNoContextTakeover Request/accept disabling
             *     of server context takeover
             * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge
             *     disabling of client context takeover
             * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the
             *     use of a custom server window size
             * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support
             *     for, or request, a custom client window size
             * @param {Number} options.level The value of zlib's `level` param
             * @param {Number} options.memLevel The value of zlib's `memLevel` param
             * @param {Number} options.threshold Size (in bytes) below which messages
             *     should not be compressed
             * @param {Number} options.concurrencyLimit The number of concurrent calls to
             *     zlib
             * @param {Boolean} isServer Create the instance in either server or client
             *     mode
             * @param {Number} maxPayload The maximum allowed message length
             */
            constructor(options, isServer, maxPayload) {
              this._maxPayload = maxPayload | 0
              this._options = options || {}
              this._threshold =
                this._options.threshold !== undefined
                  ? this._options.threshold
                  : 1024
              this._isServer = !!isServer
              this._deflate = null
              this._inflate = null

              this.params = null

              if (!zlibLimiter) {
                const concurrency =
                  this._options.concurrencyLimit !== undefined
                    ? this._options.concurrencyLimit
                    : 10
                zlibLimiter = new Limiter({ concurrency })
              }
            }

            /**
             * @type {String}
             */
            static get extensionName() {
              return 'permessage-deflate'
            }

            /**
             * Create extension parameters offer.
             *
             * @return {Object} Extension parameters
             * @public
             */
            offer() {
              const params = {}

              if (this._options.serverNoContextTakeover) {
                params.server_no_context_takeover = true
              }
              if (this._options.clientNoContextTakeover) {
                params.client_no_context_takeover = true
              }
              if (this._options.serverMaxWindowBits) {
                params.server_max_window_bits = this._options.serverMaxWindowBits
              }
              if (this._options.clientMaxWindowBits) {
                params.client_max_window_bits = this._options.clientMaxWindowBits
              } else if (this._options.clientMaxWindowBits == null) {
                params.client_max_window_bits = true
              }

              return params
            }

            /**
             * Accept extension offer.
             *
             * @param {Array} paramsList Extension parameters
             * @return {Object} Accepted configuration
             * @public
             */
            accept(paramsList) {
              paramsList = this.normalizeParams(paramsList)

              var params
              if (this._isServer) {
                params = this.acceptAsServer(paramsList)
              } else {
                params = this.acceptAsClient(paramsList)
              }

              this.params = params
              return params
            }

            /**
             * Releases all resources used by the extension.
             *
             * @public
             */
            cleanup() {
              if (this._inflate) {
                if (this._inflate[kWriteInProgress]) {
                  this._inflate[kPendingClose] = true
                } else {
                  this._inflate.close()
                  this._inflate = null
                }
              }
              if (this._deflate) {
                if (this._deflate[kWriteInProgress]) {
                  this._deflate[kPendingClose] = true
                } else {
                  this._deflate.close()
                  this._deflate = null
                }
              }
            }

            /**
             * Accept extension offer from client.
             *
             * @param {Array} paramsList Extension parameters
             * @return {Object} Accepted configuration
             * @private
             */
            acceptAsServer(paramsList) {
              const accepted = {}
              const result = paramsList.some(params => {
                if (
                  (this._options.serverNoContextTakeover === false &&
                    params.server_no_context_takeover) ||
                  (this._options.serverMaxWindowBits === false &&
                    params.server_max_window_bits) ||
                  (typeof this._options.serverMaxWindowBits === 'number' &&
                    typeof params.server_max_window_bits === 'number' &&
                    this._options.serverMaxWindowBits >
                      params.server_max_window_bits) ||
                  (typeof this._options.clientMaxWindowBits === 'number' &&
                    !params.client_max_window_bits)
                ) {
                  return
                }

                if (
                  this._options.serverNoContextTakeover ||
                  params.server_no_context_takeover
                ) {
                  accepted.server_no_context_takeover = true
                }
                if (
                  this._options.clientNoContextTakeover ||
                  (this._options.clientNoContextTakeover !== false &&
                    params.client_no_context_takeover)
                ) {
                  accepted.client_no_context_takeover = true
                }
                if (typeof this._options.serverMaxWindowBits === 'number') {
                  accepted.server_max_window_bits = this._options.serverMaxWindowBits
                } else if (typeof params.server_max_window_bits === 'number') {
                  accepted.server_max_window_bits =
                    params.server_max_window_bits
                }
                if (typeof this._options.clientMaxWindowBits === 'number') {
                  accepted.client_max_window_bits = this._options.clientMaxWindowBits
                } else if (
                  this._options.clientMaxWindowBits !== false &&
                  typeof params.client_max_window_bits === 'number'
                ) {
                  accepted.client_max_window_bits =
                    params.client_max_window_bits
                }
                return true
              })

              if (!result)
                throw new Error("Doesn't support the offered configuration")

              return accepted
            }

            /**
             * Accept extension response from server.
             *
             * @param {Array} paramsList Extension parameters
             * @return {Object} Accepted configuration
             * @private
             */
            acceptAsClient(paramsList) {
              const params = paramsList[0]

              if (
                this._options.clientNoContextTakeover === false &&
                params.client_no_context_takeover
              ) {
                throw new Error(
                  'Invalid value for "client_no_context_takeover"'
                )
              }

              if (
                (typeof this._options.clientMaxWindowBits === 'number' &&
                  (!params.client_max_window_bits ||
                    params.client_max_window_bits >
                      this._options.clientMaxWindowBits)) ||
                (this._options.clientMaxWindowBits === false &&
                  params.client_max_window_bits)
              ) {
                throw new Error('Invalid value for "client_max_window_bits"')
              }

              return params
            }

            /**
             * Normalize extensions parameters.
             *
             * @param {Array} paramsList Extension parameters
             * @return {Array} Normalized extensions parameters
             * @private
             */
            normalizeParams(paramsList) {
              return paramsList.map(params => {
                Object.keys(params).forEach(key => {
                  var value = params[key]
                  if (value.length > 1) {
                    throw new Error(`Multiple extension parameters for ${key}`)
                  }

                  value = value[0]

                  switch (key) {
                    case 'server_no_context_takeover':
                    case 'client_no_context_takeover':
                      if (value !== true) {
                        throw new Error(
                          `invalid extension parameter value for ${key} (${value})`
                        )
                      }
                      params[key] = true
                      break
                    case 'server_max_window_bits':
                    case 'client_max_window_bits':
                      if (typeof value === 'string') {
                        value = parseInt(value, 10)
                        if (
                          Number.isNaN(value) ||
                          value < zlib.Z_MIN_WINDOWBITS ||
                          value > zlib.Z_MAX_WINDOWBITS
                        ) {
                          throw new Error(
                            `invalid extension parameter value for ${key} (${value})`
                          )
                        }
                      }
                      if (!this._isServer && value === true) {
                        throw new Error(
                          `Missing extension parameter value for ${key}`
                        )
                      }
                      params[key] = value
                      break
                    default:
                      throw new Error(
                        `Not defined extension parameter (${key})`
                      )
                  }
                })
                return params
              })
            }

            /**
             * Decompress data. Concurrency limited by async-limiter.
             *
             * @param {Buffer} data Compressed data
             * @param {Boolean} fin Specifies whether or not this is the last fragment
             * @param {Function} callback Callback
             * @public
             */
            decompress(data, fin, callback) {
              zlibLimiter.push(done => {
                this._decompress(data, fin, (err, result) => {
                  done()
                  callback(err, result)
                })
              })
            }

            /**
             * Compress data. Concurrency limited by async-limiter.
             *
             * @param {Buffer} data Data to compress
             * @param {Boolean} fin Specifies whether or not this is the last fragment
             * @param {Function} callback Callback
             * @public
             */
            compress(data, fin, callback) {
              zlibLimiter.push(done => {
                this._compress(data, fin, (err, result) => {
                  done()
                  callback(err, result)
                })
              })
            }

            /**
             * Decompress data.
             *
             * @param {Buffer} data Compressed data
             * @param {Boolean} fin Specifies whether or not this is the last fragment
             * @param {Function} callback Callback
             * @private
             */
            _decompress(data, fin, callback) {
              const endpoint = this._isServer ? 'client' : 'server'

              if (!this._inflate) {
                const key = `${endpoint}_max_window_bits`
                const windowBits =
                  typeof this.params[key] !== 'number'
                    ? zlib.Z_DEFAULT_WINDOWBITS
                    : this.params[key]

                this._inflate = zlib.createInflateRaw({ windowBits })
                this._inflate[kTotalLength] = 0
                this._inflate[kBuffers] = []
                this._inflate[kOwner] = this
                this._inflate.on('error', inflateOnError)
                this._inflate.on('data', inflateOnData)
              }

              this._inflate[kCallback] = callback
              this._inflate[kWriteInProgress] = true

              this._inflate.write(data)
              if (fin) this._inflate.write(TRAILER)

              this._inflate.flush(() => {
                const err = this._inflate[kError]

                if (err) {
                  this._inflate.close()
                  this._inflate = null
                  callback(err)
                  return
                }

                const data = bufferUtil.concat(
                  this._inflate[kBuffers],
                  this._inflate[kTotalLength]
                )

                if (
                  (fin && this.params[`${endpoint}_no_context_takeover`]) ||
                  this._inflate[kPendingClose]
                ) {
                  this._inflate.close()
                  this._inflate = null
                } else {
                  this._inflate[kWriteInProgress] = false
                  this._inflate[kTotalLength] = 0
                  this._inflate[kBuffers] = []
                }

                callback(null, data)
              })
            }

            /**
             * Compress data.
             *
             * @param {Buffer} data Data to compress
             * @param {Boolean} fin Specifies whether or not this is the last fragment
             * @param {Function} callback Callback
             * @private
             */
            _compress(data, fin, callback) {
              if (!data || data.length === 0) {
                process.nextTick(callback, null, EMPTY_BLOCK)
                return
              }

              const endpoint = this._isServer ? 'server' : 'client'

              if (!this._deflate) {
                const key = `${endpoint}_max_window_bits`
                const windowBits =
                  typeof this.params[key] !== 'number'
                    ? zlib.Z_DEFAULT_WINDOWBITS
                    : this.params[key]

                this._deflate = zlib.createDeflateRaw({
                  memLevel: this._options.memLevel,
                  level: this._options.level,
                  flush: zlib.Z_SYNC_FLUSH,
                  windowBits
                })

                this._deflate[kTotalLength] = 0
                this._deflate[kBuffers] = []

                //
                // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use
                // it is made after it has already been closed. This cannot happen here,
                // so we only add a listener for the `'data'` event.
                //
                this._deflate.on('data', deflateOnData)
              }

              this._deflate[kWriteInProgress] = true

              this._deflate.write(data)
              this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {
                var data = bufferUtil.concat(
                  this._deflate[kBuffers],
                  this._deflate[kTotalLength]
                )

                if (fin) data = data.slice(0, data.length - 4)

                if (
                  (fin && this.params[`${endpoint}_no_context_takeover`]) ||
                  this._deflate[kPendingClose]
                ) {
                  this._deflate.close()
                  this._deflate = null
                } else {
                  this._deflate[kWriteInProgress] = false
                  this._deflate[kTotalLength] = 0
                  this._deflate[kBuffers] = []
                }

                callback(null, data)
              })
            }
          }

          module.exports = PerMessageDeflate

          /**
           * The listener of the `zlib.DeflateRaw` stream `'data'` event.
           *
           * @param {Buffer} chunk A chunk of data
           * @private
           */
          function deflateOnData(chunk) {
            this[kBuffers].push(chunk)
            this[kTotalLength] += chunk.length
          }

          /**
           * The listener of the `zlib.InflateRaw` stream `'data'` event.
           *
           * @param {Buffer} chunk A chunk of data
           * @private
           */
          function inflateOnData(chunk) {
            this[kTotalLength] += chunk.length

            if (
              this[kOwner]._maxPayload < 1 ||
              this[kTotalLength] <= this[kOwner]._maxPayload
            ) {
              this[kBuffers].push(chunk)
              return
            }

            this[kError] = new Error('max payload size exceeded')
            this[kError].closeCode = 1009
            this.removeListener('data', inflateOnData)
            this.reset()
          }

          /**
           * The listener of the `zlib.InflateRaw` stream `'error'` event.
           *
           * @param {Error} err The emitted error
           * @private
           */
          function inflateOnError(err) {
            //
            // There is no need to call `Zlib#close()` as the handle is automatically
            // closed when an error is emitted.
            //
            this[kOwner]._inflate = null
            this[kCallback](err)
          }

          /***/
        },

      /***/ '../../node_modules/ws/lib/Receiver.js':
        /*!*************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/Receiver.js ***!
  \*************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * ws: a node.js websocket client
           * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
           * MIT Licensed
           */

          const safeBuffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          )

          const PerMessageDeflate = __webpack_require__(
            /*! ./PerMessageDeflate */ '../../node_modules/ws/lib/PerMessageDeflate.js'
          )
          const isValidUTF8 = __webpack_require__(
            /*! ./Validation */ '../../node_modules/ws/lib/Validation.js'
          )
          const bufferUtil = __webpack_require__(
            /*! ./BufferUtil */ '../../node_modules/ws/lib/BufferUtil.js'
          )
          const ErrorCodes = __webpack_require__(
            /*! ./ErrorCodes */ '../../node_modules/ws/lib/ErrorCodes.js'
          )
          const constants = __webpack_require__(
            /*! ./Constants */ '../../node_modules/ws/lib/Constants.js'
          )

          const Buffer = safeBuffer.Buffer

          const GET_INFO = 0
          const GET_PAYLOAD_LENGTH_16 = 1
          const GET_PAYLOAD_LENGTH_64 = 2
          const GET_MASK = 3
          const GET_DATA = 4
          const INFLATING = 5

          /**
           * HyBi Receiver implementation.
           */
          class Receiver {
            /**
             * Creates a Receiver instance.
             *
             * @param {Object} extensions An object containing the negotiated extensions
             * @param {Number} maxPayload The maximum allowed message length
             * @param {String} binaryType The type for binary data
             */
            constructor(extensions, maxPayload, binaryType) {
              this._binaryType = binaryType || constants.BINARY_TYPES[0]
              this._extensions = extensions || {}
              this._maxPayload = maxPayload | 0

              this._bufferedBytes = 0
              this._buffers = []

              this._compressed = false
              this._payloadLength = 0
              this._fragmented = 0
              this._masked = false
              this._fin = false
              this._mask = null
              this._opcode = 0

              this._totalPayloadLength = 0
              this._messageLength = 0
              this._fragments = []

              this._cleanupCallback = null
              this._hadError = false
              this._dead = false
              this._loop = false

              this.onmessage = null
              this.onclose = null
              this.onerror = null
              this.onping = null
              this.onpong = null

              this._state = GET_INFO
            }

            /**
             * Consumes bytes from the available buffered data.
             *
             * @param {Number} bytes The number of bytes to consume
             * @return {Buffer} Consumed bytes
             * @private
             */
            readBuffer(bytes) {
              var offset = 0
              var dst
              var l

              this._bufferedBytes -= bytes

              if (bytes === this._buffers[0].length)
                return this._buffers.shift()

              if (bytes < this._buffers[0].length) {
                dst = this._buffers[0].slice(0, bytes)
                this._buffers[0] = this._buffers[0].slice(bytes)
                return dst
              }

              dst = Buffer.allocUnsafe(bytes)

              while (bytes > 0) {
                l = this._buffers[0].length

                if (bytes >= l) {
                  this._buffers[0].copy(dst, offset)
                  offset += l
                  this._buffers.shift()
                } else {
                  this._buffers[0].copy(dst, offset, 0, bytes)
                  this._buffers[0] = this._buffers[0].slice(bytes)
                }

                bytes -= l
              }

              return dst
            }

            /**
             * Checks if the number of buffered bytes is bigger or equal than `n` and
             * calls `cleanup` if necessary.
             *
             * @param {Number} n The number of bytes to check against
             * @return {Boolean} `true` if `bufferedBytes >= n`, else `false`
             * @private
             */
            hasBufferedBytes(n) {
              if (this._bufferedBytes >= n) return true

              this._loop = false
              if (this._dead) this.cleanup(this._cleanupCallback)
              return false
            }

            /**
             * Adds new data to the parser.
             *
             * @public
             */
            add(data) {
              if (this._dead) return

              this._bufferedBytes += data.length
              this._buffers.push(data)
              this.startLoop()
            }

            /**
             * Starts the parsing loop.
             *
             * @private
             */
            startLoop() {
              this._loop = true

              while (this._loop) {
                switch (this._state) {
                  case GET_INFO:
                    this.getInfo()
                    break
                  case GET_PAYLOAD_LENGTH_16:
                    this.getPayloadLength16()
                    break
                  case GET_PAYLOAD_LENGTH_64:
                    this.getPayloadLength64()
                    break
                  case GET_MASK:
                    this.getMask()
                    break
                  case GET_DATA:
                    this.getData()
                    break
                  default:
                    // `INFLATING`
                    this._loop = false
                }
              }
            }

            /**
             * Reads the first two bytes of a frame.
             *
             * @private
             */
            getInfo() {
              if (!this.hasBufferedBytes(2)) return

              const buf = this.readBuffer(2)

              if ((buf[0] & 0x30) !== 0x00) {
                this.error(new Error('RSV2 and RSV3 must be clear'), 1002)
                return
              }

              const compressed = (buf[0] & 0x40) === 0x40

              if (
                compressed &&
                !this._extensions[PerMessageDeflate.extensionName]
              ) {
                this.error(new Error('RSV1 must be clear'), 1002)
                return
              }

              this._fin = (buf[0] & 0x80) === 0x80
              this._opcode = buf[0] & 0x0f
              this._payloadLength = buf[1] & 0x7f

              if (this._opcode === 0x00) {
                if (compressed) {
                  this.error(new Error('RSV1 must be clear'), 1002)
                  return
                }

                if (!this._fragmented) {
                  this.error(new Error(`invalid opcode: ${this._opcode}`), 1002)
                  return
                } else {
                  this._opcode = this._fragmented
                }
              } else if (this._opcode === 0x01 || this._opcode === 0x02) {
                if (this._fragmented) {
                  this.error(new Error(`invalid opcode: ${this._opcode}`), 1002)
                  return
                }

                this._compressed = compressed
              } else if (this._opcode > 0x07 && this._opcode < 0x0b) {
                if (!this._fin) {
                  this.error(new Error('FIN must be set'), 1002)
                  return
                }

                if (compressed) {
                  this.error(new Error('RSV1 must be clear'), 1002)
                  return
                }

                if (this._payloadLength > 0x7d) {
                  this.error(new Error('invalid payload length'), 1002)
                  return
                }
              } else {
                this.error(new Error(`invalid opcode: ${this._opcode}`), 1002)
                return
              }

              if (!this._fin && !this._fragmented)
                this._fragmented = this._opcode

              this._masked = (buf[1] & 0x80) === 0x80

              if (this._payloadLength === 126)
                this._state = GET_PAYLOAD_LENGTH_16
              else if (this._payloadLength === 127)
                this._state = GET_PAYLOAD_LENGTH_64
              else this.haveLength()
            }

            /**
             * Gets extended payload length (7+16).
             *
             * @private
             */
            getPayloadLength16() {
              if (!this.hasBufferedBytes(2)) return

              this._payloadLength = this.readBuffer(2).readUInt16BE(0, true)
              this.haveLength()
            }

            /**
             * Gets extended payload length (7+64).
             *
             * @private
             */
            getPayloadLength64() {
              if (!this.hasBufferedBytes(8)) return

              const buf = this.readBuffer(8)
              const num = buf.readUInt32BE(0, true)

              //
              // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned
              // if payload length is greater than this number.
              //
              if (num > Math.pow(2, 53 - 32) - 1) {
                this.error(new Error('max payload size exceeded'), 1009)
                return
              }

              this._payloadLength =
                num * Math.pow(2, 32) + buf.readUInt32BE(4, true)
              this.haveLength()
            }

            /**
             * Payload length has been read.
             *
             * @private
             */
            haveLength() {
              if (
                this._opcode < 0x08 &&
                this.maxPayloadExceeded(this._payloadLength)
              ) {
                return
              }

              if (this._masked) this._state = GET_MASK
              else this._state = GET_DATA
            }

            /**
             * Reads mask bytes.
             *
             * @private
             */
            getMask() {
              if (!this.hasBufferedBytes(4)) return

              this._mask = this.readBuffer(4)
              this._state = GET_DATA
            }

            /**
             * Reads data bytes.
             *
             * @private
             */
            getData() {
              var data = constants.EMPTY_BUFFER

              if (this._payloadLength) {
                if (!this.hasBufferedBytes(this._payloadLength)) return

                data = this.readBuffer(this._payloadLength)
                if (this._masked) bufferUtil.unmask(data, this._mask)
              }

              if (this._opcode > 0x07) {
                this.controlMessage(data)
              } else if (this._compressed) {
                this._state = INFLATING
                this.decompress(data)
              } else if (this.pushFragment(data)) {
                this.dataMessage()
              }
            }

            /**
             * Decompresses data.
             *
             * @param {Buffer} data Compressed data
             * @private
             */
            decompress(data) {
              const perMessageDeflate = this._extensions[
                PerMessageDeflate.extensionName
              ]

              perMessageDeflate.decompress(data, this._fin, (err, buf) => {
                if (err) {
                  this.error(err, err.closeCode === 1009 ? 1009 : 1007)
                  return
                }

                if (this.pushFragment(buf)) this.dataMessage()
                this.startLoop()
              })
            }

            /**
             * Handles a data message.
             *
             * @private
             */
            dataMessage() {
              if (this._fin) {
                const messageLength = this._messageLength
                const fragments = this._fragments

                this._totalPayloadLength = 0
                this._messageLength = 0
                this._fragmented = 0
                this._fragments = []

                if (this._opcode === 2) {
                  var data

                  if (this._binaryType === 'nodebuffer') {
                    data = toBuffer(fragments, messageLength)
                  } else if (this._binaryType === 'arraybuffer') {
                    data = toArrayBuffer(toBuffer(fragments, messageLength))
                  } else {
                    data = fragments
                  }

                  this.onmessage(data)
                } else {
                  const buf = toBuffer(fragments, messageLength)

                  if (!isValidUTF8(buf)) {
                    this.error(new Error('invalid utf8 sequence'), 1007)
                    return
                  }

                  this.onmessage(buf.toString())
                }
              }

              this._state = GET_INFO
            }

            /**
             * Handles a control message.
             *
             * @param {Buffer} data Data to handle
             * @private
             */
            controlMessage(data) {
              if (this._opcode === 0x08) {
                if (data.length === 0) {
                  this.onclose(1000, '')
                  this._loop = false
                  this.cleanup(this._cleanupCallback)
                } else if (data.length === 1) {
                  this.error(new Error('invalid payload length'), 1002)
                } else {
                  const code = data.readUInt16BE(0, true)

                  if (!ErrorCodes.isValidErrorCode(code)) {
                    this.error(new Error(`invalid status code: ${code}`), 1002)
                    return
                  }

                  const buf = data.slice(2)

                  if (!isValidUTF8(buf)) {
                    this.error(new Error('invalid utf8 sequence'), 1007)
                    return
                  }

                  this.onclose(code, buf.toString())
                  this._loop = false
                  this.cleanup(this._cleanupCallback)
                }

                return
              }

              if (this._opcode === 0x09) this.onping(data)
              else this.onpong(data)

              this._state = GET_INFO
            }

            /**
             * Handles an error.
             *
             * @param {Error} err The error
             * @param {Number} code Close code
             * @private
             */
            error(err, code) {
              this.onerror(err, code)
              this._hadError = true
              this._loop = false
              this.cleanup(this._cleanupCallback)
            }

            /**
             * Checks payload size, disconnects socket when it exceeds `maxPayload`.
             *
             * @param {Number} length Payload length
             * @private
             */
            maxPayloadExceeded(length) {
              if (length === 0 || this._maxPayload < 1) return false

              const fullLength = this._totalPayloadLength + length

              if (fullLength <= this._maxPayload) {
                this._totalPayloadLength = fullLength
                return false
              }

              this.error(new Error('max payload size exceeded'), 1009)
              return true
            }

            /**
             * Appends a fragment in the fragments array after checking that the sum of
             * fragment lengths does not exceed `maxPayload`.
             *
             * @param {Buffer} fragment The fragment to add
             * @return {Boolean} `true` if `maxPayload` is not exceeded, else `false`
             * @private
             */
            pushFragment(fragment) {
              if (fragment.length === 0) return true

              const totalLength = this._messageLength + fragment.length

              if (this._maxPayload < 1 || totalLength <= this._maxPayload) {
                this._messageLength = totalLength
                this._fragments.push(fragment)
                return true
              }

              this.error(new Error('max payload size exceeded'), 1009)
              return false
            }

            /**
             * Releases resources used by the receiver.
             *
             * @param {Function} cb Callback
             * @public
             */
            cleanup(cb) {
              this._dead = true

              if (
                !this._hadError &&
                (this._loop || this._state === INFLATING)
              ) {
                this._cleanupCallback = cb
              } else {
                this._extensions = null
                this._fragments = null
                this._buffers = null
                this._mask = null

                this._cleanupCallback = null
                this.onmessage = null
                this.onclose = null
                this.onerror = null
                this.onping = null
                this.onpong = null

                if (cb) cb()
              }
            }
          }

          module.exports = Receiver

          /**
           * Makes a buffer from a list of fragments.
           *
           * @param {Buffer[]} fragments The list of fragments composing the message
           * @param {Number} messageLength The length of the message
           * @return {Buffer}
           * @private
           */
          function toBuffer(fragments, messageLength) {
            if (fragments.length === 1) return fragments[0]
            if (fragments.length > 1)
              return bufferUtil.concat(fragments, messageLength)
            return constants.EMPTY_BUFFER
          }

          /**
           * Converts a buffer to an `ArrayBuffer`.
           *
           * @param {Buffer} The buffer to convert
           * @return {ArrayBuffer} Converted buffer
           */
          function toArrayBuffer(buf) {
            if (
              buf.byteOffset === 0 &&
              buf.byteLength === buf.buffer.byteLength
            ) {
              return buf.buffer
            }

            return buf.buffer.slice(
              buf.byteOffset,
              buf.byteOffset + buf.byteLength
            )
          }

          /***/
        },

      /***/ '../../node_modules/ws/lib/Sender.js':
        /*!***********************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/Sender.js ***!
  \***********************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * ws: a node.js websocket client
           * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
           * MIT Licensed
           */

          const safeBuffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          )
          const crypto = __webpack_require__(/*! crypto */ 'crypto')

          const PerMessageDeflate = __webpack_require__(
            /*! ./PerMessageDeflate */ '../../node_modules/ws/lib/PerMessageDeflate.js'
          )
          const bufferUtil = __webpack_require__(
            /*! ./BufferUtil */ '../../node_modules/ws/lib/BufferUtil.js'
          )
          const ErrorCodes = __webpack_require__(
            /*! ./ErrorCodes */ '../../node_modules/ws/lib/ErrorCodes.js'
          )
          const constants = __webpack_require__(
            /*! ./Constants */ '../../node_modules/ws/lib/Constants.js'
          )

          const Buffer = safeBuffer.Buffer

          /**
           * HyBi Sender implementation.
           */
          class Sender {
            /**
             * Creates a Sender instance.
             *
             * @param {net.Socket} socket The connection socket
             * @param {Object} extensions An object containing the negotiated extensions
             */
            constructor(socket, extensions) {
              this._extensions = extensions || {}
              this._socket = socket

              this._firstFragment = true
              this._compress = false

              this._bufferedBytes = 0
              this._deflating = false
              this._queue = []
            }

            /**
             * Frames a piece of data according to the HyBi WebSocket protocol.
             *
             * @param {Buffer} data The data to frame
             * @param {Object} options Options object
             * @param {Number} options.opcode The opcode
             * @param {Boolean} options.readOnly Specifies whether `data` can be modified
             * @param {Boolean} options.fin Specifies whether or not to set the FIN bit
             * @param {Boolean} options.mask Specifies whether or not to mask `data`
             * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit
             * @return {Buffer[]} The framed data as a list of `Buffer` instances
             * @public
             */
            static frame(data, options) {
              const merge =
                data.length < 1024 || (options.mask && options.readOnly)
              var offset = options.mask ? 6 : 2
              var payloadLength = data.length

              if (data.length >= 65536) {
                offset += 8
                payloadLength = 127
              } else if (data.length > 125) {
                offset += 2
                payloadLength = 126
              }

              const target = Buffer.allocUnsafe(
                merge ? data.length + offset : offset
              )

              target[0] = options.fin ? options.opcode | 0x80 : options.opcode
              if (options.rsv1) target[0] |= 0x40

              if (payloadLength === 126) {
                target.writeUInt16BE(data.length, 2, true)
              } else if (payloadLength === 127) {
                target.writeUInt32BE(0, 2, true)
                target.writeUInt32BE(data.length, 6, true)
              }

              if (!options.mask) {
                target[1] = payloadLength
                if (merge) {
                  data.copy(target, offset)
                  return [target]
                }

                return [target, data]
              }

              const mask = crypto.randomBytes(4)

              target[1] = payloadLength | 0x80
              target[offset - 4] = mask[0]
              target[offset - 3] = mask[1]
              target[offset - 2] = mask[2]
              target[offset - 1] = mask[3]

              if (merge) {
                bufferUtil.mask(data, mask, target, offset, data.length)
                return [target]
              }

              bufferUtil.mask(data, mask, data, 0, data.length)
              return [target, data]
            }

            /**
             * Sends a close message to the other peer.
             *
             * @param {(Number|undefined)} code The status code component of the body
             * @param {String} data The message component of the body
             * @param {Boolean} mask Specifies whether or not to mask the message
             * @param {Function} cb Callback
             * @public
             */
            close(code, data, mask, cb) {
              var buf

              if (code === undefined) {
                code = 1000
              } else if (
                typeof code !== 'number' ||
                !ErrorCodes.isValidErrorCode(code)
              ) {
                throw new Error(
                  'first argument must be a valid error code number'
                )
              }

              if (data === undefined || data === '') {
                if (code === 1000) {
                  buf = constants.EMPTY_BUFFER
                } else {
                  buf = Buffer.allocUnsafe(2)
                  buf.writeUInt16BE(code, 0, true)
                }
              } else {
                buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data))
                buf.writeUInt16BE(code, 0, true)
                buf.write(data, 2)
              }

              if (this._deflating) {
                this.enqueue([this.doClose, buf, mask, cb])
              } else {
                this.doClose(buf, mask, cb)
              }
            }

            /**
             * Frames and sends a close message.
             *
             * @param {Buffer} data The message to send
             * @param {Boolean} mask Specifies whether or not to mask `data`
             * @param {Function} cb Callback
             * @private
             */
            doClose(data, mask, cb) {
              this.sendFrame(
                Sender.frame(data, {
                  fin: true,
                  rsv1: false,
                  opcode: 0x08,
                  mask,
                  readOnly: false
                }),
                cb
              )
            }

            /**
             * Sends a ping message to the other peer.
             *
             * @param {*} data The message to send
             * @param {Boolean} mask Specifies whether or not to mask `data`
             * @public
             */
            ping(data, mask) {
              var readOnly = true

              if (!Buffer.isBuffer(data)) {
                if (data instanceof ArrayBuffer) {
                  data = Buffer.from(data)
                } else if (ArrayBuffer.isView(data)) {
                  data = viewToBuffer(data)
                } else {
                  data = Buffer.from(data)
                  readOnly = false
                }
              }

              if (this._deflating) {
                this.enqueue([this.doPing, data, mask, readOnly])
              } else {
                this.doPing(data, mask, readOnly)
              }
            }

            /**
             * Frames and sends a ping message.
             *
             * @param {*} data The message to send
             * @param {Boolean} mask Specifies whether or not to mask `data`
             * @param {Boolean} readOnly Specifies whether `data` can be modified
             * @private
             */
            doPing(data, mask, readOnly) {
              this.sendFrame(
                Sender.frame(data, {
                  fin: true,
                  rsv1: false,
                  opcode: 0x09,
                  mask,
                  readOnly
                })
              )
            }

            /**
             * Sends a pong message to the other peer.
             *
             * @param {*} data The message to send
             * @param {Boolean} mask Specifies whether or not to mask `data`
             * @public
             */
            pong(data, mask) {
              var readOnly = true

              if (!Buffer.isBuffer(data)) {
                if (data instanceof ArrayBuffer) {
                  data = Buffer.from(data)
                } else if (ArrayBuffer.isView(data)) {
                  data = viewToBuffer(data)
                } else {
                  data = Buffer.from(data)
                  readOnly = false
                }
              }

              if (this._deflating) {
                this.enqueue([this.doPong, data, mask, readOnly])
              } else {
                this.doPong(data, mask, readOnly)
              }
            }

            /**
             * Frames and sends a pong message.
             *
             * @param {*} data The message to send
             * @param {Boolean} mask Specifies whether or not to mask `data`
             * @param {Boolean} readOnly Specifies whether `data` can be modified
             * @private
             */
            doPong(data, mask, readOnly) {
              this.sendFrame(
                Sender.frame(data, {
                  fin: true,
                  rsv1: false,
                  opcode: 0x0a,
                  mask,
                  readOnly
                })
              )
            }

            /**
             * Sends a data message to the other peer.
             *
             * @param {*} data The message to send
             * @param {Object} options Options object
             * @param {Boolean} options.compress Specifies whether or not to compress `data`
             * @param {Boolean} options.binary Specifies whether `data` is binary or text
             * @param {Boolean} options.fin Specifies whether the fragment is the last one
             * @param {Boolean} options.mask Specifies whether or not to mask `data`
             * @param {Function} cb Callback
             * @public
             */
            send(data, options, cb) {
              var opcode = options.binary ? 2 : 1
              var rsv1 = options.compress
              var readOnly = true

              if (!Buffer.isBuffer(data)) {
                if (data instanceof ArrayBuffer) {
                  data = Buffer.from(data)
                } else if (ArrayBuffer.isView(data)) {
                  data = viewToBuffer(data)
                } else {
                  data = Buffer.from(data)
                  readOnly = false
                }
              }

              const perMessageDeflate = this._extensions[
                PerMessageDeflate.extensionName
              ]

              if (this._firstFragment) {
                this._firstFragment = false
                if (rsv1 && perMessageDeflate) {
                  rsv1 = data.length >= perMessageDeflate._threshold
                }
                this._compress = rsv1
              } else {
                rsv1 = false
                opcode = 0
              }

              if (options.fin) this._firstFragment = true

              if (perMessageDeflate) {
                const opts = {
                  fin: options.fin,
                  rsv1,
                  opcode,
                  mask: options.mask,
                  readOnly
                }

                if (this._deflating) {
                  this.enqueue([this.dispatch, data, this._compress, opts, cb])
                } else {
                  this.dispatch(data, this._compress, opts, cb)
                }
              } else {
                this.sendFrame(
                  Sender.frame(data, {
                    fin: options.fin,
                    rsv1: false,
                    opcode,
                    mask: options.mask,
                    readOnly
                  }),
                  cb
                )
              }
            }

            /**
             * Dispatches a data message.
             *
             * @param {Buffer} data The message to send
             * @param {Boolean} compress Specifies whether or not to compress `data`
             * @param {Object} options Options object
             * @param {Number} options.opcode The opcode
             * @param {Boolean} options.readOnly Specifies whether `data` can be modified
             * @param {Boolean} options.fin Specifies whether or not to set the FIN bit
             * @param {Boolean} options.mask Specifies whether or not to mask `data`
             * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit
             * @param {Function} cb Callback
             * @private
             */
            dispatch(data, compress, options, cb) {
              if (!compress) {
                this.sendFrame(Sender.frame(data, options), cb)
                return
              }

              const perMessageDeflate = this._extensions[
                PerMessageDeflate.extensionName
              ]

              this._deflating = true
              perMessageDeflate.compress(data, options.fin, (_, buf) => {
                options.readOnly = false
                this.sendFrame(Sender.frame(buf, options), cb)
                this._deflating = false
                this.dequeue()
              })
            }

            /**
             * Executes queued send operations.
             *
             * @private
             */
            dequeue() {
              while (!this._deflating && this._queue.length) {
                const params = this._queue.shift()

                this._bufferedBytes -= params[1].length
                params[0].apply(this, params.slice(1))
              }
            }

            /**
             * Enqueues a send operation.
             *
             * @param {Array} params Send operation parameters.
             * @private
             */
            enqueue(params) {
              this._bufferedBytes += params[1].length
              this._queue.push(params)
            }

            /**
             * Sends a frame.
             *
             * @param {Buffer[]} list The frame to send
             * @param {Function} cb Callback
             * @private
             */
            sendFrame(list, cb) {
              if (list.length === 2) {
                this._socket.write(list[0])
                this._socket.write(list[1], cb)
              } else {
                this._socket.write(list[0], cb)
              }
            }
          }

          module.exports = Sender

          /**
           * Converts an `ArrayBuffer` view into a buffer.
           *
           * @param {(DataView|TypedArray)} view The view to convert
           * @return {Buffer} Converted view
           * @private
           */
          function viewToBuffer(view) {
            const buf = Buffer.from(view.buffer)

            if (view.byteLength !== view.buffer.byteLength) {
              return buf.slice(
                view.byteOffset,
                view.byteOffset + view.byteLength
              )
            }

            return buf
          }

          /***/
        },

      /***/ '../../node_modules/ws/lib/Validation.js':
        /*!***************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/Validation.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * ws: a node.js websocket client
           * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
           * MIT Licensed
           */

          try {
            const isValidUTF8 = __webpack_require__(
              !(function webpackMissingModule() {
                var e = new Error("Cannot find module 'utf-8-validate'")
                e.code = 'MODULE_NOT_FOUND'
                throw e
              })()
            )

            module.exports =
              typeof isValidUTF8 === 'object'
                ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0
                : isValidUTF8
          } catch (e) /* istanbul ignore next */ {
            module.exports = () => true
          }

          /***/
        },

      /***/ '../../node_modules/ws/lib/WebSocket.js':
        /*!**************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/WebSocket.js ***!
  \**************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * ws: a node.js websocket client
           * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
           * MIT Licensed
           */

          const EventEmitter = __webpack_require__(/*! events */ 'events')
          const crypto = __webpack_require__(/*! crypto */ 'crypto')
          const Ultron = __webpack_require__(
            /*! ultron */ '../../node_modules/ultron/index.js'
          )
          const https = __webpack_require__(/*! https */ 'https')
          const http = __webpack_require__(/*! http */ 'http')
          const url = __webpack_require__(/*! url */ 'url')

          const PerMessageDeflate = __webpack_require__(
            /*! ./PerMessageDeflate */ '../../node_modules/ws/lib/PerMessageDeflate.js'
          )
          const EventTarget = __webpack_require__(
            /*! ./EventTarget */ '../../node_modules/ws/lib/EventTarget.js'
          )
          const Extensions = __webpack_require__(
            /*! ./Extensions */ '../../node_modules/ws/lib/Extensions.js'
          )
          const constants = __webpack_require__(
            /*! ./Constants */ '../../node_modules/ws/lib/Constants.js'
          )
          const Receiver = __webpack_require__(
            /*! ./Receiver */ '../../node_modules/ws/lib/Receiver.js'
          )
          const Sender = __webpack_require__(
            /*! ./Sender */ '../../node_modules/ws/lib/Sender.js'
          )

          const protocolVersions = [8, 13]
          const closeTimeout = 30 * 1000 // Allow 30 seconds to terminate the connection cleanly.

          /**
           * Class representing a WebSocket.
           *
           * @extends EventEmitter
           */
          class WebSocket extends EventEmitter {
            /**
             * Create a new `WebSocket`.
             *
             * @param {String} address The URL to which to connect
             * @param {(String|String[])} protocols The subprotocols
             * @param {Object} options Connection options
             */
            constructor(address, protocols, options) {
              super()

              if (!protocols) {
                protocols = []
              } else if (typeof protocols === 'string') {
                protocols = [protocols]
              } else if (!Array.isArray(protocols)) {
                options = protocols
                protocols = []
              }

              this.readyState = WebSocket.CONNECTING
              this.bytesReceived = 0
              this.extensions = {}
              this.protocol = ''

              this._binaryType = constants.BINARY_TYPES[0]
              this._finalize = this.finalize.bind(this)
              this._closeFrameReceived = false
              this._closeFrameSent = false
              this._closeMessage = ''
              this._closeTimer = null
              this._finalized = false
              this._closeCode = 1006
              this._receiver = null
              this._sender = null
              this._socket = null
              this._ultron = null

              if (Array.isArray(address)) {
                initAsServerClient.call(this, address[0], address[1], options)
              } else {
                initAsClient.call(this, address, protocols, options)
              }
            }

            get CONNECTING() {
              return WebSocket.CONNECTING
            }
            get CLOSING() {
              return WebSocket.CLOSING
            }
            get CLOSED() {
              return WebSocket.CLOSED
            }
            get OPEN() {
              return WebSocket.OPEN
            }

            /**
             * @type {Number}
             */
            get bufferedAmount() {
              var amount = 0

              if (this._socket) {
                amount = this._socket.bufferSize + this._sender._bufferedBytes
              }
              return amount
            }

            /**
             * This deviates from the WHATWG interface since ws doesn't support the required
             * default "blob" type (instead we define a custom "nodebuffer" type).
             *
             * @type {String}
             */
            get binaryType() {
              return this._binaryType
            }

            set binaryType(type) {
              if (constants.BINARY_TYPES.indexOf(type) < 0) return

              this._binaryType = type

              //
              // Allow to change `binaryType` on the fly.
              //
              if (this._receiver) this._receiver._binaryType = type
            }

            /**
             * Set up the socket and the internal resources.
             *
             * @param {net.Socket} socket The network socket between the server and client
             * @param {Buffer} head The first packet of the upgraded stream
             * @private
             */
            setSocket(socket, head) {
              socket.setTimeout(0)
              socket.setNoDelay()

              this._receiver = new Receiver(
                this.extensions,
                this._maxPayload,
                this.binaryType
              )
              this._sender = new Sender(socket, this.extensions)
              this._ultron = new Ultron(socket)
              this._socket = socket

              this._ultron.on('close', this._finalize)
              this._ultron.on('error', this._finalize)
              this._ultron.on('end', this._finalize)

              if (head.length > 0) socket.unshift(head)

              this._ultron.on('data', data => {
                this.bytesReceived += data.length
                this._receiver.add(data)
              })

              this._receiver.onmessage = data => this.emit('message', data)
              this._receiver.onping = data => {
                this.pong(data, !this._isServer, true)
                this.emit('ping', data)
              }
              this._receiver.onpong = data => this.emit('pong', data)
              this._receiver.onclose = (code, reason) => {
                this._closeFrameReceived = true
                this._closeMessage = reason
                this._closeCode = code
                if (!this._finalized) this.close(code, reason)
              }
              this._receiver.onerror = (error, code) => {
                this._closeMessage = ''
                this._closeCode = code

                //
                // Ensure that the error is emitted even if `WebSocket#finalize()` has
                // already been called.
                //
                this.readyState = WebSocket.CLOSING
                this.emit('error', error)
                this.finalize(true)
              }

              this.readyState = WebSocket.OPEN
              this.emit('open')
            }

            /**
             * Clean up and release internal resources.
             *
             * @param {(Boolean|Error)} error Indicates whether or not an error occurred
             * @private
             */
            finalize(error) {
              if (this._finalized) return

              this.readyState = WebSocket.CLOSING
              this._finalized = true

              if (typeof error === 'object') this.emit('error', error)
              if (!this._socket) return this.emitClose()

              clearTimeout(this._closeTimer)
              this._closeTimer = null

              this._ultron.destroy()
              this._ultron = null

              this._socket.on('error', constants.NOOP)

              if (!error) this._socket.end()
              else this._socket.destroy()

              this._socket = null
              this._sender = null

              this._receiver.cleanup(() => this.emitClose())
              this._receiver = null
            }

            /**
             * Emit the `close` event.
             *
             * @private
             */
            emitClose() {
              this.readyState = WebSocket.CLOSED

              this.emit('close', this._closeCode, this._closeMessage)

              if (this.extensions[PerMessageDeflate.extensionName]) {
                this.extensions[PerMessageDeflate.extensionName].cleanup()
              }

              this.extensions = null

              this.removeAllListeners()
            }

            /**
             * Pause the socket stream.
             *
             * @public
             */
            pause() {
              if (this.readyState !== WebSocket.OPEN)
                throw new Error('not opened')

              this._socket.pause()
            }

            /**
             * Resume the socket stream
             *
             * @public
             */
            resume() {
              if (this.readyState !== WebSocket.OPEN)
                throw new Error('not opened')

              this._socket.resume()
            }

            /**
             * Start a closing handshake.
             *
             *            +----------+     +-----------+   +----------+
             *     + - - -|ws.close()|---->|close frame|-->|ws.close()|- - - -
             *            +----------+     +-----------+   +----------+       |
             *     |      +----------+     +-----------+         |
             *            |ws.close()|<----|close frame|<--------+            |
             *            +----------+     +-----------+         |
             *  CLOSING         |              +---+             |         CLOSING
             *                  |          +---|fin|<------------+
             *     |            |          |   +---+                          |
             *                  |          |   +---+      +-------------+
             *     |            +----------+-->|fin|----->|ws.finalize()| - - +
             *                             |   +---+      +-------------+
             *     |     +-------------+   |
             *      - - -|ws.finalize()|<--+
             *           +-------------+
             *
             * @param {Number} code Status code explaining why the connection is closing
             * @param {String} data A string explaining why the connection is closing
             * @public
             */
            close(code, data) {
              if (this.readyState === WebSocket.CLOSED) return
              if (this.readyState === WebSocket.CONNECTING) {
                this._req.abort()
                this.finalize(
                  new Error('closed before the connection is established')
                )
                return
              }

              if (this.readyState === WebSocket.CLOSING) {
                if (this._closeFrameSent && this._closeFrameReceived)
                  this._socket.end()
                return
              }

              this.readyState = WebSocket.CLOSING
              this._sender.close(code, data, !this._isServer, err => {
                //
                // This error is handled by the `'error'` listener on the socket. We only
                // want to know if the close frame has been sent here.
                //
                if (err) return

                this._closeFrameSent = true

                if (!this._finalized) {
                  if (this._closeFrameReceived) this._socket.end()

                  //
                  // Ensure that the connection is cleaned up even when the closing
                  // handshake fails.
                  //
                  this._closeTimer = setTimeout(
                    this._finalize,
                    closeTimeout,
                    true
                  )
                }
              })
            }

            /**
             * Send a ping message.
             *
             * @param {*} data The message to send
             * @param {Boolean} mask Indicates whether or not to mask `data`
             * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`
             * @public
             */
            ping(data, mask, failSilently) {
              if (this.readyState !== WebSocket.OPEN) {
                if (failSilently) return
                throw new Error('not opened')
              }

              if (typeof data === 'number') data = data.toString()
              if (mask === undefined) mask = !this._isServer
              this._sender.ping(data || constants.EMPTY_BUFFER, mask)
            }

            /**
             * Send a pong message.
             *
             * @param {*} data The message to send
             * @param {Boolean} mask Indicates whether or not to mask `data`
             * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`
             * @public
             */
            pong(data, mask, failSilently) {
              if (this.readyState !== WebSocket.OPEN) {
                if (failSilently) return
                throw new Error('not opened')
              }

              if (typeof data === 'number') data = data.toString()
              if (mask === undefined) mask = !this._isServer
              this._sender.pong(data || constants.EMPTY_BUFFER, mask)
            }

            /**
             * Send a data message.
             *
             * @param {*} data The message to send
             * @param {Object} options Options object
             * @param {Boolean} options.compress Specifies whether or not to compress `data`
             * @param {Boolean} options.binary Specifies whether `data` is binary or text
             * @param {Boolean} options.fin Specifies whether the fragment is the last one
             * @param {Boolean} options.mask Specifies whether or not to mask `data`
             * @param {Function} cb Callback which is executed when data is written out
             * @public
             */
            send(data, options, cb) {
              if (typeof options === 'function') {
                cb = options
                options = {}
              }

              if (this.readyState !== WebSocket.OPEN) {
                if (cb) cb(new Error('not opened'))
                else throw new Error('not opened')
                return
              }

              if (typeof data === 'number') data = data.toString()

              const opts = Object.assign(
                {
                  binary: typeof data !== 'string',
                  mask: !this._isServer,
                  compress: true,
                  fin: true
                },
                options
              )

              if (!this.extensions[PerMessageDeflate.extensionName]) {
                opts.compress = false
              }

              this._sender.send(data || constants.EMPTY_BUFFER, opts, cb)
            }

            /**
             * Forcibly close the connection.
             *
             * @public
             */
            terminate() {
              if (this.readyState === WebSocket.CLOSED) return
              if (this.readyState === WebSocket.CONNECTING) {
                this._req.abort()
                this.finalize(
                  new Error('closed before the connection is established')
                )
                return
              }

              this.finalize(true)
            }
          }

          WebSocket.CONNECTING = 0
          WebSocket.OPEN = 1
          WebSocket.CLOSING = 2
          WebSocket.CLOSED = 3

          //
          // Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.
          // See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface
          //
          ;['open', 'error', 'close', 'message'].forEach(method => {
            Object.defineProperty(WebSocket.prototype, `on${method}`, {
              /**
               * Return the listener of the event.
               *
               * @return {(Function|undefined)} The event listener or `undefined`
               * @public
               */
              get() {
                const listeners = this.listeners(method)
                for (var i = 0; i < listeners.length; i++) {
                  if (listeners[i]._listener) return listeners[i]._listener
                }
              },
              /**
               * Add a listener for the event.
               *
               * @param {Function} listener The listener to add
               * @public
               */
              set(listener) {
                const listeners = this.listeners(method)
                for (var i = 0; i < listeners.length; i++) {
                  //
                  // Remove only the listeners added via `addEventListener`.
                  //
                  if (listeners[i]._listener)
                    this.removeListener(method, listeners[i])
                }
                this.addEventListener(method, listener)
              }
            })
          })

          WebSocket.prototype.addEventListener = EventTarget.addEventListener
          WebSocket.prototype.removeEventListener =
            EventTarget.removeEventListener

          module.exports = WebSocket

          /**
           * Initialize a WebSocket server client.
           *
           * @param {http.IncomingMessage} req The request object
           * @param {net.Socket} socket The network socket between the server and client
           * @param {Buffer} head The first packet of the upgraded stream
           * @param {Object} options WebSocket attributes
           * @param {Number} options.protocolVersion The WebSocket protocol version
           * @param {Object} options.extensions The negotiated extensions
           * @param {Number} options.maxPayload The maximum allowed message size
           * @param {String} options.protocol The chosen subprotocol
           * @private
           */
          function initAsServerClient(socket, head, options) {
            this.protocolVersion = options.protocolVersion
            this._maxPayload = options.maxPayload
            this.extensions = options.extensions
            this.protocol = options.protocol

            this._isServer = true

            this.setSocket(socket, head)
          }

          /**
           * Initialize a WebSocket client.
           *
           * @param {String} address The URL to which to connect
           * @param {String[]} protocols The list of subprotocols
           * @param {Object} options Connection options
           * @param {String} options.protocol Value of the `Sec-WebSocket-Protocol` header
           * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate
           * @param {Number} options.handshakeTimeout Timeout in milliseconds for the handshake request
           * @param {String} options.localAddress Local interface to bind for network connections
           * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version` header
           * @param {Object} options.headers An object containing request headers
           * @param {String} options.origin Value of the `Origin` or `Sec-WebSocket-Origin` header
           * @param {http.Agent} options.agent Use the specified Agent
           * @param {String} options.host Value of the `Host` header
           * @param {Number} options.family IP address family to use during hostname lookup (4 or 6).
           * @param {Function} options.checkServerIdentity A function to validate the server hostname
           * @param {Boolean} options.rejectUnauthorized Verify or not the server certificate
           * @param {String} options.passphrase The passphrase for the private key or pfx
           * @param {String} options.ciphers The ciphers to use or exclude
           * @param {String} options.ecdhCurve The curves for ECDH key agreement to use or exclude
           * @param {(String|String[]|Buffer|Buffer[])} options.cert The certificate key
           * @param {(String|String[]|Buffer|Buffer[])} options.key The private key
           * @param {(String|Buffer)} options.pfx The private key, certificate, and CA certs
           * @param {(String|String[]|Buffer|Buffer[])} options.ca Trusted certificates
           * @private
           */
          function initAsClient(address, protocols, options) {
            options = Object.assign(
              {
                protocolVersion: protocolVersions[1],
                protocol: protocols.join(','),
                perMessageDeflate: true,
                handshakeTimeout: null,
                localAddress: null,
                headers: null,
                family: null,
                origin: null,
                agent: null,
                host: null,

                //
                // SSL options.
                //
                checkServerIdentity: null,
                rejectUnauthorized: null,
                passphrase: null,
                ciphers: null,
                ecdhCurve: null,
                cert: null,
                key: null,
                pfx: null,
                ca: null
              },
              options
            )

            if (protocolVersions.indexOf(options.protocolVersion) === -1) {
              throw new Error(
                `unsupported protocol version: ${options.protocolVersion} ` +
                  `(supported versions: ${protocolVersions.join(', ')})`
              )
            }

            this.protocolVersion = options.protocolVersion
            this._isServer = false
            this.url = address

            const serverUrl = url.parse(address)
            const isUnixSocket = serverUrl.protocol === 'ws+unix:'

            if (!serverUrl.host && (!isUnixSocket || !serverUrl.path)) {
              throw new Error('invalid url')
            }

            const isSecure =
              serverUrl.protocol === 'wss:' || serverUrl.protocol === 'https:'
            const key = crypto.randomBytes(16).toString('base64')
            const httpObj = isSecure ? https : http
            var perMessageDeflate

            const requestOptions = {
              port: serverUrl.port || (isSecure ? 443 : 80),
              host: serverUrl.hostname,
              path: '/',
              headers: {
                'Sec-WebSocket-Version': options.protocolVersion,
                'Sec-WebSocket-Key': key,
                Connection: 'Upgrade',
                Upgrade: 'websocket'
              }
            }

            if (options.headers)
              Object.assign(requestOptions.headers, options.headers)
            if (options.perMessageDeflate) {
              perMessageDeflate = new PerMessageDeflate(
                options.perMessageDeflate !== true
                  ? options.perMessageDeflate
                  : {},
                false
              )
              requestOptions.headers[
                'Sec-WebSocket-Extensions'
              ] = Extensions.format({
                [PerMessageDeflate.extensionName]: perMessageDeflate.offer()
              })
            }
            if (options.protocol) {
              requestOptions.headers['Sec-WebSocket-Protocol'] =
                options.protocol
            }
            if (options.origin) {
              if (options.protocolVersion < 13) {
                requestOptions.headers['Sec-WebSocket-Origin'] = options.origin
              } else {
                requestOptions.headers.Origin = options.origin
              }
            }
            if (options.host) requestOptions.headers.Host = options.host
            if (serverUrl.auth) requestOptions.auth = serverUrl.auth

            if (options.localAddress)
              requestOptions.localAddress = options.localAddress
            if (options.family) requestOptions.family = options.family

            if (isUnixSocket) {
              const parts = serverUrl.path.split(':')

              requestOptions.socketPath = parts[0]
              requestOptions.path = parts[1]
            } else if (serverUrl.path) {
              //
              // Make sure that path starts with `/`.
              //
              if (serverUrl.path.charAt(0) !== '/') {
                requestOptions.path = `/${serverUrl.path}`
              } else {
                requestOptions.path = serverUrl.path
              }
            }

            var agent = options.agent

            //
            // A custom agent is required for these options.
            //
            if (
              options.rejectUnauthorized != null ||
              options.checkServerIdentity ||
              options.passphrase ||
              options.ciphers ||
              options.ecdhCurve ||
              options.cert ||
              options.key ||
              options.pfx ||
              options.ca
            ) {
              if (options.passphrase)
                requestOptions.passphrase = options.passphrase
              if (options.ciphers) requestOptions.ciphers = options.ciphers
              if (options.ecdhCurve)
                requestOptions.ecdhCurve = options.ecdhCurve
              if (options.cert) requestOptions.cert = options.cert
              if (options.key) requestOptions.key = options.key
              if (options.pfx) requestOptions.pfx = options.pfx
              if (options.ca) requestOptions.ca = options.ca
              if (options.checkServerIdentity) {
                requestOptions.checkServerIdentity = options.checkServerIdentity
              }
              if (options.rejectUnauthorized != null) {
                requestOptions.rejectUnauthorized = options.rejectUnauthorized
              }

              if (!agent) agent = new httpObj.Agent(requestOptions)
            }

            if (agent) requestOptions.agent = agent

            this._req = httpObj.get(requestOptions)

            if (options.handshakeTimeout) {
              this._req.setTimeout(options.handshakeTimeout, () => {
                this._req.abort()
                this.finalize(new Error('opening handshake has timed out'))
              })
            }

            this._req.on('error', error => {
              if (this._req.aborted) return

              this._req = null
              this.finalize(error)
            })

            this._req.on('response', res => {
              if (!this.emit('unexpected-response', this._req, res)) {
                this._req.abort()
                this.finalize(
                  new Error(`unexpected server response (${res.statusCode})`)
                )
              }
            })

            this._req.on('upgrade', (res, socket, head) => {
              this.emit('headers', res.headers, res)

              //
              // The user may have closed the connection from a listener of the `headers`
              // event.
              //
              if (this.readyState !== WebSocket.CONNECTING) return

              this._req = null

              const digest = crypto
                .createHash('sha1')
                .update(key + constants.GUID, 'binary')
                .digest('base64')

              if (res.headers['sec-websocket-accept'] !== digest) {
                socket.destroy()
                return this.finalize(new Error('invalid server key'))
              }

              const serverProt = res.headers['sec-websocket-protocol']
              const protList = (options.protocol || '').split(/, */)
              var protError

              if (!options.protocol && serverProt) {
                protError =
                  'server sent a subprotocol even though none requested'
              } else if (options.protocol && !serverProt) {
                protError = 'server sent no subprotocol even though requested'
              } else if (serverProt && protList.indexOf(serverProt) === -1) {
                protError = 'server responded with an invalid protocol'
              }

              if (protError) {
                socket.destroy()
                return this.finalize(new Error(protError))
              }

              if (serverProt) this.protocol = serverProt

              if (perMessageDeflate) {
                try {
                  const serverExtensions = Extensions.parse(
                    res.headers['sec-websocket-extensions']
                  )

                  if (serverExtensions[PerMessageDeflate.extensionName]) {
                    perMessageDeflate.accept(
                      serverExtensions[PerMessageDeflate.extensionName]
                    )
                    this.extensions[
                      PerMessageDeflate.extensionName
                    ] = perMessageDeflate
                  }
                } catch (err) {
                  socket.destroy()
                  this.finalize(
                    new Error('invalid Sec-WebSocket-Extensions header')
                  )
                  return
                }
              }

              this.setSocket(socket, head)
            })
          }

          /***/
        },

      /***/ '../../node_modules/ws/lib/WebSocketServer.js':
        /*!********************************************************************************!*\
  !*** /Users/saravieira/Projects/yld.io/node_modules/ws/lib/WebSocketServer.js ***!
  \********************************************************************************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'
          /*!
           * ws: a node.js websocket client
           * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
           * MIT Licensed
           */

          const safeBuffer = __webpack_require__(
            /*! safe-buffer */ '../../node_modules/safe-buffer/index.js'
          )
          const EventEmitter = __webpack_require__(/*! events */ 'events')
          const crypto = __webpack_require__(/*! crypto */ 'crypto')
          const Ultron = __webpack_require__(
            /*! ultron */ '../../node_modules/ultron/index.js'
          )
          const http = __webpack_require__(/*! http */ 'http')
          const url = __webpack_require__(/*! url */ 'url')

          const PerMessageDeflate = __webpack_require__(
            /*! ./PerMessageDeflate */ '../../node_modules/ws/lib/PerMessageDeflate.js'
          )
          const Extensions = __webpack_require__(
            /*! ./Extensions */ '../../node_modules/ws/lib/Extensions.js'
          )
          const constants = __webpack_require__(
            /*! ./Constants */ '../../node_modules/ws/lib/Constants.js'
          )
          const WebSocket = __webpack_require__(
            /*! ./WebSocket */ '../../node_modules/ws/lib/WebSocket.js'
          )

          const Buffer = safeBuffer.Buffer

          /**
           * Class representing a WebSocket server.
           *
           * @extends EventEmitter
           */
          class WebSocketServer extends EventEmitter {
            /**
             * Create a `WebSocketServer` instance.
             *
             * @param {Object} options Configuration options
             * @param {String} options.host The hostname where to bind the server
             * @param {Number} options.port The port where to bind the server
             * @param {http.Server} options.server A pre-created HTTP/S server to use
             * @param {Function} options.verifyClient An hook to reject connections
             * @param {Function} options.handleProtocols An hook to handle protocols
             * @param {String} options.path Accept only connections matching this path
             * @param {Boolean} options.noServer Enable no server mode
             * @param {Boolean} options.clientTracking Specifies whether or not to track clients
             * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate
             * @param {Number} options.maxPayload The maximum allowed message size
             * @param {Function} callback A listener for the `listening` event
             */
            constructor(options, callback) {
              super()

              options = Object.assign(
                {
                  maxPayload: 100 * 1024 * 1024,
                  perMessageDeflate: false,
                  handleProtocols: null,
                  clientTracking: true,
                  verifyClient: null,
                  noServer: false,
                  backlog: null, // use default (511 as implemented in net.js)
                  server: null,
                  host: null,
                  path: null,
                  port: null
                },
                options
              )

              if (
                options.port == null &&
                !options.server &&
                !options.noServer
              ) {
                throw new TypeError('missing or invalid options')
              }

              if (options.port != null) {
                this._server = http.createServer((req, res) => {
                  const body = http.STATUS_CODES[426]

                  res.writeHead(426, {
                    'Content-Length': body.length,
                    'Content-Type': 'text/plain'
                  })
                  res.end(body)
                })
                this._server.listen(
                  options.port,
                  options.host,
                  options.backlog,
                  callback
                )
              } else if (options.server) {
                this._server = options.server
              }

              if (this._server) {
                this._ultron = new Ultron(this._server)
                this._ultron.on('listening', () => this.emit('listening'))
                this._ultron.on('error', err => this.emit('error', err))
                this._ultron.on('upgrade', (req, socket, head) => {
                  this.handleUpgrade(req, socket, head, client => {
                    this.emit('connection', client, req)
                  })
                })
              }

              if (options.perMessageDeflate === true)
                options.perMessageDeflate = {}
              if (options.clientTracking) this.clients = new Set()
              this.options = options
            }

            /**
             * Close the server.
             *
             * @param {Function} cb Callback
             * @public
             */
            close(cb) {
              //
              // Terminate all associated clients.
              //
              if (this.clients) {
                for (const client of this.clients) client.terminate()
              }

              const server = this._server

              if (server) {
                this._ultron.destroy()
                this._ultron = this._server = null

                //
                // Close the http server if it was internally created.
                //
                if (this.options.port != null) return server.close(cb)
              }

              if (cb) cb()
            }

            /**
             * See if a given request should be handled by this server instance.
             *
             * @param {http.IncomingMessage} req Request object to inspect
             * @return {Boolean} `true` if the request is valid, else `false`
             * @public
             */
            shouldHandle(req) {
              if (
                this.options.path &&
                url.parse(req.url).pathname !== this.options.path
              ) {
                return false
              }

              return true
            }

            /**
             * Handle a HTTP Upgrade request.
             *
             * @param {http.IncomingMessage} req The request object
             * @param {net.Socket} socket The network socket between the server and client
             * @param {Buffer} head The first packet of the upgraded stream
             * @param {Function} cb Callback
             * @public
             */
            handleUpgrade(req, socket, head, cb) {
              socket.on('error', socketError)

              const version = +req.headers['sec-websocket-version']
              const extensions = {}

              if (
                req.method !== 'GET' ||
                req.headers.upgrade.toLowerCase() !== 'websocket' ||
                !req.headers['sec-websocket-key'] ||
                (version !== 8 && version !== 13) ||
                !this.shouldHandle(req)
              ) {
                return abortConnection(socket, 400)
              }

              if (this.options.perMessageDeflate) {
                const perMessageDeflate = new PerMessageDeflate(
                  this.options.perMessageDeflate,
                  true,
                  this.options.maxPayload
                )

                try {
                  const offers = Extensions.parse(
                    req.headers['sec-websocket-extensions']
                  )

                  if (offers[PerMessageDeflate.extensionName]) {
                    perMessageDeflate.accept(
                      offers[PerMessageDeflate.extensionName]
                    )
                    extensions[
                      PerMessageDeflate.extensionName
                    ] = perMessageDeflate
                  }
                } catch (err) {
                  return abortConnection(socket, 400)
                }
              }

              var protocol = (
                req.headers['sec-websocket-protocol'] || ''
              ).split(/, */)

              //
              // Optionally call external protocol selection handler.
              //
              if (this.options.handleProtocols) {
                protocol = this.options.handleProtocols(protocol, req)
                if (protocol === false) return abortConnection(socket, 401)
              } else {
                protocol = protocol[0]
              }

              //
              // Optionally call external client verification handler.
              //
              if (this.options.verifyClient) {
                const info = {
                  origin:
                    req.headers[
                      `${version === 8 ? 'sec-websocket-origin' : 'origin'}`
                    ],
                  secure: !!(
                    req.connection.authorized || req.connection.encrypted
                  ),
                  req
                }

                if (this.options.verifyClient.length === 2) {
                  this.options.verifyClient(info, (verified, code, message) => {
                    if (!verified)
                      return abortConnection(socket, code || 401, message)

                    this.completeUpgrade(
                      protocol,
                      extensions,
                      version,
                      req,
                      socket,
                      head,
                      cb
                    )
                  })
                  return
                }

                if (!this.options.verifyClient(info))
                  return abortConnection(socket, 401)
              }

              this.completeUpgrade(
                protocol,
                extensions,
                version,
                req,
                socket,
                head,
                cb
              )
            }

            /**
             * Upgrade the connection to WebSocket.
             *
             * @param {String} protocol The chosen subprotocol
             * @param {Object} extensions The accepted extensions
             * @param {Number} version The WebSocket protocol version
             * @param {http.IncomingMessage} req The request object
             * @param {net.Socket} socket The network socket between the server and client
             * @param {Buffer} head The first packet of the upgraded stream
             * @param {Function} cb Callback
             * @private
             */
            completeUpgrade(
              protocol,
              extensions,
              version,
              req,
              socket,
              head,
              cb
            ) {
              //
              // Destroy the socket if the client has already sent a FIN packet.
              //
              if (!socket.readable || !socket.writable) return socket.destroy()

              const key = crypto
                .createHash('sha1')
                .update(
                  req.headers['sec-websocket-key'] + constants.GUID,
                  'binary'
                )
                .digest('base64')

              const headers = [
                'HTTP/1.1 101 Switching Protocols',
                'Upgrade: websocket',
                'Connection: Upgrade',
                `Sec-WebSocket-Accept: ${key}`
              ]

              if (protocol) headers.push(`Sec-WebSocket-Protocol: ${protocol}`)
              if (extensions[PerMessageDeflate.extensionName]) {
                const params =
                  extensions[PerMessageDeflate.extensionName].params
                const value = Extensions.format({
                  [PerMessageDeflate.extensionName]: [params]
                })
                headers.push(`Sec-WebSocket-Extensions: ${value}`)
              }

              //
              // Allow external modification/inspection of handshake headers.
              //
              this.emit('headers', headers, req)

              socket.write(headers.concat('\r\n').join('\r\n'))

              const client = new WebSocket([socket, head], null, {
                maxPayload: this.options.maxPayload,
                protocolVersion: version,
                extensions,
                protocol
              })

              if (this.clients) {
                this.clients.add(client)
                client.on('close', () => this.clients.delete(client))
              }

              socket.removeListener('error', socketError)
              cb(client)
            }
          }

          module.exports = WebSocketServer

          /**
           * Handle premature socket errors.
           *
           * @private
           */
          function socketError() {
            this.destroy()
          }

          /**
           * Close the connection when preconditions are not fulfilled.
           *
           * @param {net.Socket} socket The socket of the upgrade request
           * @param {Number} code The HTTP response status code
           * @param {String} [message] The HTTP response body
           * @private
           */
          function abortConnection(socket, code, message) {
            if (socket.writable) {
              message = message || http.STATUS_CODES[code]
              socket.write(
                `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\r\n` +
                  'Connection: close\r\n' +
                  'Content-type: text/html\r\n' +
                  `Content-Length: ${Buffer.byteLength(message)}\r\n` +
                  '\r\n' +
                  message
              )
            }

            socket.removeListener('error', socketError)
            socket.destroy()
          }

          /***/
        },

      /***/ './meetup.js':
        /*!*******************!*\
  !*** ./meetup.js ***!
  \*******************/
        /*! no static exports found */
        /***/ function(module, exports, __webpack_require__) {
          'use strict'

          __webpack_require__(
            /*! dotenv */ '../../node_modules/dotenv/lib/main.js'
          ).config()

          const { createClient } = __webpack_require__(
            /*! contentful-management */ '../../node_modules/contentful-management/dist/es-modules/contentful-management.js'
          )

          const { default: Map } = __webpack_require__(
            /*! apr-map */ '../../node_modules/apr-map/dist/apr-map.umd.js'
          )

          const { promisify } = __webpack_require__(/*! util */ 'util')

          const find = __webpack_require__(
            /*! lodash.find */ '../../node_modules/lodash.find/index.js'
          )

          const striptags = __webpack_require__(
            /*! striptags */ '../../node_modules/striptags/src/striptags.js'
          ) // Set up dot-env variables

          const {
            CONTENTFUL_MANAGEMENT_TOKEN,
            CONTENTFUL_SPACE,
            MEETUP_KEY
          } = process.env // Import helper functions

          const generateContentfulEvent = ({
            urlname,
            nextEvent,
            venue,
            link,
            date,
            time,
            duration,
            eventName,
            description
          }) => ({
            fields: {
              thisMeetupCode: {
                'en-US': `${urlname}-${nextEvent}`
              },
              meetupUrlName: {
                'en-US': urlname
              },
              linkToEvent: {
                'en-US': link
              },
              date: {
                'en-US': date
              },
              startTime: {
                'en-US': new Date(time)
              },
              endTime: {
                'en-US': new Date(time + duration)
              },
              address: {
                'en-US':
                  venue !== 'Venue To Be Confirmed'
                    ? `${venue.name}&&${venue.address1}&&${
                        venue.adress2 ? venue.adress2 : ''
                      }&&${venue.address3 ? venue.address3 : ''}&&${venue.city}`
                    : 'Venue To Be Confirmed'
              },
              eventTitle: {
                'en-US': eventName
              },
              blurb: {
                'en-US': description
              }
            }
          })

          const processMeetupData = arrayOfMeetups => {
            let outputArray = []
            arrayOfMeetups.forEach(meetup => {
              const thisMeetup = {
                meetupId: meetup.id,
                name: meetup.name,
                url: meetup.link,
                urlname: meetup.urlname,
                nextEvent: meetup.next_event ? meetup.next_event.id : 0
              }
              outputArray.push(thisMeetup)
            })
            return outputArray
          }

          const processMeetupEvent = eventObject => {
            console.log(eventObject.hasOwnProperty('venue'))
            console.log(eventObject.venue)
            let outputObject = {
              eventName: eventObject.name,
              duration: eventObject.duration,
              time: eventObject.time,
              localTime: eventObject.local_time,
              date: eventObject.local_date,
              venue: eventObject.hasOwnProperty('venue')
                ? {
                    name: eventObject.venue.name,
                    address1: eventObject.venue.address_1,
                    address2: eventObject.venue.address_2
                      ? eventObject.venue.address_2
                      : 0,
                    address3: eventObject.venue.address_3
                      ? eventObject.venue.address_3
                      : 0,
                    city: eventObject.venue.city
                  }
                : 'Venue To Be Confirmed',
              link: eventObject.link,
              description:
                eventObject.description.includes('EVENT SUMMARY') &&
                eventObject.description.includes('EVENT DETAILS')
                  ? striptags(
                      eventObject.description
                        .split('EVENT SUMMARY:')[1]
                        .split('EVENT DETAILS')[0]
                    ).trim()
                  : 'For more information, please visit the Meetup page'
            }
            return outputObject
          } // Link API keys dot-env variables to instances

          const meetup = __webpack_require__(
            /*! meetup-api */ '../../node_modules/meetup-api/index.js'
          )({
            key: MEETUP_KEY
          })

          const client = createClient({
            accessToken: CONTENTFUL_MANAGEMENT_TOKEN
          }) // ----- Query Meetup
          // getSelfGroups returns a list of Community objects, in order of how important the user is in each Community.
          // If there is an upcoming event, this is included in the Community object.

          const getSelfGroups = promisify(meetup.getSelfGroups.bind(meetup)) // getEvent returns event details - address, description etc

          const getEvent = promisify(meetup.getEvent.bind(meetup))

          exports.handler = async (event, context, callback) => {
            // Contentful user have many spaces. A space can have many environments.Each environment has entries of various "content models"
            const space = await client.getSpace(CONTENTFUL_SPACE)
            const environment = await space.getEnvironment('master') // filter to return published entries that belong to a specific content model.

            const { items: events } = await environment.getEntries({
              limit: 1000,
              content_type: 'meetupEven'
            }) // Maps through Community objects. If there is an upcominig event, the script either updates the Contentfu entry for that event if it exists, otherwise creates one.

            await Map(processMeetupData(await getSelfGroups()), async group => {
              const { urlname, nextEvent } = group

              if (!nextEvent) {
                return null
              }

              const meetup = processMeetupEvent(
                await getEvent({
                  id: nextEvent,
                  urlname
                })
              )
              console.log(JSON.stringify(events))
              const ev = find(events, ['fields.linkToEvent.en-US', meetup.link])
              const entry = generateContentfulEvent({ ...meetup, ...group })

              if (ev) {
                // update
                ev.fields = Object.assign(ev.fields, entry.fields)
                console.log(`Updating entry ${meetup.eventName}`)
                const id = await ev.update()
                const updatedEntry = await environment.getEntry(id.sys.id)
                console.log(`Publishing updated entry ${meetup.eventName}`)
                return updatedEntry.publish()
              } // create

              console.log(`Creating entry ${meetup.eventName}`)
              const id = await environment.createEntry('meetupEven', entry)
              const newEntry = await environment.getEntry(id.sys.id)
              console.log(`Publishing creted entry ${meetup.eventName}`)
              return newEntry.publish()
            })
          }

          /***/
        },

      /***/ assert:
        /*!*************************!*\
  !*** external "assert" ***!
  \*************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('assert')

          /***/
        },

      /***/ buffer:
        /*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('buffer')

          /***/
        },

      /***/ crypto:
        /*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('crypto')

          /***/
        },

      /***/ events:
        /*!*************************!*\
  !*** external "events" ***!
  \*************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('events')

          /***/
        },

      /***/ fs:
        /*!*********************!*\
  !*** external "fs" ***!
  \*********************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('fs')

          /***/
        },

      /***/ http:
        /*!***********************!*\
  !*** external "http" ***!
  \***********************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('http')

          /***/
        },

      /***/ https:
        /*!************************!*\
  !*** external "https" ***!
  \************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('https')

          /***/
        },

      /***/ os:
        /*!*********************!*\
  !*** external "os" ***!
  \*********************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('os')

          /***/
        },

      /***/ path:
        /*!***********************!*\
  !*** external "path" ***!
  \***********************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('path')

          /***/
        },

      /***/ querystring:
        /*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('querystring')

          /***/
        },

      /***/ stream:
        /*!*************************!*\
  !*** external "stream" ***!
  \*************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('stream')

          /***/
        },

      /***/ string_decoder:
        /*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('string_decoder')

          /***/
        },

      /***/ tty:
        /*!**********************!*\
  !*** external "tty" ***!
  \**********************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('tty')

          /***/
        },

      /***/ url:
        /*!**********************!*\
  !*** external "url" ***!
  \**********************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('url')

          /***/
        },

      /***/ util:
        /*!***********************!*\
  !*** external "util" ***!
  \***********************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('util')

          /***/
        },

      /***/ zlib:
        /*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
        /*! no static exports found */
        /***/ function(module, exports) {
          module.exports = require('zlib')

          /***/
        }

      /******/
    }
  )
)
